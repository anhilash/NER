<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06184906B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06184906</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6184906</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25386676" extended-family-id="42112826">
      <document-id>
        <country>US</country>
        <doc-number>08885335</doc-number>
        <kind>A</kind>
        <date>19970630</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08885335</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43170777</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>88533597</doc-number>
        <kind>A</kind>
        <date>19970630</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08885335</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  13/16        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>16</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F   3/14        20060101A I20080531RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>14</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20080531</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G09G   1/16        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>1</main-group>
        <subgroup>16</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G09G   5/00        20060101A I20080531RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>00</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20080531</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>G09G   5/36        20060101A I20080531RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>36</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20080531</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>345532000</text>
        <class>345</class>
        <subclass>532000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>345506000</text>
        <class>345</class>
        <subclass>506000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>711151000</text>
        <class>711</class>
        <subclass>151000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>711158000</text>
        <class>711</class>
        <subclass>158000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G09G-005/00A</text>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>005</main-group>
        <subgroup>00A</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-003/14</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>14</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G06F-013/16A2C</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>013</main-group>
        <subgroup>16A2C</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>G09G-005/36C</text>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>005</main-group>
        <subgroup>36C</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-005/001</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>001</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-003/14</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>14</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-013/1615</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>1615</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-005/363</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>363</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-2340/0407</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>2340</main-group>
        <subgroup>0407</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-2340/125</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>2340</main-group>
        <subgroup>125</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S09G-340/04C</classification-symbol>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S09G-340/12V</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>21</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>4</number-of-drawing-sheets>
      <number-of-figures>4</number-of-figures>
      <image-key data-format="questel">US6184906</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Multiple pipeline memory controller for servicing real time data</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>ALLEN MICHAEL S</text>
          <document-id>
            <country>US</country>
            <doc-number>5649206</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649206</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>HERBERT BRIAN K</text>
          <document-id>
            <country>US</country>
            <doc-number>5752010</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5752010</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>LOPER ALBERT JOHN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5822758</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5822758</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>ATI Technologies, Inc.</orgname>
            <address>
              <address-1>Thornhill, CA</address-1>
              <city>Thornhill</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>ATI TECHNOLOGIES</orgname>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Wang, Chun</name>
            <address>
              <address-1>Toronto, CA</address-1>
              <city>Toronto</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Li, Raymond</name>
            <address>
              <address-1>Markham, CA</address-1>
              <city>Markham</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Hartog, Adrian</name>
            <address>
              <address-1>Toronto, CA</address-1>
              <city>Toronto</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Gudmundson, Daniel</name>
            <address>
              <address-1>Newmarket, CA</address-1>
              <city>Newmarket</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Markison &amp; Reckamp, P.C.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Bayerl, Raymond J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A multiple pipeline memory controller has a plurality of two stage pipeline processors dedicated to separately process real time video capture and display refresh input request signals.
      <br/>
      A separate pipeline processor processes non-real time input signals.
      <br/>
      The multiple pipeline design reduces memory access latency and improves throughput of data in display FIFO memory to effect improved resolution.
      <br/>
      The multiple pipeline memory controller can be integrated in a video graphics controller (VGC).
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">The invention relates generally to memory controllers for servicing real time data and more particularly to memory controllers for use in video graphic control cards or telecommunication units that require real time data capture and processing.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      Video graphics controllers (VGC's) are continually being required to manage and control more complex and additional information for display on computer screens.
      <br/>
      The type of additional bandwidth of information can significantly reduce image resolution due to the inability of the VGC to obtain and route the information in a high speed and efficient manner.
      <br/>
      The problem is compounded when computers, in some cases, are also required to service both computer graphics information and television signaling information, such as in the case when the computer is required to display video signals.
    </p>
    <p num="3">
      Real time video information such as video signals from a cable television (CATV) broadcaster must be captured in real time or the information is lost.
      <br/>
      When a live television show is being sent to the computer, the VGC must capture and display the video in real time while also displaying overlaid graphics and servicing other requests from the central processing unit relating to other graphic display requirements such as the displaying of text.
      <br/>
      VGC's typically generate real time signal requests to store the incoming real time video image and data information in frame buffer memory such as
    </p>
    <p num="4">
      Also, the display screen must be refreshed constantly to avoid flickering and other problems that limit resolution.
      <br/>
      Since the frame buffer memories are accessed through the same memory interface, a read/write request for graphics information competes with a read/write request for capturing the real time video information.
      <br/>
      When these requests occur at the same time, one of the real time requests must wait to be serviced.
      <br/>
      This can result in a loss of data or an unacceptable slow down in processing.
    </p>
    <p num="5">
      These problems become compounded where the display screens are higher resolution displays and when other graphic information such as graphical user interfaces and other graphics are overlaid with the video image information and the information is requested to be displayed at the same time.
      <br/>
      The more the VGC has to switch between the real time requests, the lower the resolution quality and the lower the system performance.
    </p>
    <p num="6">
      To help alleviate some of these problems, memory controllers in VGC's have employed a single multi-stage pipeline processing approach.
      <br/>
      Such memory controllers achieve relatively high speeds and allow for a single memory clock cycle read/write operation.
      <br/>
      However, these memory controllers typically have memory access latencies that can dramatically degrade the performance of real time requesters in the VGC's.
      <br/>
      Extrinsic memory access latencies in such VGC's can be a large number greater than 10 clock cycles and can be 21 clock cycles.
      <br/>
      With the increasing real time requirements and additional non-real time requirements, these memory controllers with a great number of memory access latencies can not offer the high speed and high performance control necessary to adequately accommodate the increasing real time processing demands and complexity.
    </p>
    <p num="7">
      Consequently, there exists a need for a memory controller for servicing real time data that can more effectively accommodate multiple real time memory requests.
      <br/>
      It would also be advantageous to have an integrated VGC chip that includes a memory controller that has improved memory access latency for handling both real time video capture requests and real time display requests while also effectively accommodating non-real time requests.
      <br/>
      It would also be advantageous if the memory controller allowed for use of the same size CRT controller FIFO to help reduce costs of the VGC.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="8">
      The features of the present invention together with the advantages thereof, may be understood by reference to the following description taken in conjunction with the accompanying drawings wherein:
      <br/>
      FIG. 1 is a block diagram generally depicting a prior art single pipeline processing system used in a memory controller;
      <br/>
      FIG. 2 is block diagram generally depicting one embodiment of a VGC chip incorporating a multiple pipeline memory controller in accordance with the invention;
      <br/>
      FIG. 3 is a block diagram generally depicting one embodiment of a multiple pipeline memory controller in accordance with the invention; and
      <br/>
      FIG. 4 is a block diagram generally depicting another embodiment of a multiple pipeline memory controller in accordance with the invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="9">
      FIG. 1 shows a block diagram of an example of a single pipeline processing system 10 having three stages that are used in conventional memory controllers for VGC's.
      <br/>
      The first stage is an arbitration stage 12 having an arbitor.
      <br/>
      The second stage is an addressing unit or address determination stage 14, such as a RAS CAS separation (row access and column access) stage.
      <br/>
      The third stage is a conventional output stage 16.
      <br/>
      The arbitration stage 12 receives multiple input request signals generally shown as 18.
      <br/>
      Two of the input request signals are real time request signals.
      <br/>
      These are the video capture request signal 20 and a display refresh request signal 22.
      <br/>
      Some of the input signals are non-real time signals.
      <br/>
      One non-real time request signal 24, may be a host request such as a peripheral component interconnect (PCI) request to write text to the display.
      <br/>
      Other non-real time input signals (not shown) are also input into the arbitration stage 12.
    </p>
    <p num="10">
      The arbitration stage 12 is a well known stage containing an arbitor with priority selection logic and multiplexing logic.
      <br/>
      The arbitor processes one of the input request signals 20-24 in one memory clock cycle.
      <br/>
      Once selected, the input signal is passed to the address determination stage 14 where the row and column address of memory is determined along with the data to be written or read.
      <br/>
      The address and data are then passed to the output stage where the memory access timing cycles are generated and data are output to memory.
      <br/>
      In the case of a page fault, a memory access takes seven clock cycles to complete.
      <br/>
      In a pipeline process, a new request for data to the pipeline processing system 10 from a requester, such as a video capture controller, has to wait for a previous request to be fully processed through the pipeline before it has access to memory.
      <br/>
      The whole pipeline stalls for seven cycles when a page fault occurs, because the output stage must wait the seven cycles before outputting the address and data information.
      <br/>
      If every request in the pipeline has a page fault, the whole pipeline can stall for a maximum of twenty-one cycles before a new request to the pipeline processing system 10 can access memory.
      <br/>
      This results in an extrinsic memory access latency period of twenty-one cycles.
      <br/>
      In other words, a worst case condition assumes each access request has a page fault with respect to one another.
    </p>
    <p num="11">
      With such systems, the total memory access latency period can be 28 memory clock cycles.
      <br/>
      The total memory access latency period includes an extrinsic latency period of twenty-one memory clock cycles (maximum) resulting from clearing all of the pipeline stages.
      <br/>
      The total memory access latency period also includes an intrinsic latency period of seven memory clock cycles (maximum).
    </p>
    <p num="12">
      Although conventional memory controllers can accommodate multiple real time signals and multiple non-real time signals, a real time request signal may be prevented from being processed for a maximum of twenty eight clock cycles.
      <br/>
      With real time video information, this delay can be too long and data can be lost.
      <br/>
      Although each real time requestor usually has some FIFO memory associated with it, and the FIFO memory can relieve some pressure on the latency problem, additional FIFO memory is costly and integrated circuit real estate is at a premium.
    </p>
    <p num="13">
      Referring to FIG. 2, there is generally shown an embodiment of an improved VGC 26 with a multiple pipeline memory controller 28 in accordance with one embodiment of the invention.
      <br/>
      The VGC 26 may be an integrated circuit on a graphics card for insertion into a slot in a personal computer.
      <br/>
      It will be recognized that although the invention will be described for use in a VGC, it is contemplated that the invention may used in other suitable applications.
      <br/>
      The VGC 26 includes a host bus interface unit (HBIU) 30 as known in the art, coupled to a CPU 32, such as an Intel Pentium type processor, through PCI bus 34.
      <br/>
      The HBIU 30 communicates non-real time host input request signal 24, such as display text requests, to the multiple pipeline memory controller 28.
    </p>
    <p num="14">
      The VGC 26 also has a video capture controller 38 as known in the art, that receives video information from a video source 40 through video bus 42.
      <br/>
      The video source 40 may be a CATV signal.
      <br/>
      The video capture controller 38 generates real time video capture input request signals 20 for processing by the multiple pipeline memory controller 28.
      <br/>
      A CRT controller 46 generates a real time display refresh input request signal 22 and outputs the received display data on screen 50 through display bus 51.
      <br/>
      A video overlay engine 52 generates a non-real time input request signal 54 to the multiple pipeline memory controller 28 to request video information to overlay on graphics on the screen 50.
      <br/>
      The video overlay engine 52 scales a video image that is displayed and overlaid on graphics.
      <br/>
      In this way, movies or television programs can be viewed simultaneously with computer graphics.
    </p>
    <p num="15">
      Another non-real time input signal 56 is generated by a GUI engine 58.
      <br/>
      The multiple pipeline memory controller 28 receives the real time and non-real input signals and accesses memories 60 (frame buffer) containing graphic and video image data through a shared memory interface bus 62.
    </p>
    <p num="16">
      FIG. 3 shows a more detailed view of an embodiment of the multiple pipeline memory controller 28.
      <br/>
      Generally stated, the multiple pipeline memory controller 28 for servicing real time data has a plurality of dual stage pipeline processors as generally indicated.
      <br/>
      An input port 64 receives a real time input signal, such as video capture signal 20 or display refresh signal 22, in a pipeline fashion.
      <br/>
      As used herein, an input signal whether a real time or non-real time signal, may be a request signal with data, control information and address information or any combination thereof or singular component.
      <br/>
      Another input port 66 receives a non-real time input signal, such as a PCI request signal 24 or a video overlay request signal 54, also in a pipeline fashion.
    </p>
    <p num="17">
      One of the dual stage pipeline processors 68 receives a single real time input signal through the input port 64.
      <br/>
      The dual stage pipeline processor 68 separately processes the real time input signal in a pipeline fashion and is dedicated to the real time input signal.
      <br/>
      Like the dual stage pipeline processor 68, the other dual stage pipeline processor 70 receives the non-real time input signal through corresponding input port 66.
      <br/>
      The dual stage pipeline processor 70 also separately processes the non-real time input signal in a pipeline fashion.
    </p>
    <p num="18">
      A first stage of the dual stage pipeline processor 68 has first stage addressing logic with memory row/column address determination logic (R/C ADL) and memory page fault detection logic referred to as an addressing unit 72.
      <br/>
      As used herein, each memory row is a page.
      <br/>
      The addressing unit 72 is substantially the same as the addressing unit of the determinator stage 14 (FIG. 1), namely RAS CAS with fault detection provision.
      <br/>
      Similarly, the dual stage pipeline processing stage 70 has a first stage of addressing logic with memory row/column address determination logic (R/C ADL) and memory page fault detection logic referred to as addressing unit 74.
      <br/>
      The addressing unit 74 is the same as the addressing unit 72.
    </p>
    <p num="19">
      The second stage of the dual pipeline processors 68 and 70 is an output stage and has priority based arbitration logic 76 for selectively determining which of the real time and non-real time input signals output from each of the respective addressing unit 74 and the addressing unit 72 is to be output to memory 60 through an output port 78.
      <br/>
      Preferably, the arbitration logic 76 is common to both pipeline processors 68 and 70.
    </p>
    <p num="20">
      The arbitration logic 76 is substantially similar to the arbitor 12 of FIG. 1.
      <br/>
      The arbitration logic 76 has a memory clock cycle generator 80 for generating clock cycles to be used for accessing memories 60 and for timing of the arbitration control logic 82.
    </p>
    <p num="21">
      The arbitration control logic 82 receives control signal information output from each of the respective addressing unit 74 and the addressing unit 72.
      <br/>
      Data and address information from the addressing unit 74 and the addressing unit 72 is received by a multiplexer (MUX) 84 and serve as inputs to the MUX 84.
      <br/>
      The data and address information is multiplexed as output to the memory 60 through output port 78.
      <br/>
      The arbitration control logic 82 controls the MUX 84 by control signal 86 to output the higher priority signal between either the addressing unit 72 and the addressing unit 74.
      <br/>
      The real time request signal processed by the addressing unit 72 is given priority over the processed non-real time request signal from addressing unit 74 to avoid loss of real time information.
      <br/>
      Therefore a conflict between a read/write request between a real time request and a non-real time request will be resolved in favor of the real time request.
    </p>
    <p num="22">
      FIG. 4 shows a preferred embodiment of a multiple pipeline memory controller 88 having three pipeline processors 90, 92 and 94 for separately processing a number of input signals.
      <br/>
      Each real time input signal is sent through a dedicated dual stage pipeline processor 90 and 92 that separately processes a single real time input signal to effect rapid processing of real time request signals.
      <br/>
      All non-real time input signals are passed through a three stage pipeline processor 94 having dual arbitration logic by virtue of priority arbitor 96 and common arbitor 98.
    </p>
    <p num="23">
      A real time video capture request input signal 20 is received by the multiple pipeline memory controller 88 through a dedicated input port 100 in a pipeline fashion.
      <br/>
      The pipeline processor 90 receives the real time video capture request input signal 20 in dedicated first stage addressing unit 102.
      <br/>
      The first stage addressing unit 102 is the same logic as the first stage addressing unit 72.
    </p>
    <p num="24">
      Similarly, a real time display refresh request signal 22 is received by another dedicated pipeline processor 92 through a dedicated input port 104 in a pipeline fashion.
      <br/>
      The pipeline processor 92 receives the real time display refresh request input signal 22 in separate first stage addressing unit 106.
      <br/>
      The first stage addressing logic 106 is the same logic as the first stage addressing unit 102.
      <br/>
      Each pipeline processor 90 and 92 has a second stage that is an output stage.
      <br/>
      The output stage is the common arbitor 98.
      <br/>
      The common arbitor 98 is priority based arbitration logic like that of arbitration logic 76 (FIG. 3) but includes an additional real time input that is prioritized.
    </p>
    <p num="25">It will be recognized by those of ordinary skill in the art, that if additional real time input signals are used, additional dedicated input ports 108 and additional dedicated pipeline processors can be used in the same way as pipeline processors 90 and 92 and that the arbitration logic 98 can be suitably expanded to accommodate some additional inputs.</p>
    <p num="26">
      The multiple pipeline memory controller 88 also includes a plurality of input ports 110, 112, and 114 for receiving a plurality of non-real time input signals in a pipeline fashion through a dedicated three stage pipeline processor 94.
      <br/>
      A first stage of the pipeline processor 94 is priority based arbitration logic 96 connected to receive the plurality of non-real time input signals from the plurality of input ports 110, 112 and 114.
      <br/>
      The priority arbitor 96 selects one of the non-real time input signals based on a priority determination and outputs the selected non-real time input signal to second stage addressing unit 116.
      <br/>
      The second stage addressing unit 116 is the same logic as the first stage addressing unit 102 and 106 of pipeline processors 90 and 92.
      <br/>
      Therefore, each of the dedicated pipeline processors 90, 92 and 94 has separate addressing units in the form of addressing logic with memory row/column address determination logic and memory page fault detection logic.
    </p>
    <p num="27">
      As with the first stage addressing units 102 and 106, the second stage addressing unit 116 outputs a signal to the common arbitor 98 which is the third stage of pipeline processor 94.
      <br/>
      Therefore, the priority based common arbitor 98 is a final stage for all three dedicated pipeline processors 90, 92 and 94.
      <br/>
      The priority based common arbitor 98 selectively determines which of the real time and non-real time input signals is to be output to memory 60 through output port 118, by giving the real time display refresh request signal 22 first priority, giving the real time video capture request signal 20 second priority and giving the non-real time inputs 110, 112 and 114 last priority.
    </p>
    <p num="28">
      The multiple pipeline memory controller 88 is preferably manufactured as integrated circuitry incorporated in a video graphics controller chip for computers.
      <br/>
      It is preferable that any real time input signal be processed by a dedicated two stage pipeline processor as disclosed, however, it will be recognized that if desired, pipeline processors having more than two stages may be suitable.
    </p>
    <p num="29">
      By having multiple pipeline processors each dedicated to separately process a respective real time input signals, the real time request signal will always be quickly processed irrespective of the number of real and non-real input signal requests that the memory controllers 28 and 88 must process since the need for a first stage arbitor of real time signal inputs is substantially eliminated.
      <br/>
      This improves memory access latency for real time signals.
      <br/>
      Moreover, the architecture of the memory controllers 28 and 88 has an improved real time signal memory access latency due to the preferred dual stage pipeline for real time input signals.
      <br/>
      Memory access conflicts can be significantly reduced.
      <br/>
      Also the non-real time signals are economically processed using a third and shared pipeline processor having first stage arbitration logic.
      <br/>
      Priority non-real time requests are processed prior to other less important non-real time requests.
    </p>
    <p num="30">
      The reduction in memory access latency from the separate multiple pipelines provides more effective use of display FIFO memory that can support higher resolution display.
      <br/>
      Consequently, additional costs and manufacturing complexity are reduced since additional FIFO memory need not be added even through additional real time inputs are added to the graphic control system.
    </p>
    <p num="31">
      Also, it will be recognized that the use of a dual stage multiple pipeline processing system as described above reduces the memory access latency period.
      <br/>
      With the disclosed configuration, extrinsic memory access latency can be reduced from twenty-one clock cycles to seven clock cycles to more efficiently service the real time request input signals.
      <br/>
      This reduction allows the same FIFO memory to receive nearly three times the information than previous memory controllers.
      <br/>
      It will be apparent that other advantages are also facilitated by the disclosed memory controller.
    </p>
    <p num="32">
      It should also be understood that the implementation of other variations and modifications of the invention in its various aspects will be apparent to those of ordinary skill in the art, and that the invention is not limited by the specific embodiments described.
      <br/>
      For example, each of the pipeline processing circuits can be independent such that each circuit has a separate RAS CAS circuit and separate output circuit.
      <br/>
      Also, the memory controller can have more than three pipeline processing circuits if additional input signals are used.
      <br/>
      Moreover, one or more of the pipeline processors may have more than two stages.
      <br/>
      It is therefore contemplated to cover by the present invention, any and all modifications, variations, or equivalents that fall within the spirit and scope of the basic underlying principles disclosed and claimed herein.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A memory controller for servicing real time data comprising:</claim-text>
      <claim-text>at least a first input port for receiving a real time request signal in a pipeline fashion; at least a second input port for receiving a non-real time request signal in a pipe line fashion; first pipeline processor, operatively coupled to the first input port, to separately process the real time request signal in a pipeline fashion wherein the first pipeline processor is a dual stage pipeline processor with a first stage addressing unit having addressing logic with first memory row/column address determination logic and first memory page fault detection logic; second pipeline processor, operatively coupled to the second input port, to separately process the non-real time request signal in a pipeline fashion;</claim-text>
      <claim-text>and wherein the first and second pipeline processors include an arbitrator to selectively determine which of the real time and non-real time request signals is to be output to memory.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The memory controller of claim 1 wherein the second pipeline processor includes a dual stage pipeline processor with first stage addressing unit having addressing logic having second memory row/column address determination logic and second memory page fault detection logic.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The memory controller of claim 1 wherein the arbitrator serves as a common final stage for the first and second pipeline processors.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The memory controller of claim 3 wherein the arbitrator includes memory cycle generation circuitry for controlling timing to access the memory.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The memory controller of claim 1 having a plurality of second input ports for receiving non-real time data, and further comprising priority based arbitration logic, operatively coupled between the plurality of second input ports and the second pipeline processor, for receiving a plurality of non-real time input data signals and for determining which of the non real time data signals is processed next by the second pipeline processor.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The memory controller of claim 5 wherein the arbitrator includes priority based arbitration logic, operatively coupled to a multiplexer, for controlling the multiplexer to output a selected signal to be output to memory.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The memory controller of claim 1 wherein the controller is integrated circuitry operatively used as a section of a video graphics controller for computers.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The memory controller of claim 1 wherein the real time request signal is a video request signal.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The memory controller of claim 8 wherein the real time request signal is a computer display control signal.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The memory controller of claim 1 wherein the non-real time request signal is a request signal from a central processing unit.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The memory controller of claim 1 wherein each of the first and second pipeline processors has a two stage pipeline process comprised of an address determination stage and an output stage.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The memory controller of claim 11 wherein the first pipeline processor facilitates an extrinsic memory access latency period of seven memory clock cycles for the real time input signal.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A memory controller for servicing real time data comprising: at least a first and second input port for receiving first and second real time input signals in a pipeline fashion; a plurality of input ports for receiving a plurality of non-real time input signals in a pipeline fashion; first pipeline processor, operatively coupled to the first input port, to separately process the real time request signal in a pipeline fashion; second pipeline processor, operatively coupled to the second input port, to separately process the non-real time request signal in a pipeline fashion; first priority based arbitration logic, connected to receive the plurality of non-real time input signals from the plurality of input ports, for selecting one of the non-real time input signals based on a priority determination and outputting a selected non-real time input signal; third pipeline processor, operatively coupled to receive the selected non-real time input signal from the priority based arbitration logic, to separately process the selected non-real time input signal in a pipeline fashion;</claim-text>
      <claim-text>and wherein the first, second and third pipeline processors include second priority based arbitration logic as a final stage for selectively determining which of the real time and non-real time input signals is to be output to memory.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The memory controller of claim 13 wherein the controller is integrated circuitry incorporated in a video graphics controller chip for computers.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The memory controller of claim 13 wherein each of the first, second and third pipeline processors are comprised of dedicated addressing units having first memory row/column address determination logic and first memory page fault detection logic.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The memory controller of claim 15 wherein the second priority based arbitration means is comprised of priority based arbitration logic, operatively coupled between the addressing logic of the first, second and third processors and the output port, for receiving at least one non-real time input data signal and a plurality of real time input data signals and for selectively determining a priority between the real time and non-real time input signals to be output to memory via the output port.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The memory controller of claim 14 wherein the controller is used in a video graphics card insertable into a computer slot.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The memory controller of claim 13 wherein the second priority based arbitration logic serves as a final stage for the first, second and third pipeline processors.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The memory controller of claim 18 wherein the second priority based arbitration means includes memory cycle generation circuitry for controlling timing to access the memory.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The memory controller of claim 13 wherein one of the real time input signals is a video request signal and another is a display request signal.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The memory controller of claim 13 wherein the first and second pipeline processors each facilitate an extrinsic memory access latency period of seven memory clock cycles for respective real time input signals.</claim-text>
    </claim>
  </claims>
</questel-patent-document>