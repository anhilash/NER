<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06195290B1.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as first publication">
      <document-id>
        <country>US</country>
        <doc-number>06195290</doc-number>
        <kind>B1</kind>
        <date>20010227</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6195290</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B1</original-publication-kind>
    <application-reference family-id="26140774" extended-family-id="13717875">
      <document-id>
        <country>US</country>
        <doc-number>09407135</doc-number>
        <kind>A</kind>
        <date>19990927</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09407135</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>61945316</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>40713599</doc-number>
        <kind>A</kind>
        <date>19990927</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09407135</doc-number>
      </priority-claim>
      <priority-claim kind="regional" sequence="2">
        <country>EP</country>
        <doc-number>95830553</doc-number>
        <kind>A</kind>
        <date>19951229</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1995EP-0830553</doc-number>
      </priority-claim>
      <priority-claim kind="regional" sequence="3">
        <country>EP</country>
        <doc-number>96830245</doc-number>
        <kind>A</kind>
        <date>19960430</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1996EP-0830245</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="4">
        <country>US</country>
        <doc-number>77511096</doc-number>
        <kind>A</kind>
        <date>19961230</date>
        <priority-linkage-type>D</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="4">
        <doc-number>1996US-08775110</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010227</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G11C  16/10        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G11C  16/16        20060101A N20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>16</subgroup>
        <classification-value>N</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G11C  16/34        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>34</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>365185220</text>
        <class>365</class>
        <subclass>185220</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>365185190</text>
        <class>365</class>
        <subclass>185190</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G11C-016/34V2</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>016</main-group>
        <subgroup>34V2</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G11C-016/10</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>10</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G11C-016/34D</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>016</main-group>
        <subgroup>34D</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>G11C-016/34D4</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>016</main-group>
        <subgroup>34D4</subgroup>
      </classification-ecla>
      <classification-ecla sequence="5">
        <text>G11C-016/34V2C</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>016</main-group>
        <subgroup>34V2C</subgroup>
      </classification-ecla>
      <classification-ecla sequence="6">
        <text>G11C-016/34V4C</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>016</main-group>
        <subgroup>34V4C</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/344</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>344</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/10</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/16</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/3418</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>3418</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/3427</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>3427</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/3445</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>3445</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-016/3459</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>16</main-group>
        <subgroup>3459</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S11C-016/16</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>10</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>3</number-of-drawing-sheets>
      <number-of-figures>3</number-of-figures>
      <image-key data-format="questel">US6195290</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method of avoiding disturbance during the step of programming and erasing an electrically programmable, semiconductor non-volatile storage device</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>KUO CLINTON</text>
          <document-id>
            <country>US</country>
            <doc-number>4763305</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4763305</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="2">
          <text>VAN BUSKIRK MICHAEL A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5291446</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5291446</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="3">
          <text>KOWALSKI JACEK</text>
          <document-id>
            <country>US</country>
            <doc-number>5444412</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5444412</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <text>CHAO LIANG, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5463586</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5463586</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>CLEVELAND LEE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5511026</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5511026</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>KIM JIN-KI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5642309</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5642309</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>TEXAS INSTRUMENTS INC</text>
          <document-id>
            <country>EP</country>
            <doc-number>0432481</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-432481</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>SUNDISK CORP</text>
          <document-id>
            <country>WO</country>
            <doc-number>9012400</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9012400</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>MACRONIX INT CO LTD, et al</text>
          <document-id>
            <country>WO</country>
            <doc-number>9608840</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9608840</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>"Developments in Programming Flash at 3V" Electronic Engineering, 65(798):62,65-66, Jun. 1993.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>77511096</doc-number>
              <kind>A</kind>
              <date>19961230</date>
            </document-id>
            <parent-status>ABANDONED</parent-status>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>STMicroelectronics S.r.l.</orgname>
            <address>
              <address-1>Agrate Brianza, IT</address-1>
              <city>Agrate Brianza</city>
              <country>IT</country>
            </address>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>STMICROELECTRONICS</orgname>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Dallabora, Marco</name>
            <address>
              <address-1>Carpiano, IT</address-1>
              <city>Carpiano</city>
              <country>IT</country>
            </address>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Villa, Corrado</name>
            <address>
              <address-1>Sovico, IT</address-1>
              <city>Sovico</city>
              <country>IT</country>
            </address>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Bartoli, Simone</name>
            <address>
              <address-1>Pisa, IT</address-1>
              <city>Pisa</city>
              <country>IT</country>
            </address>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Defendi, Marco</name>
            <address>
              <address-1>Sulgiate, IT</address-1>
              <city>Sulgiate</city>
              <country>IT</country>
            </address>
          </addressbook>
          <nationality>
            <country>IT</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Galanthay, Theodore E.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Tarleton, E. Russell</name>
          </addressbook>
        </agent>
        <agent sequence="3" rep-type="agent">
          <addressbook lang="en">
            <orgname>Seed IP Law Group</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Zarabian, A.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method of avoiding disturbance during the step of programming and erasing an electrically programmable, semiconductor integrated non-volatile memory device which includes a matrix of memory cells divided into sectors and programmable in a byte mode is disclosed.
      <br/>
      An operation of verification of the contents of the byte to be programmed, to be carried out for each individual bit, is provided even before the first program pulse is applied.
      <br/>
      The method also provides for the parallel erasing of several sectors during an erase step, and a verification of the erase step for each sector in the matrix.
      <br/>
      If the verification shows that a sector has been erased, the sector is applied no further erase pulses.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS-REFERENCE TO RELATED APPLICATION</heading>
    <p num="1">
      This application is a division of pending U.S. patent application Ser.
      <br/>
      No.
    </p>
    <p num="2">08/775,110, filed Dec. 30, 1996.</p>
    <heading>TECHNICAL FIELD</heading>
    <p num="3">This invention relates to a method of avoiding disturbance during the step of programming and erasing an electrically programmable semiconductor non-volatile memory device.</p>
    <p num="4">More particularly, the invention relates to a method for application in a semiconductor integrated non-volatile memory device having a single power supply and comprising a matrix of memory cells divided into sectors, and being programmable electrically in a byte mode, but the considerations made hereinafter would equally apply to any other type of flash memory, including flash memories with dual power supplies.</p>
    <p num="5">As is well known, read-only memories of the flash type, although non-volatile, allow information contained therein to be modified electrically during the write or program step and the erase step.</p>
    <p num="6">
      Memories of this type are constructed as matrices of cells arranged into rows, or word lines, and columns, or bit lines.
      <br/>
      Each cell comprises a floating gate transistor having a drain region and a source region formed on a semiconductor substrate and isolated by a channel region.
      <br/>
      The floating gate is formed over the substrate and isolated from the latter by a thin layer of gate oxide.
    </p>
    <p num="7">A control gate is coupled capacitively to the floating gate through a dielectric layer, and metallic electrodes are provided for contacting the drain, source, and control gate, in order to have predetermined voltage values applied to the memory cell.</p>
    <p num="8">Cells in the same word line have the electric line in common which drives their respective control gates, while cells in the same bit line have the drain terminals in common.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="9">
      When suitable voltage values are applied to a cell terminal, the cell state can be altered by changing the amount of the charge present at the floating gate.
      <br/>
      The operation whereby charge is stored into the floating gate is called "programming", and consists of biasing the control gate and drain terminal at a predetermined value higher than the electric potential of the source terminal.
    </p>
    <p num="10">
      For example, each individual cell can be programmed by a electron injection process that allows electrons to become trapped within the floating gate when the control gate is applied a relatively high voltage, Vg, in the 9 to 12V range.
      <br/>
      Concurrently, the source terminal is connected to ground and the drain terminal is biased at a voltage Vb in the 4 to 7V range.
    </p>
    <p num="11">
      The programming of a flash memory can be performed either by the sector (page mode) or the byte (byte mode).
      <br/>
      In the former case, all the cells in one row of the matrix are addressed simultaneously.
      <br/>
      In the latter case, a single byte of the many available in one row is addressed.
    </p>
    <p num="12">The use of positive voltages Vg and Vb with relatively high values poses more than one problem from the standpoint of possible disturbance to cells adjacent to those being programmed, such as those cells in the same bit line which are not to be programmed and have their control gates connected to ground.</p>
    <p num="13">
      This phenomenon may result in spurious erasing of the stressed cells.
      <br/>
      In all cases, programming noise is apt to make retention of the charge after prolonged read cycles less secure.
    </p>
    <p num="14">It is a primary object of the present invention to solve this problem.</p>
    <p num="15">
      Another problem occurs when erasing memory cells.
      <br/>
      To erase a flash memory cell, use is made of Fowler-Nordheim's tunneling effect.
      <br/>
      The source terminal is applied a voltage approximating the program voltage, and the drain terminal is kept floating, while the control gate is connected to ground or to a negative voltage reference.
    </p>
    <p num="16">
      Erasing can be performed by the individual sector or by multiple sectors, just as programming can.
      <br/>
      However, the erase time is a function of the number of write and erase cycles that have involved the various sectors of the flash memory, and grows with the age of the individual sector.
      <br/>
      This means essentially that various sectors of the memory device get old at different times, i.e. at different aging stages according to the number of write/erase cycles to which they have been subjected.
    </p>
    <p num="17">
      As an example, there may be some sectors in one device which have gone through 50 program/erase kilocycles, and others that have gone through less than ten such cycles.
      <br/>
      The concurrent erasing of several sectors having different ages may place serious problems on the youngest sectors, which would then be subjected to the erase voltages needed to have the oldest sectors erased for a longer time than is necessary.
    </p>
    <p num="18">
      The underlying technical problem of this invention is to provide a method of preventing, both during the programming and the erasing step, disturbance of an integrated memory device as previously indicated.
      <br/>
      This method has performance characteristics which extend the useful life of the memory device and overcome the drawbacks of state-of-art programming and erasing techniques.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="19">
      The solutive idea on which this invention stands is one of carrying out a verify operation on a byte to be programmed, prior to it being applied the first program pulse.
      <br/>
      In particular, this idea provides a break in the rising transient of the drain voltage Vb for reading the byte to be programmed.
    </p>
    <p num="20">The features and advantages of a method according to the invention will be apparent from the following detailed description of an embodiment thereof, given by way of non-limitative example with reference to the accompanying drawings.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="21">
      In the drawings:
      <br/>
      FIG. 1 is a diagrammatic representation of an algorithm for implementing a byte programming mode in accordance with the method of this invention.
      <br/>
      FIG. 2 a diagrammatic representation of an algorithm for implementing a multi-page erase mode in accordance with the method of this invention.
      <br/>
      FIG. 3 illustrates an EEPROM memory according to the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="22">Referring to the figures, the method of this invention for preventing disturbance during the programming/erasing of an electrically programmable semiconductor non-volatile memory device will now be described.</p>
    <p num="23">The inventive method is particularly, but not exclusively, intended for a single power supply integrated memory device which comprises a matrix of memory cells having multiple sectors and respective device-resident program/erase algorithms.</p>
    <p num="24">
      Each memory cell comprises a floating gate MOS transistor having an additional control gate.
      <br/>
      The cells are organized as rows or word lines, and columns or bit lines.
      <br/>
      The cells of one word line share the electric line driving their respective control gates, while the cells in one bit line having their drain terminals in common.
    </p>
    <p num="25">
      The method of this invention is particularly, but not solely, useful with a flash memory having a single power supply at a supply voltage Vcc of 5V.
      <br/>
      The invention has been applied to a memory implemented with double-well technology and erased by a negative voltage to the cell gates.
    </p>
    <p num="26">The cell matrix is a four-Mbyte matrix divided into eight sectors of 512 kbytes each, with memory words of sixteen bits.</p>
    <p num="27">
      Shown in FIG. 1 is a flow chart for a program algorithm 1 used in practicing the inventive method.
      <br/>
      This algorithm 1 includes a starting step START directly followed by a test step 2 for ascertaining the need to have a byte of the memory device programmed.
    </p>
    <p num="28">
      If this test step 2 fails (N), the algorithm 1 is interrupted, and control is transferred onto other algorithms.
      <br/>
      Otherwise, the procedure continues and the programming voltage Vpcy which is to be applied to the i-th column of the matrix memory being programmed rises to 12V.
      <br/>
      This step is illustrated by block 3.
      <br/>
      The programming voltage Vpcy attains a steady-state value of 12V.
    </p>
    <p num="29">
      The algorithm 1 also provides for the rise of a second programming voltage Vpcx, to be applied to the j-th row in the matrix.
      <br/>
      This second voltage value, indicated in block 4, attains 7V as a steady state value.
    </p>
    <p num="30">
      At this time, according to the invention, a read/verify step 5 is carried out for the byte being programmed.
      <br/>
      Reading lasts approximately one hundred nanoseconds and can occur during the rise transient of the second programming voltage Vpcx.
    </p>
    <p num="31">
      This is followed by a test step 6 to determine whether the data contained in the byte being programmed contains pre-programmed bits.
      <br/>
      This check is performed individually for each of the bits.
      <br/>
      If this checks out favorably (Y), that is when each of the bits within the byte carry a value of "zero", the algorithm is interrupted.
      <br/>
      This is illustrated by the STOP terminal.
      <br/>
      On the other hand, if the byte being programmed does not contain zero-programmed bits, a program pulse is enabled as illustrated by block 7.
    </p>
    <p num="32">
      Thereafter, the number of program attempts is checked at the end of the program pulse through test block 8.
      <br/>
      If this check reveals a lower number than a predetermined value, the test checks out unfavorably (N), and the algorithm 1 cycle is resumed from a point ahead of block 4.
      <br/>
      Where the number of program attempts reaches the predetermined limit, an error signal FAIL is issued.
    </p>
    <p num="33">
      The method of this invention affords a number of advantages, the foremost of which is that no program pulse is applied to a previously written bit.
      <br/>
      Each bit of a given byte is checked on an individual basis, and a minimum number of program pulses is applied to the byte.
    </p>
    <p num="34">Thus, the cells in one bit line of the byte being programmed will be unstressed, even if the user utilizes the algorithm 1 incorrectly.</p>
    <p num="35">Overwriting an existing "zero" with another zero would still place no stress on the drain terminal of the involved memory cell.</p>
    <p num="36">
      Where an application only requires the incremental writing of a byte or a memory word, such as if the change in the informational contents of a byte is of the following type:
      <br/>
      11111110 --&gt; 11111101 --&gt; 11111100,
    </p>
    <p num="37">this can be done without entailing any problems of reliability.</p>
    <p num="38">With reference to the example of FIG. 2, the manner how the resident erase algorithm 20 in the memory device evolves in operation according to the principles of the inventive method will now be discussed.</p>
    <p num="39">
      The erase algorithm of the invention starts with a parallel erase step 10 which may affect one or more sectors of the matrix memory.
      <br/>
      Accordingly, an erase pulse is enabled which brings the control gates of the memory cells to a negative voltage, Vneg, of about -10V, while the source terminals are applied a voltage, Vs, equal to the supply voltage Vcc.
    </p>
    <p num="40">
      This step is illustrated schematically by block 11.
      <br/>
      The algorithm 20 also provides for a rise in the drain voltage, Vpcx, to 4V.
      <br/>
      This is illustrated by block 12.
    </p>
    <p num="41">
      After the parallel erase step on some or all of the matrix sectors, it is verified that the erasing has actually occurred.
      <br/>
      Each sector is analyzed on an individual basis by storing each last byte verified into a sector.
      <br/>
      Once a sector is erased, no further erase pulses are applied to that sector.
    </p>
    <p num="42">
      Verify block 13, in fact, provides access to test block 14, where each byte of that particular sector is checked.
      <br/>
      If the bytes check out successfully (Y), the memory word address is incremented to the last word in the sector, as illustrated schematically by block 15.
      <br/>
      The testing of the last word is illustrated by block 16; if the test fails (N), the cycle is resumed from a point ahead of verify block 13.
    </p>
    <p num="43">
      Once the verification of a sector is completed, and the test 16 is passed (Y), a flag, block 17, is reset to increment the sector address.
      <br/>
      If there are no more sectors to be erased, a test 18 terminates the algorithm 20.
    </p>
    <p num="44">
      Advantageously, according to the invention, if the verify test 14 checks out unfavorably (N), that is if the erasing has been ineffective on the given byte, the address of the last byte checked within the sector being tested is stored in block 19.
      <br/>
      This storage may take place into a small read/write RAM memory, for example, not shown because conventional.
    </p>
    <p num="45">
      This storing step is carried out before a step 21 of sector address increment.
      <br/>
      If the new sector requires no erasing, the sector address is again incremented.
      <br/>
      All this is verified within test block 22.
    </p>
    <p num="46">
      The address of the byte of the sector that checked unsuccessfully is loaded after test block 22.
      <br/>
      This information is picked up by the aforementioned read/write memory.
      <br/>
      If this address does not correspond to the last sector, the verify step 13 is repeated.
    </p>
    <p num="47">
      If the address does correspond to the last sector, and the erase attempts made are still below a predetermined upper limit value, the step of erasing the last sector is repeated, starting with block 11.
      <br/>
      However, where the unsuccessful erase attempts have attained the predetermined limit value, an error signal FAIL is issued.
    </p>
    <p num="48">The algorithm 20 has a major advantage in that it avoids stressing the sectors that are to be erased.</p>
    <p num="49">
      Upon the erased condition of a sector being fully verified, i.e. upon the last address of that sector being erased, the sector is cut off from subsequent erase operations, and no more erase pulses are applied to that sector.
      <br/>
      Alternatively, when the verify step indicates that a given memory word in a given sector has been erased incorrectly, an erase and verification are performed again, starting with that particular sector rather than from the previous verify procedure.
    </p>
    <p num="50">Thus, the erase time is matched to the aging level of a given sector.</p>
    <p num="51">
      In addition, electrical noise from source erasing is effectively counteracted.
      <br/>
      Reliability is ensured, even if a user fails to observe the data sheet specifications.
    </p>
    <p num="52">
      As shown in FIG. 3, an integrated circuit memory device 110 includes a plurality of non-volatile memory cells arranged in sectors 114a-114h.
      <br/>
      Each sector has an array of memory cells arranged as a matrix.
      <br/>
      The non-volatile memory cells are of a type well known in the art, such as EEPROM cells, flash cells, or the like.
      <br/>
      The cells are programmable in byte mode under control of the peripheral circuitry 116 (labelled 116a-116d for selected sections).
      <br/>
      Programming in byte mode is well known in the art.
      <br/>
      A resident program algorithm is stored on the memory device at a convenient location, such as any one of sections 119, 120, or other locations.
      <br/>
      The chip is accessed by pads 118 and 121.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of programming a matrix of programmable memory cells divided into sectors made of columns and rows, and the matrix programmable in a byte mode, the method comprising:</claim-text>
      <claim-text>determining if a matrix byte comprised of a set of the programmable memory cells of a particular sector of the matrix is to be programmed; if the matrix byte is to be programmed with a data byte comprised of data bits, then:</claim-text>
      <claim-text>- raising a first connection line coupled to one of the set of memory cells in the matrix byte to a first programming voltage, - raising a second connection line coupled to the one of the set of memory cells in the matrix byte to a second programming voltage;</claim-text>
      <claim-text>and - for a selected one of the set of memory cells within the matrix byte, prior to applying a programming pulse that loads data, and during the same time the first or second connection line is being raised to its respective programming voltage:</claim-text>
      <claim-text>-  reading the selected memory cell; -  determining if the selected memory cell already stores a value that is equal to a corresponding data bit intended to be loaded into the selected memory cell;</claim-text>
      <claim-text>and -  if the selected memory cell does not store a value equal to the corresponding data bit, applying the programming pulse in order to write the corresponding data bit into the selected memory cell.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 wherein the first programming voltage is 12 volts.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1 wherein the second programming voltage is 7 volts.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1 wherein the data byte comprises 16 data bits.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method of programming a matrix of programmable memory cells divided into sectors made of columns and rows, each row including a matrix byte of a plurality of memory cells, and the matrix programmable in a byte mode, the method comprising: for a selected matrix byte of the matrix, prior to applying a programming pulse that loads data into the memory cells of the selected matrix byte, raising respective programming voltages on the columns and row of the selected matrix byte; selecting and reading a selected memory cell of the matrix byte while at least one of the programming voltages is being raised; determining whether the selected memory cell already stores a value equal to a respective data bit to be loaded into the selected memory cell;</claim-text>
      <claim-text>and if the value stored in the selected memory cell is equal to the respective data bit, refraining from programming the selected memory cell.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5 further comprising: if the value stored in the selected memory does not equal the respective data bit, programming the selected memory cell with the respective data bit.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6 further including: after attempting to program the respective data bit into the selected memory cell, verifying that the respective data bit is stored in the selected memory cell.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 1, further comprising: repeating the procedure of: raising the first and second connection lines to their respective programming voltages, reading the selected memory cell during the same time the first or second connection line is being raised to its respective programming voltage, determining if the selected memory cell already stores the value of the corresponding data bit, and applying the programming pulse in order to write the corresponding data bit into the memory cell if the memory cell does not store a value equal to the corresponding data bit; until a halt signal is received.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 5 wherein the halt signal is generated when all of the memory cells of the matrix byte contain the corresponding data bits that are to be written into them, respectively.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 5 wherein the halt signal is generated when the procedure has been repeated a predetermined number of times.</claim-text>
    </claim>
  </claims>
</questel-patent-document>