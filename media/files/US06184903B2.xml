<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06184903B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06184903</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6184903</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="18410662" extended-family-id="4791778">
      <document-id>
        <country>US</country>
        <doc-number>08995969</doc-number>
        <kind>A</kind>
        <date>19971222</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08995969</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>22053765</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>JP</country>
        <doc-number>35046296</doc-number>
        <kind>A</kind>
        <date>19961227</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1996JP-0350462</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G09G   5/20        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>20</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06T  11/20        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>11</main-group>
        <subgroup>20</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06T  11/40        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>11</main-group>
        <subgroup>40</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06T  15/00        20110101A I20110122RMEP</text>
        <ipc-version-indicator>
          <date>20110101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>15</main-group>
        <subgroup>00</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20110122</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>G09G   5/36        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>36</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>G11B   5/012       20060101A N20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>012</subgroup>
        <classification-value>N</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="7">
        <text>G11B   5/55        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>55</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="8">
        <text>G11B   5/596       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>596</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="9">
        <text>G11B  20/12        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>20</main-group>
        <subgroup>12</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="10">
        <text>G11B  21/08        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>21</main-group>
        <subgroup>08</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>345505000</text>
        <class>345</class>
        <subclass>505000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>345441000</text>
        <class>345</class>
        <subclass>441000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06T-011/40</text>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>11</main-group>
        <subgroup>40</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06T-015/00A</text>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>015</main-group>
        <subgroup>00A</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G11B-005/55D1</text>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>005</main-group>
        <subgroup>55D1</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>G11B-005/596F5</text>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>005</main-group>
        <subgroup>596F5</subgroup>
      </classification-ecla>
      <classification-ecla sequence="5">
        <text>G11B-021/08A1</text>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>021</main-group>
        <subgroup>08A1</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06T-011/40</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>11</main-group>
        <subgroup>40</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06T-015/005</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>15</main-group>
        <subgroup>005</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11B-005/012</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>012</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11B-005/5526</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>5526</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11B-005/59655</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>5</main-group>
        <subgroup>59655</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11B-021/083</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>B</subclass>
        <main-group>21</main-group>
        <subgroup>083</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S11B-005/012</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>2</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>6</number-of-drawing-sheets>
      <number-of-figures>9</number-of-figures>
      <image-key data-format="questel">US6184903</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Apparatus and method for parallel rendering of image pixels</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>EVANGELISTI CARLO J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5392385</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5392385</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>FOWLER MARK C</text>
          <document-id>
            <country>US</country>
            <doc-number>5422991</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5422991</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>DEERING MICHAEL F</text>
          <document-id>
            <country>US</country>
            <doc-number>5440682</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440682</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>JOHNSON JR LEE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5457775</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5457775</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>KELLEY MICHAEL W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5701405</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5701405</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>BERRY KYLE R</text>
          <document-id>
            <country>US</country>
            <doc-number>5704025</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5704025</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>KELLEY MICHAEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5706415</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5706415</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>RENTSCHLER ERIC M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5821950</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5821950</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>KUCHKUDA ROMAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5872902</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5872902</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sony Corporation</orgname>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SONY</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Omori, Mutsuhiro</name>
            <address>
              <address-1>Kanagawa, JP</address-1>
              <city>Kanagawa</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Fulwider Patton Lee &amp; Utecht, LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Chauhan, Ulka J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      There is provided a rendering system for processing pixels corresponding to a predetermined graphic in parallel by dividing a two-dimensional image coordinate system into areas each composed of a plurality of pixels of N pixels in a first direction and M pixels in a second direction perpendicular to the first direction, i.e.
      <br/>
      NxM pixels in total, and by allocating NxM computing sections respectively to the NxM pixels contained in that area.
      <br/>
      Specifically, the rendering system comprises a calculating section for calculating variations of the rendering data with respect to the first and second directions necessary for interpolating values of the rendering data in each pixel within a predetermined graphic from predetermined apex data of the predetermined graphic and an initial value of the rendering data with respect to the coordinate in the first direction which becomes the reference for computing the rendering data with respect to the second direction by means of interpolation by using the value of the predetermined apex data and the variation of the rendering data with respect to the first direction; and NxM computing sections for calculating the rendering data of the pixel in the second direction by means of interpolation by using the above-mentioned initial value and the variation of the rendering data with respect to the second direction.
      <br/>
      Thereby, the present invention allows the pixels to be rendered in parallel at high speed in the definition of sub-pixel level.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention relates to a rendering method and a rendering system in general and more particularly to a rendering method and a rendering system for drawing pixels corresponding to a predetermined graphic by dividing a two-dimensional image coordinate system into N pixel areas in a first direction and M pixel areas in a second direction which is perpendicular to the first direction, i.e. N * M pixel areas in total, and by allocating N * M computing sections respectively to the N * M pixels in each of the divided areas.</p>
    <p num="3">2. Description of the Related Art</p>
    <p num="4">With the progress of the resent semiconductor technology, the processability of an image processing system is also increasing.</p>
    <p num="5">In so-called computer graphics, there is a case when a plurality of two-dimensional graphics (polygons) having a predetermined fundamental shape (e.g. triangle) is used in displaying a three-dimensional object on a display screen.</p>
    <p num="6">A rendering process is then implemented on such polygons by a predetermined arithmetic circuit to calculate a value of brightness of each pixel within the polygon and to render the polygon in correspondence to the value of brightness.</p>
    <p num="7">Some system for rendering polygons as described above implements the polygon rendering process at high speed by operating a plurality of arithmetic circuits in parallel.</p>
    <p num="8">In utilizing such a plurality of rendering circuits, a display screen 71 is divided as shown in FIG. 1 into a same number of areas with the rendering circuits 61 through 64 (four in FIG. 1) so that each rendering circuit implements the rendering process in the corresponding area.</p>
    <p num="9">For instance, the rendering circuit 61 implements the rendering process in a quarter of area (area A) at the upper left corner of the display screen 71 and the rendering circuit 62 implements the rendering process in a quarter of area (area B) at the upper right corner of the display screen 71.</p>
    <p num="10">Further, the rendering circuit 63 implements the rendering process in a quarter of area (area C) at the lower left corner of the display screen 71 and the rendering circuit 64 implements the rendering process in a quarter of area (area D) at the lower right corner of the display screen 71.</p>
    <p num="11">However, when the display screen is divided as such, there has been a problem that when a polygon to be rendered is contained only within an area allocated to any one of the rendering circuits for example, a time required for processing it is not shortened even though the plurality of rendering circuits are provided because the rendering process is implemented on the polygon only by that one rendering circuit.</p>
    <p num="12">There has been also another problem that although it is conceivable to implement an interleave process for implementing the rendering process by allocating pixels per predetermined number to each rendering circuit, it is difficult to render in the definition of sub-pixel level.</p>
    <heading>OBJECT AND SUMMARY OF THE INVENTION</heading>
    <p num="13">Accordingly, it is an object of the present invention to provide a rendering system and a rendering method which allow the time required for rendering polygons to be shortened and to render in the definition of sub-pixel level by providing a plurality of rendering circuits.</p>
    <p num="14">In order to achieve the above-mentioned object, according to the present invention, the rendering system for processing pixels corresponding to a predetermined graphic in parallel by dividing a two-dimensional image coordinate system into areas each composed of a plurality of pixels of N pixels in a first direction and M pixels in a second direction which is perpendicular to the first direction, i.e. N * M pixels in total, and by allocating N * M computing sections respectively to the N * M pixels contained in that area, comprises a calculating section for calculating variations of the rendering data with respect to the first and second directions necessary for interpolating values of the rendering data in each pixel within a predetermined graphic from predetermined apex data of the predetermined graphic and an initial value of the rendering data with respect to the coordinate in the first direction which becomes the reference for computing the rendering data with respect to the second direction by means of interpolation by using the value of the predetermined apex data and the variation of the rendering data with respect to the first direction; and N * M computing sections for calculating the rendering data of the pixel in the second direction by means of interpolation by using the above-mentioned initial value and the variation of the rendering data with respect to the second direction.</p>
    <p num="15">Further, the rendering method for processing pixels corresponding to a predetermined graphic in parallel by dividing a two-dimensional image coordinate system into areas each composed of a plurality of pixels of N pixels in a first direction and M pixels in a second direction perpendicular to said first direction, i.e. N * M pixels in total, and by allocating N * M rendering circuits respectively to the N * M pixels contained in that area, comprises a first step of calculating variations of the rendering data with respect to the first and second directions necessary for interpolating values of the rendering data in each pixel within a predetermined graphic from predetermined apex data of the predetermined graphic; a second step of calculating an initial value of the rendering data with respect to the coordinate in the first direction which becomes the reference for computing the rendering data with respect to said second direction by means of interpolation by using the value of the predetermined apex data and the variation of the rendering data with respect to the first direction; and a third step of calculating the rendering data of the pixel in the second direction by means of interpolation by using the above-mentioned initial value and the variation of the rendering data with respect to the second direction by utilizing N * M rendering circuits in parallel.</p>
    <p num="16">The specific nature of the invention, as well as other objects, uses and advantages thereof, will clearly appear from the following description and from the accompanying drawings.</p>
    <heading>BRIEF DESCRIPTION OF DRAWINGS</heading>
    <p num="17">
      FIG. 1 is a diagram showing one example of a rendering process implemented by a plurality of rendering circuits;
      <br/>
      FIG. 2 is a block diagram showing a structure of a rendering system according to one embodiment of the present invention;
      <br/>
      FIG. 3 is a block diagram showing a structural example of an initial value computing section in FIG. 2:
      <br/>
      FIG. 4 is a diagram showing one example in allocating pixels to rendering circuits;
      <br/>
      FIGS. 5A through 5D are diagrams showing examples in calculating initial values of data; and
      <br/>
      FIG. 6 is a diagram showing one example a span.
    </p>
    <heading>DESCRIPTION OF PREFERRED EMBODIMENT</heading>
    <p num="18">
      FIG. 2 is a diagram showing a structure of one embodiment of the inventive rendering system.
      <br/>
      A main processor 1 outputs graphic data supplied via an input/output section 2 or polygon graphic data stored in a main memory 3 to a geometry computing section 4.
      <br/>
      It is noted that such polygon graphic data is generated in accordance to a predetermined application program.
    </p>
    <p num="19">
      The geometry computing section 4 implements such processes as coordinate transformation, clipping, writing and the like to the graphic data supplied from the main processor 1 and outputs, as graphics data (polygon rendering data) after the processing, coordinates X, Y and Z corresponding to each apex of a triangular polygon, values of brightness R, G and B corresponding to red, green and blue, respectively, a coefficient of blend a representing a ratio in which a value of brightness of a pixel to be drawing and a value of brightness of a pixel stored in a display buffer 10, texture coordinates S, T and Q, and a coefficient of fog F to a DDA setup section 5 (first interpolation computing means).
      <br/>
      It is noted that because the coordinate system is transformed into a two-dimensional coordinate system of the display screen in the geometry computing section 4, the coordinate Z denotes information of depth at that point.
    </p>
    <p num="20">
      It is noted that the S, T and Q which are homogeneous coordinate systems are output as the texture coordinates, what S/Q and T/Q are multiplied by a texture size, respectively, are utilized as actual texture coordinates.
      <br/>
      Further, the coefficient of fog F is a coefficient indicative of a degree in blending a predetermined fog color blended in presenting the display at the point of Z, when it is significant for example, as if it is fogged.
    </p>
    <p num="21">
      The DDA setup section 5 calculates variations of polygon rendering data with respect to the X direction ( DELTA Z/ DELTA X,  DELTA R/ DELTA X,  DELTA G/ DELTA X,  DELTA B/ DELTA X,  DELTA  ALPHA / DELTA x,  DELTA S/ DELTA X,  DELTA T/ DELTA X,  DELTA Q/ DELTA X and  DELTA F/ DELTA X) and to the Y direction ( DELTA Z/ DELTA Y,  DELTA R/ DELTA Y,  DELTA G/ DELTA Y,  DELTA B/ DELTA Y,  DELTA  ALPHA / DELTA Y,  DELTA S/ DELTA Y,  DELTA T/ DELTA Y,  DELTA Q/ DELTA Y and  DELTA F/ DELTA Y) from the polygon rendering data X, Y, Z, R, G, B,  ALPHA , S, T, Q and F of each apex of the supplied triangle.
      <br/>
      It also calculate a gradient (or its inverse number) of each side of the triangle.
    </p>
    <p num="22">The DDA setup section 5 also discriminates the type of the shape of the triangle from the coordinates of the apexes of the triangle (polygon), calculates values of each polygon rendering data on a point (X0, Y0) (see FIG. 4) on a side AC having a coordinate in the same Y direction with the rendering starting point corresponding to each rendering circuit 20-k (k=1, 2, 3, 4) by an initial value computing section 21 and outputs the values to a DDA section 6 of each rendering circuit 20-k.</p>
    <p num="23">
      FIG. 3 shows a structural example of the initial value computing section 21 in the DDA setup section 5.
      <br/>
      It is noted that each value is represented by fixed-point real number in the initial value computing section 21.
    </p>
    <p num="24">A constant generating circuit 41 generates a value 2N (a number of pixels in the Y direction in that area) corresponding to a number of rendering circuits 20-k, 2N  * 2N, (i.e. a number of pixels composing the area to be processed in parallel) and outputs that value to a subtracter 42.</p>
    <p num="25">The subtracter 42 calculates a difference (2N -i) between a number i (described later) in the Y direction (first direction) of the pixel to be processed by the rendering circuit 20-k and the value 2N from the constant generating circuit 41 and outputs the result of the calculation to an adder 43.</p>
    <p num="26">The adder 43 calculates a sum (Va+2N -i) of the value (2N -i) from the subtracter 42 with the value Va of data at the apex A and outputs the result to a bit shifter 44.</p>
    <p num="27">The bit shifter (barrel shifter) 44 bit-shifts the value (Va+2N -i) supplied from the adder 43 by N bits to the side of LSB (Least Significant Bit) and outputs the bit-shifted value ((Va+2N -i)/2N) to an adder 45 and a subtracter 47.</p>
    <p num="28">A constant generating circuit 46 generates a value in which the value of each bit below the point of the fixed-point real number is 1 (0, 111 . . . 1B) and outputs the value to the adder 45.</p>
    <p num="29">
      The adder 45 adds the value (0, 111 . . . 1B) from the constant generating circuit 46 to the value ((Va+2N -i)/2N) from the bit shifter 44 and after omitting the part of the calculation result below the decimal point, outputs the value (integer part) to the subtracter 47.
      <br/>
      That is, the adder 45 outputs a fixed-point real number whose value is equal with the least integer (ccil ((Va+2N -i)/2N)) among the integers greater than the value supplied from the bit shifter 44.
    </p>
    <p num="30">The subtracter 47 calculates a difference (ccil ((Va+2N -i)/2N))-(Va+2N -i)/2N) between the value from the bit shifter 44 and that from the adder 45 and outputs the result to a bit shifter 48.</p>
    <p num="31">The bit shifter (barrel shifter) 48 bit-shifts the value supplied from the subtracter 47 by N bits to the side of the MSB (Most Significant Bit) and outputs the bit-shifted value ((ccil ((Va+2N -i)/2N))-(Va+2N -i)/2N)  * 2N) to a multiplier 49.</p>
    <p num="32">The multiplier 49 calculates a product ((ccil ((Va+2N -i)/2N)/2N)-(Va+2N -i)/2N) * 2N *  DELTA V/ DELTA Y) of the value from the bit shifter 48 and a variation  DELTA V/ DELTA Y in the Y direction corresponding to the data to be calculated this time and outputs the result to an adder 50.</p>
    <p num="33">The adder 50 outputs a sum (Va+(ccil ((Va+2N -i)/2N))-(Va+2N -i)/2N) * 2N *  DELTA V/ DELTA Y) of the value from the multiplier 49 and the value Va at the apex A of the data for calculating the value at the point (X0, Y0) this time as an initial value (value at the above-mentioned point (X0, Y0)) of the data to be calculated this time.</p>
    <p num="34">
      The DDA section 6 of the rendering circuit 20-1 in FIG. 1 contains a circuit (not shown) similar to the above-mentioned initial value computing section 21 and implements DDA (Digital Differential Analyzer) operation.
      <br/>
      At first, it calculates a value Vi of each polygon rendering data corresponding to a first pixel among the pixels allocated to the rendering circuit 20-1 (the pixel closest to the side AC among the allocated pixels) in a predetermined span (an array of pixels arranged in the X direction shown in FIG. 5 for example) from the variation of each polygon rendering data in the X direction supplied from the DDA setup section 5 and the initial value V0 of each polygon rendering data corresponding to the span.
      <br/>
      Next, it calculates sequentially the coordinates X and Y corresponding to each pixel of that span and the values of polygon rendering data X, Y, Z, R, G, B,  ALPHA , S, T, Q and F in that coordinate and outputs them to a texture processor 7.
    </p>
    <p num="35">It is noted that the DDA section 6 calculates the values of rendering data of the pixel per every predetermined number of pixels.</p>
    <p num="36">
      The texture processor 7 in the rendering circuit 20-1 calculates the actual texture coordinate by reading texture data from a texture buffer 9, by dividing the supplied texture coordinates S and T by Q and by multiplying it with the texture size.
      <br/>
      It also calculates from the read texture data the value of brightness at a texture address corresponding to the actual texture coordinates S and T and a coefficient (value  ALPHA  of texture) representing a blending ratio of the texture data.
      <br/>
      Then, in correspondence to the coefficient, it blends the value of brightness supplied from the DDA section 6 with the value of brightness corresponding to the texture.
    </p>
    <p num="37">The texture processor 7 also blends the predetermined fog color in correspondence to the coefficient of fog F and outputs the generated value of brightness as a value of brightness corresponding to the pixel at the coordinates X and Y supplied from the DDA section 6 to a memory interface 8 together with the coordinates X, Y and Z and the coefficient of blend  ALPHA .</p>
    <p num="38">It is noted that the texture buffer 9 stores texture data corresponding to each level such as MIPMAP in advance.</p>
    <p num="39">Referring to the value Z in a Z buffer 11, the memory interface 8 of the rendering circuit 20-1 updates the Z value of the Z buffer 11 by the supplied coordinate Z and writes the supplied value of brightness to an address corresponding to the coordinates (X, Y) in a display buffer 10 when the supplied pixel is located in front (on the side of point of view) of what has been rendered before.</p>
    <p num="40">It is noted that when the memory interface 8 is arranged so as to implement the blend  ALPHA , it blends the value of brightness stored in the display buffer 10 with the supplied value of brightness in correspondence to the supplied coefficient of blend  ALPHA  and writes the generated value of brightness to the display buffer 10.</p>
    <p num="41">A CRT control section 12 of the rendering circuit 20-1 generates a display address in synchronism with predetermined horizontal and vertical synchronous signals, controls the memory interface 8 to transfer the value of brightness corresponding to the display address per every predetermined number of values in batch to store those values in a built-in FIFO section (not shown) once and to output index values of the data to a multiplexer 14 at predetermined intervals.</p>
    <p num="42">It is noted that because the rendering circuits 20-2 through 20-4 are constructed in the same manner with the rendering circuit 20-1, their explanation will be omitted here.</p>
    <p num="43">The multiplexer 14 arrays the index values supplied from the rendering circuits 20-1 through 20-4 in a predetermined order and then outputs them to an RAMDAC 13.</p>
    <p num="44">
      The RAMDAC 13 has a RAM section and a DAC (Digital/Analog Converter) section not shown.
      <br/>
      It stores the values of brightness corresponding to the index values in the RAM section in advance, supplies the values of brightness corresponding to the index values supplied from the multiplexer 14 from the RAM section to the DAC section, converts the values of brightness (RGB values) from digital to analog in the DAC section and outputs the analog video signals (RGB signals) to a predetermined device not shown.
    </p>
    <p num="45">Next, the operation of the rendering system shown in FIG. 2 in rendering polygons will be explained.</p>
    <p num="46">At first, the main processor 1 outputs polygon data to the geometry computing section 4.</p>
    <p num="47">The geometry computing section 4 implements such processes as coordinate transformation, clipping, writing and the like to the graphic data supplied from the main processor 1 and outputs coordinates X, Y and Z corresponding to each apex of a triangle (polygon), values of brightness R, G and B. a coefficient of blend  ALPHA , texture coordinate S, T and Q, and a coefficient of fog F to the DDA setup section 5.</p>
    <p num="48">
      Next, as a pre-process of rendering, the DDA setup section 5 discriminates the shape of the triangular polygon.
      <br/>
      At this time, among three apexes, the DDA setup section 5 determines the apex whose coordinate in the Y direction is smallest as apex A (FIG. 6), the apex whose coordinate in the Y direction is the largest as apex C and the remaining apex as apex B. It is noted that when there are two apexes whose coordinate in the Y direction is smallest, the DDA setup section 5 (FIG.5) determines either one of those two apexes as apex A and the other as apex B.
    </p>
    <p num="49">Then, the DDA setup section 5 calculates variations of polygon rendering data with respect to the X and Y directions utilized in calculating values of polygon rendering data X, Y, Z, R, G, B,  ALPHA , S, T, Q and F in each pixel within the polygon by means of interpolation from the values of the polygon rendering data of the three apexes of the polygon, respectively.</p>
    <p num="50">After calculating each variation, the DDA setup section 5 calculates values of each polygon rendering data at the point (X0, Y0) on the side AC having the same coordinate with the coordinate Y0 of the pixel in the Y direction to be processed respectively by the rendering circuits 20-1 through 20-4 and outputs such data to the DDA section 6 of the corresponding rendering circuits 20-1 through 20-4 together with each variation in the X direction.</p>
    <p num="51">At this time, the DDA setup section 5 calculates a value V0 of each polygon rendering data at the point (X0, Y0) corresponding to each rendering circuit 20-k (k=1, 2, 3, 4) by the initial value computing section 21 in accordance to the following expression:  (Equation image '1' not included in text)</p>
    <p num="52">
      where, Va denotes a value of predetermined polygon rendering data V at the apex A, 2N denotes a number of pixels in one side of an area to be processed by the rendering circuit in parallel, and i denotes the number of each rendering circuit in the Y direction.
      <br/>
      Further, A&gt;&gt;N denotes a value when a predetermined value A is bit-shifted to the LSB side by N bits and A&lt;&lt;N denotes a value when the predetermined value A is bit-shifted to the MSB side by N bits.
    </p>
    <p num="53">
      In this case, N=1 because each pixel is processed in parallel per area of 2 * 2 pixels as shown in FIG. 4 in the four rendering circuits 20-1 through 20-4.
      <br/>
      It is noted that in this case, the pixels 0 through 3 in the figure are allocated to be processed to the rendering circuits 20-1 through 20-4, respectively.
      <br/>
      Accordingly, i=0 with respect to the rendering circuits 20-1 and 20-2 and i=1 with respect to the rendering circuits 20-3 and 20-4.
      <br/>
      It is noted that in FIG. 4, each pixel is represented by the coordinate at the lower left corner of the pixel.
    </p>
    <p num="54">For instance, Y0 may be calculated by the following expressions in the rendering circuits 20-1 and 20-2 wherein i=0:  (Equation image '2' not included in text)</p>
    <p num="55">On the other hand, Y0 is calculated as follows in the rendering circuits 20-3 and 20-4 wherein i=1.</p>
    <p num="56">Y0 =Ya+((ccil ((Ya+1)&gt;&gt;1)-(Ya+1)&gt;&gt;1)&lt;&lt;1)</p>
    <p num="57">Then, as shown in FIG. 5A, when the value of Ya is xxx0.0B (x is an arbitrary number among 0 and 1 and B denotes a binary number), Y0 is calculated as follows in the rendering circuits 20-1 and 20-2 wherein i=0:  (Equation image '3' not included in text)</p>
    <p num="58">On the other hand, when Ya=xxx0.0B, Y0 is calculated as follows in the rendering circuits 20-3 and 2-4 wherein i=1:  (Equation image '4' not included in text)</p>
    <p num="59">When Ya=xxx0.1B and i=0 as shown in FIG. 5B, Y0 is calculated in the same manner as (xxx0.1B+1.1B) and is calculated as (xxx0.1B+0.1B) when i=1.</p>
    <p num="60">When Ya=xxx1.0B and i=0 as shown in FIG. 5C, Y0 is calculated in the same manner as (xxx1.0B+1.0B) and is calculated as xxx1.0B when i=1.</p>
    <p num="61">Further, when Ya=xxx1.1B and i=0 as shown in FIG. 5D, Y0 is calculated in the same manner as (xxx1.1B+0.1B) and is calculated as (xxx1.1B+1.1B) when i=1.</p>
    <p num="62">Thus, the DDA setup section 5 calculates the Y coordinate Y0 of the span to be rendered at first by each rendering circuit in correspondence to the value of i and calculates the initial value V0 of each polygon rendering data in the same manner.</p>
    <p num="63">Further, after calculating the coordinate Y0 in the Y direction of the first span corresponding to each rendering circuit 20-k, the DDA setup section 5 calculates the coordinate in the Y direction of the span to be processed next by each rendering circuit 20-k and data V in that coordinate sequentially by interpolation by setting the variation as 2N *  DELTA V/ DELTA Y.</p>
    <p num="64">
      Then, the DDA section 6 of each rendering circuit 20-k (k 1, 2, 3, 4) implements the DDA operation and renders the pixel allocated to the rendering circuit 20-k in the span corresponding to the data supplied from the DDA setup section 5.
      <br/>
      In this case, one span is processed by the two rendering circuits as shown in FIG. 6.
    </p>
    <p num="65">At this time, the DDA section 6 of the rendering circuit 20-k calculates the value of polygon rendering data of the pixel closest to the side AC among the pixels allocated to the rendering circuit 20-k from the point (X0, Y0) and then calculates the value of polygon rendering data of each pixel per (2N -1) pixels.</p>
    <p num="66">That is, the DDA section 6 calculates a value Vi of the polygon rendering data of the pixel closest to the side AC from the value V0 of each polygon rendering data at the point (X0, Y0) corresponding to the rendering circuit 20-k in accordance to the following expressions:  (Equation image '5' not included in text)</p>
    <p num="67">
      where, j denotes a number of each rendering circuit in the X direction.
      <br/>
      In this case (i.e. when the pixels 0 through 3 shown in FIG. 4 are allocated to the rendering circuits 20-1 through 20-4 as described above), j=0 with respect to the rendering circuits 20-1 and 20-3 and j=1 with respect to the rendering circuits 20-2 and 20-4.
      <br/>
      It is noted that this calculation is implemented in the DDA section 6 in a circuit similar to the initial value computing section 21 of the DDA setup section 5.
      <br/>
      At this time, Vi corresponding to each rendering circuit 20-k is output by inputting j instead of i in FIG. 3, by inputting  DELTA V/ DELTA X instead of  DELTA V/ DELTA Y and by inputting V0 instead of Va.
    </p>
    <p num="68">Then, the DDA section 6 implements interpolation by setting the variation of each polygon rendering data V as 2N *  DELTA V/ DELTA X, calculates the value of polygon rendering data of the allocated pixel and outputs them sequentially to the texture processor 7.</p>
    <p num="69">
      The texture processor 7 reads the texture data from the texture buffer 9 and by utilizing that data, transforms the texture coordinate supplied from the DDA section 6 into an actual texture coordinate.
      <br/>
      It then calculates values of brightness in the texture address corresponding to the actual texture coordinates S and T and a coefficient (value  ALPHA  of the texture) representing a blending ratio of the texture data and blends the value of brightness supplied from the DDA section 6 with the value of brightness corresponding to the texture in correspondence to the coefficient.
    </p>
    <p num="70">The texture processor 7 also blends the value of brightness blended in correspondence to the value  ALPHA  of the texture with a predetermined fog color in correspondence to the coefficient of fog F and outputs the generated value of brightness to the memory interface 8 together with the coordinates X, Y and Z and the blending coefficient  ALPHA  as the value of brightness corresponding to the pixel at the coordinates X and Y supplied form the DDA section 6.</p>
    <p num="71">
      Then, the memory interface 8 reads the Z value in the Z buffer 11 to determine whether or not the pixel supplied from the texture processor 7 is located in front (on the side of point of view) of one rendered before.
      <br/>
      When the supplied pixel is located in front of the previously rendered pixel, the memory interface 8 updates the Z value of the Z buffer 11 by the supplied coordinate Z and writes the supplied value of brightness to the address corresponding to that coordinate in the display buffer 10.
    </p>
    <p num="72">When the supplied pixel is located behind the previously rendered one, the memory interface 8 discards the supplied data.</p>
    <p num="73">It is noted that when it is set so as to implement a blend, the memory interface 8 blends the value of brightness stored in the display buffer 10 with the supplied value of brightness in a ratio of  ALPHA : (1- ALPHA ) in correspondence to the coefficient of blend  ALPHA  supplied from the texture processor 7 and writes the generated value of brightness into the display buffer 10.</p>
    <p num="74">
      After scaling the supplied coordinates X and Y to 1/2N (inverse number of the number of pixels of each side in the above-mentioned area processed in parallel), respectively, the memory interface 8 writes the value of brightness into the memory area of the display buffer 10 corresponding to that value.
      <br/>
      Thereby, the values of brightness are stored in the display buffer 10 without leaving a space between them.
    </p>
    <p num="75">
      Then, the values of brightness written to the display buffer 10 are transferred to the CRT control section 12 via the memory interface 8 in correspondence to the display addresses generated by the CRT control section 12 in synchronism with the horizontal and vertical synchronous signals and are stored once in the FIFO section of the CRT control section 12.
      <br/>
      Then, index values corresponding to the values of brightness are output to the multiplexer 14 at predetermined intervals.
    </p>
    <p num="76">Thus, the rendering circuit 20-k operates respectively and calculates in parallel the value of the polygon rendering data in the pixel allocated in advance.</p>
    <p num="77">
      Then, the index values supplied from the rendering circuits 20-1 through 20-4 are arranged in a predetermined order by the multiplexer 14 and are output to the RAMDAC 13.
      <br/>
      Then, analog video signals (RGB signals) obtained by converting the values of brightness (RGB values) corresponding to the index values from digital to analog are output to a predetermined device not shown.
    </p>
    <p num="78">
      It is noted that although the number of pixels in the area processed in parallel is 2 * 2 in the above-mentioned embodiment, it may be another number.
      <br/>
      When the number of pixels in each side of this area is an integer power of 2, the circuit is simplified and the cost may be reduced because the above-mentioned V0 and Vi may be calculated by implementing bit-shift instead of the division.
      <br/>
      As described above, the inventive rendering method and the rendering system allow the rendering in the definition of sub-pixel level to be implemented in parallel because it is arranged such that the variations of the rendering data with respect to the first and second directions necessary for interpolating values of the rendering data in each pixel within a predetermined graphic is calculated from predetermined apex data of the predetermined graphic, the initial value of the rendering data with respect to the coordinate in the first direction which becomes the reference for computing the rendering data with respect to the second direction is calculated by means of interpolation by using the value of the predetermined apex data and the variation of the rendering data with respect to the first direction and the rendering data of the pixel in the second direction is calculated by means of interpolation by using the N * M rendering circuits in parallel as well as the above-mentioned initial value and the variation of the rendering data with respect to the second direction.
    </p>
    <p num="79">
      It is noted that the various modifications and applications are conceivable within the scope of the gist of the invention.
      <br/>
      Accordingly, the gist of the present invention is not limited to the embodiment described here.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A rendering apparatus for processing rendering data (Vi) for pixels defining a predetermined graphic, said rendering data (Vi) processed in parallel by dividing a two-dimensional image coordinate system into a plurality of pixel areas each composed of N pixels in a first direction and M pixels in a second direction perpendicular to said first direction, each of said plurality of pixel areas thus having a total of N * M pixels, said rendering apparatus comprising:</claim-text>
      <claim-text>calculating means for calculating variations of said rendering data with respect to said first and second directions, said variations used for interpolating values of said rendering data (Vi) for each of said pixels from predetermined apex data of said predetermined graphic, said calculating means also for calculating an initial value (V0) of said rendering data with respect to the coordinate in said first direction, said initial value (V0) serving as a reference for computing said rendering data with respect to said second direction, said initial value (V0) calculated by means of interpolation by using the value of said predetermined apex data and said variation of said rendering data with respect to said first direction;</claim-text>
      <claim-text>and N * M computing means, one of said N * M computing means corresponding to one of said N * M pixels contained in said pixel area, each one of said computing means for calculating said rendering data of said pixel with which it corresponds in said second direction, by means of interpolation by using said initial value (V0) and said variation of said rendering data with respect to said second direction.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A rendering method for processing rendering data (Vi) for pixels defining a predetermined graphic, said rendering data (Vi) processed in parallel by dividing a two-dimensional image coordinate system into a plurality of pixel areas each composed of N pixels in a first direction and M pixels in a second direction perpendicular to said first direction, each of said plurality of pixel areas thus having a total of N * M pixels, said rendering method comprising the steps of: calculating variations of said rendering data with respect to said first and second directions, said variations used for interpolating values of said rendering data (Vi) from predetermined apex data of said predetermined graphic; calculating an initial value (V0) of said rendering data with respect to the coordinate in the first direction, said initial value (V0) serving as a reference for computing said rendering data with respect to said second direction, said initial value (V0) calculated by means of interpolation by using the value of the predetermined apex and the variation of said rendering data with respect to the first direction;</claim-text>
      <claim-text>and for each one of said N * M pixels, calculating said rendering data of said pixel in the second direction by means of interpolation by using said initial value (V0) and said variation of said rendering data with respect to the second direction, said calculating for each one of said pixels occurring in parallel with said calculating for each of the other said pixels.</claim-text>
    </claim>
  </claims>
</questel-patent-document>