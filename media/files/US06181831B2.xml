<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181831B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181831</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181831</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="10781414" extended-family-id="17757841">
      <document-id>
        <country>US</country>
        <doc-number>08721622</doc-number>
        <kind>A</kind>
        <date>19960926</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1996US-08721622</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>18215406</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>GB</country>
        <doc-number>9519795</doc-number>
        <kind>A</kind>
        <date>19950928</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1995GB-0019795</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/10        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  17/14        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>14</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F  17/16        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>16</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>H03M   7/30        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>M</subclass>
        <main-group>7</main-group>
        <subgroup>30</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>H03M   7/36        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>M</subclass>
        <main-group>7</main-group>
        <subgroup>36</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>H04N   7/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>7</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="7">
        <text>H04N   7/32        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>7</main-group>
        <subgroup>32</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>382276000</text>
        <class>382</class>
        <subclass>276000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>375E07226</text>
        <class>375</class>
        <subclass>E07226</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>382232000</text>
        <class>382</class>
        <subclass>232000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>382248000</text>
        <class>382</class>
        <subclass>248000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>382250000</text>
        <class>382</class>
        <subclass>250000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>382284000</text>
        <class>382</class>
        <subclass>284000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>382302000</text>
        <class>382</class>
        <subclass>302000</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>708402000</text>
        <class>708</class>
        <subclass>402000</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>708520000</text>
        <class>708</class>
        <subclass>520000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/60</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>60</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/10</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141112</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/147</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>147</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141112</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/16</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141112</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>5</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>6</number-of-drawing-sheets>
      <number-of-figures>12</number-of-figures>
      <image-key data-format="questel">US6181831</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Spatial frequency-domain video signal processing</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GRAY STEPHEN B</text>
          <document-id>
            <country>US</country>
            <doc-number>3905018</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3905018</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>LUX PETER</text>
          <document-id>
            <country>US</country>
            <doc-number>4134134</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4134134</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>EBIHARA NORIO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4163258</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4163258</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>NETRAVALI ARUN N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4245248</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4245248</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>POWELL PHILIP G</text>
          <document-id>
            <country>US</country>
            <doc-number>4442454</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4442454</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>MEEKER G WILLIAM</text>
          <document-id>
            <country>US</country>
            <doc-number>4447886</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4447886</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>MEEKER G WILLIAM</text>
          <document-id>
            <country>US</country>
            <doc-number>4751742</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4751742</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>MALVAR HENRIQUE S</text>
          <document-id>
            <country>US</country>
            <doc-number>4754492</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4754492</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>SAITO OSAMU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5170264</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5170264</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>GONZALES CESAR A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5301242</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5301242</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>SHIBATA KOICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5325215</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5325215</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>CARNAHAN SHAWN V A</text>
          <document-id>
            <country>US</country>
            <doc-number>5414780</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5414780</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="13">
          <text>MURAKAMI TOKUMICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5428693</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5428693</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="14">
          <text>BABKIN VLADIMIR</text>
          <document-id>
            <country>US</country>
            <doc-number>5642438</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5642438</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="15">
          <text>YAGASAKI YOICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5663763</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5663763</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sony Corporation</orgname>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="original" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>Sony United Kingdom Limited</orgname>
            <address>
              <address-1>Weybridge, GB</address-1>
              <city>Weybridge</city>
              <country>GB</country>
            </address>
          </addressbook>
          <nationality>
            <country>GB</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="3">
          <addressbook lang="en">
            <orgname>SONY</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Sadjadian, Ahmad</name>
            <address>
              <address-1>Swindon, GB</address-1>
              <city>Swindon</city>
              <country>GB</country>
            </address>
          </addressbook>
          <nationality>
            <country>GB</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Frommer Lawrence &amp; Haug, LLP.</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Frommer, William S.</name>
          </addressbook>
        </agent>
        <agent sequence="3" rep-type="agent">
          <addressbook lang="en">
            <name>Shallenburger, Joe</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Bella, Matthew C.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method of generating an output array of image spatial frequency coefficients from input arrays of image spatial frequency coefficients overlapped by the required array, the spatial frequency coefficients being transformable to image pixel values by a predetermined spatial frequency transformation, comprises the steps of: matrix-multiplying each input array by one or more respective matrices having coefficients derivable by applying the inverse of the predetermined spatial frequency transformation to respective translation matrices which, if matrix-multiplied by that input array, would provide a translation of the overlapped portion of that input array to an overlapping position in the output array; and matrix-adding the respective matrix products generated from each overlapped input array.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">This invention relates to frequency-domain signal processing, and particularly to video signal processing in the spatial frequency domain.</p>
    <p num="3">2. Description of the Prior Art</p>
    <p num="4">
      Motion estimation is used in many video signal processing schemes, and in particular video compression schemes, in order to reduce the amount of data which has to be transmitted or stored to represent a series of images (e.g. fields or frames).
      <br/>
      This benefit can be achieved because there is often a great deal of redundancy present in a video sequence.
      <br/>
      In particular, many areas of an image stay the same or are simply displaced from image to image.
      <br/>
      Thus, a reasonably good replica of a frame can be constructed from appropriately selected areas of previous frame(s), referred to here as reference frames.
    </p>
    <p num="5">
      For this type of processing, frames are generally broken down into square or rectangular areas (arrays of pixels) known as macroblocks.
      <br/>
      For example, in one previously proposed system, a macroblock comprises an array of 16 * 16 pixels.
      <br/>
      For each macroblock, one or more motion vectors is computed and transmitted or stored.
      <br/>
      The motion vectors point to areas on previous frame(s) which most closely resemble the content of the macroblock.
    </p>
    <p num="6">At the decoder, the motion vectors, together with error data (representing the difference between the actual or original frame and a replica predicted from the reference frame(s) using the motion vectors) are used to reconstruct each frame.</p>
    <p num="7">The process of computing the motion vectors at the encoder is generally referred to as motion estimation, and the process of generating the replica or reconstructed frames is generally referred to as motion compensation.</p>
    <p num="8">
      Many video compression schemes which use motion-based processing also try to reduce further the redundancy present in the video data, by first transforming the spatial domain data into a corresponding set of frequency domain coefficients which represent different spatial frequency components of the video data, and then reducing the amount of information by quantising these coefficients.
      <br/>
      A common technique for transforming the data to and from the frequency domain is the discrete cosine transform (DCT).
    </p>
    <p num="9">
      The discrete cosine transform is a block-based, process, so that an array of DCT coefficients is generated from each macroblock, independently of other macroblocks in the image.
      <br/>
      Usually, the array of coefficients (referred to here as a DCT block) is the same size (i.e. the same number of elements) as the original macroblock.
    </p>
    <p num="10">
      Therefore, if there is a need to generate a block of DCT coefficients based on a different block structure, it is necessary to decode the DCT data back to spatial (pixel) data and then recode in accordance with the required block structure.
      <br/>
      This can be processor-intensive and time-consuming.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="11">This invention provides a method of generating an output array of image spatial frequency coefficients from input arrays of image spatial frequency coefficients overlapped by the required array, the spatial frequency coefficients being transformable to image pixel values by a predetermined spatial frequency transformation, the method comprising the steps of:</p>
    <p num="12">matrix-multiplying each input array by one or more respective matrices having coefficients derivable by applying the inverse of the predetermined spatial frequency transformation to respective translation matrices which, if matrix-multiplied by that input array, would provide a translation of the overlapped portion of that input array to an overlapping position in the output array; and</p>
    <p num="13">matrix-adding the respective matrix products generated from each overlapped input array.</p>
    <p num="14">The invention involves a recognition of the counter-intuitive feature of spatial frequency coefficients such as DCT coefficients, that a required array overlapping a number of input arrays of coefficients can be generated simply by matrix-multiplying each input array which is overlapped by an array position in the output array by suitable pre- and post-matrices.</p>
    <p num="15">
      This now means that motion compensation can be performed in the DCT domain.
      <br/>
      This is potentially very useful in applications such as, for example, converting one GOP format into another GOP format.
    </p>
    <p num="16">Preferably the predetermined spatial frequency transformation is the inverse discrete cosine transform.</p>
    <p num="17">For use in motion compensation techniques, it, is preferred that the method comprises the step of detecting portions of the input arrays overlapped by the output array in response to a motion vector associated with the output array.</p>
    <p num="18">Preferably the one or more matrices comprise a pre-multiplying matrix and a post-multiplying matrix.</p>
    <p num="19">The invention also provides video signal processing apparatus for generating an output array of image spatial frequency coefficients from input arrays of image spatial frequency coefficients overlapped by the required array, the spatial frequency coefficients being transformable to image pixel values by a predetermined spatial frequency transformation, the apparatus comprising:</p>
    <p num="20">
      means for matrix-multiplying each input array by one or more respective matrices having coefficients derivable by applying the inverse of the predetermined spatial frequency transformation to respective translation matrices which, if matrix-multiplied by that input array, would provide a translation of the overlapped portion of that input array to an overlapping position in the output array; and
      <br/>
      means for matrix-adding the respective matrix products generated from each overlapped input array.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="21">
      The above and other objects, features and advantages of the invention will be apparent from the following detailed description of illustrative embodiments which is to be read in connection with the accompanying drawings, in which:
      <br/>
      FIG. 1 is a schematic diagram of a previously proposed video data compression apparatus;
      <br/>
      FIG. 2 is a schematic diagram of a complementary previously proposed video data decompression apparatus;
      <br/>
      FIGS. 3a and 3b schematically illustrate the generation of discrete cosine transform (DCT) coefficients from video data representing a block of pixels;
      <br/>
      FIG. 4 is a schematic diagram of a video data decompression apparatus according to an embodiment of the invention;
      <br/>
      FIG. 5a schematically illustrates the operation of motion compensation in the DCT domain;
      <br/>
      FIG. 5b schematically illustrates a desired DCT block overlying four existing DCT blocks;
      <br/>
      FIGS. 6a to 6d schematically illustrate the generation of the desired DCT block from the four existing blocks; and
      <br/>
      FIG. 7 is a schematic diagram of an apparatus for generating the desired DCT block of FIG. 5.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="22">
      FIG. 1 is a schematic diagram of a previously proposed video data compression apparatus.
      <br/>
      In FIG. 1, input (uncompressed) video data is supplied first to a motion estimator 10 which generates motion vectors for each macro block of a current field or frame indicating portions of a preceding and/or following field or frame which most closely resemble that macro block.
    </p>
    <p num="23">
      The differences between the current macro block and the portion of the reference field or frame(s) pointed to by the motion vectors are then encoded by the Discrete Cosine Transform (DCT) in a DCT encoder 20.
      <br/>
      The DCT encoder 20 generates an array or block of DCT coefficients from the difference data associated with each macro block.
    </p>
    <p num="24">Finally, the blocks of DCT coefficients are supplied to an encoder 30 which quantises the DCT coefficients and then forms run-length and entropy (eg Huffman) coding to generate a data stream of compressed video data.</p>
    <p num="25">FIG. 2 is a schematic diagram of a complementary previously proposed video data decompression apparatus which is operable to decompress the compressed video data output by the apparatus of FIG. 1.</p>
    <p num="26">
      In FIG. 2, the compressed video data is supplied first to a decoder 40 which operates in a complementary manner to the encoder 30 of FIG. 1.
      <br/>
      Therefore, in particular, the decoder 40 performs inverse entropy coding, inverse run-length coding and inverse quantisation to generate blocks of DCT coefficients at its output.
    </p>
    <p num="27">
      These blocks of DCT coefficients are supplied to an inverse DCT coder 50 which transforms the DCT coefficients into spatial video information.
      <br/>
      The output of the inverse DCT coder 50 represents the differences between the current macro block and a block of pixels of a reference frame or frames pointed to by motion vectors associated with the macro block.
      <br/>
      Therefore, a stage of motion compensation 60 is required to obtain the block or blocks pointed to by the motion vectors and combine them with the difference data to generate output video data.
    </p>
    <p num="28">
      FIGS. 3a and 3b schematically illustrate the generation of discrete cosine transform (DCT) coefficients from video data representing a block of pixels.
      <br/>
      In particular, FIG. 3a shows a part of an image divided up into blocks 70 of 8 * 8 pixels 80. (In other embodiments, different block sizes could of course be used).
    </p>
    <p num="29">
      The DCT process is well described elsewhere, and leads to blocks 90 of 8 * 8 DCT coefficients 100 being generated (FIG. 3b).
      <br/>
      Importantly, each block 90 of DCT coefficients represents the spatial frequency content of a corresponding respective block 70 of the original image.
      <br/>
      In other words, there is a one-to-one mapping between image blocks 70 and DCT blocks 90.
      <br/>
      The DCT process is self-contained with respect to the block structure, so that the coefficients of a particular DCT block 90 are unaffected by pixels in blocks 70 of the input image other than the particular block 70 corresponding to that block 90 of coefficients.
    </p>
    <p num="30">
      FIG. 4 is a schematic diagram of a video data decompression apparatus according to an embodiment of the present invention.
      <br/>
      In fact, FIG. 4 shows just one application of the present technique, to illustrate the principles involved.
      <br/>
      Other applications of these techniques will be described below.
    </p>
    <p num="31">
      Referring to FIG. 4, compressed video data is supplied first to a decoder 40 (which may be identical to that used in FIG. 2) which operates in a complementary manner to the encoder 30 of FIG. 1.
      <br/>
      As described above, therefore, the decoder 40 performs inverse entropy coding, inverse-length coding and inverse quantisation to generate blocks of DCT coefficients at its output.
    </p>
    <p num="32">However, in contrast to the apparatus of FIG. 2, the blocks of DCT coefficients are supplied to a motion compensator 110 which performs motion compensation on the DCT data, using techniques to be described below.</p>
    <p num="33">Finally, the motion-compensated DCT data is supplied to an inverse DCT coder 50, which may be similar or identical to the inverse DCT coder of FIG. 2.</p>
    <p num="34">
      The aim of the new technique of motion compensation in the DCT (spatial frequency) domain is to use the DCT data output by the decoder 40 and the motion vectors originally generated by the motion estimator 10 in FIG. 1 to generate--for every 8 * 8 macro block of the eventual image--the block of 64 DCT coefficients which in the spatial frequency domain best represents that macro block.
      <br/>
      Since a motion vector is supplied for each macro block of the eventual output image, it is therefore necessary to project a set of DCT coefficients from a position in the DCT domain pointed to by the motion vector into each macro block for the required output image.
    </p>
    <p num="35">
      This process is illustrated schematically in FIG. 5a. At the left-hand side of FIG. 5a an array of blocks 90 of DCT data output by the decoder 40 is illustrated.
      <br/>
      At the right-hand side of FIG. 5a, an array of blocks 90' of DCT data to be supplied to the inverse DCT coder 50 is illustrated.
    </p>
    <p num="36">For each block 90' of the required DCT data, there is an associated motion vector 120. (In fact, strictly speaking, the motion vectors are associated with blocks of pixels, but it has already been noted that there is a one-to-one correspondence between pixel blocks 70 and DCT blocks 90 (90')).</p>
    <p num="37">
      An area 140 illustrates the notional position of the required DCT block 130, as projected back into the available blocks of DCT data 90.
      <br/>
      It will be seen that the notional position 140 in fact overlaps four of the DCT blocks output by the decoder 40.
      <br/>
      A technique will be described below in which the required block 130 can be generated from the four existing overlapped blocks of DCT data.
      <br/>
      In fact, for each particular required block of DCT data, the coefficients of that required block 130 are generated from of the array of DCT blocks 90 output by the decoder 40, which is pointed to by tracing back along the respective motion vector 120 associated with the required block 130.
    </p>
    <p num="38">
      If the motion vectors always had motion components in the horizontal and vertical directions of multiples of 8 pixels, this motion compensation process would be extremely simple since one of the DCT blocks 90 would map directly on to the required block 130.
      <br/>
      However, in practice motion vectors can take any value (or at least more possible values than merely multiples of 8 pixels) and so in general the notional area 140 will overlap at least two, and usually four, DCT blocks 90.
      <br/>
      Further processing is therefore required to map the coefficients on to the required block 130.
    </p>
    <p num="39">FIG. 5b is an enlarged view of the area 140 of the left-hand side of FIG. 5a.</p>
    <p num="40">
      It will be seen that the area 140 in fact overlaps four of the DCT blocks 90.
      <br/>
      In particular, the area 140 can be considered as four sub-areas 141, 142, 143 and 144 overlapping respective individual DCT blocks 90.
    </p>
    <p num="41">A technique is therefore required that can compute the 64 DCT coefficients of the desired block 130 from the DCT coefficients of the four sub-areas 141 . . . 144, without resorting to the complex and processor-intensive solution of transforming the four overlapped blocks 90 back into the pixel domain and then recoding the area 140.</p>
    <p num="42">Given that the DCT process is block-based, with a one-to-one correspondence between blocks of pixels and corresponding blocks of DCT coefficients, the following observations are made:</p>
    <p num="43">
      (i) each of the four overlapped DCT blocks of FIG. 5b corresponds to a respective block of pixels in the pixel domain; and
      <br/>
      (ii) the required DCT block in fact represents a DCT transformation of a composite block of pixels made up of pixels in positions corresponding to the four sub-areas 141 . . . 144.
    </p>
    <p num="44">Showing this in an illustrative matrix form, and using the distributive property of the DCT process,  (Equation image '1' not included in text)</p>
    <p num="45">where an `x` in each matrix on the right hand-side of this equation indicates a pixel value from a pixel sub-area corresponding to the sub-areas 141 . . . 144 (as translated to the required position in the required DCT array), and a `0` simply represents a zero value.</p>
    <p num="46">
      Each of the four matrices on the right hand side of the above equation can actually be generated from the respective full block of pixels by pre- and post-multiplication by suitable pre- and post-matrices.
      <br/>
      In other words, in the pixel domain, an example required matrix R can be generated as follows:  (Equation image '2' not included in text)
      <br/>
      where the dot represents a matrix multiplication process and a `y` represents a pixel value.
    </p>
    <p num="47">
      Applying the DCT process to both sides of this equation, each of the four DCT matrices on the right hand side of the first equation above can be written as a product of three matrices:
      <br/>
      DCT �R�=DCT �(pre-matrix) * (video matrix) * (post-matrix)�
    </p>
    <p num="48">
      As all non-zero elements of the pre-and post-matrices in this embodiment form identity sub-matrices (see below), this in fact can be re-written in a different form:
      <br/>
      DCT �R�=DCT �(pre-matrix)� * DCT �(video matrix)� * DCT �(post-matrix)�
    </p>
    <p num="49">However, DCT �(video matrix)� is simply the block of DCT coefficients overlapped by the required sub-area 141 . . . 144.</p>
    <p num="50">
      This therefore shows that the DCT coefficients for the block R, i.e. DCT �R�. can be obtained by pre- and post-multiplication of each overlapped existing DCT block 90 by suitable frequency domain pre- and post-matrices.
      <br/>
      These frequency domain pre- and post-matrices are obtained by applying the DCT transform to pixel domain pre- and post-matrices which give block translations, as described below.
    </p>
    <p num="51">The derivation of the pixel domain pre- and post-matrices is described in Appendix 1; the frequency-domain matrices are then obtained by applying the DCT process to the pixel domain matrices.</p>
    <p num="52">FIGS. 6a to 6d schematically summarise the effect of the pixel domain translation pre- and post-matrices to translate portions 141 . . . 144 of four blocks of pixels to respective portions 131 . . . 134.</p>
    <p num="53">
      It will be appreciated that the known rules of matrix multiplication (e.g. associativity for square matrices) can be applied to vary the order of the multiplication steps described here.
      <br/>
      The particular described arrangement of pre- and post-matrices is by way of example only.
    </p>
    <p num="54">FIG. 7 is a schematic diagram of an apparatus for performing the required matrix computation within the motion compensator 110.</p>
    <p num="55">
      In FIG. 7, DCT blocks 90 from the decoder 40 are stored in a DCT frame store 160.
      <br/>
      The motion vector for the current output block 130 is used to compute a DCT block number, representing the block in which the upper left-hand corner of the area 140 is disposed (in FIG. 5b, this would identify the block 91), together with an x offset and a y offset in pixels between 0 and 7 (blocksize-1) pixels.
    </p>
    <p num="56">The block number, x offset and y offset are supplied to the DCT frame store, and the x offset and y offset values are supplied to a matrix generator 170.</p>
    <p num="57">
      In response to the block number, blocks of coefficients from the DCT frame store are supplied to four matrix multipliers 180.
      <br/>
      The four blocks 90 which are supplied to respective matrix multipliers 180 are: the block in which the upper left-hand corner of the area 140 is disposed, the block immediately to the right of that block, the block immediately underneath that block, and the block immediately diagonally underneath and to the right of that block.
      <br/>
      In other words, the four blocks of FIG. 5b which overlap the required area 140 are supplied to respective matrix multipliers 180.
    </p>
    <p num="58">
      The matrix generator 170 generates frequency-domain pre- and post-matrices which are supplied to respective matrix multipliers 180.
      <br/>
      These matrices are generated in accordance with the rules given in Appendix 1, followed by application of the DCT transform to the pixel domain matrices produced by Appendix 1.
      <br/>
      Alternatively, the matrix generator 170 could simply access a look-up table in which matrix coefficients (previously generated by the above techniques) are stored for each permutation of the x and y offsets.
    </p>
    <p num="59">
      Each matrix multiplier performs pre and post multiplication by the respective matrices and supplies a matrix output to a matrix adder of 190.
      <br/>
      This performs matrix addition of the four outputs of the matrix multipliers 180 to generate the required output block 130.
    </p>
    <p num="60">
      The question may arise that if the area 140 overlaps only one DCT block 90 held in the DCT framestore 160, there is no need for four matrix multiplications and a subsequent addition.
      <br/>
      This is true, but since the remaining three sets of pre- and post-matrices (for the adjacent but non-overlapped blocks) would have all zero coefficients using the rules of appendix 1, the matrix adder 190 would simply receive the required block 130 and three sets of zero matrices.
      <br/>
      It is therefore simpler not to distinguish the special case of a complete overlap of a single block 90, but to allow the matrix process to take care of this situation.
    </p>
    <p num="61">
      Although the embodiments described above have interchanged the order of motion compensation and DCT decoding but still produce output video from the DCT decoder, the techniques described above can be used for, application such as changing the GOP format of, for example, an MPEG-encoded video stream.
      <br/>
      For example, if it is desired to convert from a 12-frame GOP to a 2-frame GOP, some of the B or P frames of the 12-frame GOP must be converted to I frames, for some of the 2-frame GOPS.
      <br/>
      Since I frames do not make use of motion compensation with respect to other frames (they are intra-frame encoded), the motion compensation of the data must be "undone" .
      <br/>
      Previously, this would have been performed by transforming back to this basal domain and re-encoding; however, using the techniques presented here, the process can be performed in the DCT domain.
    </p>
    <p num="62">
      Another use of the technique may be found in digital video effects as applied to DCT encoded data.
      <br/>
      If, for example, a picture is being cropped or expanded so that the new picture boundary does not line up with a DCT block boundary, then previously the DCT data would have had to have been decoded so that this manipulation is performed in the spatial (pixel) domain.
      <br/>
      Now, using the techniques described above, new DCT blocks at the new boundary of the image can be generated in the DCT domain, so there is no need for the decoding-recoding process.
    </p>
    <p num="63">Although illustrative embodiments of the invention have been described in detail herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various changes and modifications can be effected therein by one skilled in the art without departing from the scope and spirit of the invention as defined by the appended claims.</p>
    <p num="64">APPENDIX 1</p>
    <p num="65">
      This appendix describes the generation of pixel domain translation matrices.
      <br/>
      The corresponding frequency domain pre- and post-matrices are generated by applying a DCT transformation to the pixel domain matrices.
    </p>
    <p num="66">
      Considering first some definitions and statements which will assist in explanation of the rules, an identity matrix is a matrix in which all elements are zeroes except those elements on the leading diagonal.
      <br/>
      For example, a 2 * 2 identity matrix is:  (Equation image '3' not included in text)
    </p>
    <p num="67">and a 3 * 3 identity matrix is:  (Equation image '4' not included in text)</p>
    <p num="68">
      A block of K * K pixesl is treated as a K * K matrix of elements.
      <br/>
      It is first pre-multiplied by a pre-matrix and is then post-multiplied by a post-matrix.
      <br/>
      This process is illustrated below:  (Equation image '5' not included in text)
    </p>
    <p num="69">A pre- or post-matrix in this context is a K * K square matrix which contains one identity sub-matrix of size 1 * 1, where 1 is less than K. All other elements of the pre- or post matrix are zeroes.</p>
    <p num="70">The rules for generating pre- and post-matrices are as follows:</p>
    <p num="71">
      1.
      <br/>
      Generate the non-zero elements of the post-matrix as an identity sub-matrix of size m * m, where m is equal to the number of columns in the required notional block that contain non-zero elements.
    </p>
    <p num="72">2. Generate the non-zero elements of the pre-matrix as an identity sub-matrix of size n * n, where n is equal to the number of rows in the required notional block that contain non-zero elements.</p>
    <p num="73">3. For the post-matrix, move identity sub-matrix down by x rows if it is required to move the columns of the notional block leftwards by x columns.</p>
    <p num="74">4. For the post-matrix, move identity sub-matrix right by x columns if it is required to move the columns of the notional block rightwards by x columns.</p>
    <p num="75">5. For the pre-matrix, move identity sub-matrix down by x rows if it is required to move the rows of the notional block down by x rows.</p>
    <p num="76">6. For the pre-matrix, move identity sub-matrix right by x columns if it is required to move the rows of the notional block up by x rows.</p>
    <p num="77">EXAMPLE 1</p>
    <p num="78">
      In this and the following example, 4 * 4 matrices (i.e. K=4) will be used for ease of explanation, even though in many DCT-based systems larger block sizes are commonly used.
      <br/>
      The principles remain the same, however, whatever the value of K.
    </p>
    <p num="79">The initial pixel block is therefore:  (Equation image '6' not included in text)</p>
    <p num="80">and the final (desired) matrix is:  (Equation image '7' not included in text)</p>
    <p num="81">
      The pre- and post matrices are determined as follows:
      <br/>
      a) For the pre-matrix, the required identity sub-matrix is a 3 * 3 sub-matrix.
      <br/>
      It then has to move down by 1 row in order to move the rows of the initial matrix down by 1 row.
      <br/>
      The pre-matrix is therefore:  (Equation image '8' not included in text)
      <br/>
      b) For the post-matrix, the required identity sub-matrix is a 2 * 2 sub-matrix.
      <br/>
      It then has to move left by 2 columns in order to move the rows of the initial matrix down by 2 rows.
      <br/>
      The post-matrix is therefore:  (Equation image '9' not included in text)
    </p>
    <p num="82">EXAMPLE 2</p>
    <p num="83">Starting with the same initial matrix,  (Equation image '10' not included in text)</p>
    <p num="84">and aiming for the final matrix  (Equation image '11' not included in text)</p>
    <p num="85">the required pre-matrix is  (Equation image '12' not included in text)</p>
    <p num="86">and the required post-matrix is  (Equation image '13' not included in text)</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>I claim:</claim-text>
      <claim-text>1. A method of processing a number of input arrays of image spatial frequency coefficients being transformable to image pixel values by a predetermined spatial frequency transformation, said method comprising the steps of:</claim-text>
      <claim-text>generating an output array of image spatial frequency coefficients from said number of input arrays; detecting which of said number of input arrays contain portions overlapped by said generated output array; generating at least one pixel domain translation matrix corresponding to each of said number of input arrays which contain portions overlapped by said generated output array; matrix-multiplying each pixel domain translation matrix the corresponding input array subjected to the inverse of said predetermined spatial frequency transformation, so that said means for matrix-multiplying provides a translation of the respective overlapped portion to an overlapping position in said output array; matrix-multiplying each of said number of input arrays by the respective one of the pixel domain translation matrices subjected to the inverse of said predetermined spatial frequency transformation;</claim-text>
      <claim-text>and matrix-adding the matrix-multiplied image spatial frequency coefficients generated from each of said number of input arrays; means for outputting the results of said matrix-adding step.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method according to claim 1, wherein said predetermined spatial frequency transformation is the inverse discrete cosine transform.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method according to claim 1, wherein the step of detecting portions of said input arrays overlapped by said output array is in response to a motion vector associated with said output array.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A method according to claim 1, wherein the pixel domain matrices comprise a pre-multiplying matrix and a post-multiplying matrix.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. Video signal processing apparatus for processing a number of input arrays of image spatial frequency coefficients being transformable to image pixel values by a predetermined spatial frequency transformation, said apparatus comprising: means for generating an output array of image spatial frequency coefficients from said number of input arrays; means for detecting which of said number of input arrays contain portions overlapped by said generated output array; means for generating at least one pixel domain translation matrix corresponding to each of said number of input arrays which contain portions overlapped by said generated output array; means for matrix-multiplying each pixel domain translation matrix the corresponding input array subjected to the inverse of said predetermined spatial frequency transformation, so that said means for matrix-multiplying provides a translation of the respective overlapped portion to an overlapping position in said output array; means for matrix-multiplying each of said number of input arrays by the respective one of the pixel domain translation matrices subjected to the inverse of said predetermined spatial frequency transformation;</claim-text>
      <claim-text>and means for matrix-adding the matrix-multiplied image spatial frequency coefficients generated from each of said number of input arrays; means for outputting the results of said matrix-adding means.</claim-text>
    </claim>
  </claims>
</questel-patent-document>