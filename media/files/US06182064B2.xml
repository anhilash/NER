<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182064B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182064</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182064</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="21887504" extended-family-id="42108832">
      <document-id>
        <country>US</country>
        <doc-number>09036244</doc-number>
        <kind>A</kind>
        <date>19980306</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09036244</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165397</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>3624498</doc-number>
        <kind>A</kind>
        <date>19980306</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09036244</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  29/06        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>707741000</text>
        <class>707</class>
        <subclass>741000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>707803000</text>
        <class>707</class>
        <subclass>803000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707955000</text>
        <class>707</class>
        <subclass>955000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>707999003</text>
        <class>707</class>
        <subclass>999003</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>707999103</text>
        <class>707</class>
        <subclass>999103</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>707999104</text>
        <class>707</class>
        <subclass>999104</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>707E17032</text>
        <class>707</class>
        <subclass>E17032</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30321</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30321</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/955</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>955</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99933</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99933</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99944</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99944</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99945</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99945</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>20</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>7</number-of-figures>
      <image-key data-format="questel">US6182064</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and system for identifying an object located among a number of multiple interconnected computing systems</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>MARTIN BRUCE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5815710</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5815710</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>SHORTER DAVID UEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5946680</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5946680</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>SHORTER DAVID UEL</text>
          <document-id>
            <country>US</country>
            <doc-number>5946681</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5946681</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>SHORTER DAVID UEL</text>
          <document-id>
            <country>US</country>
            <doc-number>6070169</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6070169</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>SHIMAOKA KOUICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4893232</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4893232</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>KHOYI DANA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5226161</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5226161</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>KHOYI DANA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5303379</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5303379</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>SAN SOUCIE MARC, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5369778</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5369778</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>KHOYI DANA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5421012</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5421012</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>KHOYI DANA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5421015</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5421015</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>HENNINGER DEREK P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5499371</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5499371</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>KROENKE DAVID M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5548749</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5548749</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>ROGERS LAWRENCE D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5557747</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5557747</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>JENSEN RICHARD H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5615362</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5615362</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>KHOYI DANA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5634124</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5634124</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0721160</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-721160</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>IBM Technical Disclosure Bulletin, vol. 36, No. 10, Oct. 1993, Technique to Convert a LAN Netview Start SQL Database Into ASCII Database Files.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>IBM Technical Disclosure Bulletin, vol. 37, No. 03, Mar. 1994, Multimedia Mixed Object Envelopes Supporting a Graduated Fee Scheme via Encryption.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>IBM Technical Disclosure Bulletin, vol. 39, No. 05, May 1996, Backup Objects.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>IBM Technical Disclosure Bulletin, vol. 40, No. 02, Feb. 1997, OPtimizing Use of Local Coordinators in Distributed Applications.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>Abstract-Specifying object-oriented federated databases from existing databases. Lim EP; Lim ML; Srivastava J.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>Abstract-Construction versus composition: a question of reliability. Hiaduk HP.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>Abstract-The BeBOP system. Lee J; Davison A.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>Abstract-Optimization of distributed tree queries. Yu CT; Ozsoyoglu ZM; Lam K.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>Abstract-Effects of updates on optimality in tries. Comer D.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="10">
          <text>Abstract-Subroutine invocation method for abject oriented system . . . Chow C.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="11">
          <text>Abstract-Automatic object-oriented data information mapping method for database . . . Henninger DP; Jensen RH; Keene CT; Jansen RH.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="12">
          <text>Abstract-Coupling application programme to structured database . . . Henninger DP; Jensen RH.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Shorter, David Uel</name>
            <address>
              <address-1>Lewisville, TX, US</address-1>
              <city>Lewisville</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Lilly, Susan Carol</name>
            <address>
              <address-1>Potomac, MD, US</address-1>
              <city>Potomac</city>
              <state>MD</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Scott, Robert Bruce</name>
            <address>
              <address-1>Hollis, NH, US</address-1>
              <city>Hollis</city>
              <state>NH</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Tomlin, Richard A.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <orgname>Felsman, Bradley, Vaden, Gunter &amp; Dillon,LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Kulik, Paul V.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Provided are a method and system for locating data stored within an environment having multiple interconnected computing systems.
      <br/>
      The method and system achieve their objects via the following actions.
      <br/>
      A superset of one or more elements comprised of data location identifiers and associated data attributes is created.
      <br/>
      A list of data attributes is received.
      <br/>
      In response to said received list of data attributes, any data location identifiers, within said created superset, which have the data attributes in the list, are transmitted.
      <br/>
      In one embodiment, the superset elements consist of object identifiers paired with the computing system wherein the objects associated with the object identifiers are located, the list of data attributes contains a list of object attributes, and the data location identifiers transmitted consist of an object identifier paired with a computing location.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS-REFERENCE TO RELATED PATENT APPLICATION</heading>
    <p num="1">
      The present invention is related to the subject matter of the U.S. Pat. Application entitled "Method of Determining the Unique ID of an Object Through Analysis of Attributes Related to the Object," filed Nov. 28, 1997, application Ser.
      <br/>
      No. 08/890,335, assigned to the assignee herein named.
      <br/>
      The contents of the abovementioned patent application is incorporated by reference herein.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      1.
      <br/>
      Technical Field
    </p>
    <p num="3">
      The present invention relates, in general, to computing systems.
      <br/>
      In particular, the present invention relates to computing systems having objects distributed across multiple interconnected computing systems.
    </p>
    <p num="4">2. Description of the Related Art</p>
    <p num="5">
      A computing system is a system which, among other things, stores and retrieves information.
      <br/>
      One type of information stored and retrieved by a computing system is typically referred to as an "object." An "object," when utilized in the context of a computing system, refers to a variable comprising both routines and data that is treated as a discrete entity.
    </p>
    <p num="6">
      When an object is stored in a computing system, it is given an identification (ID) which is unique within a scope.
      <br/>
      The object ID is utilized internal to a computing system as a "key" to manifest the object when desired.
      <br/>
      The object ID may or may not be known outside of the computing system.
    </p>
    <p num="7">
      It is sometimes desirable to construct a set of attributes about an object such that when all, or a subset of the attributes, are supplied by a requester, the ID of the object can be determined and returned to the requestor.
      <br/>
      These attributes are created and stored, generally at the time that the original object is added to the computing system, in a data structure which will be referred to herein as an Object Attributes Record (OAR).
      <br/>
      The object ID associated with a particular object is also stored in the OAR associated with that particular object.
      <br/>
      The set of OARs in an individual computing system is often referred to as an "object index."
    </p>
    <p num="8">
      Utilizing an "object index," it is possible to determine an object's ID via the utilization of a computational entity (or computer logic), which will be referred to herein as an Object Resolution Service (ORS).
      <br/>
      An ORS can be conceived of as an entity which receives a list of attributes, and returns an object ID associated with an object having some or all of the attributes in the received list, if such an object is known within the computing system wherein the ORS is resident.
    </p>
    <p num="9">
      Methods (such as ORSs) exist for utilizing attributes of an object to determine an object ID within the scope of a single computing system.
      <br/>
      However, when multiple interconnected computing systems are involved, and conditions are such that an object may reside on any one of the multiple interconnected computing systems, obtaining an object ID for a particular object on the basis of a list of attributes is a complex and difficult problem.
    </p>
    <p num="10">
      Presently, no serious attempts have been made to solve the foregoing noted problem.
      <br/>
      Most of the efforts to date have focused on the problem of identifying object IDs within the confines of one computing system.
      <br/>
      It is thus apparent that a need exists for a method and system which provide the determination of an object's ID on the basis of that object's attributes when such an object can reside on at least one computing system among multiple interconnected computing systems.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="11">It is therefore one object of the present invention to provide a method and system for use with computing systems.</p>
    <p num="12">It is yet another object of the present invention to provide a method and system for use with computing systems which provide the determination of an object's ID on the basis of that object's attributes when such object can reside on at least one computing system among multiple interconnected computing systems.</p>
    <p num="13">
      The method and system achieve their objects via the following actions.
      <br/>
      A superset of one or more elements comprised of data location identifiers and associated data attributes is created.
      <br/>
      A list of data attributes is received.
      <br/>
      In response to said received list of data attributes, any data location identifiers, within said created superset, which have the data attributes in the list, are transmitted.
      <br/>
      In one embodiment, the superset elements consist of object identifiers paired with the computing system wherein the objects associated with the object identifiers are located, the list of data attributes contains a list of object attributes, and the data location identifiers transmitted consist of an object identifier paired with a computing location.
    </p>
    <p num="14">The above as well as additional objects, features, and advantages of the present invention will become apparent in the following detailed written description.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="15">
      The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objects, and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:
      <br/>
      FIG. 1 shows an embodiment of the present invention implemented within an example environment with two computing systems and one superset index;
      <br/>
      FIG. 2 depicts a method of one embodiment of the present invention that will be demonstrated in the context of the example environment set forth in FIG. 1;
      <br/>
      FIG. 3 illustrates an environment of multiple interconnected computing systems wherein an embodiment of the present invention will be illustrated;
      <br/>
      FIG. 4 shows an example of an embodiment of the present invention that utilizes a superset of supersets;
      <br/>
      FIG. 5 depicts an illustrative type of network environment wherein the present invention can be implemented;
      <br/>
      FIG. 6 depicts an illustrative type of computing system which can be utilized in a network; and
      <br/>
      FIG. 7 depicts an alternative illustrative type of computing system which can be utilized in a network.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="16">
      Indexes may exist in a single computing system which are utilized to resolve attributes of an object to obtain a unique ID of the object.
      <br/>
      But for the present invention, when a number of interconnected computing systems exist, each with its own set of object indexes, it becomes a complex problem to resolve the ID of an object which could exist on any one of the computing systems when the request for the object ID is from a different computing system.
      <br/>
      The present invention provides a method for creating supersets of object IDs and linking them together in a network of supersets.
      <br/>
      The supersets are then utilized to determine an object ID related to an object existing within a number of computing systems.
    </p>
    <p num="17">
      One embodiment of the present invention provides a method and system for identifying an object's ID on the basis of that object's attributes when such an object can reside on at least one computing system among multiple interconnected computing systems.
      <br/>
      The embodiment provides identification of such an object ID by providing intelligent entities, referred to herein as Object Resolution Services (ORSs) capable of creating supersets of Object Attribute Records (OARs), associated with their respective object IDs, and further capable of thereafter linking such created supersets together in a network of supersets.
    </p>
    <p num="18">
      Refer now to FIG. 1.
      <br/>
      FIG. 1 shows an embodiment of the present invention implemented within an example environment with peer computing systems and a third computing system where one superset index will reside.
    </p>
    <p num="19">
      The example environment illustrated in FIG. 1 consists of three computing systems, Computing System A 100, Computing System B 102, and Computing System C 104.
      <br/>
      Depicted is that each computing system contains the following ORS entities: Object Resolution Service A 110, Object Resolution Service B 112, and Object Resolution Service C 114 (such entities being capable of being implemented in software, hardware, or some combination thereof).
      <br/>
      Illustrated is that each computing system contains the following object indexes: Object Index A 120, Object Index B 122, and Object Index C 124 (such indexes being capable of being implemented in software, hardware, or some combination thereof).
      <br/>
      Shown is that Object Index A 120 contains OARs consisting of an Object 1 OAR 130 and an Object 2 OAR 140.
      <br/>
      Object Index B 122 contains OARs consisting of an Object 3 OAR 132 and an Object 4 OAR 142.
      <br/>
      Object Index C 124 contains OARs consisting of an Object 1 OAR 134, Object 2 OAR 144, Object 3 OAR 154, and Object 4 OAR 164.
      <br/>
      In other words, Object Index C 124 contains a superset of OAR's in Object Index A 120 and Object Index B 122.
    </p>
    <p num="20">
      In addition to multiple attributes about an object, shown in FIG. 1 is that each OAR contains the object ID of its associated object.
      <br/>
      The objects (that is, the actual information associated with individual object IDs) themselves are stored in databases.
      <br/>
      This relationship is depicted via Database A 106 containing object composed of object 1 associated with object 1 ID 116 and object composed of object 2 associated with object 2 ID 126.
      <br/>
      Also shown is Database B 108 containing object composed of object 3 associated with object 3 ID 118 and object composed of object 4 associated with object 4 ID 128.
      <br/>
      It is thus apparent from the databases shown that the object IDs can be used to "key" to the objects themselves.
      <br/>
      For sake of illustration, the object IDs shown have been chosen such that they are unique across Computing System A 100 and Computing System B 102.
      <br/>
      The three ORSs, ORS A 110 , ORS B 112, and ORS C 114, can communicate through a communications connections 190 and 192.
    </p>
    <p num="21">In this environment, ORS A 110 and ORS B 112 are independent and have no connection between them, or the need, within the context of determining an object's ID, for any knowledge of the other's existence due to the presence of an embodiment of the present invention.</p>
    <p num="22">
      Each computing system A 100, B 102, and C 102, contains Administration File A 150, Administration File B 152, and Administration File C 174, respectively.
      <br/>
      A systems administrator (not shown) provides system operation information which is kept in the administration files.
      <br/>
      For the example operation depicted in FIG. 1, the pertinent information specified in Administration Files A 150 and B 152 define the computing system location of ORS C 114 (i.e., Data-Processing System C 104).
      <br/>
      The pertinent information specified in the Administration File C 174 defines the computing system locations of ORSs A 110 and B 112 (i.e., Data-Processing Systems A 100, and B 102, respectively).
    </p>
    <p num="23">Although the system depicted in FIG. 1 has shown the superset ORS and superset index located on a seperate computing system, those skilled in the art will recognize that a superset ORS and superset index can be co-resident on the same computing system, somewhat analogous to the way the same computing system can function as both a client and a server.</p>
    <p num="24">
      Refer now to FIG. 2.
      <br/>
      FIG. 2 depicts a method of one embodiment of the present invention that will be demonstrated in the context of the example environment set forth in FIG. 1.
      <br/>
      With respect to the method depicted in FIG. 2, it is to be assumed that Computing System A 100 and Computing System B 102 previously existed in a peer-to-peer relationship, such that each computing system was managing its own set of OARs.
      <br/>
      It is also to be assumed that a desire has arisen to change Computing System A 100 and Computing System B 102 from a peer-to-peer relationship to a system containing a superset in accordance with one embodiment of the present invention.
      <br/>
      It should be noted that in a peer-to-peer environment having only two ORSs, the number of communication connections required to resolve an object ID is limited to one (e.g., the communication connection between the peer ORSs).
      <br/>
      This can be seen by reference to FIG. 1, wherein it can be seen that a request to determine an object's ID would, hypothetically, need only be handled by communication (not shown) between ORS A 110 and ORS B 112.
      <br/>
      When a peer-to-peer environment consists of computing systems whose number exceeds two, the number of communications connections required is equal to the number of ORSs in the configuration.
      <br/>
      Therefore, when the number of computing systems in a configuration exceeds two, it becomes more efficient to configure the environment with superset(s) in accord with an embodiment of the present invention.
    </p>
    <p num="25">
      Under the assumption that ORS A 110 and ORS B 112 are initially in a peer-to-peer relationship whereby both ORSs are employed to determine an object's ID, it is desirable that the creation of a superset not disrupt their operation; that is, the superset is created transparently to ORS A 110 and B 112.
      <br/>
      Creation of a superset of OARs is accomplished through the following method illustrated in FIG. 2.
    </p>
    <p num="26">
      Refer now to FIG. 2.
      <br/>
      Method step 200 shows the start of the process.
      <br/>
      Method step 202 depicts that a systems administrator defines ORS A 110 and B 112 as ORSs for which ORS C 114 is to be a superset, and stores such definition in Administration File C 174.
      <br/>
      Method step 204 illustrates that when ORS C 114 is initialized, it will interrogate Administration File C 174 to determine if it is to be a superset for other ORSs. (In the example environment shown in FIG. 1, it will determine that it is to be a superset for ORS A 110 and ORS B 112.) In the event that ORS C 114 is not to be a superset, the process proceeds to method step 205 and stops.
      <br/>
      In the event that ORS C 114 is to be a superset, method step 206 depicts that ORS C 114 will then determine if it has previously asked each ORS to consider it, ORS C 114, a superset ORS.
    </p>
    <p num="27">
      If ORS C 114 has previously asked both ORS A 110 and ORS B 112 to consider it a superset ORS, method step 207 shows that ORS C 114 will continue with its initialization without further requests to ORS A 110 and ORS B 112.
      <br/>
      Thereafter, the process proceeds to method step 205 and stops.
      <br/>
      In the event that either ORS A 110 or ORS B 112 has not been asked to consider ORS C 114 a superset, method step 208 illustrates that ORS C 114 will send a request, appropriate to the situation, to either or both ORS A 110 and ORS B 112 designating itself, ORS C 114, as a superset ORS.
    </p>
    <p num="28">
      Method step 210 shows that upon receipt of the foregoing noted request from superset ORS C 114, ORS A 110 and/or ORS B 112 each will forward a full copy of their OARs to ORS C 114.
      <br/>
      Method step 212 depicts that, subsequently, with knowledge that ORS C 114 is a superset, any new ORSs or changes to existing OARs at ORS A 110 and ORS B 112, will be forwarded to ORS C 114.
      <br/>
      Method step 214 illustrates the end of the process.
    </p>
    <p num="29">
      It can be seen that through the enactment of the abovedescribed method set forth in FIG. 2, ORS C 114 will contain a copy of all of the OARs which exist on both ORS A 110 and ORS B 112.
      <br/>
      Further, the OAR information at ORS C 114 will be of the same currency as OAR information in ORS A 110 and ORS B 112.
    </p>
    <p num="30">
      With respect to the process illustrated in FIG. 2, it should be noted that in one embodiment the initial copying of OARs from ORS A 110 and ORS B 112 to ORS C 114 is done asynchronously as a subsequent OAR add/update(s).
      <br/>
      ORS A 110 and ORS B 112 place OAR copies and add/update(s) on queues located on Computing Systems A 100 and B 102, respectively, whose targets are queues in Computing System C 104 to which ORS C 114 is connected.
      <br/>
      If Computing System C 104 is not operational, or if communication link failure occurs, the copies and add/update(s) are not lost.
      <br/>
      When correction to the malfunctioning environment occurs, the copies and add/updates flow to ORS C 114.
    </p>
    <p num="31">
      When trying to determine an object's ID, it is part of one embodiment of the present invention that superset ORSs exist transparently within a network configuration.
      <br/>
      That is, when a ORS determines that it must forward an object ID resolution request to another ORS, the requesting ORS need not know that it is communicating with a superset ORS; that is, the logic is the same as if it were communicating with a peer ORS.
      <br/>
      Further, it is part of one embodiment of the present invention that, within the context of object ID resolution, a superset ORS need not know that it is a superset ORS.
      <br/>
      The determination of whether another ORS is a peer or is a superset is made by the systems administrator and placed in an ORS's Administration File.
    </p>
    <p num="32">
      Given the above, the method to determine an object's ID when one or more ORS supersets exist within a plurality of computing systems can be such as that defined in our previous patent entitled "Method of Determining the Unique ID of an Object Through Analysis of Attributes Related to the Object," filed Nov. 28, 1997, application Ser.
      <br/>
      No. 08/890,335, which is hereby incorporated by reference in its entirety.
    </p>
    <p num="33">
      FIG. 1 demonstrated an example environment wherein a single superset was created.
      <br/>
      For a variety of reasons, within a plurality of computing systems, it may be required to create multiple superset ORSs, with each a superset of some subset of other ORSs.
      <br/>
      An example of this configuration is shown in FIG. 3.
    </p>
    <p num="34">
      Refer now to FIG. 3.
      <br/>
      FIG. 3 illustrates an environment of multiple interconnected computing systems wherein an embodiment of the present invention will be illustrated.
      <br/>
      Computing Systems A 300, B 302, D 304, E 306, G 308, and H 309 each contain a corresponding ORS with each ORS managing OARs within each ORS's own computing system.
      <br/>
      The ORSs, A 310, B 312, D 314, E 316, G 318, and H 319 have no knowledge of each other, but each has knowledge of one other ORS which is a superset ORS.
      <br/>
      ORS A 310 and B 312 are connected to superset ORS C 313, ORS D 314 and ORS E 316 are connected to superset ORS F 315, ORS G 318 and ORS H 319 are connected to superset ORS J 317.
      <br/>
      ORS C 313 is a superset of ORS A 310 and B 312, ORS F 315 is a superset of ORS D 314 and ORS E 316, ORS J 317 is a superset of ORS G 318 and ORS H 319.
    </p>
    <p num="35">
      Assume the administration file for ORS G 318 contains information directing it to forward any object ID resolution request to ORS J 317.
      <br/>
      The administration file at ORS J 317 contains information directing it to forward any object ID resolution request to ORS F 315 and C 313.
      <br/>
      Assume that application requests of an object's ID are resolved at ORS G 318.
      <br/>
      ORS G 318 will interrogate its set of OARs and then determine from its administration file that the request must be forwarded to ORS J 317.
      <br/>
      ORS J 317 will interrogate its set of OARs and then determine from its administration file that the request must also be forwarded to ORS F 315 and C 313.
      <br/>
      The combined results from ORS F 315, C 313, J 317, and G 318 will be returned to the requesting application.
    </p>
    <p num="36">
      Superset ORSs may also be configured such that they are supersets of other supersets.
      <br/>
      This is illustrated in FIG. 4.
    </p>
    <p num="37">
      Refer now to FIG. 4.
      <br/>
      FIG. 4 shows an example of an embodiment of the present invention that utilizes a superset of supersets.
      <br/>
      Computing Systems A 400, B 402, D 404, E 406, G 408, and H 409 each contain a corresponding ORS with each ORS managing OARs within each ORS's own computing system.
      <br/>
      It is to be assumed that at some time prior to the current state of the system shown in FIG. 4, Superset ORS K 450 has sent a request to superset ORS C 413, F 417, and J 419 that it, Superset ORS K 450, be considered a superset ORS.
      <br/>
      Shown in FIG. 4 is that ORS C 413, F 417, and J 419 respond to this request with communication of full copies of their respective OARs via response communications 423, 427, and 429.
      <br/>
      The logic for creating and updating Superset ORS K 450 is the same as described earlier for creating superset ORS C 114.
      <br/>
      The Administration Files (not shown) for the ORSs shown in FIG. 4 specify Superset ORS K 450 as an ORS to which any object ID resolution request is to be forwarded.
    </p>
    <p num="38">
      The foregoing discussion has referred generally to interconnected computing systems, or networks of computing system.
      <br/>
      FIG. 5 depicts an illustrative type of network environment wherein the present invention can be implemented.
      <br/>
      FIGS. 6 and 7 will depict an illustrative type of computing system which can be utilized in a network.
      <br/>
      Those skilled in the art will realize that the network and computing systems shown are merely illustrative, and that other types of networks and computing systems can form a suitable environment wherein the present invention can be practiced.
    </p>
    <p num="39">
      Refer now to FIG. 5.
      <br/>
      FIG. 5 depicts a generalized client-server computing network 2.
      <br/>
      Network 2 has several servers 4, 6, 8 and 10 which are interconnected, either directly to each other or indirectly through one of the other servers.
      <br/>
      Each server is essentially a stand-alone computer system (having one or more processors, memory devices, and communications devices), but has been adapted (programmed) for one primary purpose, that of providing information to individual users at workstation clients 12.
      <br/>
      A client is a member of a class or group of computers or computer systems that uses the services of another class or group to which it is not related.
      <br/>
      Clients 12 can also be stand-alone computer systems (like personal computers, or PCs), or "dumber" systems adapted for limited use with network 2 (like network computers, or NCs).
      <br/>
      As used herein, "PC" generally refers to any multi-purpose computer adapted for use by a single individual, regardless of the manufacturer, hardware platform, operating system, etc.
      <br/>
      A single, physical computer can act as both a server and a client, although this implementation occurs infrequently.
    </p>
    <p num="40">
      The information provided by a server can be in the form of programs which run locally on a given client 12, or in the form of data such as files used by other programs.
      <br/>
      Users can also communicate with each other in real-time as well as by delayed file delivery, i.e., users connected to the same server can all communicate with each other without the need for the network 2, and users at different servers, such as servers 4 and 6, can communicate with each other via network 2.
      <br/>
      The network can be local in nature, or can be further connected to other systems (not shown) as indicated with servers 8 and 10.
    </p>
    <p num="41">
      Refer now to FIG. 6.
      <br/>
      FIG. 6 illustrates a data processing system 20 in which the present invention can be practiced.
      <br/>
      The data processing system 20 includes processor 22, keyboard 82, and display 96.
      <br/>
      Keyboard 82 is coupled to processor 22 by a cable 28.
      <br/>
      Display 96 includes display screen 30, which may be implemented using a cathode ray tube (CRT), a liquid crystal display (LCD), an electrode luminescent panel or the like.
      <br/>
      The data processing system also includes pointing device 84, which may be implemented using a track ball, a joy stick, touch sensitive tablet or screen, track path, or as illustrated a mouse.
      <br/>
      The pointing device 84 may be used to move a pointer or cursor on display screen 30.
      <br/>
      Processor 22 may also be coupled to one or more peripheral devices such a modem 92, CD-ROM 78, network adapter 90, and floppy disk drive 40, each of which may be internal or external to the enclosure or processor 22.
      <br/>
      An output device such as a printer 99 may also be coupled with processor 22.
    </p>
    <p num="42">It should be noted and recognized by those persons of ordinary skill in the art that display 96, keyboard 82, and pointing device 84 may each be implemented using any one of several known off-the-shelf components.</p>
    <p num="43">
      Refer now to FIG. 7.
      <br/>
      FIG. 7 shows a high level block diagram illustrating selected components that can be included in the data processing system 20 of FIG. 6 according to the teachings of the present invention.
      <br/>
      The data processing system 20 is controlled primarily by computer readable instructions, which can be in the form of software, wherever, or by whatever means such software is stored or accessed.
      <br/>
      Such software may be executed within the Central Processing Unit (CPU) 50 to cause data processing system 20 to do work.
      <br/>
      Such software is one way in which the present invention can be implemented.
    </p>
    <p num="44">
      Memory devices coupled to system bus 5 include Random Access Memory (RAM) 56, Read Only Memory (ROM) 58, and nonvolatile memory 60.
      <br/>
      Such memories include circuitry that allows information to be stored and retrieved.
      <br/>
      ROMs contain stored data that cannot be modified.
      <br/>
      Data stored in RAM can be changed by CPU 50 or other hardware devices.
      <br/>
      Nonvolatile memory is memory that does not lose data when power is removed from it.
      <br/>
      Nonvolatile memories include ROM, EPROM, flash memory, or battery-pack CMOS RAM.
      <br/>
      As shown in FIG. 7, such battery-pack CMOS RAM may be used to store configuration information.
    </p>
    <p num="45">
      An expansion card or board is a circuit board that includes chips and other electronic components connected that adds functions or resources to the computer.
      <br/>
      Typically, expansion cards add memory, disk-drive controllers 66, video support, parallel and serial ports, and internal modems.
      <br/>
      For lap top, palm top, and other portable computers, expansion cards usually take the form of PC cards, which are credit card-sized devices designed to plug into a slot in the side or back of a computer.
      <br/>
      An example of such a slot is PCMCIA slot (Personal Computer Memory Card International Association) which defines type I, II and III card slots.
      <br/>
      Thus, empty slots 68 may be used to receive various types of expansion cards or PCMCIA cards.
    </p>
    <p num="46">
      Disk controller 66 and diskette controller 70 both include special purpose integrated circuits and associated circuitry that direct and control reading from and writing to hard disk drive 72, and a floppy disk or diskette 74, respectively.
      <br/>
      Such disk controllers handle tasks such as positioning read/write head, mediating between the drive and the CPU 50, and controlling the transfer of information to and from memory.
      <br/>
      A single disk controller may be able to control more than one disk drive.
    </p>
    <p num="47">
      CD-ROM controller 76 may be included in data processing 20 for reading data from CD-ROM 78 (compact disk read only memory).
      <br/>
      Such CD-ROMs use laser optics rather than magnetic means for reading data.
    </p>
    <p num="48">
      Keyboard mouse controller 80 is provided in data processing system 20 for interfacing with keyboard 82 and pointing device 84.
      <br/>
      Such pointing devices are typically used to control an on-screen element, such as a graphical pointer or cursor, which may take the form of an arrow having a hot spot that specifies the location of the pointer when the user presses a mouse button.
      <br/>
      Other pointing devices include a graphics tablet, stylus, light pin, joystick, puck, track ball, track pad, and the pointing device sold under the trademark "Track Point" by International Business Machines Corp. (IBM).
    </p>
    <p num="49">
      Communication between processing system 20 and other data processing systems may be facilitated by serial controller 88 and network adapter 90, both of which are coupled to system bus 5.
      <br/>
      Serial controller 88 is used to transmit information between computers, or between a computer and peripheral devices, one bit at a time over a single line.
      <br/>
      Serial communications can be synchronous (controlled by some standard such as a clock) or asynchronous (managed by the exchange of control signals that govern the flow of information).
      <br/>
      Examples of serial communication standards include RS-232 interface and the RS-422 interface.
      <br/>
      As illustrated, such a serial interface may be used to communicate with modem 92.
      <br/>
      A modem is a communication device that enables a computer to transmit information over standard telephone lines.
      <br/>
      Modems convert digital computer signals to interlock signals suitable for communications over telephone lines.
      <br/>
      Modem 92 can be utilized to connect data processing system 20 to an on-line information service, such as an information service provided under the service mark "PRODIGY" by IBM and Sears.
      <br/>
      Such on-line service providers may offer software that can be down loaded into data processing system 20 via modem 92.
      <br/>
      Modem 92 may provide a connection to other sources of software, such as a server, an electronic bulletin board (BBS), or the Internet (including the World Wide Web).
    </p>
    <p num="50">
      Network adapter 90 may be used to connect data processing system 20 to a local area network 94.
      <br/>
      Network 94 may provide computer users with means of communicating and transferring software and information electronically.
      <br/>
      Additionally, network 94 may provide distributed processing, which involves several computers in the sharing of workloads or cooperative efforts in performing a task.
      <br/>
      Network 94 can also provide a connection to other systems like those mentioned above (a BBS, the Internet, etc.).
    </p>
    <p num="51">
      Display 96, which is controlled by display controller 98, is used to display visual output generated by data processing system 20.
      <br/>
      Such visual output may include text, graphics, animated graphics, and video.
      <br/>
      Display 96 may be implemented with CRT-based video display, an LCD-based flat panel display, or a gas plasma-based flat-panel display.
      <br/>
      Display controller 98 includes electronic components required to generate a video signal that is sent to display 96.
    </p>
    <p num="52">
      Printer 99 may be coupled to data processing system 20 via parallel controller 97.
      <br/>
      Printer 99 is used to put text or a computer-generated image (or combinations thereof) on paper or on another medium, such as a transparency sheet.
      <br/>
      Other types of printers may include an image setter, a plotter, or a film recorder.
    </p>
    <p num="53">Parallel controller 97 is used to send multiple data and control bits simultaneously over wires connected between system bus 5 and another parallel communication device, such as a printer 99.</p>
    <p num="54">
      CPU 50 fetches, decodes, and executes instructions, and transfers information to and from other resources via the computers main data-transfer path, system bus 5.
      <br/>
      Such a bus connects the components in a data processing system 20 and defines the medium for data exchange.
      <br/>
      System bus 5 connects together and allows for the exchange of data between memory units 56, 58, and 60, CPU 50, and other devices as shown in FIG. 7.
      <br/>
      Those skilled in the art will appreciate that a data processing system constructed in accordance with the present invention may have multiple components selected from the foregoing, including even multiple processors.
    </p>
    <p num="55">
      As a final matter, it is important that while an illustrative embodiment of the present invention has been described in the context of a fully functional interconnected computing systems, those skilled in art will appreciate that the mechanisms of the present invention are capable of being distributed as a program product in a variety of forms, and that an illustrative embodiment of the present invention applies equally regardless of the particular type of signal bearing media used to actually carry out the distribution.
      <br/>
      Examples of signal bearing media include: recordable type media such as floppy disks, hard disk drives, CD ROMs, and transmission type media such as digital and analog communication links.
    </p>
    <p num="56">
      Although the invention has been described with reference to specific embodiments, this description is not meant to be construed in a limiting sense.
      <br/>
      Various modifications of the disclosed embodiments, as well as alternative embodiments of the invention, will become apparent to persons skilled in the art upon reference to the description of the invention.
      <br/>
      For example, while the present invention is particularly directed at networks of computing systems, it is applicable to actual network devices, such as dedicated servers, across any type of computer network.
      <br/>
      It is therefore contemplated that such modifications can be made without departing from the spirit or scope of the present invention as defined in the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for locating data stored within an environment having multiple interconnected computing systems, said method comprising the steps of:</claim-text>
      <claim-text>creating a superset of one or more elements comprised of data location identifiers and associated data attributes; receiving a list of data attributes;</claim-text>
      <claim-text>and in response to said step of receiving, transmitting any data location identifiers, within said created superset, which have the data attributes in the list.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein said step of creating a superset further comprises the steps of: obtaining one or more object identifiers and one or more associated object attributes of the objects identified by the object identifiers from specified two or more computing systems;</claim-text>
      <claim-text>and in response to said step of obtaining, creating one or more superset objects by pairing the one or more object identifiers and associated one or more object attributes with the computing system from which the one or more object identifiers and associated one or more object attributes were obtained.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2, wherein said step of receiving a list of attributes further includes the step receiving a list of object attributes.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3, wherein said step of transmitting any data location identifiers, within said created superset, which have the data attributes in the list, further comprises the steps of: in response to said step of receiving the list of object attributes, comparing the attributes in the list of object attributes to the attributes of each one or more superset objects;</claim-text>
      <claim-text>and in response to said step of comparing the object attributes, retrieving the one or more object identifiers-computing system pairs which have the attributes in the list of object attributes.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein said step of creating a superset further comprises the steps of: obtaining one or more object identifiers and one or more associated object attributes of the objects identified by the object identifiers from specified two or more computing systems;</claim-text>
      <claim-text>and in response to said step of obtaining, creating one or more superset objects by pairing the one or more object identifiers and associated one or more object attributes with the computing system from which the one or more object identifiers and associated one or more object attributes were obtained.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein said step of receiving a list of attributes further includes the step receiving a list of object attributes.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, wherein said step of transmitting any data location identifiers, within said created superset, which have the data attributes in the list, further comprises the steps of: in response to said step of receiving the list of attributes, comparing the attributes in the list of attributes to the attributes of each one or more superset elements;</claim-text>
      <claim-text>and in response to said step of comparing the attributes, retrieving the one or more data location identifiers which have the attributes in the list of data attributes.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 1, wherein said step of creating a superset further comprises the steps of: obtaining from at least a first Object Resolution Service (ORS) information related to one or more Object Attribute Records (OARs) under the control of the first ORS; obtaining from at least a second ORS information related to one or more OARs under the control of the second ORS;</claim-text>
      <claim-text>and maintaining an object index, under the control of a superset ORS, utilizing said obtained first ORS information and said obtained second ORS information.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 8, wherein said step of obtaining from at least a first ORS information further comprises the step of obtaining the current values of one or more attributes contained within the one or more OARs under the control of the first ORS.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 9, wherein said step of obtaining from at least a second ORS information further comprises the step of obtaining each current values of one or more attributes contained within the one or more OARs under the control of the second ORS.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A system for locating data stored within an environment having multiple interconnected computing systems, said system comprising: means for creating a superset of one or more elements comprised of data location identifiers and associated data attributes; means for receiving a list of data attributes;</claim-text>
      <claim-text>and means, responsive to said means for receiving, for transmitting any data location identifiers, within said created superset, which have the data attributes in the list.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The system of claim 11, wherein said means for creating a superset further comprises: means for obtaining one or more object identifiers and one or more associated object attributes of the objects identified by the object identifiers from specified two or more computing systems;</claim-text>
      <claim-text>and means, responsive to said means for obtaining, for creating one or more superset objects by pairing the one or more object identifiers and associated one or more object attributes with the computing system from which the one or more object identifiers and associated one or more object attributes were obtained.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The system of claim 12, wherein said means for receiving a list of attributes further includes means for receiving a list of object attributes.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The system of claim 13, wherein said means for transmitting any data location identifiers, within said created superset, which have the data attributes in the list, systems further comprises: means, responsive to said step of receiving the list of object attributes, for comparing the attributes in the list of object attributes to the attributes of each one or more superset objects;</claim-text>
      <claim-text>and means, responsive to said step of comparing the object attributes, for retrieving the one or more object identifiers-computing system pairs which have the attributes in the list of object attributes.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The system of claim 11, wherein said means for creating a superset further comprises: means for obtaining one or more object identifiers and one or more associated object attributes of the objects identified by the object identifiers from specified two or more computing systems;</claim-text>
      <claim-text>and means, responsive to said means for obtaining, for creating one or more superset objects by pairing the one or more object identifiers and associated one or more object attributes with the computing system from which the one or more object identifiers and associated one or more object attributes were obtained.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The system of claim 11, wherein said means for receiving a list of attributes further includes means for receiving a list of object attributes.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The system of claim 11, wherein said means for transmitting any data location identifiers, within said created superset, which have the data attributes in the list, further comprises: means, responsive to said means for receiving the list of attributes, for comparing the attributes in the list of attributes to the attributes of each one or more superset elements;</claim-text>
      <claim-text>and means, responsive to said step of comparing the attributes, for retrieving the one or more data location identifiers which have the attributes in the list of data attributes.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The system of claim 11, wherein said means for creating a superset further comprises: means for obtaining from at least a first Object Resolution Service (ORS) information related to one or more Object Attribute Records (OARs) under the control of the first ORS; means for obtaining from at least a second ORS information related to one or more OARs under the control of the second ORS;</claim-text>
      <claim-text>and means for maintaining an object index, under the control of a superset ORS, utilizing said obtained first ORS information and said obtained second ORS information.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The system of claim 18, wherein said means for obtaining from at least a first ORS information further comprises means for obtaining the current values of one or more attributes contained within the one or more OARs under the control of the first ORS.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The system of claim 19, wherein said means for obtaining from at least a second ORS information further comprises means for obtaining each current values of one or more attributes contained within the one or more OARs under the control of the second ORS.</claim-text>
    </claim>
  </claims>
</questel-patent-document>