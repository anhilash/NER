<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06184907B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06184907</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6184907</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="19511168" extended-family-id="33045719">
      <document-id>
        <country>US</country>
        <doc-number>09102807</doc-number>
        <kind>A</kind>
        <date>19980623</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09102807</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>33789785</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>KR</country>
        <doc-number>19970027273</doc-number>
        <kind>A</kind>
        <date>19970625</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997KR-0027273</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06T   1/20        20060101AFI20060101BMKR</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>1</main-group>
        <subgroup>20</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>KR</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20060101</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06T   3/40        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>3</main-group>
        <subgroup>40</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G09G   5/36        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>36</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G09G   5/395       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>395</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>345558000</text>
        <class>345</class>
        <subclass>558000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>345537000</text>
        <class>345</class>
        <subclass>537000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>345566000</text>
        <class>345</class>
        <subclass>566000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06T-003/40B</text>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>003</main-group>
        <subgroup>40B</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G09G-005/36C</text>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>005</main-group>
        <subgroup>36C</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G09G-005/395</text>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>395</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06T-003/4007</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>3</main-group>
        <subgroup>4007</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-005/363</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>363</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G09G-005/395</classification-symbol>
        <section>G</section>
        <class>09</class>
        <subclass>G</subclass>
        <main-group>5</main-group>
        <subgroup>395</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>25</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6184907</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Graphics subsystem for a digital computer system</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>LUMELSKY LEON</text>
          <document-id>
            <country>US</country>
            <doc-number>5291275</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5291275</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>FRASER PETER W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5430486</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5430486</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>SANI MEHDI H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5786866</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5786866</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>NALLY ROBERT MARSHAL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5808629</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5808629</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>CHEN ANDY HIS-WEN</text>
          <document-id>
            <country>US</country>
            <doc-number>5929924</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5929924</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>WONG RAYMOND M Y, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5963192</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963192</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>EGLIT ALEXANDER J</text>
          <document-id>
            <country>US</country>
            <doc-number>6002446</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6002446</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>HERBERT BRIAN K</text>
          <document-id>
            <country>US</country>
            <doc-number>6014125</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6014125</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>MEHRA VIVEK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6028589</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6028589</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Samsung Electronics Co., LTD</orgname>
            <address>
              <address-1>KR</address-1>
              <country>KR</country>
            </address>
          </addressbook>
          <nationality>
            <country>KR</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SAMSUNG ELECTRONICS</orgname>
          </addressbook>
          <nationality>
            <country>KR</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Min, Byung-Gueon</name>
            <address>
              <address-1>Kunpo-shi, KR</address-1>
              <city>Kunpo-shi</city>
              <country>KR</country>
            </address>
          </addressbook>
          <nationality>
            <country>KR</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Samuels, Gauthier &amp; Stevens LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Chauhan, Ulka J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A graphics subsystem utilizes a single port DRAM as a frame buffer, which has an r-bit wide data access port and stores video data that are generated by an application program executed on a host processor.
      <br/>
      The graphics subsystem includes a first-in first-out (FIFO) buffer for storing the video data from the frame buffer, and a scan interpolator for performing vertical and horizontal interpolation of data read from the FIFO buffer with respect to a predetermined number of adjacent scan lines on a video frame.
      <br/>
      By interpolating adjacent scan lines in real time, it is possible to obtain high-quality images on a computer or television display.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      In modern data processing systems, for example personal computers (PCs) and workstations, graphics subsystems perform the task of graphic data processing.
      <br/>
      Graphic data is exchanged between a host processor (CPU) and a video display device such as a cathode ray tube (CRT) device, a liquid crystal display (LCD) device, or the like.
      <br/>
      Display devices commonly support one or more pixel resolutions, for example, VGA mode (640 * 480 pixels), Super VGA (SVGA) mode (800 * 600), and Extended Graphics Array (XGA) mode (1024 * 768).
      <br/>
      With the advent of high-powered processors, for example Pentium (tm)  processors and increasingly-sophisticated operating systems, for example Windows (tm)  operating systems, capable of absorbing hardware differences, graphics subsystems have been integrated into a single chip so as to reduce their production costs and power consumption.
      <br/>
      These integrated graphics chips are commonly referred to as "graphics accelerators".
    </p>
    <p num="2">
      Graphics accelerators commonly employ multi-port Video RAMS (VRAMs), which include an additional serial port for faster throughput and are therefore suitable for use in high-end applications.
      <br/>
      To further improve performance, contemporary systems include integrated circuits which improve system speed and conserve space by integrating larger parts of the graphics subsystem, either the logic and standard dynamic RAM (DRAM) separately or the entire subsystem, into the DRAM.
      <br/>
      These integrated graphics systems are developed for portable applications such as notebook size computers.
      <br/>
      These forms of RAM are referred to as "multiported" because they include two ports which provide different functions: the random port interfaces with the processor or controller; the serial port provides fast data to the video display devices by means of a wide parallel transfer internal to the RAM.
      <br/>
      A serial register required for the serial port increases the cost of the VRAM, however, and the larger, more expensive package size resulting from the dual ports, and therefore increased pin count, consumes more space on the PC board.
      <br/>
      The testing procedure is also more complex for the multi-port VRAM which increases manufacturing costs.
    </p>
    <p num="3">
      The data rate of the single-port DRAM has increased significantly with the introduction of the Extended Data Out mode, (EDO) or Hyperpage mode, and with the introduction of synchronous DRAMs with very wide interfaces.
      <br/>
      This has led to the increased use of fast, wide, single port DRAMs in graphics subsystems, coupled with the use of standard graphics accelerators which provide the multi-port interface to the processor and the RAMDAC (Random Access Memory Digital-to-Analog Computer).
      <br/>
      Many single-port DRAM variants are also being developed such as the synchronous graphics DRAMs and the Multi-bank DRAM.
    </p>
    <p num="4">
      To effectively communicate with single port DRAMs for computer graphics, graphics accelerators usually include a first-in first-out (FIFO) buffer.
      <br/>
      In a graphics accelerator with a FIFO buffer, a certain amount of video data, for example the capacity of the FIFO, is read from a frame buffer into the FIFO buffer, where it is passed on to a video display device.
      <br/>
      The frequency of access of the graphics accelerator to the FIFO buffer is therefore determined by the FIFO capacity A higher FIFO access frequency decreases the frame buffer access time of the CPU.
      <br/>
      This, in turn, causes considerable system performance degradation, particularly, in the case where a single-port RAM is employed as a frame buffer.
    </p>
    <p num="5">
      With the advent of high-definition television (HDTV) and large screen television (TV) and the rapid advancement of multimedia PCs, there is a heightened demand for graphics accelerators suitable for use with television video signals.
      <br/>
      To meet this demand, graphics accelerators now include video encoders which convert computer video signals into video signals suitable for television.
      <br/>
      A graphics accelerator with a. video encoder is capable of displaying computer-processed images on a television screen, by transferring video data stored in frame buffer to a television via a FIFO buffer.
      <br/>
      However, when computer video data in the form of widely used progressive scan or non-interlaced formats is converted by a video encoder into interlace-scan television video data for display on a television screen, flickers visible to the human eye occur, which adversely affects image quality.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="6">
      It is therefore an object of the present invention to provide a graphics system for use with a digital computer system capable of displaying high-quality images on a display screen by performing real-time interpolation of video data.
      <br/>
      Particularly, the present invention is applicable to graphics systems utilizing single-port memories as frame buffers.
    </p>
    <p num="7">
      According to an aspect of the present invention, a graphics subsystem utilizes a single port DRAM as a frame buffer.
      <br/>
      The frame buffer includes an r-bit wide data access port (where, r is a positive integer) that stores R (red), G (green), and B (blue) video data generated by an application program executed on a host processor.
      <br/>
      The graphics subsystem further includes a first-in first-out (FIFO) buffer for storing the video data from the frame buffer, and a scan interpolator for performing vertical and horizontal interpolation of data read from the FIFO buffer with respect to a predetermined number of adjacent scan lines, for example three lines on a video frame.
      <br/>
      A display controller generates a first control signal D_EN synchronized with a horizontal synchronizing signal and designating display enable periods.
      <br/>
      The FIFO buffer generates a second control signal M RQ when there exists at least one vacant storage location therein.
      <br/>
      A memory controller controls read and write operations of the frame buffer and FIFO buffer in response to the second control signal M_RQ from the FIFO buffer.
    </p>
    <p num="8">
      In a preferred embodiment, each scan line includes p scan blocks, where p is a positive integer.
      <br/>
      Each scan block is formed of q pixel data packets, and each pixel data packet is an r-bit wide video data corresponding to one or more pixels, where q and r are positive integers.
      <br/>
      The scan interpolator performs the interpolation of the video data associated with three adjacent scan lines.
      <br/>
      The memory controller controls the frame buffer in response to the second control signal M_RQ in such a manner that a first data of 3 * q * r bits and a second data of 3 * q * r bits, which correspond to first scan blocks of the three adjacent scan lines and second scan blocks of the three adjacent scan lines, respectively, are read out from the frame buffer sequentially and successively while the first control signal D_EN remains inactive.
      <br/>
      Also, the memory controller controls the frame buffer in response to the second control signal M RQ in such a manner that a third data of 3 * q * r bits and a fourth data of 3 * q * r bits, which correspond to odd-numbered scan blocks of the three adjacent scan lines and even-numbered scan blocks of the three adjacent scan lines, respectively, are read out from the frame buffer alternately and at a predetermined time interval while the first control signal D_EN remains active.
      <br/>
      The frame buffer preferably operates in a burst read out mode where q * r bits of data relating to each scan line are successively read out from the frame buffer.
    </p>
    <p num="9">
      The FIFO buffer preferably includes first and second storage regions which have identical storage capacity.
      <br/>
      The FIFO buffer stores the data read out of the frame buffer into the first and second storage regions sequentially in response to a third control signal W_EN from the memory controller while the first control signal D_EN remains inactive.
      <br/>
      While the first control signal D_EN remains active, the FIFO buffer provides 3 * r bits of data, which are stored in one of the first and second storage regions and correspond to a column of the adjacent scan lines, to the scan interpolator in response to a fourth control signal R_EN from the display controller, and stores the data read out of the frame buffer in the other of the first and second storage regions in response to the third control signal W_EN.
      <br/>
      The scan interpolator performs vertical interpolation of pixel data corresponding to three pixels on a column of the three adjacent scan lines, thereafter it also performs a horizontal interpolation of pixel data with respect to adjacent three pixels on each vertically-interpolated scan line.
    </p>
    <p num="10">As described above, according to the invention, since adjacent scan lines on a video frame are interpolated in real time, it is possible to display high-quality images on a computer or television display.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="11">
      The foregoing and other objects, features and advantages of the invention will be apparent from the more particular description of preferred embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.
      <br/>
      FIG. 1 is a block diagram of a preferred embodiment of a graphics subsystem according to the present invention.
      <br/>
      FIG. 2 is a block diagram illustrating a preferred circuit configuration of the FIFO buffer shown in FIG. 1.
      <br/>
      FIG. 3A is a schematic diagram illustrating the RAM array shown in FIG. 2.
      <br/>
      FIG. 3B illustrates a scanning sequence for data in the RAM array in accordance with a preferred embodiment of the present invention.
      <br/>
      FIG. 4 is a timing diagram for write and read operations of the FIFO buffer in accordance with a preferred embodiment of the present invention.
      <br/>
      FIG. 5 is a block diagram illustrating a preferred circuit configuration of the scan interpolator shown in FIG. 1.
      <br/>
      FIG. 6A illustrates vertical interpolation associated with three adjacent scan lines according to the present invention.
      <br/>
      FIG. 6B illustrates vertical and horizontal interpolation associated with a 3 * 3 pixel matrix according to the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
    <p num="12">
      FIG. 1 is a block diagram of a computer graphics subsystem or graphics accelerator 100 suitable for performing graphic data processing in a computer system according to a preferred embodiment of the invention.
      <br/>
      The graphics accelerator 100 is preferably integrated into a single integrated circuit or chip.
      <br/>
      The graphics accelerator 100 is connected to a host processor (CPU) 200 via a host bus 210 of a particular bus protocol, for example PCI (Peripheral Component Interconnect) bus, ISA (Industry Standard Architecture) bus, and the like.
      <br/>
      The graphics accelerator 100 is further connected to a frame buffer 220 including a single r-bit width data access port, where r is preferably 64 bits.
      <br/>
      Frame buffer 220 stores R (red), G (green), B (blue) video data, as well as additional colors and/or grey scale data, generated by application programs which are executed in host processor 200.
      <br/>
      Graphics accelerator 100 is further connected with a computer display device 230 (such as a CRT display device, an LCD device, etc.) and/or a television display 240.
      <br/>
      The graphics accelerator supports one or more m * n resolution display modes (where, m and n are positive integers), for example VGA mode (640 * 480 pixels), SVGA mode (800 * 600), and XGA mode (1024 * 768).
    </p>
    <p num="13">
      Referring to FIG. 3B, a video frame is comprised of n rows, or scan lines (where n=480, 600, 768, or the like).
      <br/>
      Each scan line SL, (where, i=1, 2, . . . , n) includes p scan blocks SB(i,1), SB(i,2), . . . , SB(i,p) (where, p is a multiple of 2, for example).
      <br/>
      Herein, reference symbol SB(i,j) designates the j-th scan block on the i-th scan line.
      <br/>
      Each scan block SB(i,j) (where, i=1, 2, . . . , n; j=1, 2, . . . , p) is formed of q pixel data packets PP(i,j,k) where q is a positive integer, and k=1, 2, . . . , q. Each pixel data packet PP(i,j,k) comprises an r-bit wide video data corresponding to one or more pixels where r is a positive integer, for example, 8, 16, 24, 64, or the like.
      <br/>
      Scan interpolator 170 (see FIG. 1) performs the interpolation of the video data associated with three adjacent scan lines.
      <br/>
      Herein, reference symbol PP(i,j,k) represents k-th pixel data packet within j-th scan block on i-th scan line.
    </p>
    <p num="14">
      Returning to FIG. 1, in the graphics accelerator 100, a host interface 110 is connected to the host bus 210 and provides interface associated with host processor 200 according to the transfer protocol of the bus 210.
      <br/>
      Graphics engine 120, for example a VGA controller, a two-dimensional (2-D) graphics engine, a three-dimensional (3-D) graphics engine, or the like, manipulates the video data stored in the frame buffer 220 in accordance with commands and data from host processor 200.
    </p>
    <p num="15">
      Display controller 130 generates horizontal and vertical synchronizing signals H-SYNC and V-SYNC which are applied to control the display device 230.
      <br/>
      The controller 130 further generates a display enable signal D_EN synchronized with the horizontal synchronizing signal H-SYNC, which designates display enable periods.
    </p>
    <p num="16">
      FIFO buffer 140 includes FIFO storage space for buffering the video data provided by frame buffer 220.
      <br/>
      The FIFO buffer 140 includes a RAM array (described below) for data storage, and generates a memory read request signal M_RQ when there are any vacant storage locations available in the RAM array.
    </p>
    <p num="17">
      Memory controller 150 controls the read operation of frame buffer 220 at the request of FIFO buffer 140, i.e., in response to the memory read request signal M RQ, and further controls the write operation of FIFO buffer 140 via signal W_EN.
      <br/>
      The operation of the memory controller 150 is described in detail below.
    </p>
    <p num="18">RAMDAC (random access memory digital-to-analog converter) 160 converts digital video data signals Rd, Gd and Bd supplied by the FIFO buffer 140 into analog signals Ra, Ga and Ba, and provides the converted data signals to display device 230, as well known.</p>
    <p num="19">
      Scan interpolator 170 vertically interpolates the video data provided by FIFO buffer 140, with respect to three adjacent scan lines SLi-1, SLi, SLi+1 on a video frame (or screen).
      <br/>
      The line SL, represents a current scan line, while the lines SLi-1, and SLi+1 represent previous and following scan lines, respectively.
      <br/>
      In the event that the scan line SLi is the first line of a video frame, i.e., if i=1, then the data value corresponding to SLi-1 is zero.
      <br/>
      Similarly, if the scan line SLi is the last line of a video frame, i.e., if i =n, then the data value corresponding to SLi-1 is also zero.
    </p>
    <p num="20">
      Scan interpolator 170 performs horizontal interpolation of three adjacent vertically-interpolated scan lines with respect to three pixels on each scan line, in a process described in detail below.
      <br/>
      Further, it should be noted that RAMDAC 160 can alternatively be coupled to the output of the scan interpolator 170 so that interpolated data can be provided to display device 230.
    </p>
    <p num="21">Video encoder 180 converts the output data of scan interpolator 170, i.e., computer-oriented video data, into either composite video signals (CVBS) or super video signals (YC) for television display, and provides the converted signals to television 240.</p>
    <p num="22">
      Referring to FIG. 2, a preferred embodiment of FIFO buffer 140 includes a RAM array 310 for storing video data.
      <br/>
      The RAM array 310 includes first and second storage regions A and B of identical storage capacity, and stores video data 311 provided by the frame buffer 220.
      <br/>
      The buffer 140 further includes control logic 320, a write pointer 330, two read pointers 340 and 350, and an address selector 360.
    </p>
    <p num="23">
      Control logic 320 generates a plurality of control signals associated with video data buffering, as well as the above-described memory read request signal M RQ.
      <br/>
      Specifically, the control logic 320 generates a write strobe signal W_ST in response to a write enable signal W_EN provided from memory controller 150.
      <br/>
      Also, the logic 320 generates a read strobe signal R_ST and a reset strobe signal RST_ST in response to a read enable signal R_EN and the display enable signal D_EN from display controller 130, respectively.
      <br/>
      Further, the logic 320 generates a mode select signal M_SLT to select the read mode of RAM array 310 in accordance with a command H_CMD issued from host processor 200.
      <br/>
      The mode select signal M_SLT is set at logic level one (e.g., a high level) when a computer display device (e.g., CRT device, LCD device) 230 is coupled to the system, and is set at logic level zero (e.g., a low level) when a television device 240 is coupled to the system.
    </p>
    <p num="24">
      Write address pointer 330 consists of a digital counter circuit, and produces a write address signal ADD_W in response to the write strobe signal W_ST from control logic 320.
      <br/>
      The write address ADD_W is used to store the video data 311 read from the frame buffer 220 into the RAM array 310.
      <br/>
      Read address pointer 340 likewise generates a first read address ADD_R1 in response to the read strobe signal R_ST.
      <br/>
      The first read address ADD13 R1 is intended to read the video data out of the RAM array 310 sequentially.
      <br/>
      Similarly, read address pointer 350 generates a second read address ADD_R2 in response to the read strobe signal R_ST from control logic 320.
      <br/>
      The second read address ADD_R2 is used for the data read-out from RAM array 310 discretely instead of sequentially (described below).
      <br/>
      The read pointers 340 and 350 are preferably implemented with digital counter circuits.
      <br/>
      Address selector 360 consisting of a multiplexer, selects one of the first and second read addresses ADD_R1 and ADD_R2 and provides the selected address to the RAM array 310 in response to the mode select signal M_SLT.
      <br/>
      The selector 360 selects the first read address ADD_RI in response to a mode select signal M SLT at a high level.
      <br/>
      When the mode select signal M_SLT is at a low level, the selector 360 selects the second read address ADD_R2.
    </p>
    <p num="25">FIG. 3A is an exemplary diagram of the layout of the RAM array 310 shown in FIG. 2, FIG. 3B is a diagrammatic illustration of the scanning sequence of the data in the RAM array 310, and FIG. 4 is a timing diagram for write and read operations of the FIFO buffer.</p>
    <p num="26">
      Referring to FIG. 3A, for illustrative purposes, RAM array 310 is formed of 24 memory locations having addresses a01-a24; each of the first and second storage regions, A and B respectively, consists of 12 locations.
      <br/>
      Each memory location has r (preferably, 64)-bit width corresponding to one pixel data packet PP(i,j,k).
      <br/>
      The storage region A or B stores the data corresponding to three adjacent scan lines SLi-1, SLi and SLi+1 each consisting of a plurality of scan blocks SB(i,j).
      <br/>
      If one scan block is, for example, made up of four pixel data packets, then the memory capacity of a storage region A or B is equal to 4 * r bits (e.g., 4 * 64=256 bits), as shown in the figure.
    </p>
    <p num="27">
      Referring to the timing diagram of FIG. 4, address pointers 330, 340 and 350 shown in FIG. 2 are reset by the reset strobe signal RST_ST from control logic 320 at time t1 during which the display enable signal D_EN becomes deactivated.
      <br/>
      FIFO buffer 140 generates the memory read request signal M_RQ whenever the scanning of an arbitrary scan line has been completed.
    </p>
    <p num="28">
      Memory controller 150 controls the frame buffer 220 (see FIG. 1) in response to the memory read request signal M_RQ such that data of 3 * 4 (=q) * 64(=r) bits, which corresponds to first scan blocks SB(i-1,1), SB(i,1) and SB(i+1,1) of three adjacent scan lines SLi-1, SLi and SLi+1, is sequentially and successively read from the frame buffer 220 while the display enable signal D_EN remains inactivated.
      <br/>
      Simultaneously, the memory controller 150 generates the write enable signal W_EN to instruct the FIFO buffer 140 to store the data output from the frame buffer 220.
      <br/>
      Subsequently, data corresponding to second scan blocks SB(i-1,2), SB(i,2) and SB(i+1,2) of the three adjacent scan lines SLi-1, SLi and SLi+1, (where, i=1, 2, . . . , or n) are also sequentially and successively read from the frame buffer 220 and written into the FIFO buffer 140.
      <br/>
      The remaining scan blocks SB(1,3), SB(1,4), . . . , SB(n,p) (see FIG. 3B) in the frame buffer 220 are also fed to the FIFO buffer 140 in the same manner.
    </p>
    <p num="29">
      For write operations of FIFO buffer 140, the write pointer 330 generates address signals AA and AB in normal fashion (i.e., sequentially) at time t2, as shown in FIG. 4 wherein reference character AA represents addresses a01-a12 for the storage region A of RAM array 310, and AB represents addresses a13-a24 for the storage region B of RAM array 310.
      <br/>
      During a write operation, RAM array 310 is filled with 24 pixel data packets PP(i-1,j,1), PP(i-1,j,2), . . . , PP(i+1, j+1,4), as shown in FIG. 3A. Consequently, with respect to three adjacent scan lines, the respective odd-numbered scan lines SB(1,1), SB(2,1), SB(3,1), SB(1,3), SB(2,1), SB(3,3), SB(i-1,p-1), SB(i,p-1), SB(i+1,p-1), . . . are stored in the storage region A, and the respective evennumbered scan lines SB(1,2), SB(2,2), SB(3,2), SB(1,4), SB(2,4), SB(3,4), . . . , SB(i-1,p), SB(i,p), SB(i+1,p), . . . are stored in the storage region B.
    </p>
    <p num="30">
      During read operations of FIFO buffer 140, the read enable signal R_EN becomes activated slightly prior to the display enable signal D_EN in consideration of the data transmission delay due to the scan interpolator 170.
      <br/>
      In the timing diagram of FIG. 4, although the read enable signal R_EN is not shown, it becomes activated at the time t3 prior to time t4 at which the display enable signal D_EN becomes activated.
    </p>
    <p num="31">
      Referring again to FIGS. 2 and 3A, when control logic 320 generates the read strobe signal R_ST in response to the read enable signal R_EN from display controller 130, first and second read pointers 340 and 350 are enabled to generate read addresses ADD_R1 and ADD_R2.
      <br/>
      At this time, the first address pointer 340 generates address ADD_R1 sequentially, i.e., the pointer 340 generates ADD_R1 in the following order: a01, a02, a03, . . . , a24, a01, a02, a03 . . . . Unlike the first address pointer 340, the second address pointer 350 generates ADD_R2 discretely, i.e, the pointer 350 generates address ADD_R2 in the following order: a01, a05, a09, a02, a06, a10, a03, a07, a11, a04, a08, a12, a13, a17, a21, a14, a18, . . . , a20, a24, a01, a05, . . . . According to the second address pointer 350, three pixel data packets PP(i-1,j,k), PP(ij,k) and PP(i+1,j,k) on a column of three adjacent scan lines SLi-1, SLi and SLi+1 can be sequentially provided to the scan interpolator 170, as can be seen in FIGS. 3A and 3B.
    </p>
    <p num="32">
      As described above, in the case where a computer display device 230 is coupled to the system, the first read address ADD_RI from the first address pointer 340 is selected by the address selector 360.
      <br/>
      The second read address ADD_R2 is selected when a television 240 is coupled to the system.
      <br/>
      Consequently, the first address pointer 340 is provided for the display device-oriented 230 video data addressing, and the address pointer 350 is prepared for addressing to interpolate the television-oriented 240 video data vertically.
    </p>
    <p num="33">
      A circuit configuration of the scan interpolator 170 is shown in FIG. 5.
      <br/>
      The scan interpolator 170 performs vertical interpolation of pixel data corresponding to three pixels on a column of three adjacent scan lines.
      <br/>
      In addition, the interpolator 170 performs a horizontal interpolation of the first to third vertically-interpolated pixel data with respect to three pixels on each scan line.
    </p>
    <p num="34">
      Referring to FIG. 5, the scan interpolator 170 is comprised of registers 501, 502, 507, 508 and 509, a register controller 510, dividers 503, 504, 505, 511, 512 and 513, and adders 506 and 514.
      <br/>
      The register controller 510 controls read and write operations of registers 501, 502, 507, 508 and 509.
      <br/>
      Of three adjacent scan lines (SLi+1, SLi and SLi+1), a first register 501 stores first R, G, B pixel data associated with the first scan line (SLi-1) and provided from FIFO buffer 140, and a second register 502 stores second pixel data associated with the second scan line (SLi).
      <br/>
      The register controller 510 causes the registers 501 and 502 to output their stored data when third pixel data associated with the third scan line (SLi+1) is provided from the FIFO buffer.
    </p>
    <p num="35">FIG. 6A is an exemplary diagrammatic illustration for describing vertical interpolation of three pixels arranged in a column C,, with respect to three adjacent scan lines SLii-1, SLi and SLi+1.</p>
    <p num="36">
      As can be seen in FIGS. 5 and 6A, the current pixel (shaded block) on a column C, of scan line SLi is interpolated along with two adjacent pixels (non-shaded blocks) on the same column of the previous and next scan lines SLi-1,SLi and SLi+1, Divider 503 divides the output of the register 501 by a weight value (i.e., interpolation coefficient) of 4, and divider 504 adjusts the output of the register 502 by an interpolation coefficient of 2.
      <br/>
      The pixel data associated with the third scan line (SLi+1) is applied to a divider 505 having an interpolation coefficient of 4.
      <br/>
      It can be seen that the pixel data value associated with the current scan line SLi is weighted twice as high as that associated with the previous or the following scan line SLi-1, or SLi+1.
      <br/>
      While other embodiments and coefficient values are equally applicable, in a preferred embodiment, dividers 503, 504 and 505, comprised shift registers to confer the benefits of speed and simplicity.
      <br/>
      For this reason, interpolation coefficients which are multiples of two are preferred.
      <br/>
      Thereafter, the outputs of the dividers 503, 504 and 505 are added together by adder 506, to complete vertical interpolation.
    </p>
    <p num="37">
      An output (i.e., vertically interpolated pixel data) of the adder 506 is provided to video encoder 180 (see FIG. 1) as current pixel data, without performing horizontal interpolation.
      <br/>
      In an alternative embodiment employing a computer display device 230, the output of the adder 506 is also provided to RAMDAC 160 as current pixel data.
      <br/>
      According to the above-described vertical interpolation process, the visible flicker effect due to the conversion of computer video data into television video data is substantially reduced.
    </p>
    <p num="38">
      Referring to FIG. 6B, there is an exemplary diagrammatic illustration for describing vertical and horizontal interpolation associated with a pixel matrix of 3 rows and 3 columns.
      <br/>
      For vertical and horizontal interpolation, additional components are required for the scan interpolator 160 shown in FIG. 5.
    </p>
    <p num="39">
      Vertical interpolation of a current pixel (bold block in FIG. 6B) is performed in the same manner as described above.
      <br/>
      Thereafter, the horizontal interpolation of the current pixel is performed, as illustrated in FIGS. 5 and 6B. Specifically, registers 507, 508 and 509 store first through third outputs of the adder 506.
      <br/>
      Register controller 510 causes registers 507, 508 and 509 to output their stored data at the same time.
      <br/>
      Divider 511 adjusts the vertically-interpolated output of register 507 by an interpolation coefficient of 4, and divider 512 adjusts the output register 508 by an interpolation coefficient of 2.
      <br/>
      The output of the register 509 is adjusted at divider 513 by an interpolation coefficient of 4.
      <br/>
      It can be seen that the pixel data value associated with current column Cl is weighted twice as high as that associated with the adjacent columns Cl-1 or Cl+1.
      <br/>
      Dividers 511, 512 and 513 preferably comprise shift registers.
      <br/>
      The respective outputs of dividers 511, 512 and 513 are added together at adder 514, to complete vertical and horizontal interpolation.
    </p>
    <p num="40">
      Output data (i.e., vertically and horizontally interpolated pixel data) of adder 514 is provided to video encoder 180 as a current pixel data.
      <br/>
      In the alternative embodiment, the output of the adder 514 can also be provided to RAMDAC 160.
    </p>
    <p num="41">According to the above-described vertical and horizontal interpolation, the visible flickers due to the conversion of computer video data into television video data can substantially be eliminated, resulting in high-quality display images on a computer or television display.</p>
    <p num="42">While this invention has been particularly shown and described with references to preferred embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A graphics system for processing data generated by a host processor and for providing said data to a display device comprising:</claim-text>
      <claim-text>a first frame buffer having an r-bit wide data access port, where r is a positive integer, for storing video data generated by an application program executed on said host processor; a second buffer comprising:</claim-text>
      <claim-text>- a RAM array for periodic storage of a portion of the video data stored in said frame buffer, and for periodic transmission of scan line data to said display device, said second buffer generating a read request control signal when at least one storage location therein is vacant; - a control logic for generating a read strobe control signal and a mode select control signal in response to a display control signal from said display device from said display device; - first and second address pointers for generating first and second read addresses respectively in response to the read strobe control signal;</claim-text>
      <claim-text>and - an address selector for selecting one of the first and second read addresses and providing the selected address to said RAM array in response to the mode select control signal; a controller for controlling read and write operations of said frame buffer and said second buffer in response to the read request control signal from said second buffer;</claim-text>
      <claim-text>and a scan interpolator for vertically interpolating said scan line data transmitted from said second buffer, with respect to a predetermined number of scan lines on the display device.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The graphics system according to claim 1, wherein each scan line includes p scan blocks, each scan block comprising q pixel data packets, and each pixel data packet comprising r-bit wide video data corresponding to one or more pixels (where, p, q and r are positive integers).</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The graphics system according to claim 2, wherein said scan interpolator performs the interpolation of the video data associated with three adjacent scan lines SLi-1, SLi, and SLi+1 (where, i=1, 2, . . . , n, and where n is a positive integer) of a video frame.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The graphics system according to claim 3, wherein the controller controls said frame buffer in response to the read request control signal in such a manner that a first data of 3 * q * r bits and a second data of 3 * q * r bits, which correspond to first scan blocks of the three adjacent scan lines and second scan blocks of the three adjacent scan lines, respectively, are read out from said frame buffer sequentially and successively while a display control signal remains inactive;</claim-text>
      <claim-text>and the controller controls said frame buffer in response to the read request control signal in such a manner that a third data of 3 * q * r bits and a fourth data of 3 * q * r bits, which correspond to odd-numbered scan blocks of the three adjacent scan lines and even-numbered scan blocks of the three adjacent scan lines, respectively, are read out from said frame buffer alternately and at a predetermined time interval while the display control signal remains active.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The graphics system according to claim 4, wherein said frame buffer operates in a burst read out mode where q * r bits data relating to each scan line are successively read out from said frame buffer.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The graphics system according to claim 4, wherein the second buffer comprises first and second storage regions which have identical storage capacity.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The graphics system according to claim 6, wherein the second buffer, while the display control signal remains inactive, stores the data read out of said frame buffer into said first and second storage regions sequentially in response to a write enable control signal from the controller;</claim-text>
      <claim-text>and wherein the second buffer, while the display control signal remains active, provides 3 * r bits data, which are stored in one of said first and second storage regions and correspond to a column of the adjacent scan lines, to said scan interpolator in response to a read enable control signal from said controller, and stores the data read out of said frame buffer in the other of said first and second storage regions in response to the write enable control signal.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The graphics system according to claim 1, wherein the second buffer comprises: a RAM array including first and second storage regions which have identical storage capacity, for storing the video data provided from said frame buffer; a control logic for generating a write strobe control signal, a read strobe control signal and a mode select control signal in response to a display control signal from said display controller, a write enable control signal from a memory controller and a host command issued from said host processor, respectively; a first address pointer for generating a write address in response to the write strobe control signal, the write address being used to write the video data provided from said frame buffer into said RAM array; a second address pointer for generating a first read address in response to the read strobe control signal, the first read address being used to read the video data stored in said RAM array successively; a third address pointer for generating a second read address in response to the read strobe control signal, the second read address being used to read the video data stored in said RAM array discretely;</claim-text>
      <claim-text>and an address selector for selecting one of the first and second read addresses and providing the selected address to said RAM array, in response to the mode select control signal.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The graphics system according to claim 1, wherein said scan interpolator performs a vertical interpolation of pixel data corresponding to three pixels on a column of three adjacent scan lines.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The graphics system according to claim 9, wherein said scan interpolator further performs a horizontal interpolation of pixel data with respect to adjacent three pixels on each vertically-interpolated scan line.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The graphics system according to claim 1, wherein said scan interpolator comprises: a first register for storing a first pixel data provided from said second buffer and associated with the (i-1)-th scan line (SLi-1); a second register for storing a second pixel data provided from said second buffer and associated with the i-th scan line (SLi); a register controller for controlling read and write operations of said first and second registers, said register controller instructing said first and second registers to output their stored data when a third pixel data associated with the (i+1)-th scan line (SLi+1) is provided from said FIFO buffer; a first divider for dividing an output of said first register by a first interpolation coefficient; a second divider for dividing an output of said second register by a second interpolation coefficient; a third divider for dividing third pixel data associated with the (i+1)-th scan line (SLi+1) by a third interpolation coefficient;</claim-text>
      <claim-text>and an adder for adding outputs of said first to third dividers together.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The graphics system according to claim 11, wherein the first and third interpolation coefficients equal 4 and wherein the second interpolation coefficient equals 2.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The graphics system according to claim 1, wherein said scan interpolator further comprises: a first register for storing a first pixel data provided from said second buffer and associated with the (i-1)-th scan line (SLi-1); a second register for storing a second pixel data provided from said second buffer and associated with the i-th scan line (SLi); a first divider for dividing an output of said first register by a first interpolation coefficient; a second divider for dividing an output of said second register by a second interpolation coefficient; a third divider for dividing third pixel data associated with the (i+1)-th scan line (SLi+1) by a third interpolation coefficient; a first adder for summing the outputs of the first, second, and third dividers; a third register for storing a first output of said first adder; a fourth register for storing a second output of said first adder; a fifth register for storing a third output of said first adder; a register controller for controlling read and write operations of said first to fifth registers, said register controller instructing said first and second registers to output their stored data when a third pixel data associated with the (i+1)-th scan line (SLi+1) is provided from said second buffer; a fourth divider for dividing an output of said third register by a fourth interpolation coefficient; a fifth divider for dividing an output of said fourth register by a fifth interpolation coefficient; a sixth divider for dividing an output of said fifth register by a sixth interpolation coefficient;</claim-text>
      <claim-text>and a second adder for summing the outputs of the fourth, fifth, and sixth dividers.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The graphics system according to claim 13, wherein the first, third, fourth and sixth interpolation coefficients equal 4 and wherein the second and fifth interpolation coefficients equal 2.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The graphics system according to claim 1, further comprising a graphics engine for manipulating the video data stored in said frame buffer on the basis of commands issued from said host processor, and a random access memory digital-to-analog converter (RAMDAC) for converting digital outputs of said second buffer into analog signals and providing the analog signals to said display device.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The graphics system according to claim 1, further comprising a video encoder for converting an output of said scan interpolator into television-oriented video data.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The graphics system according to claim 1, wherein the second buffer comprises a first-in-first-out (FIFO) buffer.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The graphics system according to claim 1, wherein the video data comprises red, green, and blue video data.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The graphics system according to claim 1, wherein the video data comprises grey scale data.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The graphics system according to claim 1, wherein the frame buffer comprises single-port DRAM.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A graphics system for processing data generated by a host processor and for providing said data to a display device comprising: a first frame buffer having an r-bit wide data access port, where r is a positive integer, for storing video data generated by an application program executed on said host processor; a second buffer for periodic storage of a portion of the video data stored in said frame buffer, and for periodic transmission of scan line data to said display device, said second buffer generating a read request control signal when at least one storage location therein is vacant;</claim-text>
      <claim-text>said second buffer comprising: - a RAM array including first and second storage regions which have identical storage capacity, for storing the video data provided from said frame buffer; - a control logic for generating a write strobe control signal, a read strobe control signal and a mode select control signal in response to a display control signal from said display controller, a write enable control signal from a memory controller and a host command issued from said host processor, respectively; - a first address pointer for generating a write address in response to the write strobe control signal, the write address being used to write the video data provided from said frame buffer into said RAM array; - a second address pointer for generating a first read address in response to the read strobe control signal, the first read address being used to read the video data stored in said RAM array successively; - a third address pointer for generating a second read address in response to the read strobe control signal, the second read address being used to read the video data stored in said RAM array discretely;</claim-text>
      <claim-text>and - an address selector for selecting one of the first and second read addresses and providing the selected address to said RAM array, in response to the mode select control signal; a controller for controlling read and write operations of said frame buffer and said second buffer in response to the read request control signal from said second buffer;</claim-text>
      <claim-text>and a scan interpolator for vertically interpolating said scan line data transmitted from said second buffer, with respect to a predetermined number of scan lines on the display device.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A graphics system for processing data generated by a host processor and for providing said data to a display device comprising: a first frame buffer having an r-bit wide data access port, where r is a positive integer, for storing video data generated by an application program executed on said host processor; a second buffer for periodic storage of a portion of the video data stored in said frame buffer, and for periodic transmission of scan line data to said display device, said second buffer generating a read request control signal when at least one storage location therein is vacant; a controller for controlling read and write operations of said frame buffer and said second buffer in response to the read request control signal from said second buffer;</claim-text>
      <claim-text>and a scan interpolator for vertically interpolating said scan line data transmitted from said second buffer, with respect to a predetermined number of scan lines on the display device, wherein said scan interpolator comprises: - a first register for storing a first pixel data provided from said second buffer and associated with the (i-1)-th scan line (SLi-1); - a second register for storing a second pixel data provided from said second buffer and associated with the i-th scan line (SLi); - a register controller for controlling read and write operations of said first and second registers, said register controller instructing said first and second registers to output their stored data when a third pixel data associated with the (i+1)-th scan line (SLi+1) is provided from said FIFO buffer; - a first divider for dividing an output of said first register by a first interpolation coefficient; - a second divider for dividing an output of said second register by a second interpolation coefficient; - a third divider for dividing third pixel data associated with the (i+1)-th scan line (SLi+1) by a third interpolation coefficient;</claim-text>
      <claim-text>and - an adder for adding outputs of said first to third dividers together.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The graphics system according to claim 22, wherein the first and third interpolation coefficients equal 4 and wherein the second interpolation coefficient equals 2.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A graphics system for processing data generated by a host processor and for providing said data to a display device comprising: a first frame buffer having an r-bit wide data access port, where r is a positive integer, for storing video data generated by an application program executed on said host processor; a second buffer for periodic storage of a portion of the video data stored in said frame buffer, and for periodic transmission of scan line data to said display device, said second buffer generating a read request control signal when at least one storage location therein is vacant; a controller for controlling read and write operations of said frame buffer and said second buffer in response to the read request control signal from said second buffer;</claim-text>
      <claim-text>and a scan interpolator for vertically interpolating said scan line data transmitted from said second buffer, with respect to a predetermined number of scan lines on the display device, wherein said scan interpolator comprises: - a first register for storing a first pixel data provided from said second buffer and associated with the (i-1)-th scan line (SLi-1); - a second register for storing a second pixel data provided from said second buffer and associated with the i-th scan line (SLi); - a first divider for dividing an output of said first register by a first interpolation coefficient; - a second divider for dividing an output of said second register by a second interpolation coefficient; - a third divider for dividing third pixel data associated with the (i+1)-th scan line (SLi+1) by a third interpolation coefficient; a first adder for summing the outputs of the first, second, and third dividers; a third register for storing a first output of said first adder; a fourth register for storing a second output of said first adder; a fifth register for storing a third output of said first adder; a register controller for controlling read and write operations of said first to fifth registers, said register controller instructing said first and second registers to output their stored data when a third pixel data associated with the (i+1)-th scan line (SLi+1) is provided from said second buffer; a fourth divider for dividing an output of said third register by a fourth interpolation coefficient; a fifth divider for dividing an output of said fourth register by a fifth interpolation coefficient; a sixth divider for dividing an output of said fifth register by a sixth interpolation coefficient;</claim-text>
      <claim-text>and a second adder for summing the outputs of the fourth, fifth, and sixth dividers.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The graphics system according to claim 24, wherein the first, third, fourth and sixth interpolation coefficients equal 4 and wherein the second and fifth interpolation coefficients equal 2.</claim-text>
    </claim>
  </claims>
</questel-patent-document>