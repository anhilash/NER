<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182063B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182063</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182063</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="23984565" extended-family-id="13715893">
      <document-id>
        <country>US</country>
        <doc-number>08829657</doc-number>
        <kind>A</kind>
        <date>19970331</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08829657</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>14011672</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>82965797</doc-number>
        <kind>A</kind>
        <date>19970331</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08829657</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>49926895</doc-number>
        <kind>A</kind>
        <date>19950707</date>
        <priority-linkage-type>2</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1995US-08499268</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>707722000</text>
        <class>707</class>
        <subclass>722000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>707739000</text>
        <class>707</class>
        <subclass>739000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707741000</text>
        <class>707</class>
        <subclass>741000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>707999002</text>
        <class>707</class>
        <subclass>999002</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>707999003</text>
        <class>707</class>
        <subclass>999003</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>707999006</text>
        <class>707</class>
        <subclass>999006</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>707E17008</text>
        <class>707</class>
        <subclass>E17008</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>707E17075</text>
        <class>707</class>
        <subclass>E17075</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>707E17083</text>
        <class>707</class>
        <subclass>E17083</subclass>
      </further-classification>
      <further-classification sequence="9">
        <text>707E17108</text>
        <class>707</class>
        <subclass>E17108</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30675</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30675</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30011</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30011</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/3053</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>3053</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/3061</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>3061</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30613</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30613</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30864</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30864</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/917</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>917</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99932</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99932</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99933</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99933</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99935</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99935</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="11">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99936</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99936</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>42</number-of-claims>
    <exemplary-claim>34</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>7</number-of-figures>
      <image-key data-format="questel">US6182063</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus for cascaded indexing and retrieval</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>CAID WILLIAM R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5619709</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5619709</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>TAKAHASHI KOUSUKE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5706497</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5706497</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>WOODS WILLIAM A</text>
          <document-id>
            <country>US</country>
            <doc-number>5724571</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5724571</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>SCHULTZ JOHN MICHAEL</text>
          <document-id>
            <country>US</country>
            <doc-number>5822731</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5822731</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>SYEDA-MAHMOOD TANVEER F</text>
          <document-id>
            <country>US</country>
            <doc-number>5920856</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5920856</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>KRELLENSTEIN MARC F</text>
          <document-id>
            <country>US</country>
            <doc-number>5924090</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5924090</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>MILLER DAVID JAMES, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5926811</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5926811</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>LIDDY ELIZABETH D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5963940</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963940</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>KIRSCH STEVEN T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5983216</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5983216</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>SYEDA-MAHMOOD TANVEER F</text>
          <document-id>
            <country>US</country>
            <doc-number>5983218</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5983218</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>NIWA YOSHIKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5987460</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5987460</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>WOODS WILLIAM A</text>
          <document-id>
            <country>US</country>
            <doc-number>6101491</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6101491</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>DEERWESTER SCOTT C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4839853</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4839853</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>ADI TAMMAM</text>
          <document-id>
            <country>US</country>
            <doc-number>4849898</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4849898</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>HEMPHILL CHARLES T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4984178</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4984178</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>KLEINBERGER PAUL J</text>
          <document-id>
            <country>US</country>
            <doc-number>5062074</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5062074</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>KUGA SHIGEKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5276616</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5276616</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>LANDAUER THOMAS K, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5301109</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5301109</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>CHANG SHIH-CHIO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5321833</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5321833</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>GALLANT STEPHEN I</text>
          <document-id>
            <country>US</country>
            <doc-number>5325298</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5325298</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>KAGENECK KARL-ERBO G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5404514</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5404514</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>TURTLE HOWARD R</text>
          <document-id>
            <country>US</country>
            <doc-number>5418948</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5418948</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>DAMASHEK MARC</text>
          <document-id>
            <country>US</country>
            <doc-number>5418951</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5418951</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>BROOKES CYRIL</text>
          <document-id>
            <country>US</country>
            <doc-number>5428778</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5428778</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>KOSTOFF RONALD N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5440481</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440481</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>TAKADA HIROSHI</text>
          <document-id>
            <country>US</country>
            <doc-number>5450580</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5450580</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="27">
          <text>SCHABES YVES, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5475588</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5475588</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="28">
          <text>EGGER DANIEL</text>
          <document-id>
            <country>US</country>
            <doc-number>5544352</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5544352</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="29">
          <text>KIRSCH STEVEN T</text>
          <document-id>
            <country>US</country>
            <doc-number>5659732</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5659732</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="30">
          <text>SCHUETZE HINRICH</text>
          <document-id>
            <country>US</country>
            <doc-number>5675819</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5675819</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="31">
          <text>POVILUS DAVID S</text>
          <document-id>
            <country>US</country>
            <doc-number>5740425</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5740425</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="32">
          <text>ZHANG TIAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5832182</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5832182</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="33">
          <text>ANAND TEJWANSH S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5832496</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5832496</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Salton, G., et al., "Approaches to Passage Retrieval in Full Text Information Systems," Proceedings of the Sixteenth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR 93), ACM Press, 1993, pp. 49-58.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Callan, J.P., "Passage-level Evidence in Document Retrieval," Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval (SIGIR 94), Springer-Verlag, 1994, pp. 302-310.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Wilkinson, R., "Effective Retrieval of Structured Documents," Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval (SIGIR 94), Springer-Verlag, 1994, pp. 311-317.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Mittendon, E., et al., "Document and Passage Retrieval Based on Hidden Markov Models," Proceedings of the Seventh Annual International ACM-SIGIR Conference on Research and Development in Information Retrival (SIGR 94), Springer-Verlag, 1994, pp. 318-327.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>Woods, William A. and Schmolze, James G., "The KL-One Family," Harvard University Center for Research in computing Technology, Aiken Computation Laboratory, Cambridge, MA, Aug. 3, 1990, pp. 1-62.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>Woods, Williams A., "Understanding Subsumption and Taxonomy: A Framework for Progress," Harvard University Center for Research in Comparing Technology, Aiken Computation Laboratory, Cambridge, MA, Aug. 15, 1990, pp. 1-61.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>Chung, Kin-Man and Yuen, Herbert, "A "Tiny' Pascal Compiler: the P-Code Interpreter," BYTE Publications, Inc., Sep. 1978.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>Chung, Kin-Man and Yuen, Herbert, "A "Tiny' Pascal Compiler: Part 2: The P-Compiler," BYTE Publication, Inc., Oct. 1978.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>Thompson, Ken, "Regular Expression Search Algorithm," Communications of the ACM, vol. II, No. 6, p. 149 et seq., Jun. 1968.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="10">
          <text>Mitchell, James G., Maybury, William, and Sweet, Richard, Mesa Language Manual, Xerox Corporation.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="11">
          <text>McDaniel, Gene, "An Analysis of a Mesa Instruction Set," Xerox Corporation, May 1982.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="12">
          <text>Pier, Kenneth A., "A Retrospective on the Dorado, A High-Performance Personal Computer," Xerox Corporation, Aug. 1983.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="13">
          <text>Pier, Kenneth A., "A Retrospective on the Dorado, A High-Performance Personal Computer," IEEE Conference Proceedings, The 10th Annual international Symposium on Computer Architecture, 1983.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="14">
          <text>Eric Brill, "Some Advances in Transformation-Based Part of Speech Tagging," AAAI Conference, 1994.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation-in-part>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>49926895</doc-number>
              <kind>A</kind>
              <date>19950707</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5724571</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation-in-part>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sun Microsystems, Inc.</orgname>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUN MICROSYSTEMS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Woods, William A.</name>
            <address>
              <address-1>Winchester, MA, US</address-1>
              <city>Winchester</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Finnegan, Henderson, Farabow, Garrett &amp; Dunner, L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Alam, Hosain T.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Systems and methods consistent with the present invention respond to queries of stored information by receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers for stored documents; and constructing an index from the documents using the identifiers in the search result.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>RELATED APPLICATIONS</heading>
    <p num="1">
      This application is a continuation-in-part under 37 C.F.R. .sctn. 1.60 of U.S. patent application Ser.
      <br/>
      No. 08/499,268, for "Method and Apparatus for Generating Query Responses in a Computer-Based Document Retrieval System," filed Jul. 7, 1995, now U.S. Pat. No. 5,724,571 which is incorporated herein by reference.
    </p>
    <p num="2">
      This application is related to pending patent application Ser.
      <br/>
      No. 08/797,630, entitled, "Intelligent Network Browser Using Incremental Conceptual Indexer," filed Feb. 7, 1997, which is incorporated herein by reference.
      <br/>
      This application is also related to pending patent application Ser.
      <br/>
      No. 08/829,655, entitled, "Method and Apparatus for Distributed Indexing and Retrieval," filed the same day as this application.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="3">
      B.
      <br/>
      Field of the Invention
    </p>
    <p num="4">
      The present invention relates to text retrieval systems and, more particularly, to a method for distributing indexes containing conceptual information derived from documents and responding to queries using those indexes.
      <br/>
      The present invention also relates to responding to queries using existing indexes of conventional document retrieval systems by reindexing documents identified by those systems in accordance conceptual information derived from those documents.
    </p>
    <p num="5">C. Description of the Related Art</p>
    <p num="6">
      The development of efficient and effective text retrieval techniques is critical to managing the increasing amount of textual information available in electronic form.
      <br/>
      Until recently, information retrieval involved relatively small collections of machine readable text in the range of 100 megabytes of data.
      <br/>
      Networks bring together collections of information in the gigabyte range, and the increased amount of data makes the retrieval process more difficult.
    </p>
    <p num="7">
      There are two main concerns facing text retrieval systems: (1) How to identify terms in documents that should be included in the index; and (2) After indexing the terms, how to determine that a document matches a query? Conventional text retrieval techniques rely on indexing keywords in documents.
      <br/>
      Index terms can be from single words, noun phrases, and subject identifiers derived from syntactic and semantic analysis.
      <br/>
      Conventional text retrieval systems for the World Wide Web, such as Yahoo� (tm)  from Yahoo� Inc. and AltaVista (tm)  from Digital Equipment Corporation, use these and other types of keyword indexing techniques to index documents available on the web.
      <br/>
      Unfortunately, a document's keywords alone rarely capture the document's true contents.
      <br/>
      Consequently, systems relying on keywords in an index to retrieve documents in response to queries often provide unsatisfactory retrieval performance.
    </p>
    <p num="8">
      Yahoo�, AltaVista, and other convention text retrieval systems for the web employ programs called "web crawlers" to traverse the web.
      <br/>
      Web crawlers follow links from page to page and extract terms from all the pages that they encounter.
      <br/>
      Each search engine then makes the resulting information accessible by providing lists of specific pages that match an input search request or query.
    </p>
    <p num="9">
      Because the web constantly changes as existing pages are modified and new pages are added, web crawlers cannot simply traverse the web and index it once.
      <br/>
      Instead, to stay current, they must repeatedly traverse the web to identify changes for refreshing the index.
      <br/>
      Changes are made constantly and without notice, however, so it is not possible to keep up with them.
    </p>
    <p num="10">
      Moreover, many sites on the web are now reluctant to provide the access demanded by web crawlers to access and index the sites pages because the resources given to the web crawler detract from those for the users.
      <br/>
      This poses another problem to the ongoing success of such retrieval techniques on the web. "WAIS," which stands for Wide Area Information Servers, suggests one alternative to the use of web crawlers for indexing.
      <br/>
      WAIS is an architecture for a distributed information retrieval system based on the client server model of computation.
      <br/>
      WAIS allows users of computers to share information using a common computer-to-computer protocol.
      <br/>
      WAIS was originally designed and implemented by a development team at Thinking Machines, Inc. led by Brewster Kahle.
      <br/>
      WAIS requires the sites that publish information on the web to publish an index of that information as well.
      <br/>
      Search engines can then use the published indexes to respond to queries.
      <br/>
      Although WAIS helps the resource problem associated with web crawler-based text retrieval systems, it fails to address a more fundamental problem with conventional search and retrieval systems: the quality of the ranked output.
    </p>
    <p num="11">
      The quality of the output suffers from the way most searches occur.
      <br/>
      The most common methods for determining whether a document matches a query are the "boolean model" and the "statistical model." According to the boolean model, a match occurs when a document's index terms meet the boolean expression given by the user.
      <br/>
      The statistical model, on the other hand, is based on the similarity between statistical properties of the document and the query.
    </p>
    <p num="12">
      It is not unusual for conventional search engines using either approach to return a large number of matches for a simple query.
      <br/>
      When faced with a list of 20,000 hits in response to a query--not an uncommon experience when searching the web--a user cannot effectively review all the results.
      <br/>
      Whether the user accesses the matches serially or randomly, the review process takes an unwieldy amount of time to locate the documents of particular interest.
      <br/>
      Typically, Internet web searchers provide the user with the first 10 hits and continue to provide additional blocks of 10 until the user finds something acceptable or gives up.
      <br/>
      If the user has a simple information need and the answer shows up in the first 10 or 20 hits, then this is not unreasonable.
      <br/>
      However, if the user has serious research interest in the results, then it may be important to see the information available in the remaining hits.
    </p>
    <p num="13">
      Consequently, the criteria by which these hits are ranked becomes very important.
      <br/>
      More and more systems support some type of ranking feature because users have demanded easy-to-use query languages and ranking to sort out the most important information.
    </p>
    <p num="14">
      WAIS supports one document ranking scheme.
      <br/>
      WAIS scores documents based on the number of occurrences of a query term in a document, the location of the terms in a document, the frequency of those terms within the collection, and the size of the document.
      <br/>
      WAIS, however, uses a least-common-denominator standard that does not allow for sophisticated querying and ranking of results.
    </p>
    <p num="15">
      Moreover, most retrieval techniques provide ranked results with scoring methodologies that depend on statistics of the indexed collections.
      <br/>
      This means that the scores assigned to documents in different collections, even when using the same scoring methodology, are not commensurate and can not be used as an adequate basis for combining the ranked results from two separate searches.
      <br/>
      This poses a problem for distributing the indexing and retrieval processing among multiple processes or platforms.
    </p>
    <p num="16">
      At the same time, the growing volume of material for indexing has required search engine designers to focus on techniques for efficiency and volume processing, rather then on techniques for guaranteeing the best possible rankings.
      <br/>
      The conflict between these two objectives, accurate search results and indexing huge collections of information, poses a significant problem for the developers of the next generation of text retrieval systems.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="17">
      Accordingly, systems and methods consistent with the present invention substantially obviate one or more of the problems due to limitations, shortcomings, and disadvantages of the related art by distributing the process of indexing documents using the conceptual indexing approach among multiple processes or platforms, applying queries to each index individually, and combining the results using penalty-based scores that include a measure of the difference between terms of the query and the conceptual terms found in the index.
      <br/>
      A method consistent with the present invention for responding to queries of stored information comprises the steps, performed by a processor, of: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers for stored documents; and constructing an index from the documents using the identifiers in the search result.
    </p>
    <p num="18">Both the foregoing general description and the following detailed description are exemplary and explanatory only, and merely provide further explanation of the claimed invention.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="19">
      The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate systems and methods consistent with the invention and, together with the description, explain the advantages and principles of the invention. In the drawings,
      <br/>
      FIG. 1 is a block diagram of a distributed text retrieval system consistent with the present invention;
      <br/>
      FIG. 2 is a block diagram of one configuration of an index manager of the distributed text retrieval system consistent with the present invention;
      <br/>
      FIG. 3 is a flow chart of the steps performed by an index server for index modify and monitor functions consistent with the present invention;
      <br/>
      FIG. 4 is a flow chart of the steps performed by a query server consistent with the present invention;
      <br/>
      FIG. 5 is a flow chart of the steps performed by a query dispatcher/aggregator of the distributed text retrieval system consistent with the present invention;
      <br/>
      FIG. 6 is a block diagram of another configuration of the index manager of the distributed text retrieval system consistent with the present invention; and
      <br/>
      FIG. 7 is a flow chart of the steps of a reindexer of the index manager of FIG. 6.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="20">
      Reference will now be made in detail to a system and method consistent with the present invention.
      <br/>
      Wherever possible, the same reference numbers will be used throughout the drawings and the following description to refer to the same or like parts.
    </p>
    <p num="21">Overview</p>
    <p num="22">
      Conceptual indexing refers to extracting conceptual phrases from the source material, assimilating them into a hierarchically-organized, conceptual taxonomy, and indexing those concepts in addition to indexing the individual words of the source text.
      <br/>
      Dynamic passage retrieval refers to a technique for using the positional information about where words and concepts occur in text to locate specific passages of material within the text that are responsive to a query.
    </p>
    <p num="23">
      Systems consistent with the present invention assist users in retrieving specific documents from among a large collection of documents, such as web pages, using conceptual indexing and penalty-based, relaxation-ranking retrieval.
      <br/>
      To distribute the work of constructing and maintaining conceptual indexes, the indexes themselves are distributed among multiple processes or platforms typically located close to where the indexed information resides.
      <br/>
      The processes may be located on a single machine or on multiple platforms in one or more networks.
      <br/>
      Thus, the bulk of the maintenance of the indexes is done by the information providers rather than by centralized text retrieval systems.
      <br/>
      This eliminates the need for sites to provide service for repeated requests by programs such as web crawlers that traverse their pages to see if anything has changed.
      <br/>
      Rather, the sites perform their own indexing and provide a service to retrieval requests.
    </p>
    <p num="24">
      In this scheme, the sites employ a "push" model rather than a "pull" model for indexing.
      <br/>
      Rather than waiting for central indexers to pull that information from the site by repeated polling, the sites know when a page has changed and incrementally update their local index.
      <br/>
      Central to this architecture is an attribute of the dynamic passage retrieval algorithm that enables result lists from independent searches to be easily combined.
      <br/>
      Because the penalty scores assigned to passages by the relaxation-ranking algorithm are independent of collection size or statistics, the results of queries to different sites can be collated together and pruned on the basis of their penalty scores, without risk of losing more important information in favor of less important information.
    </p>
    <p num="25">
      Dynamic passage retrieval makes it possible for the information seeker to access the content of the retrieved documents conceptually to find specific items of information quickly.
      <br/>
      In this way, dynamic passage retrieval complements document retrieval technology rather than competing with it.
      <br/>
      This complementary relationship allows one to choose to index a large body of material using conventional techniques, either for legacy or compatibility reasons, or to obtain more compact indexes by, for example, omitting positional information associated with word matches.
    </p>
    <p num="26">
      Nevertheless, one can obtain the benefits of conceptual indexing and dynamic passage retrieval for the end user by reindexing the results of a traditional search using cascaded indexing.
      <br/>
      Systems consistent with the present invention assist users in retrieving specific documents from a large collection of documents using cascaded indexing.
      <br/>
      Cascaded indexing makes a two-stage process consisting of a traditional search using conventional text retrieval systems in high recall mode followed by a conceptual index of the result.
      <br/>
      This can be done as a way to provide more useful information access to an end user of a conventional retrieval system, or as a way to integrate conventional indexes into distributed indexing and retrieval.
      <br/>
      When a search of the World-Wide Web produces a results list with 20,000 matches, a conceptual index of the documents corresponding to the resulting hits makes it possible for the user to mine such an abundance of potentially relevant information effectively.
    </p>
    <p num="27">Distributed Indexing and Retrieval</p>
    <p num="28">System Configuration</p>
    <p num="29">
      FIG. 1 illustrates the components of a distributed indexing and retrieval system 110 consistent with the present invention.
      <br/>
      System 110 includes a user application 120, a query dispatcher/aggregator 130, and multiple index managers 140a and 140b.
      <br/>
      Although system 110 in FIG. 1 includes two index managers, more than two may be used to take full advantage of the principles of the present invention.
    </p>
    <p num="30">
      System 110 resides either in a single platform, such as a personal computer, workstation, or mainframe, or in a network, such as the Internet or an Intranet.
      <br/>
      System 110 may also be partitioned among multiple processes or platforms.
      <br/>
      For example, user application 120 may reside on a platform different from the platforms for query dispatcher/aggregator 130 and index manager 140.
    </p>
    <p num="31">
      Exemplary platforms for all or part of system 110 include IBM compatible machines with Windows 95.RTM. operating system, or conventional workstations, and the Sparcstation.RTM. manufactured by Sun Microsystems Corp. and the Solaris.RTM. operating system.
      <br/>
      In the case of a single platform, index managers 140 may be distributed among multiple processes in the platform.
      <br/>
      On the other hand, the index managers are typically distributed among multiple platforms in the network scenario.
      <br/>
      Each index manager 140 manages a conceptual index of content information such as web pages.
      <br/>
      The content may reside on the same platform with the index manager or the content may be located on remote platforms.
    </p>
    <p num="32">
      Thus, the content or material to be indexed is generally partitioned into separate domains, each managed by an index manager (140a or 140b).
      <br/>
      Index manager 140a or 140b is either specially configured to include functionality like that described below with reference to FIGS. 2-4, or configured to include functionality to integrate the system with legacy document retrieval systems like Yahoo� and AltaVista (see FIGS. 4, 6-7).
      <br/>
      Alternatively, an index manager itself can be configured as a query dispatcher/aggregator, integrating other index managers in a manner similar to way query dispatcher/aggregator 130 integrates index managers 140 in FIG. 1.
    </p>
    <p num="33">
      User application 120, for example, a web browser such as Netscape or Internet Explorer, receives user queries, including a term or combination of terms, and a set of parameters, and passes them to dispatcher/aggregator 130.
      <br/>
      This process uses a protocol for communicating queries and results between user application 120 and query dispatcher/aggregator 130, for example, the TCP/IP protocol used in the Internet.
      <br/>
      User application 120 receives the query terms from the user and the parameters from predetermined tables that may be modified by user preferences, and sends the query and parameters to query dispatcher/aggregator 130. (In an alternative configuration, the server upon which query dispatcher/aggregator 130 resides, provides user application 120 with a web page to enter the query and search parameters.
      <br/>
      After the user enters this data, user application 120 sends it to query dispatcher/aggregator 130 using the TCP/IP protocol.)
    </p>
    <p num="34">
      The parameters assist in the process of selecting and scoring hits.
      <br/>
      One typical parameter specifies the maximum number of hits desired (i.e., a hit limit parameter).
      <br/>
      Alternatively, query dispatcher/aggregator 130 uses a predetermined hit limit.
      <br/>
      Other parameters set criteria used in identifying hits from the conceptual index and determining penalty scores for the hits in accordance with user preferences.
      <br/>
      For example, a parameter may govern the value of a penalty score for things like missing terms from the hit.
    </p>
    <p num="35">
      Query dispatcher/aggregator 130 passes the query to index managers 140a and 140b, and collects and aggregates the results, including hits and corresponding scores.
      <br/>
      The hits are either identifiers for documents or passages within the documents, the documents themselves, or the passages within the documents that most closely match the input query.
      <br/>
      The scores are generated using the penalty-based algorithm that assigns a score based on a measure of the difference between a passage in the document and the query.
    </p>
    <p num="36">
      Query dispatcher/aggregator 130 collects the hits from index managers 140a and 140b in accordance with a specified hit limit parameter and returns scored hits together with their penalty scores to user application 120.
      <br/>
      Query dispatcher/aggregator 130 also uses the penalty scores assigned to the hits by the individual index managers 140a and 140b to collate the results into a merged list in increasing order of penalty, preferably eliminating duplicates if they are encountered.
      <br/>
      The hits with the highest penalty scores are pruned, if necessary, to reduce the resulting aggregated list to the maximum number of hits requested.
    </p>
    <p num="37">
      Asynchronously, and independently from the query processing, index managers 140a and 140b for the different partitions update their indexes according to the policies of their host sites, for example, web servers holding the content from which the index is built.
      <br/>
      Host site policies are based, for example, on a calender-driven process such as processing the index overnight or on a push model in which the index is updated whenever a site specific application notifies it of a page that needs to be indexed or reindexed.
      <br/>
      Thus, index managers 140 update the indexes dynamically and in real time, so they remain as current as the publishing host site chooses.
    </p>
    <p num="38">Index Manager</p>
    <p num="39">
      FIG. 2 is a block diagram of one configuration of an index manager 210, which can be index managers 140a, 140b.
      <br/>
      Index manager 210 is specially configured for distributed indexing and retrieval in a manner consistent with the present invention.
      <br/>
      Specifically, index manager 210 maintains a conceptual index 230 built using the conceptual indexing methodology described below.
    </p>
    <p num="40">
      Index manager 210 has two main functions: (1) building or modifying index 230, and (2) responding to queries from dispatcher/aggregator 130.
      <br/>
      These functions are performed by index server 240 and query server 220, respectively.
    </p>
    <p num="41">
      Index server 240 monitors content 250 for changes.
      <br/>
      Web page content changes as the proprietors of their web servers modify the existing pages, add new pages, or delete pages.
      <br/>
      Other examples of content include documents managed by an document processing systems, such as word processors and publishing systems, and databases of database management systems.
      <br/>
      According to the push model, the servers responsible for the content notify index server 240 of changes.
      <br/>
      Index server 240 then updates index 230 accordingly.
    </p>
    <p num="42">
      Query server 220 processes incoming document retrieval requests from query dispatcher/aggregator 130.
      <br/>
      Each request includes a query with parameters.
      <br/>
      If query dispatcher/aggregator 130 does not provide a hit limit parameter, query server 220 uses its own predetermined hit limit when processing requests.
      <br/>
      The predetermined hit limit may simply be the number of the hits, the number of the hits with penalty scores that do not exceed a particular value, or all hits regardless of the penalty scores, provided there is some correspondence between the query and the document or passage (e.g., paragraph or relevant section) within the document.
    </p>
    <p num="43">
      Query server 220 accesses conceptual index 230 to identify matches for the query, i.e., hits, and assigns scores to the hits in accordance with the penalty-based scoring algorithm.
      <br/>
      Query server 220 then returns the hits and scores to query dispatcher/aggregator 130 in accordance with the hit limit.
    </p>
    <p num="44">Process</p>
    <p num="45">Index Server</p>
    <p num="46">
      FIG. 3 includes flow charts of two functions of index server 240 that keep it current, building/modifying and monitoring index 230.
      <br/>
      The process of building index 230 includes two steps.
      <br/>
      First, index server 240 receives information from publishers such as web servers on the Internet (step 310).
      <br/>
      Index server 240 then modifies conceptual index 230 (step 320).
    </p>
    <p num="47">The taxonomic methodology used in conceptual indexing, which provides a solution to the problems of keyword indexing, is discussed in W. Woods and J. Schmolze, "The KL-ONE Family," Harvard University, Aiken Computation Laboratory, Aug. 3, 1990, and W. Woods, "Understanding Subsumption and Taxonomy: A Framework for Progress," Harvard University, Aiken Computation Laboratory, Aug. 15, 1990.</p>
    <p num="48">
      In general, conceptual indexing involves techniques for automatically organizing all of the words and phrases of material into a conceptual taxonomy that explicitly links each concept to its most specific generalizations.
      <br/>
      The taxonomy is a graph structure that orders concepts by generality using ISA ("is a") links.
      <br/>
      For example, the following taxonomy represents the relationship between the concepts "computer" and "laptop":
    </p>
    <p num="49">
      computer
      <br/>
      .vertline.--laptop.
    </p>
    <p num="50">
      In this representation, the "computer" concept is a more general form of the "laptop" concept.
      <br/>
      Thus, the "computer" concept is depicted as a parent of the "laptop" concept in the graph structure.
      <br/>
      The taxonomy can be used alone to organize information for browsing, or it can be used as an adjunct to search and retrieval techniques to construct improve query results.
    </p>
    <p num="51">
      Conceptual indexing of text preferably involves four steps: (1) heuristic identification of phrases in the text, (2) mapping these phrases into internal conceptual structures, (3) classifying the structures into a taxonomy, and (4) linking the concept to the location of the phrase in the text.
      <br/>
      As concepts are assimilated into the conceptual taxonomy during indexing, a broad coverage English lexicon is consulted to determine semantic relationships to other concepts based on recorded knowledge about the meanings of words.
      <br/>
      If any of the words of an indexed phrase do not yet have conceptual counterparts in the evolving taxonomy, they are assimilated into the taxonomy using information from the lexicon.
      <br/>
      The taxonomy does not contain all of the information from the lexicon, but only the information for words and concepts extracted from the indexed text or from other phrases assimilated into the taxonomy.
    </p>
    <p num="52">In addition to conceptual information extracted from the content of documents, index 230 also contains identifiers for the documents or passages within the documents corresponding to the indexed conceptual information.</p>
    <p num="53">
      Three types of subsumption relationships in the taxonomy include: (1) asserted subsumption relationships, (2) structural subsumption relationships, and (3) combination of subsumption and structural relationships.
      <br/>
      The asserted subsumption relationships come from only information in the lexicon.
      <br/>
      This means that the lexicon provides the foundational relationships for determining the taxonomic relationship between concepts.
    </p>
    <p num="54">
      Structural relationships are derived from the structure of phrases in the text being indexed.
      <br/>
      If the lexicon does not have information required to determine where a concept belongs in the taxonomy, the concept is placed in the taxonomy in accordance with structural relationships to other concepts already in the taxonomy.
      <br/>
      In general, a concept's place in the taxonomy can be based on both structural and subsumption relationships.
    </p>
    <p num="55">
      The taxonomy can be used as an aid in both formulating and processing queries.
      <br/>
      In querying the index, terms are treated as concepts and are expanded by their specific children in the taxonomy.
      <br/>
      Likewise, the taxonomy places limitations on the range of concepts that may correspond to query terms.
      <br/>
      For additional information and examples of conceptual indexing, see U.S. patent application Ser.
      <br/>
      No. 08/797,630, entitled, "Intelligent Network Browser Using Incremental Conceptual Indexer," filed Feb. 7, 1997.
    </p>
    <p num="56">
      Index server 240 also monitors index 230 to determine whether any information in it is stale (step 330).
      <br/>
      This determination may be based on a notification from the publisher that the information is old.
      <br/>
      Alternatively, when modifying index information (step 320), index server 240 may assign an indicator, such as a date, to the information in index 230.
      <br/>
      Index server 240 may then use the indicator to determine whether information in index 230 is stale.
      <br/>
      When index server 240 identifies stale information in index 230 (step 330), index server 240 updates index 230 accordingly (step 240), for example, by deleting stale information.
    </p>
    <p num="57">Query Server</p>
    <p num="58">
      FIG. 4 is a flow chart of the steps performed by query server 220.
      <br/>
      First, query server 220 receives a query and parameters from query dispatcher/aggregator 130 (step 410).
      <br/>
      The hit limit parameter may be one set by user application 120 who submitted the query, by query dispatcher/aggregator 130, or by query server 220.
    </p>
    <p num="59">
      Query server 220 then accesses index 230 to identify documents or passages in documents corresponding to conceptual information in index 230 that most closely correspond to the query (step 420).
      <br/>
      Query server 220 scores these hits using a scoring algorithm that scores passages by measuring how much they depart (in any of several dimensions) from an ideal passage, i.e., an exact replica of the query (step 430).
      <br/>
      The measure is referred to as relaxation ranking.
      <br/>
      In contrast with traditional retrieval ranking methods, where scores of results are based on accruing weights corresponding to pieces of evidence that a given result is relevant to a query, the scores assigned by the relaxation-ranking algorithm are based on accruing penalties for various kinds of departure from the ideal.
      <br/>
      Thus, the best passage is the one with the lowest score, as opposed to the highest score used by customary approaches.
      <br/>
      This approach is referred to as penalty-based scoring.
    </p>
    <p num="60">
      In addition to providing high-quality rankings, penalty-based scores have the additional attractive property that the values of the scores themselves are meaningful and interpretable.
      <br/>
      Thus, a user looking at a score can determine whether a match is likely to be good or not and can estimate how good it is likely to be.
      <br/>
      For example, zero (0) is a perfect score and many retrieved results will achieve this score.
      <br/>
      In contrast, scores assigned by traditional methods are only relatively comparable, and then only when derived from the same collection.
      <br/>
      Even in the case of probabilistic retrieval, where the scores are estimates of probabilities of relevance, and therefore should be somewhat interpretable, the individual probability scores are relative to the statistics of the collection and not individually meaningful.
      <br/>
      The probability of one (1) is virtually never reached, and there is no a priori probability that corresponds to a definitely relevant match.
      <br/>
      The aforementioned patent application, Ser.
      <br/>
      No. 08/499,268, for "Method and Apparatus for Generating Query Responses in a Computer-Based Document Retrieval System," describes penalty-based scoring in greater detail.
    </p>
    <p num="61">
      Because the penalty-based scores are individually meaningful according to criteria that do not depend on the material being indexed, two different result lists from different collections can be collated together on the basis of their penalty scores without the problems faced by other scoring methods used in information retrieval.
      <br/>
      This makes it possible to subdivide material to be indexed and distribute the work of indexing and search, since the results can easily be combined.
    </p>
    <p num="62">Returning to FIG. 4, query server 220 returns the hits and corresponding scores to query dispatcher/aggregator 130 (step 440).</p>
    <p num="63">Query Dispatcher/Aggregator</p>
    <p num="64">
      FIG. 5 is a flow chart of the steps performed by query dispatcher/ aggregator 130.
      <br/>
      First, query dispatcher/aggregator 130 receives a query and parameters from, for example, user application 120 (step 510).
      <br/>
      Query dispatcher/ aggregator 130 then passes the query to each of the distributed index managers 140 and, particularly, the query server 230 of each index manager 140 (step 520).
      <br/>
      After each query server 230 processes the query using the associated conceptual index 230, query dispatcher/aggregator 130 receives the hits and scores (step 530).
      <br/>
      Query dispatcher/aggregator 130 then merges the hits and scores from the various index managers 140 (step 540) and prunes the results to, for example, eliminate duplicates or hits with scores above a threshold value (step 550).
      <br/>
      Finally, query dispatcher/aggregator 130 returns the results, including the hits and scores to user application 120 (step 560).
    </p>
    <p num="65">Cascaded Indexing and Retrieval</p>
    <p num="66">
      Cascaded indexing and retrieval involves the dynamic construction of a conceptual index of information identified by the results of a conventional text retrieval system such as Yahoo� and AltaVista.
      <br/>
      In order to provide for material that is already indexed by some other methodology that does not provide commensurate penalty-based scores, for example, the methodology used by AltaVista a reindexer takes the results of the conventional search and reindexes the documents, such as web pages, using the relaxation ranking method of the dynamic passage retrieval algorithm.
      <br/>
      The reindexer then provides the results of this reindexing process to the query dispatcher/aggregator.
      <br/>
      The reindexer interacts with the conventional index server of AltaVista, passing the query to that server.
      <br/>
      The reindexer then indexes the contents of the documents identified by the server in response to the query.
    </p>
    <p num="67">
      FIG. 6 illustrates the components of an index manager 610 consistent with the present invention for implementing cascaded indexing and retrieval.
      <br/>
      Index manager 610 consists of query server 220, index 230, and a reindexer 620.
      <br/>
      Index manager 610 is designed to complement a conventional document retrieval system 625, which consists of a document retrieval server 630 and an index 650 of content 640, such as web pages.
      <br/>
      In the Internet, users send queries to document retrieval system 625 using the TCP/IP protocol, and system 625 in turn accesses index 650 to identify specific web pages that satisfy the terms of each query according to predetermined criteria set by system 625.
    </p>
    <p num="68">
      To implement cascaded indexing in a manner consistent with the present invention, query server 220 provides the user's query to reindexer 620.
      <br/>
      Reindexer 620 formats the query for system 630 and transmits the reformatted query to server 630.
      <br/>
      Server 630 provides the query results to reindexer 620, which accesses the content identified in the hits and reindexes the content into conceptual index 230.
      <br/>
      Query server 220 then processes the query on index 230 in the manner discussed above, and returns the hits and scores to user application 120.
    </p>
    <p num="69">Process</p>
    <p num="70">Cascaded indexing uses the query server processing discussed above with reference to FIG. 4, with the additional step of providing the query to reindexer 620 before accessing index 230 to process the input query.</p>
    <p num="71">Reindexer</p>
    <p num="72">
      FIG. 7 is a flow chart of the steps performed by reindexer 620.
      <br/>
      First, reindexer 620 receives the query from query server 220 (step 710), reformats the query for document retrieval system 625 (step 720), and then sends the reformatted query to server 630 (step 730).
      <br/>
      After reindexer 620 sends the query, it receives the hits of document retrieval system 625 (step 740).
      <br/>
      Reindexer 620 reindexes the documents related to the hits identified by system 625 into index 230 (step 750).
    </p>
    <p num="73">Conclusion</p>
    <p num="74">
      To overcome the shortcomings of conventional text retrieval systems, systems consistent with the present invention can retrieve specific documents from a large collection of documents using conceptual indexing and penalty-based, relaxation-ranking retrieval.
      <br/>
      This combination enables the system to distribute the conceptual index among a plurality of process or platforms.
      <br/>
      Conceptual indexing and penalty-based, relaxation-ranking also enhances text retrieval of conventional systems through cascaded indexing.
    </p>
    <p num="75">
      The foregoing description of an implementation of the invention has been presented for purposes of illustration and description.
      <br/>
      It is not exhaustive and does not limit the invention to the precise form disclosed.
      <br/>
      Modifications and variations are possible in light of the above teachings or may be acquired from practicing of the invention.
      <br/>
      For example, the described implementation includes software but the present invention may be implemented as a combination of hardware and software or in hardware alone.
      <br/>
      The scope of the invention is defined by the claims and their equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34.</claim-text>
      <claim-text>A method for responding to queries of stored information comprising the steps, performed by a processor, of: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine identifying stored documents; retrieving the stored documents based on the search result; constructing an index from the retrieved documents;</claim-text>
      <claim-text>and permitting searches of the retrieved documents in accordance with the index.</claim-text>
      <claim-text>1. A method for responding to queries of stored information comprising the steps, performed by a processor, of:</claim-text>
      <claim-text>receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers for stored documents;</claim-text>
      <claim-text>and constructing an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>2. The method of claim 1, wherein the constructing step includes the substeps of: extracting conceptual information from the documents; analyzing the extracted conceptual information semantically;</claim-text>
      <claim-text>and assembling the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>3. The method of claim 1, wherein the constructing step includes the substep of: accessing the identified documents.</claim-text>
      <claim-text>4. An apparatus for responding to queries of stored information, comprising: first receiving means configured to receive a query identifying desired information; providing means configured to provide the query as a search request to a search engine; second receiving means configured to receive a search result from the search engine, including identifiers for stored documents;</claim-text>
      <claim-text>and constructing means configured to construct an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>5. The apparatus of claim 4, wherein the constructing means includes: extracting means configured to extract conceptual information from the documents; analyzing means configured to analyze the extracted conceptual information semantically;</claim-text>
      <claim-text>and assembling means configured to assemble the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>6. The apparatus of claim 4, wherein the constructing means includes: accessing means configured to access the identified documents.</claim-text>
      <claim-text>7. A computer program product comprising: a computer usable medium having computer readable code embodied therein for responding to queries of stored information, the computer usable medium comprising: a first receiving module configured to receive a query identifying desired information; a providing module configured to provide the query as a search request to a search engine; a second receiving module configured to receive a search result from the search engine, including identifiers for stored documents;</claim-text>
      <claim-text>and a constructing module configured to construct an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>8. The computer usable medium of claim 7, wherein the constructing module includes: an extracting module configured to extract conceptual information from the documents; an analyzing module configured to analyze the extracted conceptual information semantically;</claim-text>
      <claim-text>and an assembling module configured to assemble the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>9. The computer usable medium of claim 7, wherein the constructing module includes: an accessing module configured to access the identified documents.</claim-text>
      <claim-text>10. A method for responding to queries comprising the steps, performed by a processor, of: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers to documents distributed among a plurality of platforms;</claim-text>
      <claim-text>and constructing an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>11. An apparatus for responding to queries of stored information, comprising: first receiving means configured to receive a query identifying desired information; providing means configured to provide the query as a search request to a search engine; second receiving means configured to receive a search result from the search engine, including identifiers to documents distributed among a plurality of platforms;</claim-text>
      <claim-text>and constructing means configured to construct an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>12. A computer program product comprising: a computer usable medium having computer readable code embodied therein for responding to queries of stored information, the computer usable medium comprising: a receiving module configured to receive a query identifying desired information; a providing module configured to provide the query as a search request to a search engine; a receiving module configured to receive a search result from the search engine, including identifiers to documents distributed among a plurality of platforms;</claim-text>
      <claim-text>and a constructing module configured to construct an index from the documents using the identifiers in the search result.</claim-text>
      <claim-text>13. A method for accessing stored information comprising the steps, performed by a processor, of: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers for stored documents; constructing an index from the documents accessed using the search result; identifying hits representing information in the index corresponding to the query; determining, for each hit, a measure of a difference between the query and the information from one of a plurality of stored indexes corresponding to the hit;</claim-text>
      <claim-text>and combining the hits from the stored indexes in accordance with the corresponding measure.</claim-text>
      <claim-text>14. An apparatus for accessing stored information, comprising: first receiving means configured to a query identifying desired information; providing means configured to provide the query as a search request to a search engine; second receiving means configured to receive a search result from the search engine, including identifiers for stored documents; constructing means configured to construct an index from the documents accessed using the search result; identifying means configured to identify hits representing information in the index corresponding to the query; determining means configured to determine, for each hit, a measure of a difference between the query and the information from one of a plurality of stored indexes corresponding to the hit;</claim-text>
      <claim-text>and combining means configured to combine the hits from stored the indexes in accordance with the corresponding measure.</claim-text>
      <claim-text>15. A computer program product comprising: a computer usable medium having computer readable code embodied therein for accessing stored information, the computer usable medium comprising: a receiving module configured to a query identifying desired information; a providing module configured to provide the query as a search request to a search engine; a receiving module configured to receive a search result from the search engine, including identifiers for stored documents; a constructing module configured to construct an index from the documents accessed using the search result; an identifying module configured to identify hits representing information in the index corresponding to the query; a determining module configured to determine, for each hit, a measure of a difference between the query and the information from one of a plurality of stored indexes corresponding to the hit;</claim-text>
      <claim-text>and a combining module configured to combine the hits from stored the indexes in accordance with the corresponding measure.</claim-text>
      <claim-text>16. A method for accessing information comprising the steps, performed by a processor, of: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine, including identifiers for stored documents; constructing an index of conceptual information from the documents using the identifiers in the search result; identifying conceptual information from the index that corresponds to the query;</claim-text>
      <claim-text>and determining a measure of a difference between the query and the identified information.</claim-text>
      <claim-text>17. The method of claim 16, wherein the constructing step includes the substep of: extracting conceptual information from the identified documents;</claim-text>
      <claim-text>and assembling the index from the extracted conceptual information, reflecting relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>18. The method of claim 17, wherein the searched documents are linked to other documents in a parent-child relationship, wherein extracting step includes the substep of: accessing child-documents linked to the identified documents;</claim-text>
      <claim-text>and wherein the assembling step includes the substep of: including in the index conceptual information extracted from the child-documents.</claim-text>
      <claim-text>19. The method of claim 16, further comprising step of: retrieving a portion of one of the documents identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>20. The method of claim 19, wherein the retrieving step further includes the substep of: receiving a request to retrieve the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>21. The method of claim 20, wherein the receiving step further includes the substep of presenting an identifier for the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>22. An apparatus for accessing stored information, comprising: first receiving means configured to receive a query identifying desired information; providing means configured to provide the query as a search request to a search engine; second receiving means configured to receive a search result from the search engine, including identifiers for stored documents; constructing means configured to construct an index of conceptual information from the documents using the identifiers in the search result; identifying means configured to identify conceptual information from the index that corresponds to the query;</claim-text>
      <claim-text>and determining means configured to identify a measure of a difference between the query and the identified information.</claim-text>
      <claim-text>23. The apparatus of claim 22, wherein the constructing means includes: extracting means configured to extract conceptual information from the identified documents;</claim-text>
      <claim-text>and assembling means configured to assemble the index from the extracted conceptual information, reflecting relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>24. The apparatus of claim 23, wherein the searched documents are linked to other documents in a parent-child relationship, wherein the extracting means includes: accessing means configured to access child-documents linked to the identified documents;</claim-text>
      <claim-text>and</claim-text>
      <claim-text>wherein the assembling means includes: including means configured to include in the index conceptual information extracted from the child-documents.</claim-text>
      <claim-text>25. The apparatus of claim 22, further comprising: retrieving means configured to retrieve a portion of one of the documents identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>26. The apparatus of claim 25, wherein the retrieving means further includes: receiving means configured to receive a request to retrieve the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>27. The apparatus of claim 26, wherein the receiving means configured to receive a request to retrieve the portion of the document identified in the index as including conceptual information corresponding to the query, includes: presenting means configured to present an identifier for the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>28. A computer program product comprising: a computer usable medium having computer readable code embodied therein for accessing stored information, the computer usable medium comprising: a receiving module configured to receive a query identifying desired information; a providing module configured to provide the query as a search request to a search engine; a receiving module configured to receive a search result from the search engine, including identifiers for stored documents; a constructing module configured to construct an index of conceptual information from the documents using the identifiers in the search result; an identifying module configured to identify conceptual information from the index that corresponds to the query;</claim-text>
      <claim-text>and a determining module configured to identify a measure of a difference between the query and the identified information.</claim-text>
      <claim-text>29. The computer usable medium of claim 28, wherein the constructing module includes: an extracting module configured to extract conceptual information from the identified documents;</claim-text>
      <claim-text>and an assembling module configured to assemble the index from the extracted conceptual information, reflecting relations based on semantic data in a stored lexicon.</claim-text>
      <claim-text>30. The computer usable medium of claim 29, wherein the searched documents are linked to other documents in a parent-child relationship, wherein the extracting module includes: an accessing module configured to access child-documents linked to the identified documents;</claim-text>
      <claim-text>and</claim-text>
      <claim-text>wherein the assembling module includes: an including module configured to include in the index conceptual information extracted from the child-documents.</claim-text>
      <claim-text>31. The computer usable medium of claim 28, further comprising: a retrieving module configured to retrieve a portion of one of the documents identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>32. The computer usable medium of claim 31, where in the retrieving module further includes: a receiving module configured to receive a request to retrieve the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
      <claim-text>33. The computer usable medium of claim 32, wherein the receiving module configured to receive a request to retrieve the portion of the document identified in the index as including conceptual information corresponding to the query, includes: a presenting module configured to present an identifier for the portion of the document identified in the index as including conceptual information corresponding to the query.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The method of claim 34, wherein the constructing step includes the substeps of: extracting conceptual information from the documents; analyzing the extracted conceptual information semantically;</claim-text>
      <claim-text>and assembling the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The method of claim 34, wherein the step of constructing an index from the retrieved documents, includes indexing the retrieved documents in accordance with a first search algorithm, and wherein the step of permitting searches of the retrieved documents in accordance with the index, includes using a second search algorithm that is different from the first search algorithm.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. The method of claim 34, wherein the step of constructing an index from the retrieved documents, includes indexing the retrieved documents using an algorithm that includes a factor proportional to the distance between occurrences of terms in each document.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. The method of claim 34, wherein the step of constructing an index from the retrieved documents, includes indexing the retrieved documents to support passage retrieval in each retrieved document.</claim-text>
    </claim>
    <claim num="39">
      <claim-text>39. A query processing apparatus, comprising: at least one memory having program instructions to receive a query identifying desired information, provide the query as a search request to a search engine, receive a search result from the search engine identifying stored documents, retrieve the stored documents based on the search result, construct an index from the retrieved documents, and permit searches of the retrieved documents in accordance with the index;</claim-text>
      <claim-text>and a processor for executing the instructions.</claim-text>
    </claim>
    <claim num="40">
      <claim-text>40. A query processing apparatus according to claim 39, wherein the program instructions to construct an index from the retrieved documents include instructions to extract conceptual information from the documents, analyze the extracted conceptual information semantically, and assemble the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
    </claim>
    <claim num="41">
      <claim-text>41. A computer readable medium containing instructions for controlling a data processing system to perform a query processing method, the method comprising: receiving a query identifying desired information; providing the query as a search request to a search engine; receiving a search result from the search engine identifying stored documents; retrieving the stored documents based on the search result; constructing an index from the retrieved documents;</claim-text>
      <claim-text>and permitting searches of the retrieved documents in accordance with the index.</claim-text>
    </claim>
    <claim num="42">
      <claim-text>42. The computer readable medium of claim 41, wherein the constructing operation includes: extracting conceptual information from the documents; analyzing the extracted conceptual information semantically;</claim-text>
      <claim-text>and assembling the index from the extracted conceptual information in a manner that reflects relations based on semantic data in a stored lexicon.</claim-text>
    </claim>
  </claims>
</questel-patent-document>