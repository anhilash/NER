<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181729B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181729</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181729</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="26320141" extended-family-id="748854">
      <document-id>
        <country>US</country>
        <doc-number>09330944</doc-number>
        <kind>A</kind>
        <date>19990611</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09330944</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43164842</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>IE</country>
        <doc-number>970900</doc-number>
        <kind>A</kind>
        <date>19971219</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997IE-0000900</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>IE</country>
        <doc-number>S981071</doc-number>
        <kind>A</kind>
        <date>19981218</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998IE-S001071</doc-number>
      </priority-claim>
      <priority-claim kind="international" sequence="3">
        <country>WO</country>
        <doc-number>IE9800110</doc-number>
        <kind>A</kind>
        <date>19981218</date>
        <priority-linkage-type>W</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1998WO-IE00110</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04B   1/707       20110101A I20150217RMEP</text>
        <ipc-version-indicator>
          <date>20110101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>B</subclass>
        <main-group>1</main-group>
        <subgroup>707</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20150217</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04J  13/00        20110101A I20150217RMEP</text>
        <ipc-version-indicator>
          <date>20110101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>J</subclass>
        <main-group>13</main-group>
        <subgroup>00</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20150217</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04J  13/10        20110101A I20150217RMEP</text>
        <ipc-version-indicator>
          <date>20110101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>J</subclass>
        <main-group>13</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20150217</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>375130000</text>
        <class>375</class>
        <subclass>130000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>375140000</text>
        <class>375</class>
        <subclass>140000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>375E01002</text>
        <class>375</class>
        <subclass>E01002</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>708250000</text>
        <class>708</class>
        <subclass>250000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04B-001/707</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>B</subclass>
        <main-group>1</main-group>
        <subgroup>707</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04J-013/004</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>J</subclass>
        <main-group>13</main-group>
        <subgroup>004</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04J-013/107</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>J</subclass>
        <main-group>13</main-group>
        <subgroup>107</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04J-2013/0037</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>J</subclass>
        <main-group>2013</main-group>
        <subgroup>0037</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>34</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>11</number-of-drawing-sheets>
      <number-of-figures>11</number-of-figures>
      <image-key data-format="questel">US6181729</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Spread spectrum communication</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GIALLORENZI THOMAS R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6091760</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6091760</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="2">
          <text>LE STRAT EVELYNE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5559829</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5559829</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Mo-Han Fong, et al., "Concatenated Orthogonal/PN Spreading Scheme for Cellular DS-CDMA Systems with Integrated Traffic," Communications-Gateway to Globalization, Proceedings of the Conference on Communications, Seattle, Jun. 18-22, 1995, vol. 2, Jun. 18, 1995, pp. 905-909, Institute of Electrical and Electronics Engineers.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>J. Das, "A Technique for Improving the Efficiency of M-ARY Signaling," IEEE Transactions on Communications, vol. COM-32, No. 2, Feb. 1984, pp. 199-201.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>E. Le Strat, "New Spreading Codes for a DS-CDMA Mobile Radio System Using a Rake Receiver in a Multi-User Interference Environment," IEEE ISSSTA '94, Proceedings of IEEE 3rd International Symposium on Spread Spectrum Techniques and Applications, Oulu, Finland, Jul. 4-6, 1994, vol. 2, pp. 401-405.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>T. O'Farrell, "New Signature Code Sequence Design Techniques for CDMA Systems," Electronics Letters, vol. 27, No. 4, Feb. 14, 1991, pp. 371-373.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>WO</country>
              <doc-number>PCT/IE98/00110</doc-number>
              <date>19981218</date>
            </document-id>
          </parent-doc>
        </relation>
      </continuation>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Supergold Communication Limited</orgname>
            <address>
              <address-1>Limassol, CY</address-1>
              <city>Limassol</city>
              <country>CY</country>
            </address>
          </addressbook>
          <nationality>
            <country>CY</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUPERGOLD COMMUNICATION</orgname>
          </addressbook>
          <nationality>
            <country>CY</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>O'Farrell, Timothy</name>
            <address>
              <address-1>Leeds, GB</address-1>
              <city>Leeds</city>
              <country>GB</country>
            </address>
          </addressbook>
          <nationality>
            <country>GB</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Lipsitz, Barry R.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Le, Amanda T.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Spread spectrum communication techniques and applications using signature sequences are described to reduce the effects of certain transmission impairments such as co-channel interference, multiple access interference and intersymbol interference.
      <br/>
      Signature sequences with structured properties are obtained by generating cosets from a seed set of sequences, constructing a subset of sequences by concatenating the sequences of a coset and constructing a full set of sequences by concatenating the subsets of sequences.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">This application is a Continuation PCT/IE98/00110 filed Dec. 18, 1998.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">The present invention relates to spread spectrum communication and more particularly, to spread spectrum communication techniques and applications using signature sequences.</p>
    <p num="3">
      Spread spectrum communication techniques are used for information carrying signals in a variety of communication systems because of their ability to reduce the effects of certain transmission impairments.
      <br/>
      Many multi-user communication techniques suffer co-channel interference, multiple access interference and intersymbol interference.
      <br/>
      The use of spread spectrum transmission and reception attenuates these interference types.
    </p>
    <p num="4">
      In Local Area Networks (LANs) there is an increasing desire to extend or replace wired LANs in order to increase functionality and maximise the number of potential applications for such systems.
      <br/>
      This trend facilitates the growing need for wireless access.
      <br/>
      This wireless access allows mobile computer users to remain in contact with a given corporate LAN over short distances.
      <br/>
      Currently available systems provide such connections using either radio or infrared communication technology.
      <br/>
      For certain system requirements, this communication is adequate.
      <br/>
      However, the application of such technologies to wireless LANs is relatively new and therefore can prove to be both expensive and unreliable.
      <br/>
      Furthermore, the data transmission rates achievable are relatively low which significantly limits the number of applications to which the systems may be applied.
      <br/>
      Coverage of a large area using infrared technology is particularly expensive, even more expensive than the radio communication equivalent.
      <br/>
      While point-to-point or line-of-sight infrared technology is cheaper than radio technology, it is unsuitable for most wireless LANs.
    </p>
    <p num="5">
      The main constraint on using any wireless LAN is interference.
      <br/>
      Infrared transmission particularly suffers from inter-symbol interference produced by multipath propagation effects.
      <br/>
      Achieving full coverage in an operating environment, while keeping within the limits of eye safety presents another problem to system designers, as does contending with interference produced by natural and man-made light sources that might be present.
      <br/>
      A further problem occurs when designing infrared receivers for such systems in that the receivers must provide the required sensitivity and bandwidth at minimal cost.
    </p>
    <p num="6">
      Achieving full room coverage while avoiding multipath propagation are conflicting requirements in a wireless infrared LAN and full room coverage is essential if reliable communication to and from any point within the room is needed.
      <br/>
      In order to achieve full room coverage, it is necessary to diffuse the transmitted infrared radiation.
      <br/>
      While diffuse transmission will reflect off walls and ceilings to fill the room the signal power reaching a given receiver is usually very small necessitating the use of very sensitive receivers.
      <br/>
      The problem of sensitivity is compounded by the necessity to detect a weak information bearing signal in strong interference.
      <br/>
      As a result of these problems there are few commercial infrared wireless LANs or associated systems available on the market.
    </p>
    <p num="7">
      Commercially available systems therefore tend to use elaborate structures and circuitry, which are expensive when compared with radio technologies.
      <br/>
      While there is a dearth of infrared technologies that support multi-user communication, there are numerous infrared technologies that support directed line-of-sight transmission.
      <br/>
      The most commonly available of these is the infrared serial port link based on the Infrared Data Association (IrDA) Standard.
      <br/>
      IrDA links can operate at data rates up to 4 Mb/s and are used in relatively inexpensive IrDA access points.
      <br/>
      However, IrDA links are only guaranteed to operate over a one meter range and are limited generally to one-to-one communication.
      <br/>
      IrDA is primarily intended as a replacement for a single wire-connection and is not intended for multi-user access.
      <br/>
      Notwithstanding this limitation, the popularity of IrDA clearly illustrates the enormous demand for reliable wireless technology.
      <br/>
      The best way to achieve multi-user links is to flood the operating environment with infrared light.
      <br/>
      While this enables multiple-users to connect to a network from anywhere in the operating environment, significant power is lost in such a diffuse environment thereby compromising the signal-to-noise ratio (SNR) at the receiver.
    </p>
    <heading>BRIEF SUMMARY OF THE INVENTION</heading>
    <p num="8">
      It is an object of the present invention to seek to provide a method and apparatus for the generation of signature sequences for spread spectrum communication, which will overcome the aforementioned problems.
      <br/>
      It is a further object of the invention to provide transmitter and receiver circuitry for coded spread spectrum signals.
    </p>
    <p num="9">Accordingly, the present invention provides a method of constructing signature sequences for spread spectrum communication techniques, the method comprising:</p>
    <p num="10">
      selecting a seed set of sequences;
      <br/>
      forming cosets from the seed set of sequences;
      <br/>
      constructing a subset of sequences by concatenating the sequences of a coset; and
      <br/>
      constructing a full set of sequences by concatenating subsets of sequences.
    </p>
    <p num="11">
      The invention further provides an apparatus for constructing and encoding signature sequences for spread spectrum communication techniques, the apparatus comprising:
      <br/>
      a seed set generating means for constructing a seed set of sequences;
      <br/>
      a coset generating means for generating cosets of sequences;
      <br/>
      an expansion means which concatenates the sequences of a coset according to a predetermined order to form a subset of sequences for each coset; and
      <br/>
      a set generating means for constructing a full set of sequences by concatenating subsets.
    </p>
    <p num="12">
      Conveniently, the seed set generating means comprises a plurality of shift registers each having an input, a system clock input, logic gates, a plurality of register cells/stages and an output to form a sequence of the seed set.
      <br/>
      A typical seed set generating means is constructed from a number of linear feedback shift registers.
    </p>
    <p num="13">The cosets are formed from the seed set utilising biphase multiplication techniques, preferably by multiplication of each sequence of the seed set by a sequence element for each element of the corresponding sequence.</p>
    <p num="14">The expansion means comprises a plurality of inputs, each one corresponding to a sequence from a coset, multiplexers, counters, logic gates, a system clock input and a plurality of outputs to form a subset of sequences.</p>
    <p num="15">The set generating means comprises a plurality of shift registers each having an input, a system clock input and a plurality of register cells/stages with outputs to form the full set of sequences.</p>
    <p num="16">
      Preferably, the seed set generating means, the coset generating means, the expansion means and the full set generating means are realisable utilising electronic circuitry, including memory devices such as registers, ASICs or FPLAs.
      <br/>
      Optionally, the means are realisable utilising dedicated software techniques.
    </p>
    <p num="17">
      The present invention also provides an apparatus for decoding signature sequences in a spread spectrum communications system, the apparatus comprising:
      <br/>
      means for receiving coded signals;
      <br/>
      means for generating sequence functions;
      <br/>
      means for combining received coded signals with sequence functions to produce despread signal outputs;
      <br/>
      means for combining the despread signal outputs to generate a data stream; and
      <br/>
      logic circuitry for analysing the data stream.
    </p>
    <p num="18">The invention yet further provides transmitter and receiver circuits including the encoding and decoding apparatus described hereinabove, respectively, each circuit being adapted for use with the signature sequences of the present invention.</p>
    <p num="19">In a first exemplifying embodiment, an infrared communications system for a wireless local area network comprises a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques, a means for transmitting coded infrared signals and a receiver circuit for receiving coded infrared signals having means for decoding signature sequences in a spread spectrum communication system.</p>
    <p num="20">In a second exemplifying embodiment, a radio communication system for a wireless local area network comprises a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques, a means for transmitting coded radio signals and a receiver circuit for receiving coded radio signals having means for decoding signature sequences in a spread spectrum communication system.</p>
    <p num="21">
      In a third exemplifying embodiment, a radio code division multiple access (CDMA) communication system for use, for example, in cellular mobile radio networks, wireless local loop networks, radio packet data networks or satellite networks comprises a plurality of remote communication terminals that send and receive radio signals to and from, respectively, a central base station.
      <br/>
      Each base station has transmitter circuits having means for generating and encoding signature sequences for CDMA communication techniques, a means for transmitting coded radio signals and receiver circuits for receiving coded radio signals having means for decoding signature sequences in a radio CDMA communication system.
      <br/>
      Each remote terminal has a transmitter circuit having means for generating and encoding signature sequences for CDMA communication techniques, a means for transmitting coded radio signals and a receiver circuit for receiving coded radio signals having means for decoding signature sequences in a CDMA communication system.
    </p>
    <p num="22">
      In a fourth exemplifying embodiment, a lightwave CDMA communication system for an optical fibre local area network comprises a plurality of remote communication terminals that transmit and receive lightwave signals and which are interconnected by optical fibre.
      <br/>
      Each terminal has a transmitter circuit having means for generating and encoding signature sequences for lightwave CDMA communication techniques, a means for transmitting coded lightwave signals and a receiver circuit for receiving a coded lightwave signals having means for decoding signature sequences in a lightwave CDMA communication system.
    </p>
    <p num="23">The term "lightwave" is taken to mean electromagnetic radiation within the ranges of visible light and near and far infrared light.</p>
    <p num="24">
      According to one aspect of the invention there is provided a method for spread spectrum communication using a signature sequence, the signature sequence being generated by performing the steps of:
      <br/>
      selecting a seed set of sequences of a given size;
      <br/>
      generating a plurality of cosets from the seed set of sequences;
      <br/>
      constructing a subset of sequences by concatenating the sequences of a coset; and
      <br/>
      constructing a full set of sequences by concatenating subsets of sequences.
    </p>
    <p num="25">Preferably, the seed set contains binary sequences.</p>
    <p num="26">Preferably, the binary sequence is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition.</p>
    <p num="27">In one arrangement, the seed set contains complex sequences.</p>
    <p num="28">Preferably, the seed set incorporates a plurality of inner sequences.</p>
    <p num="29">Preferably, the seed set is orthogonal.</p>
    <p num="30">Ideally, the cosets are generated by multiplying in turn each inner sequence by an element of an associated sequence.</p>
    <p num="31">Preferably, the subset of sequences is constructed by concatenating the sequences of a coset using an addition table.</p>
    <p num="32">In one embodiment of the invention, the addition table is constructed using powers of a primitive root of the seed set of sequences, the primitive root being determined in accordance with the size of the seed set.</p>
    <p num="33">In another embodiment of the invention, the addition table is constructed using powers of a primitive element of the seed set of sequences, the primitive element being determined in accordance with the size of the seed set.</p>
    <p num="34">Preferably, the seed set is formed from a plurality of rotated sequences.</p>
    <p num="35">
      According to another aspect of the invention there is provided a method for producing a structured code for use in spread spectrum data communication comprising the steps of:
      <br/>
      selecting a seed set of sequences of a given size;
      <br/>
      generating a plurality of cosets from the seed set of sequences;
      <br/>
      constructing a subset of sequences by concatenating the sequences of a coset; and
      <br/>
      constructing a full set of sequences by concatenating subsets of sequences.
    </p>
    <p num="36">Preferably, the seed set contains binary sequences.</p>
    <p num="37">Preferably, the binary sequence is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition.</p>
    <p num="38">In one arrangement, the seed set contains complex sequences.</p>
    <p num="39">Ideally, the seed set incorporates a plurality of inner sequences.</p>
    <p num="40">Preferably, the seed set is orthogonal.</p>
    <p num="41">In a preferred embodiment, the cosets are generated by multiplying in turn each inner sequence by an element of an associated sequence.</p>
    <p num="42">Preferably, the subset of sequences is constructed by concatenating the sequences of a coset using an addition table.</p>
    <p num="43">In one arrangement, the addition table is constructed using powers of a primitive root of the seed set of sequences, the primitive root being determined in accordance with the size of the seed set.</p>
    <p num="44">In another arrangement, the addition table is constructed using powers of a primitive element of the seed set of sequences, the primitive element being determined in accordance with the size of the seed set.</p>
    <p num="45">Preferably, the seed set is formed from a plurality of rotated sequences.</p>
    <p num="46">
      According to a further aspect of the invention there is provided an apparatus for constructing and encoding signature sequences for spread spectrum communication techniques, the apparatus comprising:
      <br/>
      a seed set generating means for constructing a seed set of sequences;
      <br/>
      a coset generating means for generating cosets of sequences;
      <br/>
      an expansion means for concatenating sequences of a generated coset according to a predetermined order, to form a subset of sequences for each coset; and
      <br/>
      a set generating means for constructing a full set of sequences by concatenating subsets.
    </p>
    <p num="47">Preferably, the seed set generating means comprises a plurality of shift registers, each shift register having an input, a system clock input, logic gates, a plurality of register cells/stages and an output to form a sequence of the seed set.</p>
    <p num="48">Preferably, the seed set generating means includes a number of linear feedback shift registers.</p>
    <p num="49">
      In one arrangement, the expansion means comprises:
      <br/>
      a plurality of inputs, each input corresponding to a sequence from a coset;
      <br/>
      a plurality of multiplexers having associated counters and logic gates;
      <br/>
      a system clock input; and
      <br/>
      a plurality of outputs to form a subset of sequences.
    </p>
    <p num="50">
      Preferably the apparatus is formed for decoding signature sequences in a spread spectrum communications system, the apparatus comprising:
      <br/>
      means for receiving coded signals;
      <br/>
      means for generating sequence functions;
      <br/>
      means for combining received coded signals with sequence functions to produce despread signal outputs;
      <br/>
      means for combining the despread signal outputs to generate a data stream; and
      <br/>
      logic circuitry for analysing the data stream.
    </p>
    <p num="51">
      According to a further aspect of the invention there is provided, a data transmission system having a transmitter and a receiver, the transmitter incorporating means for transmitting data using a signature sequence and the receiver formed for receiving and decoding data transmitted using a signature sequence, the signature sequence being generated by performing the steps of:
      <br/>
      selecting a seed set of sequences of a given size;
      <br/>
      generating a plurality of cosets from the seed set of sequences;
      <br/>
      constructing a subset of sequences by concatenating the sequences of a coset; and
      <br/>
      constructing a full set of sequences by concatenating subsets of sequences.
    </p>
    <p num="52">According to a still further aspect of the invention there is provided, an electromagnetic radiation or sonic communications system for a communications network comprising a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques by performing the steps of selecting a seed set of sequences of a given size, generating a plurality of cosets from the seed set of sequences, constructing a subset of sequences by concatenating the sequences of a coset and constructing a full set of sequences by concatenating subsets of sequences, the transmitter circuit also having, a means for transmitting coded signals and a receiver circuit for receiving coded signals the receiver circuit having means for decoding signature sequences in a spread spectrum communication system.</p>
    <p num="53">Preferably, the communications network uses a radio frequency carrier, an ultrasound carrier, a seismic carrier or a lightwave or infrared carrier.</p>
    <p num="54">Preferably, the receiver circuit incorporates a photodetector, the photodetector having an associated coupling means communicating with a receiver preamplifier.</p>
    <p num="55">Preferably, the coupling means is formed for differential signal recognition.</p>
    <p num="56">Ideally, the seed set is a balanced seed set.</p>
    <p num="57">In a preferred arrangement, the encoding signature sequences incorporates orthogonal structured codes.</p>
    <p num="58">According to particularly advantageous aspect of the invention there is provided a communications method for transmission of data in a network using a unipolar-bipolar signaling scheme, the scheme having code division means for separating differential data on a unipolar or bipolar transmission channel.</p>
    <p num="59">Preferably, the code division means utilises a binary sequence.</p>
    <p num="60">Ideally, the binary sequence is orthogonal.</p>
    <p num="61">Preferably, the communications method for transmission of data incorporates means for integrating an M-ary digital transmission scheme based on orthogonal structured codes.</p>
    <p num="62">The invention will now be described more particularly with reference to the accompanying drawings, which show, by way of example only, communication systems utilising signature sequences in spread spectrum communication techniques according to the invention as exemplified by four embodiments.</p>
    <p num="63">
      BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING(S)
      <br/>
      FIG. 1 is a schematic diagram of a transmitter based on M-ary bi-orthogonal keying for use in a spread spectrum communication system;
      <br/>
      FIG. 2 is a schematic diagram of a receiver based on M-ary bi-orthogonal keying for use in a spread spectrum communication system;
      <br/>
      FIG. 3 is a schematic diagram of a transmitter based on M-ary bi-orthogonal keying for use in a wireless infrared spread spectrum communication system;
      <br/>
      FIG. 4 is a schematic diagram of a receiver based on M-ary bi-orthogonal keying for use in a wireless infrared spread spectrum communication system;
      <br/>
      FIG. 5 is a schematic representation of a differential unipolar-bipolar signaling format;
      <br/>
      FIG. 6 is a schematic diagram of a transmitter based on M-ary bi-orthogonal keying and differential unipolar-bipolar signaling for use in a wireless infrared spread spectrum communication system;
      <br/>
      FIG. 7 is a schematic diagram of a receiver based on M-ary bi-orthogonal keying and differential unipolar-bipolar signaling for use in a wireless infrared spread spectrum communication system;
      <br/>
      FIG. 8 is a schematic diagram of a transmitter based on M-ary bi-orthogonal keying and two distinct code sets that can be used in a spread spectrum communication system to double capacity;
      <br/>
      FIG. 9 is a schematic diagram of a receiver based on M-ary bi-orthogonal keying and two distinct code sets that can be used in a spread spectrum communication system to double capacity;
      <br/>
      FIG. 10 is a schematic representation of a differential unipolar-bipolar signaling format for periodic binary sequences; and
      <br/>
      FIG. 11 is a chart illustrating some of the applications to which the structured signature sequences of the present invention may advantageously be applied.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="64">
      The method for constructing or generating signature sequences will now be presented.
      <br/>
      In general, sequence elements may be binary or non-binary, real or complex, quadriphase or polyphase etc. with corresponding mathematical operations being performed accordingly.
      <br/>
      In the present disclosure binary sequences are used by way of example.
      <br/>
      A binary sequence with elements  EPSILON  +1,0} is mapped into a biphase sequence with elements  EPSILON  +-1,1} by using the assignment (1 --&gt; -1) and (0 --&gt; 1).
      <br/>
      Then, modulo-2 addition between binary sequences is achieved by biphase multiplication between the corresponding biphase sequences.
      <br/>
      In order to facilitate explanations, the following notation has been adopted throughout.
      <br/>
      A biphase sequence +an } has elements an  EPSILON  +-1,1}. However, for simplicity in the description of sequence generation hereinafter, the biphase notation an  EPSILON  +-,+} is used where symbol "-" refers to "-1" and the symbol "+" refers to "+1".
      <br/>
      Furthermore, we denote a sequence of length w by +an }=(a0, a1, a2, . . . aw-1) while +a(m) } denotes a set of sequences +an(0) }, +an(1) }, +an(2) }, . . . +an(m-1) } each of length w. Typically, the sequences belonging to the set +a(m) } are periodic in w, however, this does not always needs to be the case.
    </p>
    <p num="65">
      New Structured Codes presented hereinafter are a significant development beyond the structured codes described in the prior art.
      <br/>
      The name Structured Code is a generic name simply referring to the structured nature of these sequences.
      <br/>
      In the present application, the complete algorithms for constructing Structured Codes are presented for the first time.
      <br/>
      In addition, specific sets of sequences suitable for spread spectrum systems are presented.
    </p>
    <p num="66">
      The procedure for constructing a set of Structured Codes is described below.
      <br/>
      The sequence set +a(m) } specifies a set of m inner sequences +an(0) }, +an(1) }, +an(2) }, . . . +an(m-1) } each of length w, where m is an integer.
      <br/>
      Then the number of available seed sets is equal to the number of combinations of m sequences from a total of 2w sequences (i.e. 2w �/m�(2w -m)�) which can be very large.
      <br/>
      The sequence set +a(m) } is referred to as the seed set and is illustrated below.
    </p>
    <p num="67">
      --
      <br/>
      --        +a(m) } Seed Set
      <br/>
      --        +an(0) } (an(0), a1(0),
      <br/>
      --  a2(0), . . . aw-1(0))
      <br/>
      --        +an(1) } (an(1), a1(1),
      <br/>
      --  a2(1), . . . aw-1(1))
      <br/>
      --        +an(2) } (an(2), a1(2),
      <br/>
      --  a2(2), . . . aw-1(2))
      <br/>
      -- .                      .
      <br/>
      -- .                      .
      <br/>
      -- .                      .
      <br/>
      --        +an(m-1) } (a0(m-1), a1(m-1),
      <br/>
      --  a2(m-1), . . . aw-1(m-1))
    </p>
    <p num="68">The seed set +a(m) } is used to construct w cosets where the i-th coset, denoted by +c(m) }i for 0 &lt;= i &lt;= w-1, is constructed by multiplying each sequence of +a(m) } by the i-th element, ai(.), of the corresponding sequence as illustrated below where each coset contains m sequences each of length w.</p>
    <p num="69">
      --
      <br/>
      -- +c(m) }i  i-th Coset for 0  &lt;=  i  &lt;=  w - 1
      <br/>
      -- +cn(0) }i  ai(0)  *  +an(0) }
      <br/>
      --  ai(0)  *  (a0(0), a1(0),
      <br/>
      --  a2(0), . . . aw-1(0))
      <br/>
      -- +cn(1) }i  ai(1)  *  +an(1) }
      <br/>
      --  ai(1)  *  (a0(1), a1(1),
      <br/>
      --  a2(1), . . . aw-1(1))
      <br/>
      -- +cn(2) }i  ai(2)  *  +an(2) }
      <br/>
      --  ai(0)  *  (a0(2), a1(2),
      <br/>
      --  a2(2), . . . aw-1(2))
      <br/>
      -- .            .                .
      <br/>
      -- .            .                .
      <br/>
      -- .            .                .
      <br/>
      -- +cn(m-1) }i  ai(m-1)  *  +an(m-1) }
      <br/>
      --  ai(m-1)  *  (a0(m-1), a1(m-1),
      <br/>
      --                            a2(m-1), . . . aw-1(m-1))
    </p>
    <p num="70">
      The i-th subset of sequences, denoted by +b(q) }i, is constructed by concatenating the sequences of the i-th coset, +c(m) }i, according to a predefined order, where a subset contains q sequences +bk(.) } each of length N=q * w. The order by which sequences of a coset are concatenated is determined by an Addition table constructed on the powers of a primitive root or primitive element using modular arithmetic and a finite set of integers or polynomials determined by the value of m. The construction of Addition tables is illustrated by way of example below.
      <br/>
      Finally, a set of Structured Codes, denoted by +s(N) }, is constructed by sequentially concatenating the w subsets +b(q) }i for 0 &lt;= i &lt;= w-1.
      <br/>
      A set of Structured Codes contains N sequences each of length N=q * w. Structured Codes are constructed for three conditions depending on m.
    </p>
    <p num="71">
      When the seed set is square, that is m=w, an alternative construct for generating cosets can be used.
      <br/>
      Since m=w in this alternative construct then the seed set +a(w) } is used to construct w cosets where the i-th coset, denoted by +c(w) }i for 0 &lt;= i &lt;= w-1, is constructed by multiplying each sequence of +a(w) } by the i-th element, ai(x), of the same sequence as illustrated below where each coset contains m=w sequences each of length w.
    </p>
    <p num="72">
      --
      <br/>
      -- +c(w) }i  i-th Coset for 0  &lt;=  i  &lt;=  w -1
      <br/>
      -- +cn(0) }i  a0(i)  *  +an(0) }
      <br/>
      --  ai(0)  *  (a0(0), a1(0),
      <br/>
      --  a2(0), . . . aw-1(0))
      <br/>
      -- +cn(1) }i  a1(i)  *  +an(1) }
      <br/>
      --  ai(1)  *  (a0(1), a1(1),
      <br/>
      --  a2(1), . . . aw-1(1))
      <br/>
      -- +cn(2) }i  a2(i)  *  +an(2) }
      <br/>
      --  ai(0)  *  (a0(2), a1(2),
      <br/>
      --  a2(2), . . . aw-1(2))
      <br/>
      -- .            .                 .
      <br/>
      -- .            .                 .
      <br/>
      -- .            .                 .
      <br/>
      -- +cn(m-1) }i  aw-1(i)  *  +an(w-1) }
      <br/>
      --  aw-1(i)  *  (a0(w-1), a1((w-1)),
      <br/>
      --                              a2(w-1), . . . aw-1(w-1))
    </p>
    <p num="73">The construction of a full set of structured codes then follows as before.</p>
    <p num="74">Condition 1: "m=odd prime integer"</p>
    <p num="75">
      The procedure for constructing a set of Structured Codes is illustrated by way of example when m=5.
      <br/>
      Firstly, a seed set +a(5) } is selected as illustrated below.
    </p>
    <p num="76">
      --
      <br/>
      --               +a(5) } Seed Set
      <br/>
      --               +an(0) } ++++-
      <br/>
      --               +an(1) } +++-+
      <br/>
      --               +an(2) } ++-++
      <br/>
      --               +an(3) } +-+++
      <br/>
      --               +an(4) } -++++
    </p>
    <p num="77">
      In this example, each sequence in the seed set has length w=5.
      <br/>
      We construct w=5 cosets using the described above for i=0, 1, 2, 3 and 4 as illustrated below.
    </p>
    <p num="78">
      --
      <br/>
      -- Zm  +c(5) }i  +c(5) }0  +c(5) }1
      <br/>
      --  +c(5) }2  +c(5) }3  +c(5) }4
      <br/>
      -- 0      +cn(0) }i  ++++- ++++- ++++- ++++- ----+
      <br/>
      -- 1      +cn(1) }i  +++-+ +++-+ +++-+ ---+- +++-+
      <br/>
      -- 2      +cn(2) }i  ++-++ ++-++ --+-- ++-++ ++-++
      <br/>
      -- 3      +cn(3) }i  +-+++ -+--- +-+++ +-+++ +-+++
      <br/>
      -- 4      +cn(4) }i  +---- -++++ -++++ -++++ -++++
    </p>
    <p num="79">
      When m is an odd prime, the integer residue class Zm =+0, 1, 2, . . . m-1} form a Galois field, GF(m), with respect to addition and multiplication modulo m. If a is a primitive root of m then there are  PHI (m)=m-1 residue integers Zl relatively prime to m, (i.e. gcd(l, m)=1), which can be used to construct an Addition table A(q), where q= PHI (m)+1 and  PHI (.) is the Euler totient function.
      <br/>
      When a is a primitive root of m then the powers of a, namely a0, a1, a2, . . . am-2, are all distinct modulo m and correspond to the non-zero residue integers Zl.
    </p>
    <p num="80">
      That is, each residue integer Zl can be expressed as a power of the primitive root a. Correspondingly, an Addition table over GF(m) based on the powers of a modulo m can be constructed.
      <br/>
      Thus, a=2 is a primitive root of m=5 and the powers of a modulo m are (a0, a1, a2, a3)=(1, 2, 4, 3).
      <br/>
      Hence, q= PHI (5)+1=5 and the corresponding Addition table A(5) is illustrated below.
    </p>
    <p num="81">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      -- +                0       1       2       4       3
      <br/>
      --      0       0         0       1       2       4       3
      <br/>
      --      a0  1         1       2       3       0       4
      <br/>
      --      a1  2         2       3       4       1       0
      <br/>
      --      a2  4         4       0       1       3       2
      <br/>
      --      a3  3         3       4       0       2       1
      <br/>
      -- Addition table-1 over GF(5) for  ALPHA  = 2
    </p>
    <p num="82">We construct a subset +b(q) }i corresponding to each coset +c(m) }i by concatenating the sequences of +c(m) }i according to the rows of the Addition table A(5) as illustrated below.</p>
    <p num="83">
      --
      <br/>
      --         +b(5) }i  i-th Subset for 0  &lt;=  i  &lt;=  w - 1
      <br/>
      --         +bk(0) }i  +cn(0) }i +cn(1)
      <br/>
      --  }i +cn(2) }i +cn(4) }i +cn(3)
      <br/>
      --  }i
      <br/>
      --         +bk(1) }i  +cn(1) }i +cn(2)
      <br/>
      --  }i +cn(3) }i +cn(0) }i +cn(4)
      <br/>
      --  }i
      <br/>
      --         +bk(2) }i  +cn(2) }i +cn(3)
      <br/>
      --  }i +cn(4) }i +cn(1) }i +cn(0)
      <br/>
      --  }i
      <br/>
      --         +bk(3) }i  +cn(4) }i +cn(0)
      <br/>
      --  }i +cn(1) }i +cn(3) }i +cn(2)
      <br/>
      --  }i
      <br/>
      --         +bk(4) }i  +cn(3) }i +cn(4)
      <br/>
      --  }i +cn(0) }i +cn(2) }i +cn(1)
      <br/>
      --  }i
    </p>
    <p num="84">The subsets +b(5) }i for i=0, 1, 2, 3 and 4 are illustrated below.</p>
    <p num="85">
      --
      <br/>
      -- +b(5) }0  Subset 0
      <br/>
      -- +bk(0) }0  ++++- +++-+ ++-++ +---- +-+++
      <br/>
      -- +bk(1) }0  +++-+ ++-++ +-+++ ++++- +----
      <br/>
      -- +bk(2) }0  ++-++ +-+++ +---- +++-+ ++++-
      <br/>
      -- +bk(3) }0  +---- ++++- +++-+ +-+++ ++-++
      <br/>
      -- +bk(4) }0  +-+++ +---- ++++- ++-++ +++-+
      <br/>
      -- +b(5) }1  Subset 1
      <br/>
      -- +bk(0) }1  ++++- +++-+ ++-++ -++++ -+---
      <br/>
      -- +bk(1) }1  +++-+ ++-++ -+--- ++++- -++++
      <br/>
      -- +bk(2) }1  ++-++ -+--- -++++ +++-+ ++++-
      <br/>
      -- +bk(3) }1  -++++ ++++- +++-+ -+--- ++-++
      <br/>
      -- +bk(4) }1  -+--- -++++ ++++- ++-++ +++-+
      <br/>
      -- +b(5) }2  Subset 2
      <br/>
      -- +bk(0) }2  ++++- +++-+ --+-- -++++ +-+++
      <br/>
      -- +bk(1) }2  +++-+ --+-- +-+++ ++++- -++++
      <br/>
      -- +bk(2) }2  --+-- +-+++ -++++ +++-+ ++++-
      <br/>
      -- +bk(3) }2  -++++ ++++- +++-+ +-+++ --+--
      <br/>
      -- +bk(4) }2  +-+++ -++++ ++++- --+-- +++-+
      <br/>
      -- +b(5) }3  Subset 3
      <br/>
      -- +bk(0) }3  ++++- ---+- ++-++ -++++ +-+++
      <br/>
      -- +bk(1) }3  ---+- ++-++ +-+++ ++++- -++++
      <br/>
      -- +bk(2) }3  ++-++ +-+++ -++++ ---+- ++++-
      <br/>
      -- +bk(3) }3  -++++ ++++- ---+- +-+++ ++-++
      <br/>
      -- +bk(4) }3  +-+++ -++++ ++++- ++-++ ---+-
      <br/>
      -- +b(5) }4  Subset 4
      <br/>
      -- +bk(0) }4  ----+ +++-+ ++-++ -++++ +-+++
      <br/>
      -- +bk(1) }4  +++-+ ++-++ +-+++ ----+ -++++
      <br/>
      -- +bk(2) }4  ++-++ +-+++ -++++ +++-+ ----+
      <br/>
      -- +bk(3) }4  -++++ ----+ +++-+ +-+++ ++-++
      <br/>
      -- +bk(4) }4  +-+++ -++++ ----+ ++-++ +++-+
    </p>
    <p num="86">Finally, a set of Structured Codes +s(N) }, which contains N outer sequences, +sk(.) }, each of length N where N=q * w=25, is constructed by sequentially concatenating the subsets +b(5) }i for i=0, 1, 2, 3 and 4 as illustrated below.</p>
    <p num="87">
      --
      <br/>
      --         +s(25) } Set of Structured Codes
      <br/>
      --         +sk(0) } ++++-+++-+++-+++----+-+++
      <br/>
      --         +sk(1) } +++-+++-+++-+++++++-+----
      <br/>
      --         +sk(2) } ++-+++-++++----+++-+++++-
      <br/>
      --         +sk(3) } +----++++-+++-++-++++++++
      <br/>
      --         +sk(4) } +-++++----++++-++-+++++-+
      <br/>
      --         +sk(5) } ++++-+++-+++-++-++++-+---
      <br/>
      --         +sk(6) } +++-+++-++-+---++++--++++
      <br/>
      --         +sk(7) } ++-++-+----+++++++-+++++-
      <br/>
      --         +sk(8) } -++++++++-+++-+-+---++-++
      <br/>
      --         +sk(9) } -+----++++++++-++-+++++-+
      <br/>
      --         +sk(10) } ++++-+++-+--+---+++++-+++
      <br/>
      --         +sk(11) } +++-+--+--+-+++++++--++++
      <br/>
      --         +sk(12) } --+--+-+++-+++++++-+++++-
      <br/>
      --         +sk(13) } -++++++++-+++-++-++++-+--
      <br/>
      --         +sk(14) } +-+++-++++++++---+--+++-+
      <br/>
      --         +sk(15) } ++++----+-++-++-+++++-+++
      <br/>
      --         +sk(16) } ---+-++-+++-+++++++--++++
      <br/>
      --         +sk(17) } ++-+++-+++-++++---+-++++-
      <br/>
      --         +sk(18) } -++++++++----+-+-+++++-++
      <br/>
      --         +sk(19) } +-+++-++++++++-++-++---+-
      <br/>
      --         +sk(20) } ----++++-+++-++-+++++-+++
      <br/>
      --         +sk(21) } +++-+++-+++-+++----+-++++
      <br/>
      --         +sk(22) } ++-+++-+++-+++++++-+----+
      <br/>
      --         +sk(23) } -++++----++++-++-+++++-++
      <br/>
      --         +sk(24) } +-+++-++++----+++-+++++-+
    </p>
    <p num="88">
      For the primitive root a=2 we can construct another three distinct Addition tables over GF(5).
      <br/>
      Firstly, the Multiplication table over GF(5) based on the powers of a modulo m is constructed.
      <br/>
      Secondly, each non-zero row of the Multiplication table is used to construct a distinct Addition table.
      <br/>
      The first non-zero row of the Multiplication table constructs Addition table-1 used above while the following three non-zero rows construct another three distinct Addition tables as illustrated below.
    </p>
    <p num="89">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      --  *                0       1       2       4       3
      <br/>
      --      0       0         0       0       0       0       0
      <br/>
      --      a0  1         0       1       2       4       3
      <br/>
      --      a1  2         0       2       4       3       1
      <br/>
      --      a2  4         0       4       3       1       2
      <br/>
      --      a3  3         0       3       1       2       4
      <br/>
      -- Multiplication table-1 over GF(5) for  ALPHA  = 2
      <br/>
      --        + 0             2    4              3    1
      <br/>
      --        0    0             2    4              3    1
      <br/>
      --        2    2             4    1              0    3
      <br/>
      --        4    4             1    3              2    0
      <br/>
      --        3    3             0    2              1    4
      <br/>
      --        1    1             3    0              4    2
      <br/>
      -- Addition table-2 over GF(5) for  ALPHA  = 2
      <br/>
      --        + 0             4    3              1    2
      <br/>
      --        0    0             4    3              1    2
      <br/>
      --        4    4             3    2              0    1
      <br/>
      --        3    3             2    1              4    0
      <br/>
      --        1    1             0    4              2    3
      <br/>
      --        2    2             1    0              3    4
      <br/>
      -- Addition table-3 over GF(5) for  ALPHA  = 2
      <br/>
      --        + 0             3    1              2    4
      <br/>
      --        0    0             3    1              2    4
      <br/>
      --        3    3             1    4              0    2
      <br/>
      --        1    1             4    2              3    0
      <br/>
      --        2    2             0    3              4    1
      <br/>
      --        4    4             2    0              1    3
      <br/>
      -- Addition table-4 over GF(5) for  ALPHA  = 2
    </p>
    <p num="90">
      Each Addition table can be used to construct a distinct set of Structured Codes from the same seed set by uniquely specifying the concatenation order of coset sequences within a subset.
      <br/>
      Since for primitive root a=2 there are four distinct Addition tables then we can construct four distinct sets of Structured Codes for the seed set specified.
    </p>
    <p num="91">
      Furthermore, the integer m=5 has two primitive roots, a=2 and a=3.
      <br/>
      In this case a second distinct Multiplication table over GF(5) based on the powers of a=3 modulo m can be constructed as illustrated below.
    </p>
    <p num="92">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      --  *                0       1       3       4       2
      <br/>
      --      0       0         0       0       0       0       0
      <br/>
      --      a0  1         0       1       3       4       2
      <br/>
      --      a1  3         0       3       4       2       1
      <br/>
      --      a2  4         0       4       2       1       3
      <br/>
      --      a3  2         0       2       1       3       4
      <br/>
      -- Multiplication table-2 over GF(5) for  ALPHA  = 3
    </p>
    <p num="93">
      As before, each non zero row of the Multiplication table over GF(5) for a=3 can be used to construct four distinct Addition tables which in turn can be used to construct four distinct sets of Structured Codes from the same seed set.
      <br/>
      Hence, when m=5 it is possible to construct a total of eight distinct sets of Structured Codes from one seed set.
    </p>
    <p num="94">
      Since the number of available seed sets is large and since the number of available Addition tables is large, then the number and variety of sets of Structured Codes is very large indeed.
      <br/>
      Therefore, the large code space covered by the Structured Codes make their application to spread spectrum communication systems ideal.
    </p>
    <p num="95">In summary, when m is an odd prime number sets of Structured Codes are constructed by selecting a seed set, constructing cosets, constructing subsets using Addition tables derived from Multiplication tables over GF(m) that specify the unique concatenation order of inner sequences and finally sequentially concatenating subsets to form a full set of Structured Codes.</p>
    <p num="96">Condition 2: "m=non-prime integer"</p>
    <p num="97">
      The procedure for constructing a set of Structured Codes when m is non-prime is illustrated by way of example for m=10.
      <br/>
      Firstly, a seed set +a(10) } is selected as illustrated below.
    </p>
    <p num="98">
      --
      <br/>
      --               +a(10) } Seed Set
      <br/>
      --               +an(0) } +++++++++-
      <br/>
      --               +an(1) } ++++++++-+
      <br/>
      --               +an(2) } +++++++-++
      <br/>
      --               +an(3) } ++++++-+++
      <br/>
      --               +an(4) } +++++-++++
      <br/>
      --               +an(5) } ++++-+++++
      <br/>
      --               +an(6) } +++-++++++
      <br/>
      --               +an(7) } ++-+++++++
      <br/>
      --               +an(8) } +-++++++++
      <br/>
      --               +an(9) } -+++++++++
    </p>
    <p num="99">
      In this example, each sequence in the seed set has length w=10.
      <br/>
      We construct w=10 cosets for 0 &lt;= i &lt;= 9 as illustrated below.
    </p>
    <p num="100">
      --
      <br/>
      -- Zm  +c(10) }i  +c(10) }0  +c(10) }1
      <br/>
      --  +c(10) }2  +c(10) }3  +c(10) }4
      <br/>
      -- 0    +cn(0) }i  +++++++++- +++++++++- +++++++++- +++++++++-
      <br/>
      --  +++++++++-
      <br/>
      -- 1    +cn(1) }i  ++++++++-+ ++++++++-+ ++++++++-+ ++++++++-+
      <br/>
      --  ++++++++-+
      <br/>
      -- 2    +cn(2) }i  +++++++-++ +++++++-++ +++++++-++ +++++++-++
      <br/>
      --  +++++++-++
      <br/>
      -- 3    +cn(3) }i  ++++++-+++ ++++++-+++ ++++++-+++ ++++++-+++
      <br/>
      --  ++++++-+++
      <br/>
      -- 4    +cn(4) }i  +++++-++++ +++++-++++ +++++-++++ +++++-++++
      <br/>
      --  +++++-++++
      <br/>
      -- 5    +cn(5) }i  ++++-+++++ ++++-+++++ ++++-+++++ ++++-+++++
      <br/>
      --  ----+-----
      <br/>
      -- 6    +cn(6) }i  +++-++++++ +++-++++++ +++-++++++ ---+------
      <br/>
      --  +++-++++++
      <br/>
      -- 7    +cn(7) }i  ++-+++++++ ++-+++++++ --+------- ++-+++++++
      <br/>
      --  ++-+++++++
      <br/>
      -- 8    +cn(8) }i  +-++++++++ -+-------- +-++++++++ +-++++++++
      <br/>
      --  +-++++++++
      <br/>
      -- 9    +cn(9) }i  +--------- -+++++++++ -+++++++++ -+++++++++
      <br/>
      --  -+++++++++
      <br/>
      -- Zm  +c(10) }i  +c(10) }5  +c(10) }6
      <br/>
      --  +c(10) }7  +c(10) }8  +c(10) }9
      <br/>
      -- 0    +cn(0) }i  +++++++++- +++++++++- +++++++++- +++++++++-
      <br/>
      --  ---------+
      <br/>
      -- 1    +cn(1) }i  ++++++++-+ ++++++++-+ ++++++++-+ --------+-
      <br/>
      --  ++++++++-+
      <br/>
      -- 2    +cn(2) }i  +++++++-++ +++++++-++ -------+-- +++++++-++
      <br/>
      --  +++++++-++
      <br/>
      -- 3    +cn(3) }i  ++++++-+++ ------+--- ++++++-+++ ++++++-+++
      <br/>
      --  ++++++-+++
      <br/>
      -- 4    +cn(4) }i  -----+---- +++++-++++ +++++-++++ +++++-++++
      <br/>
      --  +++++-++++
      <br/>
      -- 5    +cn(5) }i  ++++-+++++ ++++-+++++ ++++-+++++ ++++-+++++
      <br/>
      --  ++++-+++++
      <br/>
      -- 6    +cn(6) }i  +++-++++++ +++-++++++ +++-++++++ +++-++++++
      <br/>
      --  +++-++++++
      <br/>
      -- 7    +cn(7) }i  ++-+++++++ ++-+++++++ ++-+++++++ ++-+++++++
      <br/>
      --  ++-+++++++
      <br/>
      -- 8    +cn(8) }i  +-++++++++ +-++++++++ +-++++++++ +-++++++++
      <br/>
      --  +-++++++++
      <br/>
      -- 9    +cn(9) }i  -+++++++++ -+++++++++ -+++++++++ -+++++++++
      <br/>
      --  -+++++++++
    </p>
    <p num="101">
      When m is non-prime, the integer residue class Zm =+0, 1, 2, . . . m-1} form a finite Ring, R(m), with respect to addition and multiplication modulo m. If a is a primitive root of m then there are  PHI (m) residue integers Zl relatively prime to m, (i.e. gcd(l, m)=1), which can be used to construct an Addition table A(q), where q= PHI (m)+1 and  PHI (.) is the Euler totient function.
      <br/>
      When a is a primitive root of m then the powers of a, namely a0, a1, a2, . . . a PHI (m)-1, are all distinct modulo m and correspond to the non-zero residue integers Zl.
      <br/>
      That is, each residue integer Zl can be expressed as a power of the primitive root a. Correspondingly, an Addition table over R(m) based on the powers of a modulo m can be constructed.
      <br/>
      Thus, a=3 is a primitive root of m=10 and the powers of a modulo m are (a0, a1, a2, a3)=(1, 3, 9, 7).
      <br/>
      Hence, q= PHI (10)+1=5 and the corresponding Addition table A(5) is illustrated below.
    </p>
    <p num="102">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      -- +                0       1       3       9       7
      <br/>
      --      0       0         0       1       3       9       7
      <br/>
      --      a0  1         1       2       4       0       8
      <br/>
      --      a1  3         3       4       6       2       0
      <br/>
      --      a2  9         9       0       2       8       6
      <br/>
      --      a3  7         7       8       0       6       4
      <br/>
      -- Addition table-1 over R(10) for  ALPHA  = 3
    </p>
    <p num="103">We construct a subset +b(q) }i corresponding to each coset +c(m) }i by concatenating the sequences of +c(m) }i according to the rows of the Addition table A(5) as illustrated below.</p>
    <p num="104">
      --
      <br/>
      --         +b(5) }i  i-th Subset for 0  &lt;=  i  &lt;=  w - 1
      <br/>
      --         +bk(0) }i  +cn(0) }i +cn(1)
      <br/>
      --  }i +cn(3) }i +cn(9) }i +cn(7)
      <br/>
      --  }i
      <br/>
      --         +bk(1) }i  +cn(1) }i +cn(2)
      <br/>
      --  }i +cn(4) }i +cn(0) }i +cn(8)
      <br/>
      --  }i
      <br/>
      --         +bk(2) }i  +cn(3) }i +cn(4)
      <br/>
      --  }i +cn(0) }i +cn(2) }i +cn(0)
      <br/>
      --  }i
      <br/>
      --         +bk(3) }i  +cn(9) }i +cn(0)
      <br/>
      --  }i +cn(2) }i +cn(8) }i +cn(6)
      <br/>
      --  }i
      <br/>
      --         +bk(4) }i  +cn(7) }i +cn(8)
      <br/>
      --  }i +cn(6) }i +cn(6) }i +cn(4)
      <br/>
      --  }i
    </p>
    <p num="105">Finally, a set of Structured Codes +s(N) }, which contains N outer sequences, +sk(.) }, each of length N, where N=q * w=50, is constructed by sequentially concatenating the subsets +b(5) }i for i=0, 1, 2, 3, 4, 5, 6, 7, 8 and 9 as illustrated below.</p>
    <p num="106">
      --
      <br/>
      -- +S(50) } Set of Structured Codes
      <br/>
      -- +Sk(0) } +++++++++-++++++++-+++++++-++++---------++-+++++++
      <br/>
      -- +Sk(1) } ++++++++-++++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(2) } ++++++-++++++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(3) } +---------+++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(4) } ++-++++++++-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(5) } +++++++++-++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(6) } ++++++++-++++++++-+++++++-+++++++++++++--+--------
      <br/>
      -- +Sk(7) } ++++++-++++++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(8) } -++++++++++++++++++-+++++++-++-+--------+++-++++++
      <br/>
      -- +Sk(9) } ++-+++++++-+--------+++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(10) } +++++++++-++++++++-+++++++-+++-+++++++++--+-------
      <br/>
      -- +Sk(11) } ++++++++-++++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(12) } ++++++-++++++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(13) } -++++++++++++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(14) } --+-------+-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(15) } +++++++++-++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(16) } ++++++++-++++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(17) } ++++++-++++++++-++++---+------+++++++-+++++++++++-
      <br/>
      -- +Sk(18) } -++++++++++++++++++-+++++++-+++-++++++++---+------
      <br/>
      -- +Sk(19) } ++-++++++++-+++++++++++++++++----+------+++++-++++
      <br/>
      -- +Sk(20) } +++++++++-++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(21) } ++++++++-++++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(22) } ++++++-++++++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(23) } -++++++++++++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(24) } ++-++++++++-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(25) } +++++++++-++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(26) } ++++++++-++++++++-++-----+----+++++++++-+-++++++++
      <br/>
      -- +Sk(27) } ++++++-+++-----+----+++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(28) } -++++++++++++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(29) } ++-++++++++-+++++++++++++++++-+++-++++++-----+----
      <br/>
      -- +Sk(30) } +++++++++-++++++++-+------+----+++++++++++-+++++++
      <br/>
      -- +Sk(31) } ++++++++-++++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(32) } ------+---+++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(33) } -++++++++++++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(34) } ++-++++++++-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(35) } +++++++++-++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(36) } ++++++++-+-------+--+++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(37) } ++++++-++++++++-+++++++-++++++-------+--+++++++++-
      <br/>
      -- +Sk(38) } -++++++++++++++++++--------+--+-+++++++++++-++++++
      <br/>
      -- +Sk(39) } ++-++++++++-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(40) } +++++++++---------+-++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(41) } --------+-+++++++-+++++++-+++++++++++++-+-++++++++
      <br/>
      -- +Sk(42) } ++++++-++++++++-+++++++-+++++++++++++-+++++++++++-
      <br/>
      -- +Sk(43) } -++++++++++++++++++-+++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(44) } ++-++++++++-+++++++++++++++++-+++-+++++++++++-++++
      <br/>
      -- +Sk(45) } ---------+++++++++-+++++++-+++-+++++++++++-+++++++
      <br/>
      -- +Sk(46) } ++++++++-++++++++-+++++++-++++---------++-++++++++
      <br/>
      -- +Sk(47) } ++++++-++++++++-+++++++-+++++++++++++-++---------+
      <br/>
      -- +Sk(48) } -+++++++++---------++++++++-+++-+++++++++++-++++++
      <br/>
      -- +Sk(49) } ++-++++++++-++++++++---------++++-+++++++++++-++++
    </p>
    <p num="107">
      For the primitive root a=3 we can construct another three distinct Addition tables over R(10).
      <br/>
      Firstly, the Multiplication table over R(10) based on the powers of a modulo m is constructed.
      <br/>
      Secondly, each non-zero row of the Multiplication table is used to construct a distinct Addition table.
      <br/>
      The first non-zero row of the Multiplication table constructs Addition table-1 over R(10) used above while the following three non-zero rows construct another three distinct Addition tables over R(10) as illustrated below.
    </p>
    <p num="108">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      --  *                0       1       3       9       7
      <br/>
      --      0       0         0       0       0       0       0
      <br/>
      --      a0  1         0       1       3       9       7
      <br/>
      --      a1  3         0       3       9       7       1
      <br/>
      --      a2  9         0       9       7       1       3
      <br/>
      --      a3  7         0       7       1       3       9
      <br/>
      -- Multiplication table-1 over R(10) for  ALPHA  = 3
      <br/>
      --        + 0             3    9              7    1
      <br/>
      --        0    0             3    9              7    1
      <br/>
      --        3    3             6    2              0    4
      <br/>
      --        9    9             2    8              6    0
      <br/>
      --        7    7             0    6              4    8
      <br/>
      --        1    1             4    0              8    2
      <br/>
      -- Addition table-2 over R(10) for  ALPHA  = 3
      <br/>
      --        + 0             9    7              1    3
      <br/>
      --        0    0             9    7              1    3
      <br/>
      --        9    9             8    6              0    2
      <br/>
      --        7    7             6    4              8    0
      <br/>
      --        1    1             0    8              2    4
      <br/>
      --        3    3             2    0              4    6
      <br/>
      -- Addition table-3 over R(10) for  ALPHA  = 3
      <br/>
      --        + 0             7    1              3    9
      <br/>
      --        0    0             7    1              3    9
      <br/>
      --        7    7             4    8              0    6
      <br/>
      --        1    1             8    2              4    0
      <br/>
      --        3    3             0    4              6    2
      <br/>
      --        9    9             6    0              2    8
      <br/>
      -- Addition table-4 over R(10) for  ALPHA  = 3
    </p>
    <p num="109">
      Each Addition table can be used to construct a set of Structured Codes from the same seed set by uniquely specifying the concatenation order of coset sequences within a subset.
      <br/>
      Since for primitive root a=3 there are four distinct Addition tables then we can construct four sets of Structured Codes for the seed set specified.
    </p>
    <p num="110">
      Furthermore, the non-prime integer m=10 has two primitive roots, a=3 and a=7.
      <br/>
      In this case a second distinct Multiplication table over R(10) based on the powers of a=7 modulo m can be constructed as illustrated below.
    </p>
    <p num="111">
      --
      <br/>
      --                       0       a0  a1  a2  a3
      <br/>
      --  *                0       1       7       9       3
      <br/>
      --      0       0         0       0       0       0       0
      <br/>
      --      a0  1         0       1       7       9       3
      <br/>
      --      a1  7         0       7       9       3       1
      <br/>
      --      a2  9         0       9       3       1       7
      <br/>
      --      a3  3         0       3       1       7       9
      <br/>
      -- Multiplication table-2 over R(10) for  ALPHA  = 7
    </p>
    <p num="112">
      As before, each non zero row of the Multiplication table over R(10) for a=7 can be used to construct four distinct Addition tables which in turn can be used to construct four sets of Structured Codes from the same seed set.
      <br/>
      Hence, when m=10 it is possible to construct a total of eight sets of Structured Codes from one seed set.
    </p>
    <p num="113">In general, when m is non-prime, the sets of Structured Codes constructed have inferior properties compared to those constructed when m is an odd prime integer.</p>
    <p num="114">In summary, when m is a non-prime number sets of Structured Codes are constructed by selecting a seed set, constructing cosets, constructing subsets using Addition tables derived from Multiplication tables over R(m) that specify the unique concatenation order of inner sequences and finally sequentially concatenating subsets to form a full set of Structured Codes.</p>
    <p num="115">Condition 3: "m=ps when p is prime"</p>
    <p num="116">
      A Galois field can be constructed for any prime number p or any integer power of a prime number ps.
      <br/>
      The Galois field GF(ps) having ps elements is called an extension field of the Galois field GF(p) having p elements.
      <br/>
      The elements of GF(p) are the integer residue class Zp =+0, 1, 2, . . . p-1} with field addition and multiplication being carried out modulo p. The elements of GF(ps) are polynomials of degree &lt;= s-1 over GF(p), i.e. the coefficients of the polynomials are elements in GF(p).
      <br/>
      Then field addition and multiplication are carried out modulo g(x) where g(x) is a primitive polynomial of degree s over GF(p).
      <br/>
      A polynomial of degree s is said to be primitive if the smallest integer r for which g(x) divides xr +1 is ps -1.
      <br/>
      Primitive polynomials are irreducible because they can not be factorised (i.e. they are not the product of any two polynomials of lower degree).
    </p>
    <p num="117">
      The procedure for constructing a set of Structured Codes is illustrated by way of example when m=22, that is, p=2 and s=2.
      <br/>
      Firstly, a seed set +a(4) } is selected as illustrated below.
    </p>
    <p num="118">
      --
      <br/>
      --               +a(4) } Seed Set
      <br/>
      --               +an(0) } +++-
      <br/>
      --               +an(1) } ++-+
      <br/>
      --               +an(2) } +-++
      <br/>
      --               +an(3) } -+++
    </p>
    <p num="119">
      In this example, each sequence in the seed set has length w=4.
      <br/>
      We construct w=4 cosets using the procedure described above for i=0, 1, 2, and 3 as illustrated below.
    </p>
    <p num="120">
      --
      <br/>
      -- Zm  Zp �x� +c(4) }i  +c(4) }0  +c(4)
      <br/>
      --  }1  +c(4) }2  +c(4) }3
      <br/>
      -- 0      0      +cn(0) }i  +++- +++- +++- ---+
      <br/>
      -- 1      1      +cn(1) }i  ++-+ ++-+ --+- ++-+
      <br/>
      -- 2      x      +cn(2) }i  +-++ -+-- +-++ +-++
      <br/>
      -- 3      x + 1 +cn(3) }i  +--- -+++ -+++ -+++
    </p>
    <p num="121">
      Let Zp �x� denote the residue classes of polynomials modulo g(x) in the variable x. Then Zp �x� is the set of polynomials modulo g(x) each with degree less than the degree of g(x).
      <br/>
      When g(x) is a primitive polynomial of degree s over GF(p), then Zp �x� forms a Galois polynomial field GF(ps) with respect to addition and multiplication modulo g(x).
      <br/>
      The Galois field GF(ps) contains ps elements corresponding to the residue classes of polynomials g(x).
      <br/>
      If a is a primitive element of GF(ps), where there are exactly  PHI (ps -1) primitive elements, then the powers of a, namely a0, a1, a2, . . . am-2, are all distinct modulo g(x) and correspond to the non-zero residue polynomials in Zp �x�. That is, each residue polynomial can be expressed as a power of the primitive element a. Correspondingly, an Addition table over GF(ps) based on the powers of a modulo g(x) can be constructed.
      <br/>
      Thus, a=x is a primitive element of the primitive polynomial g(x)=x2 +x+1 and the powers of a modulo g(x) are (a0, a1, a2)=(1, x, x+1).
      <br/>
      Hence, q=ps =22 and the corresponding Addition table A(22) is illustrated below.
    </p>
    <p num="122">
      --
      <br/>
      --                       0         a0   a1   a2
      <br/>
      -- +                0         1         x         x + 1
      <br/>
      --      0       0         0         1         x         x + 1
      <br/>
      --      a0  1         1         0         x + 1 x
      <br/>
      --      a1  x         x         x + 1 0         1
      <br/>
      --      a2  x + 1 x + 1 x         1         0
      <br/>
      -- Addition table-1 over GF(22) for  ALPHA  = x and g(x) = x2 + x +
      <br/>
      --  1
    </p>
    <p num="123">
      We construct a subset +b(q) }i corresponding to each coset +c(m) }i by concatenating the sequences of +c(m) }i according to the rows of the Addition table A(22).
      <br/>
      This procedure is facilitated by assigning the integer residue class Zm=4 =+0, 1, 2, 3} to the polynomial residue class Zp=2 �x�=+0, 1, x, x+1 } according to the sequential mapping 0 --&gt; 0, 1 --&gt; 1, x --&gt; 2 and x+1 --&gt; 3.
      <br/>
      Then the i-th subset +b(4) }i is illustrated below.
    </p>
    <p num="124">
      --
      <br/>
      --         +b(4) }i  i-th Subset for 0  &lt;=  i  &lt;=  w - 1
      <br/>
      --         +bk(0) }I  +cn(0) }i +cn(1)
      <br/>
      --  }i +cn(2) }i +cn(3) }i
      <br/>
      --         +bk(1) }I  +cn(1) }i +cn(0)
      <br/>
      --  }i +cn(3) }i +cn(2) }i
      <br/>
      --         +bk(2) }I  +cn(2) }i +cn(3)
      <br/>
      --  }i +cn(0) }i +cn(1) }i
      <br/>
      --         +bk(3) }I  +cn(3) }i +cn(2)
      <br/>
      --  }i +cn(1) }i +cn(0) }i
    </p>
    <p num="125">The subsets +b(4) }; for i=0, 1, 2, and 4 are illustrated below.</p>
    <p num="126">
      --
      <br/>
      --             +b(4) }0  Subset 0
      <br/>
      --             +bk(0) }0  +++-++-++-+++---
      <br/>
      --             +bk(1) }0  ++-++++-+---+-++
      <br/>
      --             +bk(2) }0  +-+++---+++-++-+
      <br/>
      --             +bk(3) }0  +---+-++++-++++-
      <br/>
      --             +b(4) }1  Subset 1
      <br/>
      --             +bk(0) }1  +++-++-+-+---+++
      <br/>
      --             +bk(1) }1  ++-++++--+++-+--
      <br/>
      --             +bk(2) }1  -+---++++++-++-+
      <br/>
      --             +bk(3) }1  -+++-+--++-++++-
      <br/>
      --             +b(4) }2  Subset 2
      <br/>
      --             +bk(0) }2  +++---+-+-++-+++
      <br/>
      --             +bk(1) }2  --+-+++--++++-++
      <br/>
      --             +bk(2) }2  +-++-++++++---+-
      <br/>
      --             +bk(3) }2  -++++-++--+-+++-
      <br/>
      --             +b(4) }3  Subset 3
      <br/>
      --             +bk(0) }3  ---+++-++-++-+++
      <br/>
      --             +bk(1) }3  ++-+---+-++++-++
      <br/>
      --             +bk(2) }3  +-++-+++---+++-+
      <br/>
      --             +bk(3) }3  -++++-++++-+---+
    </p>
    <p num="127">Finally, a set of Structured Codes +s(N) }, which contains N outer sequences, +sk(.) }, each of length N where N=q * w=16, is constructed by sequentially concatenating the subsets +b(4) }i for i=0, 1, 2, and 3 as illustrated below.</p>
    <p num="128">
      --
      <br/>
      --             +s(16) } Structured Codes
      <br/>
      --             +Sk(0) } +++-++-++-+++---
      <br/>
      --             +Sk(1) } ++-++++-+---+-++
      <br/>
      --             +Sk(2) } +-+++---+++-++-+
      <br/>
      --             +Sk(3) } +---+-++++-++++-
      <br/>
      --             +Sk(4) } +++-++-+-+---+++
    </p>
    <p num="129">
      --             +Sk(5) } ++-++++--+++-+--
      <br/>
      --             +Sk(6) } -+---++++++-++-+
      <br/>
      --             +Sk(7) } -+++-+--++-++++-
      <br/>
      --             +Sk(8) } +++---+-+-++-+++
      <br/>
      --             +Sk(9) } --+-+++--++++-++
      <br/>
      --             +Sk(10) } +-++-++++++---+-
      <br/>
      --             +Sk(11) } -++++-++--+-+++-
      <br/>
      --             +Sk(12) } ---+++-++-++-+++
      <br/>
      --             +Sk(13) } ++-+---+-++++-++
      <br/>
      --             +Sk(14) } +-++-+++---+++-+
      <br/>
      --             +Sk(15) } -++++-++++-+---+
    </p>
    <p num="130">
      For the primitive element a=x we can construct another two distinct Addition tables over GF(22).
      <br/>
      Firstly, the Multiplication table over GF(22) based on the powers of a modulo g(x) is constructed.
      <br/>
      Secondly, each non-zero row of the Multiplication table is used to construct a distinct Addition table.
      <br/>
      The first non-zero row of the Multiplication table constructs Addition table-1 over GF(22) used above while the following two non-zero rows construct another two distinct Addition tables as illustrated below.
    </p>
    <p num="131">
      --
      <br/>
      --                       0          ALPHA 0   ALPHA 1   ALPHA 2
      <br/>
      --  *                0         1         x         x + 1
      <br/>
      --      0       0         0         0         0         0
      <br/>
      --       ALPHA 0  1         0         1         x         x + 1
      <br/>
      --       ALPHA 1  x         0         x         x + 1 1
      <br/>
      --       ALPHA 2  x + 1 0         x + 1 1         x
      <br/>
      -- Multiplication table-1 over GF(22) for  ALPHA  = x and g(x) = x2
      <br/>
      --  + x + 1
      <br/>
      --      +      0           x           x + 1  1
      <br/>
      --      0           0           x           x + 1  1
      <br/>
      --      x           x           0           1           x + 1
      <br/>
      --      x + 1  x + 1  1           0           x
      <br/>
      --      1           1           x + 1  x           0
      <br/>
      -- Addition table-2 over GF(22) for  ALPHA  = x and g(x) = x2 + x +
      <br/>
      --  1
      <br/>
      --      +      0           x + 1  1           x
      <br/>
      --      0           0           x + 1  1           x
      <br/>
      --      x + 1  x + 1  0           x           1
      <br/>
      --      1           1           x           0           x + 1
      <br/>
      --      x           x           1           x + 1  0
      <br/>
      -- Addition table-3 over GF(22) for  ALPHA  = x and g(x) = x2 + x +
      <br/>
      --  1
    </p>
    <p num="132">
      Each Addition table can be used to construct a distinct set of Structured Codes from the same seed set by uniquely specifying the concatenation order of coset sequences within a subset.
      <br/>
      Since for primitive root a=x there are three distinct Addition tables then we can construct three distinct sets of Structured Codes for the seed set specified.
    </p>
    <p num="133">
      Furthermore, the primitive polynomial g(x)=x2 +x+1 has exactly  PHI (ps -1)= PHI (22 -1)=2 primitive elements, a=x and a=x+1.
      <br/>
      In this case a second distinct Multiplication table over GF(22) based on the powers of a=x+1 modulo g(x) can be constructed as illustrated below.
    </p>
    <p num="134">
      --
      <br/>
      --                       0          ALPHA 0   ALPHA 1   ALPHA 2
      <br/>
      --  *                0         1         x + 1 x
      <br/>
      --      0       0         0         0         0         0
      <br/>
      --       ALPHA 0  1         0         1         x + 1 x
      <br/>
      --       ALPHA 1  x + 1 0         x + 1 x         1
      <br/>
      --       ALPHA 2  x         0         x         1         x + 1
      <br/>
      -- Multiplication table-2 over GF(22) for  ALPHA  = x + 1 and g(x) =
      <br/>
      --  x2 + x + 1
    </p>
    <p num="135">As before, each non zero row of the Multiplication table over GF(22) for a=x+1 can be used to construct three distinct Addition tables which in turn can be used to construct three distinct sets of Structured Codes from the same seed set.</p>
    <p num="136">
      Since there are exactly  PHI (ps -1)/s distinct primitive polynomials of degree s in GF(ps), then there is only one primitive polynomial g(x)=x2 +x+1 when m=22.
      <br/>
      Hence, when m=22 it is possible to construct a total of six distinct sets of Structured Codes from one seed set.
    </p>
    <p num="137">In summary, when m=ps where p is a prime number then sets of Structured Codes are constructed by selecting a seed set, constructing cosets, constructing subsets using Addition tables derived from Multiplication tables over GF(ps) that specify the unique concatenation order of inner sequences and finally sequentially concatenating subsets to form a full set of Structured Codes.</p>
    <p num="138">Alternative Constructs</p>
    <p num="139">
      When m, the number of sequences within a seed set, can not be characterised by one of the three conditions described above then an alternative construct can be used.
      <br/>
      In fact, this alternative construct may be used for any value of the integer m. However, the alternative construct is particularly useful when the integer m is non-prime and has no primitive roots.
      <br/>
      In this case, the  PHI (m) residue integers Zl relatively prime to m can not be generated from the powers of a primitive root because in this case the number m does not have any primitive roots.
      <br/>
      For the alternative construct, the integer residue class Zm =+0, 1, 2, . . . m-1} which form a finite ring R(m) is used directly to construct an Addition table modulo m over R(m).
      <br/>
      For example, when m=15 the corresponding Addition table A(15) is illustrated below.
    </p>
    <p num="140">
      --
      <br/>
      -- + 0      1    2    3    4      5    6    7    8      9    10   11   12
      <br/>
      --  13   14
      <br/>
      -- 0    0      1    2    3    4      5    6    7    8      9    10   11   12
      <br/>
      --    13   14
      <br/>
      -- 1    1      2    3    4    5      6    7    8    9      10   11   12   13
      <br/>
      --    14   0
      <br/>
      -- 2    2      3    4    5    6      7    8    9    10     11   12   13   14
      <br/>
      --    0    1
      <br/>
      -- 3    3      4    5    6    7      8    9    10   11     12   13   14   0
      <br/>
      --    1    2
      <br/>
      -- 4    4      5    6    7    8      9    10   11   12     13   14   0    1
      <br/>
      --    2    3
      <br/>
      -- 5    5      6    7    8    9      10   11   12   13     14   0    1    2
      <br/>
      --    3    4
      <br/>
      -- 6    6      7    8    9    10     11   12   13   14     0    1    2    3
      <br/>
      --    4    5
      <br/>
      -- 7    7      8    9    10   11     12   13   14   0      1    2    3    4
      <br/>
      --    5    6
      <br/>
      -- 8    8      9    10   11   12     13   14   0    1      2    3    4    5
      <br/>
      --    6    7
      <br/>
      -- 9    9      10   11   12   13     14   0    1    2      3    4    5    6
      <br/>
      --    7    8
      <br/>
      -- 10   10     11   12   13   14     0    1    2    3      4    5    6    7
      <br/>
      --    8    9
      <br/>
      -- 11   11     12   13   14   0      1    2    3    4      55   6    7    8
      <br/>
      --    9    10
      <br/>
      -- 12   12     13   14   0    1      2    3    4    5      6    7    8    9
      <br/>
      --    10   11
      <br/>
      -- 13   13     14   0    1    2      3    4    5    6      7    8    9    10
      <br/>
      --    11   12
      <br/>
      -- 14   14     0    1    2    3      4    5    6    7      8    9    10   11
      <br/>
      --    12   13
      <br/>
      -- Addition table over R(15) using Z15
    </p>
    <p num="141">
      The i-th subset of sequences, denoted by +b(q) }i, is then constructed in the usual way by concatenating the sequences of the i-th coset, +c(m) }i, according to the predefined Addition table where q=m in this case.
      <br/>
      A set of Structured Codes, denoted by +s(N) }, is constructed by sequentially concatenating the w subsets +b(q) }i for 0 &lt;= i &lt;= w-1.
      <br/>
      The set of Structured Codes will contains N sequences each of length N=q * w. For this construction rule only one Addition table can be constructed and therefore only one corresponding set of Structured Codes can be constructed.
    </p>
    <p num="142">
      A further refinement to the alternative construction rule is possible when m is non-prime and without primitive roots.
      <br/>
      Instead of using the integer residue class Zm =+0, 1, 2, . . . m-1} to construct an Addition table we can use the  PHI (m) residue integers Zl relatively prime to m to construct an Addition table.
      <br/>
      For example, when m=15, the  PHI (15)=8 residue integers relatively prime to 15 are +2, 4, 7, 8, 11, 13, 14} and the corresponding Addition table is illustrated below.
    </p>
    <p num="143">
      --
      <br/>
      --      + 0       1    2       4    7       8    11      13   14
      <br/>
      --      0    0       1    2       4    7       8    11      13   14
      <br/>
      --      1    1       2    3       5    8       9    12      14   0
      <br/>
      --      2    2       3    4       6    9       10   13      0    1
      <br/>
      --      4    4       5    6       8    11      12   0       2    3
      <br/>
      --      7    7       8    9       11   14      0    3       5    6
      <br/>
      --      8    8       9    10      12   0       1    4       6    7
      <br/>
      --      11   11      12   13      0    3       4    7       9    10
      <br/>
      --      13   13      14   0       2    5       6    9       11   12
      <br/>
      --      14   14      0    1       3    6       7    10      12   13
      <br/>
      -- Addition table-1 over R(15) using Z1 when m = 15
    </p>
    <p num="144">
      Again, the i-the subset of sequences, denoted by +b(q) }, is then constructed in the usual way by concatenating the sequences of the i-th coset, +c(m) }i, according to the predefined Addition table, where q= PHI (15)+1=9 in this case.
      <br/>
      A set of Structured Codes, denoted by +s(N) }, is constructed by sequentially concatenating the w subsets +b(q) }i for 0 &lt;= i &lt;= w-1.
      <br/>
      The set of Structured Codes will contains N sequences each of length N=q * w.
    </p>
    <p num="145">
      Although m=15 has no primitive roots, we can construct another seven distinct Addition tables over R(15).
      <br/>
      Firstly, the Multiplication table over R(15) based on the  PHI (15)=8 residue integers relatively prime to 15 is constructed as illustrated below.
    </p>
    <p num="146">
      --
      <br/>
      --      x    0       1    2       4    7       8    11      13   14
      <br/>
      --      0    0       0    0       0    0       0    0       0    0
      <br/>
      --      1    0       1    2       4    7       8    11      13   14
      <br/>
      --      2    0       2    4       8    14      1    7       11   13
      <br/>
      --      4    0       4    8       1    13      2    14      7    11
      <br/>
      --      7    0       7    14      13   4       11   2       1    8
      <br/>
      --      8    0       8    1       2    11      4    13      14   7
      <br/>
      --      11   0       11   7       14   2       13   1       8    4
      <br/>
      --      13   0       13   11      7    1       14   8       4    2
      <br/>
      --      14   0       14   13      11   8       7    4       2    1
      <br/>
      -- Multiplication table over R(15) using Z1 when m = 15
    </p>
    <p num="147">
      Secondly, each non-zero row of the Multiplication table is used to construct a distinct Addition table.
      <br/>
      The first non-zero row of the Multiplication table constructs Addition table-1 over R(15) using Zl when m=15 was illustrated above while the following seven non-zero rows construct another seven distinct Addition tables over R(1 5) using Zl when m=15.
    </p>
    <p num="148">
      Each Addition table can be used to construct a set of Structured Codes from the same seed set by uniquely specifying the concatenation order of coset sequences within a subset.
      <br/>
      Since for m=15 there are eight distinct Addition tables over R(15) using Zl when m=15 then we can construct eight sets of Structured Codes for a specified seed set.
      <br/>
      However, because there are no primitive roots then only one Multiplication table can be constructed in this case.
    </p>
    <p num="149">
      In a similar manner, a refinement to the alternative construction rule is possible when m=ps.
      <br/>
      For any irreducible polynomial g(x) of degree s over GF(p) the residue classes Zp �x� form a Galois polynomial field over GF(p) with respect to addition and multiplication modulo g(x).
      <br/>
      The Galois polynomial field over GF(p) contains exactly ps polynomial elements each of degree &lt;= s-1 and each belonging to the residue classes of polynomials Zp �x� modulo g(x).
    </p>
    <p num="150">
      For this refinement, the only requirement is that the polynomial g(x) be irreducible.
      <br/>
      Then the residue classes Zp �x� can be used directly to construct a distinct Multiplication table over GF(ps).
      <br/>
      However, only one multiplication table can be constructed for this case.
      <br/>
      Subsequently, each non-zero row of the Multiplication table can be used to construct a distinct Addition table, which in turn defines the concatenation order of coset sequences that make up a subset.
      <br/>
      A further refinement in this case is also possible.
      <br/>
      When g(x) is a primitive polynomial then the construct described in Condition 3 is used since for any primitive element a of GF(ps) the powers of a, namely a0, a1, a2, . . . am-2, are all distinct modulo g(x) and correspond to the non-zero residue polynomials in Zp �x�. That is, each residue polynomial can be expressed as a power of the primitive element a and the order  EPSILON  of the primitive element a is equal to ps -1 such that a EPSILON  =1.
      <br/>
      Correspondingly, Multiplication and an Addition tables over GF(ps) based on all the powers of a modulo g(x) can be constructed.
      <br/>
      However, if the polynomial g(x) is irreducible but not primitive then for any element a of GF(ps) the powers of a, namely a0, a1, a2, . . . am-2, are not all distinct modulo g(x).
      <br/>
      Instead, if the order of element a is  EPSILON , where  EPSILON &lt;ps -1 but  EPSILON .vertline.ps -1 is the least positive integer for which a EPSILON  =1, then the powers of a up to  EPSILON -1, namely a0, a1, a2, . . . a EPSILON -1, are distinct modulo g(x).
      <br/>
      In this case it is possible to construct Multiplication and Addition tables over GF(ps) based on the powers of a up to  EPSILON -1, i.e. a0, a1, a2, . . . a EPSILON -1, modulo g(x).
      <br/>
      If this further refinement is used then it is preferable to chose an element a with the largest possible value of  EPSILON  where there are exactly  PHI ( EPSILON ) elements of order  EPSILON  and hence it is possible to construct  PHI ( EPSILON ) Multiplication tables corresponding to the order  EPSILON .
      <br/>
      Once Addition tables are defined then the construction of Structured Codes can proceed as normal.
    </p>
    <p num="151">
      In summary, these refinements are included in order to complete the construction theory of Structured Codes.
      <br/>
      In practice, the most useful constructs are provided by Conditions 1, 3 and the Alternative Construct using the integer residue class Zm.
      <br/>
      The constructs provided by Condition 2 and the refinements described above, when m is non-prime without primitive roots or when g(x) is irreducible but not primitive, are less useful in practice but nonetheless complete.
    </p>
    <p num="152">
      The algorithms illustrated above provide a systematic way of constructing a very large number of sets of Structured Codes.
      <br/>
      In this section algorithms are illustrated that provide guidelines for selecting seed sets that generate particularly useful Structured Codes for application in communication systems.
      <br/>
      Specifically, three families of Structured Codes are identified called Cyclical, Orthogonal and Balanced Structured Codes, respectively.
      <br/>
      The properties of a set of Structured Codes are underpinned by the seed set from which they are constructed.
      <br/>
      In general, a seed set can be selected from any family of sequences including binary or non-binary, real or complex, quadriphase or polyphase etc. with corresponding mathematical operations being performed accordingly.
      <br/>
      For example, in the case of binary sequences there are 2w �/m�(2w -m)� possible distinct seed sets consisting of m sequences each of length w. Hence, even for modest values of m and w the number of seed sets available is very large indeed.
      <br/>
      For example, when m=4 and w=4 there are 1820 available binary seed sets.
    </p>
    <p num="153">
      In the case of binary sequences, a seed set could be constructed from any set of random binary sequences.
      <br/>
      However, the first and most obvious way to select a seed set is to choose it from a set of known sequences that have known good correlation properties.
      <br/>
      For example, we can select the seed set from a set of m-sequences or Gold sequences or Gold-like sequences or small sets of Kasami sequences or large sets of Kasami sequences or Barker sequences or Legendre sequences or GMW sequences or Golay sequences or Frank sequences or Chu sequences or Huffman sequences etc. etc. However, sets of Structured Codes with good correlation properties are obtained when the number m of sequences in the seed set is equal to the length w of a seed sequence, that is, m=w.
      <br/>
      More specifically, if the binary sequence +an }=(a0, a1, a2, . . . aw-1) of length w is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition  (Equation image '1' not included in text)
    </p>
    <p num="154">
      then a seed set +aw } constructed from the w left or right cyclical shifts of +an } produces sets of Cyclical Structured Codes with good correlation properties.
      <br/>
      The term quasi-balanced is taken to mean that the number of "+" and "-" elements in +an } differ by one.
      <br/>
      The name Cyclical Structured Codes refers to the cyclical method used to construct the seed set.
      <br/>
      Examples of sequences that are quasi-balanced and fulfill the optimal periodic autocorrelation condition include all m-sequences, the binary Barker sequences (++-), (+++--+-) and (+++---+--+-), Legendre sequences when w=4k-1 for integer k and certain GMW sequences.
      <br/>
      Other binary sequences that fulfill these conditions do exist.
      <br/>
      The procedure for constructing a seed set for generating a set of Cyclical Structured Codes is illustrated by way of example below when m=w=7 and +an }=(+++-+--, i.e. an m-sequence.
    </p>
    <p num="155">
      --
      <br/>
      --               +a(7) } Seed Set
      <br/>
      --               +an(0) } +++-+--
      <br/>
      --               +an(1) } ++-+--+
      <br/>
      --               +an(2) } +-+--++
      <br/>
      --               +an(3) } -+--+++
      <br/>
      --               +an(4) } +--+++-
      <br/>
      --               +an(5) } --+++-+
      <br/>
      --               +an(6) } -+++-+-
    </p>
    <p num="156">
      One of the most significant constructs used in the generation of Structured Codes occurs when the seed set is orthogonal and m=w.
      <br/>
      The term orthogonal is taken to mean that every sequence in the seed set is orthogonal to every other sequence in the seed set.
      <br/>
      When the seed set is orthogonal and m=w then the resulting set of Structured Codes is also orthogonal.
      <br/>
      Sets of Structured Codes that are orthogonal have been called Orthogonal Structured Codes.
      <br/>
      Hence, the identification of orthogonal seed sets is specifically relevant to the generation of Orthogonal Structured Codes.
      <br/>
      It is almost certain that there is only one periodic sequence that satisfies the ideal periodic autocorrelation condition shown below:  (Equation image '2' not included in text)
    </p>
    <p num="157">
      and this sequence is +an }=(+++-).
      <br/>
      Then an orthogonal seed set +a(4) } can be constructed from the four left or right cyclical shifts of +a,} and the resulting set of Structured Codes +s(16) } generated is also orthogonal.
      <br/>
      This particular example was demonstrated in Condition 3 earlier.
      <br/>
      A second systematic way of constructing Orthogonal Structured Codes is to use a Hadamard matrix as the seed set.
      <br/>
      A Hadamard matrix can be constructed for any integer power of 2 giving m=w=2s.
      <br/>
      Since the rows of an Hadamard matrix are always orthogonal then the Structured Codes generated are also orthogonal.
      <br/>
      A third systematic way of constructing Orthogonal Structured Codes is also based on the use of a binary sequence +an }=(a0, a1, a2, . . . aw-1) of length w that is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition  (Equation image '3' not included in text)
    </p>
    <p num="158">
      Firstly, a set of sequences is constructed from the w left or right cyclical shifts of +an }. Secondly, if R( TAU )=-1 for  TAU  not equal to 0 then an additional sequence element equal to +-1} is appended to each sequence in the set and an additional sequence with all sequence elements equal to +-1} is appended to the set.
      <br/>
      Alternatively, if R( TAU )=+1 for  TAU  not equal to 0 then an additional sequence element equal to ++1} is appended to each sequence in the set and an additional sequence with all sequence elements equal to ++1} is appended to the set.
      <br/>
      The resulting set of sequences thus form an orthogonal seed set.
      <br/>
      Examples of sequences that are quasi-balanced and fulfill the optimal periodic autocorrelation condition include all m-sequences, the binary Barker sequences (++-), (+++--+-) and (+++---+--+-), Legendre sequences when w=4k-1 for integer k and certain GMW sequences.
      <br/>
      Other binary sequences that fulfill these conditions do exist.
      <br/>
      The procedure for constructing an orthogonal seed set when +an } is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition is illustrated by way of example below for +an }=(+++-+--), i.e. an m-sequence.
    </p>
    <p num="159">
      --
      <br/>
      --               +a(8) } Seed Set
      <br/>
      --               +an(0) } +++-+---
      <br/>
      --               +an(1) } ++-+--+-
      <br/>
      --               +an(2) } +-+--++-
      <br/>
      --               +an(3) } -+--+++-
      <br/>
      --               +an(4) } +--+++--
      <br/>
      --               +an(5) } --+++-+-
      <br/>
      --               +an(6) } -+++-+--
      <br/>
      --               +an(7) } --------
    </p>
    <p num="160">
      A fourth systematic way to construct a set of Orthogonal Structured Codes is to use a small set of Orthogonal Structured Codes as the seed set in the construction of a larger set of Orthogonal Structured Codes.
      <br/>
      A fifth systematic way to construct a set of Orthogonal Structured Codes is to select the seed set from a set of orthogonal Gold sequences.
    </p>
    <p num="161">
      One of the main constraints on a wireless communication system is the interference produced by co-channel effects, multiple access effects and multipath propagation effects.
      <br/>
      The effectiveness of spread spectrum techniques to combat the interference depends on the properties of the signature sequences used to spread the spectrum.
      <br/>
      The Structure Codes possess good autocorrelation and crosscorrelation properties for spread spectrum systems.
      <br/>
      The Orthogonal Structured Codes are of particular significance because each code is orthogonal to every other code in the set.
      <br/>
      Wireless communication networks based on spread spectrum techniques frequently use orthogonal sequences in order to cancel out the cross-interference between different sequences when correlated simultaneously in the same frequency band.
      <br/>
      Until now the set of orthogonal sequences most commonly used is the Walsh codes taken from the rows of a Hadamard matrix.
      <br/>
      However, only one set of Walsh codes exist per code length N, where N must be an integer power of two.
      <br/>
      The sequence construction algorithms described above extends the number of sets of Orthogonal Structured Codes per code length N. More importantly, the algorithms are capable of systematically constructing multiple sets of Orthogonal Structured Codes for most practical sequence lengths and beyond.
      <br/>
      In addition, a very useful property of Orthogonal Structured Codes is that they form a Complementary Set of sequences.
      <br/>
      That is, the aperiodic autocorrelation function of all sequences in a set of Orthogonal Structured Codes sum to zero for every time shift, except the zero shift.
    </p>
    <p num="162">
      The flexibility of the construction rule for generating sets of Orthogonal Structured Codes is illustrated by way of example when m=23, that is, p=2 and s=3.
      <br/>
      Firstly, an orthogonal seed set +a(8) } is constructed using the m-sequence +an }=(+++-+--) which is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition.
    </p>
    <p num="163">
      --
      <br/>
      --               +a(8) } Seed Set
      <br/>
      --               +an(0) } +++-+---
      <br/>
      --               +an(1) } ++-+--+-
      <br/>
      --               +an(2) } +-+--++-
      <br/>
      --               +an(3) } -+--+++-
      <br/>
      --               +an(4) } +--+++--
      <br/>
      --               +an(5) } --+++-+-
      <br/>
      --               +an(6) } -+++-+--
      <br/>
      --               +an(7) } --------
    </p>
    <p num="164">
      In this example, each sequence in the seed set has length w=8.
      <br/>
      We construct w=8 cosets using the procedure described above for i=0, 1, 2, 3, 4, 5, 6 and 7 as illustrated below.
    </p>
    <p num="165">
      --
      <br/>
      -- Zm  Zp �x� +C(8) }i  +C(8)}0  +C(8)
      <br/>
      --  }1  +C(8) }2  +C(8) }3
      <br/>
      -- 0      0         +Cn(0) }i  +++-+--- +++-+--- +++-+---
      <br/>
      --  ---+-+++
      <br/>
      -- 1      1         +Cn(1) }i  ++-+--+- ++-+--+- --+-++-+
      <br/>
      --  ++-+--+-
      <br/>
      -- 2      x         +Cn(2) }i  +-+--++- -+-++--+ +-+--++-
      <br/>
      --  -+-++--+
      <br/>
      -- 3      x + 1 +Cn(3) }i  +-++---+ -+--+++- +-++---+ +-++---+
      <br/>
      -- 4      x2   +Cn(4) }i  +--+++-- -++---++ -++---++
      <br/>
      --  +--+++--
      <br/>
      -- 5      x2 + 1 +Cn(5) }i  ++---+-+ ++---+-+ --+++-+-
      <br/>
      --  --+++-+-
      <br/>
      -- 6      x2 + x +Cn(6) }i  +---+-++ -+++-+-- -+++-+--
      <br/>
      --  -+++-+--
      <br/>
      -- 7      x2 + x + 1 +Cn(7) }i  ++++++++ ++++++++ ++++++++
      <br/>
      --  ++++++++
      <br/>
      -- Zm  Zp �x� +C(8) }i  +C(8) }4  +C(8)
      <br/>
      --  }5  +C(8) }6  +C(8) }7
      <br/>
      -- 0      0         +Cn(0) }i  +++-+--- ---+-+++ ---+-+++
      <br/>
      --  ---+-+++
      <br/>
      -- 1      1         +Cn(1) }i  --+-++-+ --+-++-+ ++-+--+-
      <br/>
      --  --+-++-+
      <br/>
      -- 2      x         +Cn(2) }i  -+-++--+ +-+--++- +-+--++-
      <br/>
      --  -+-++--+
      <br/>
      -- 3      x + 1 +Cn(3) }i  -+--+++- -+--+++- -+--+++- +-++---+
      <br/>
      -- 4      x2   +Cn(4) }i  +--+++-- +--+++-- -++---++
      <br/>
      --  -++---++
      <br/>
      -- 5      x2 + 1 +Cn(5) }i  --+++-+- ++---+-+ --+++-+-
      <br/>
      --  ++---+-+
      <br/>
      -- 6      x2 + x +Cn(6) }i  +---+-++ -+++-+-- +---+-++
      <br/>
      --  +---+-++
      <br/>
      -- 7      x2 + x + 1 +Cn(7) }i  ++++++++ ++++++++ ++++++++
      <br/>
      --  ++++++++
    </p>
    <p num="166">
      Since, a=x is a primitive element of the primitive polynomial g(x)=x3 +x+1 then the powers of a modulo g(x) are (a0, a1, a2, a3, a4, a5, a6)=(1, x, x2, x+1, x2 +x, x2 +x+1, x2 +1).
      <br/>
      Hence, q=ps =23 and the corresponding Multiplication table M(23) over GF(23) modulo g(x)=x3 +x+1 is illustrated below.
    </p>
    <p num="167">
      --
      <br/>
      --               0     ALPHA 0   ALPHA 1   ALPHA 2
      <br/>
      --   ALPHA 3   ALPHA 4   ALPHA 5   ALPHA 6
      <br/>
      -- X             0    1         x         x2   x + 1 x2 + x x2
      <br/>
      --  + x + 1 x2 + 1
      <br/>
      -- 0    0         0    0         0         0         0         0         0
      <br/>
      --      0
      <br/>
      --  ALPHA 0  1         0    1         x         x2   x + 1  x2
      <br/>
      --  + x x2 + x + 1 x2 + 1
      <br/>
      --  ALPHA 1  x         0    x         x2   x + 1 x2 + x x2
      <br/>
      --  + x + 1 x2 + 1 1
      <br/>
      --  ALPHA 2  x2   0    x2   x + 1 x2 + x x2 + x + 1
      <br/>
      --  x2 + 1 1         x
      <br/>
      --  ALPHA 3  x + 1 0    x + 1 x2 + x x2 + x + 1 x2 + 1 1
      <br/>
      --        x         x2
      <br/>
      --  ALPHA 4  x2 + x 0    x2 + x x2 + x + 1 x2 + 1 1
      <br/>
      --        x         x2   x + 1
      <br/>
      --  ALPHA 5  x2 + x + 1 0    x2 + x + 1 x2 + 1 1         x
      <br/>
      --          x2   x + 1 x2 + x
      <br/>
      --  ALPHA 6  x2 + 1 0    x2 + 1 1         x         x2   x
      <br/>
      --  + 1 x2 + x x2 + x + 1
      <br/>
      -- Multiplication table over GF(23) for  ALPHA  = x and g(x) = x3 +
      <br/>
      --  x + 1
    </p>
    <p num="168">
      The seven non-zero rows of the Multiplication table can be used to construct seven distinct Addition tables.
      <br/>
      Addition table-1 constructed from the first non-zero row of the Multiplication table is illustrated below.
    </p>
    <p num="169">
      --
      <br/>
      -- +    0         1         x         x2   x + 1 x2 + x x2 + x
      <br/>
      --  + 1 x2 + 1
      <br/>
      -- 0         0         1         x         x2   x + 1 x2 + x x2
      <br/>
      --  + x + 1 x2 + 1
      <br/>
      -- 1         1         0         x + 1 x2 + 1 x         x2 + x + 1
      <br/>
      --  x2 + x x2
      <br/>
      -- x         x         x + 1 0         x2 + x 1         x2   x2
      <br/>
      --  + 1 x2 + x + 1
      <br/>
      -- x2   x2   x2 + 1 x2 + x 0         x2 + x + 1 x
      <br/>
      --      x + 1 1
      <br/>
      -- x + 1 x + 1 x         1         x2 + x + 1 0         x2 + 1
      <br/>
      --  x2   x2 + x
      <br/>
      -- x2 + x x2 + x x2 + x + 1 x2   x         x2 + 1 0
      <br/>
      --        1         x + 1
      <br/>
      -- x2 + x + 1 x2 + x + 1 x2 + x x2 + 1 x + 1 x2   1
      <br/>
      --        0         x
      <br/>
      -- x2 + 1 x2 + 1 x2   x2 + x + 1 1         x2 + x x +
      <br/>
      --  1 x         0
      <br/>
      -- Addition table-1 over GF(23) for  ALPHA  = x and g(x) = x3 + x +
      <br/>
      --  1
    </p>
    <p num="170">
      We construct a subset +b(q) }i corresponding to each coset +c(m) }i by concatenating the sequences of +c(m) }i according to the rows of the Addition table A(23), where q=ps =23.
      <br/>
      This procedure is facilitated by assigning the integer residue class Zm=8 =+0, 1, 2, 3, 4, 5, 6, 7} to the polynomial residue class Zp=2 �x�=+1, x, x2, x+1, x2 +x, x2 +x+1, x2 +1 } according to the sequential mapping 0 --&gt; 0, 1 --&gt; 1, x --&gt; 2, x2 --&gt; 3, x+1 --&gt; 4, x2 +x --&gt; 5, x2 +x+1 --&gt; 6 and x2 +1 --&gt; 7.
      <br/>
      Then the i-th subset +b(8) }i is illustrated below.
    </p>
    <p num="171">
      --
      <br/>
      --      +b(8) }i  i-th Subset for 0  &lt;=  i  &lt;=  7
      <br/>
      --      +bk(0) }i  +Cn(0) }i +Cn(1)
      <br/>
      --  }i +Cn(2) }i +Cn(4) }i +Cn(3)
      <br/>
      --  }i +Cn(6) }i +Cn(7) }i +Cn(5)
      <br/>
      --  }i
      <br/>
      --      +bk(1) }i  +Cn(1) }i +Cn(0)
      <br/>
      --  }i +Cn(3) }i +Cn(5) }i +Cn(2)
      <br/>
      --  }i +Cn(7) }i +Cn(6) }i +Cn(4)
      <br/>
      --  }i
      <br/>
      --      +bk(2) }i  +Cn(2) }i +Cn(3)
      <br/>
      --  }i +Cn(0) }i +Cn(6) }i +Cn(1)
      <br/>
      --  }i +Cn(4) }i +Cn(5) }i +Cn(7)
      <br/>
      --  }i
      <br/>
      --      +bk(3) }i  +Cn(4) }i +Cn(5)
      <br/>
      --  }i +Cn(6) }i +Cn(0) }i +Cn(7)
      <br/>
      --  }i +Cn(2) }i +Cn(3) }i +Cn(1)
      <br/>
      --  }i
      <br/>
      --      +bk(4) }i  +Cn(3) }i +Cn(2)
      <br/>
      --  }i +Cn(1) }i +Cn(7) }i +Cn(0)
      <br/>
      --  }i +Cn(5) }i +Cn(4) }i +Cn(6)
      <br/>
      --  }i
      <br/>
      --      +bk(5) }i  +Cn(6) }i +Cn(7)
      <br/>
      --  }i +Cn(4) }i +Cn(2) }i +Cn(5)
      <br/>
      --  }i +Cn(0) }i +Cn(1) }i +Cn(3)
      <br/>
      --  }i
      <br/>
      --      +bk(6) }i  +Cn(7) }i +Cn(6)
      <br/>
      --  }i +Cn(5) }i +Cn(3) }i +Cn(4)
      <br/>
      --  }i +Cn(1) }i +Cn(0) }i +Cn(2)
      <br/>
      --  }i
      <br/>
      --      +bk(7) }i  +Cn(5) }i +Cn(4)
      <br/>
      --  }i +Cn(7) }i +Cn(1) }i +Cn(6)
      <br/>
      --  }i +Cn(3) }i +Cn(2) }i +Cn(0)
      <br/>
      --  }i
    </p>
    <p num="172">Then, a set of Orthogonal Structured Codes +s(64) } which contains 64 orthogonal sequences, +si(.) }, each of length 64 is constructed by sequentially concatenating the subsets +b(8) }i for i=0, 1, 2, 3, 4, 5, 6 and 7 as illustrated below.</p>
    <p num="173">
      --
      <br/>
      -- +S(64) } Orthogonal Structured Codes 64  *  64
      <br/>
      -- +Sk(0) }
      <br/>
      --  +++-+---++-+--+-+-+--++-+--+++--+-++---++---+-++++++++++++---+-+
      <br/>
      -- +Sk(1) }
      <br/>
      --  ++-+--+-+++-+---+-++---+++---+-++-+--++-+++++++++---+-+++--+++--
      <br/>
      -- +Sk(2) }
      <br/>
      --  +-+--++-+-++---++++-+---+---+-++++-+--+-+--+++--++---+-+++++++++
      <br/>
      -- +Sk(3) }
      <br/>
      --  +--+++--++---+-++---+-+++++-+---+++++++++-+--++-+-++---+++-+--+-
      <br/>
      -- +Sk(4) }
      <br/>
      --  +-++---++-+--++-++-+--+-+++++++++++-+---++---+-++--+++--+---+-++
      <br/>
      -- +Sk(5) }
      <br/>
      --  +---+-+++++++++++--+++--+-+--++-++---+-++++-+---++-+--+-+-++---+
      <br/>
      -- +Sk(6) }
      <br/>
      --  +++++++++---+-++++---+-++-++---++--+++--++-+--+-+++-+---+-+--++-
      <br/>
      -- +Sk(7) }
      <br/>
      --  ++---+-++--+++--++++++++++-+--+-+---+-+++-++---++-+--++-+++-+---
      <br/>
      -- +Sk(8) }
      <br/>
      --  +++-+---++-+--+--+-++--+-++---++-+--+++--+++-+--++++++++++---+-+
      <br/>
      -- +Sk(9) }
      <br/>
      --  ++-+--+-+++-+----+--+++-++---+-+-+-++--+++++++++-+++-+---++---++
      <br/>
      -- +Sk(10) }
      <br/>
      --  -+-++--+-+--+++-+++-+----+++-+--++-+--+--++---++++---+-+++++++++
      <br/>
      -- +Sk(11) }
      <br/>
      --  -++---++++---+-+-+++-+--+++-+---++++++++-+-++--+-+--+++-++-+--+-
      <br/>
      -- +Sk(12) }
      <br/>
      --  -+--+++--+-++--+++-+--+-+++++++++++-+---++---+-+-++---++-+++-+--
      <br/>
      -- +Sk(13) }
      <br/>
      --  -+++-+--++++++++-++---++-+-++--+++---+-++++-+---++-+--+--+--+++-
      <br/>
      -- +Sk(14) }
      <br/>
      --  ++++++++-+++-+--++---+-+-+--+++--++---++++-+--+-+++-+----+-++--+
      <br/>
      -- +Sk(15) }
      <br/>
      --  ++---+-+-++---++++++++++++-+--+--+++-+---+--+++--+-++--++++-+---
      <br/>
      -- +Sk(16) }
      <br/>
      --  +++-+-----+-++-++-+--++--++---+++-++---+-+++-+--++++++++--+++-+-
      <br/>
      -- +Sk(17) }
      <br/>
      --  --+-++-++++-+---+-++---+--+++-+-+-+--++-++++++++-+++-+---++---++
      <br/>
      -- +Sk(18) }
      <br/>
      --  +-+--++-+-++---++++-+----+++-+----+-++-+-++---++--+++-+-++++++++
      <br/>
      -- +Sk(19) }
      <br/>
      --  -++---++--+++-+--+++-+--+++-+---+++++++++-+--++-+-++---+--+-++-+
      <br/>
      -- +Sk(20) }
      <br/>
      --  +-++---++-+--++---+-++-++++++++++++-+-----+++-+--++---++-+++-+--
      <br/>
      -- +Sk(21) }
      <br/>
      --  -+++-+--++++++++-++---+++-+--++---+++-+-+++-+-----+-++-++-++---+
      <br/>
      -- +Sk(22) }
      <br/>
      --  ++++++++-+++-+----+++-+-+-++---+-++---++--+-++-++++-+---+-+--++-
      <br/>
      -- +Sk(23) }
      <br/>
      --  --+++-+--++---++++++++++--+-++-+-+++-+--+-++---++-+--++-+++-+---
      <br/>
      -- +Sk(24) }
      <br/>
      --  ---+-+++++-+--+--+-++--++--+++--+-++---+-+++-+--++++++++--+++-+-
      <br/>
      -- +Sk(25) }
      <br/>
      --  ++-+--+----+-++++-++---+--+++-+--+-++--+++++++++-+++-+--+--+++--
      <br/>
      -- +Sk(26) }
      <br/>
      --  -+-++--++-++---+---+-+++-+++-+--++-+--+-+--+++----+++-+-++++++++
      <br/>
      -- +Sk(27) }
      <br/>
      --  +--+++----+++-+--+++-+-----+-+++++++++++-+-++--++-++---+++-+--+-
      <br/>
      -- +Sk(28) }
      <br/>
      --  +-++---+-+-++--+++-+--+-++++++++---+-+++--+++-+-+--+++---+++-+--
      <br/>
      -- +Sk(29) }
      <br/>
      --  -+++-+--+++++++++--+++---+-++--+--+++-+----+-+++++-+--+-+-++---+
      <br/>
      -- +Sk(30) }
      <br/>
      --  ++++++++-+++-+----+++-+-+-++---++--+++--++-+--+----+-+++-+-++--+
      <br/>
      -- +Sk(31) }
      <br/>
      --  --+++-+-+--+++--++++++++++-+--+--+++-+--+-++---+-+-++--+---+-+++
      <br/>
      -- +Sk(32) }
      <br/>
      --  +++-+-----+-++-+-+-++--++--+++---+--+++-+---+-++++++++++--+++-+-
      <br/>
      -- +Sk(33) }
      <br/>
      --  --+-++-++++-+----+--+++---+++-+--+-++--++++++++++---+-+++--+++--
      <br/>
      -- +Sk(34) }
      <br/>
      --  -+-++--+-+--+++-+++-+---+---+-++--+-++-++--+++----+++-+-++++++++
      <br/>
      -- +Sk(35) }
      <br/>
      --  +--+++----+++-+-+---+-+++++-+---++++++++-+-++--+-+--+++---+-++-+
      <br/>
      -- +Sk(36) }
      <br/>
      --  -+--+++--+-++--+--+-++-++++++++++++-+-----+++-+-+--+++--+---+-++
      <br/>
      -- +Sk(37) }
      <br/>
      --  +---+-+++++++++++--+++---+-++--+--+++-+-+++-+-----+-++-+-+--+++-
      <br/>
      -- +Sk(38) }
      <br/>
      --  +++++++++---+-++--+++-+--+--+++-+--+++----+-++-++++-+----+-++--+
      <br/>
      -- +Sk(39) }
      <br/>
      --  --+++-+-+--+++--++++++++--+-++-++---+-++-+--+++--+-++--++++-+---
      <br/>
      -- +Sk(40) }
      <br/>
      --  ---+-+++--+-++-++-+--++-+--+++---+--+++--+++-+--++++++++++---+-+
      <br/>
      -- +Sk(41) }
      <br/>
      --  --+-++-+---+-+++-+--+++-++---+-++-+--++-++++++++-+++-+--+--+++--
      <br/>
      -- +Sk(42) }
      <br/>
      --  +-+--++--+--+++----+-+++-+++-+----+-++-++--+++--++---+-+++++++++
      <br/>
      -- +Sk(43) }
      <br/>
      --  +--+++--++---+-+-+++-+-----+-++++++++++++-+--++--+--+++---+-++-+
      <br/>
      -- +Sk(44) }
      <br/>
      --  -+--+++-+-+--++---+-++-+++++++++---+-+++++---+-++--+++---+++-+--
      <br/>
      -- +Sk(45) }
      <br/>
      --  -+++-+--+++++++++--+++--+-+--++-++---+-+---+-+++--+-++-+-+--+++-
      <br/>
      -- +Sk(46) }
      <br/>
      --  ++++++++-+++-+--++---+-+-+--+++-+--+++----+-++-+---+-++++-+--++-
      <br/>
      -- +Sk(47) }
      <br/>
      --  ++---+-++--+++--++++++++--+-++-+-+++-+---+--+++-+-+--++----+-+++
      <br/>
      -- +Sk(48) }
      <br/>
      --  ---+-+++++-+--+-+-+--++--++---++-+--+++-+---+-++++++++++--+++-+-
      <br/>
      -- +Sk(49) }
      <br/>
      --  ++-+--+----+-+++-+--+++---+++-+-+-+--++-+++++++++---+-++-++---++
      <br/>
      -- +Sk(50) }
      <br/>
      --  +-+--++--+--+++----+-++++---+-++++-+--+--++---++--+++-+-++++++++
      <br/>
      -- +Sk(51) }
      <br/>
      --  -++---++--+++-+-+---+-++---+-++++++++++++-+--++--+--+++-++-+--+-
      <br/>
      -- +Sk(52) }
      <br/>
      --  -+--+++-+-+--++-++-+--+-++++++++---+-+++--+++-+--++---+++---+-++
      <br/>
      -- +Sk(53) }
      <br/>
      --  +---+-++++++++++-++---+++-+--++---+++-+----+-+++++-+--+--+--+++-
      <br/>
      -- +Sk(54) }
      <br/>
      --  +++++++++---+-++--+++-+--+--+++--++---++++-+--+----+-++++-+--++-
      <br/>
      -- +Sk(55) }
      <br/>
      --  --+++-+--++---++++++++++++-+--+-+---+-++-+--+++-+-+--++----+-+++
      <br/>
      -- +Sk(56) }
    </p>
    <p num="174">
      --  ---+-+++--+-++-+-+-++--+-++---+++-++---++---+-++++++++++++---+-+
      <br/>
      -- +Sk(57) }
      <br/>
      --  --+-++-+---+-++++-++---+++---+-+-+-++--++++++++++---+-++-++---++
      <br/>
      -- +Sk(58) }
      <br/>
      --  -+-++--++-++---+---+-++++---+-++--+-++-+-++---++++---+-+++++++++
      <br/>
      -- +Sk(59) }
      <br/>
      --  -++---++++---+-++---+-++---+-+++++++++++-+-++--++-++---+--+-++-+
      <br/>
      -- +Sk(60) }
      <br/>
      --  +-++---+-+-++--+--+-++-+++++++++---+-+++++---+-+-++---+++---+-++
      <br/>
      -- +Sk(61) }
      <br/>
      --  +---+-++++++++++-++---++-+-++--+++---+-+---+-+++--+-++-++-++---+
      <br/>
      -- +Sk(62) }
      <br/>
      --  +++++++++---+-++++---+-++-++---+-++---++--+-++-+---+-+++-+-++--+
      <br/>
      -- +Sk(63) }
      <br/>
      --  ++---+-+-++---++++++++++--+-++-++---+-+++-++---+-+-++--+---+-+++
    </p>
    <p num="175">
      For each primitive element a we can construct a total of seven distinct sets of Orthogonal Structured Codes from the same seed set because seven distinct Addition tables can be derived from any one primitive element.
      <br/>
      While the sequences are orthogonal within each set they are not orthogonal between sets.
      <br/>
      However, the inphase crosscorrelation value between sequences belonging to different sets derived from the same primitive element is always equal to N1/2 (i.e. 8 in this case) since the corresponding Addition tables are guaranteed to have only one coincident element per column.
      <br/>
      Furthermore, since there are exactly  PHI (ps -1)= PHI (23 -1)=6 primitive elements, corresponding to the residue polynomials in variable x modulo g(x), then the total number of sets of Orthogonal Structured Codes that can be constructed from each primitive polynomial is 42 (i.e. 6 * 7).
      <br/>
      And since there are exactly  PHI (p3 -1)/s= PHI (23 -1)/3=2 primitive polynomials of degree s=3 in GF(23), which are g(x)=x3 +x+1 and g(x)=x3 +x2 +1, then it is possible to construct a total of 84 (i.e. 2 * 6 * 7) distinct sets of Orthogonal Structured Codes from one seed set.
      <br/>
      In summary, when m=ps =w then there are  PHI (ps -1)/s primitive polynomials of degree s in GF(ps) each with  PHI (ps -1) primitive elements each with ps -1 distinct Addition tables.
      <br/>
      Consequently, the total number of distinct sets of Orthogonal Structured Codes that can be constructed from a common seed set for the condition m=w is given by  (Equation image '4' not included in text)
    </p>
    <p num="176">
      Since the number of orthogonal seed sets available is large when m=w&gt;4 then the overall numbers of sets of Orthogonal Structured Codes that can be constructed is very large indeed.
      <br/>
      For example, the following table illustrates six distinct orthogonal seed sets each of which can be used to construct a set of 64 Orthogonal Structured Codes.
      <br/>
      The table is by no means exhaustive and many more orthogonal seed sets containing m=8 sequences each of length w=8 exist.
      <br/>
      The example shown includes an orthogonal construction on the two m-sequences of length seven, a set of Walsh codes taken from an 8 * 8 Hadamard matrix, an 8 * 8 set of orthogonal Gold sequences and two arbitrary 8 * 8 sets of orthogonal sequences.
      <br/>
      For the example being illustrated a total of 504 distinct sets of Orthogonal Structured Codes each containing 64 orthogonal sequences of length 64 could be constructed using the six orthogonal seed sets identified.
      <br/>
      Clearly, such sequences are ideal for cellular mobile application where a large number of sets of sequences with low correlation values are required.
    </p>
    <p num="177">
      --
      <br/>
      --         m-seq.      m-seq.      Walsh       Orthogonal  Arbitrary
      <br/>
      --  Arbitrary
      <br/>
      -- +a(8) }i  Set 1       Set 2       Codes       Gold Codes  Set 1
      <br/>
      --      Set 2
      <br/>
      -- +an(0) }i  +++-+--- +++--+-- ++++++++ ++--+-++ +++-++--
      <br/>
      --  ++--+++-
      <br/>
      -- +an(1) }i  ++-+--+- ++--+-+- +-+-+-+- +-++++++ ++-++-+-
      <br/>
      --  +-+-++-+
      <br/>
      -- +an(2) }i  +-+--++- +--+-++- ++--++-- ++-+-++- +-++-++-
      <br/>
      --  -++-+-++
      <br/>
      -- +an(3) }i  -+--+++- --+-+++- +--++--+ +++-++-- -+++----
      <br/>
      --  -----+++
      <br/>
      -- +an(4) }i  +--+++-- -+-+++-- ++++---- +-+---+- +++---++
      <br/>
      --  ++-----+
      <br/>
      -- +an(5) }i  --+++-+- +-+++--- +-+--+-+ ++++---+ ++-+-+-+
      <br/>
      --  +-+---+-
      <br/>
      -- +an(6) }i  -+++-+-- -+++--+- ++----++ +----+-+ +-+++--+
      <br/>
      --  -++--+--
      <br/>
      -- +an(7) }i  -------- -------- +--+-++- +--++--- -+++++++
      <br/>
      --  ----+---
    </p>
    <p num="178">
      In summary, the set of Orthogonal Structured Codes constructed in this example are cyclically distinct.
      <br/>
      The term cyclically distinct is taken to mean that every sequence in the set is not a cyclical shift of any other sequence within the set and hence each sequence is periodic in N=64.
      <br/>
      This property is realised because the rows and columns of each Addition table are distinct.
      <br/>
      In general, it is conjectured that when p &gt;= 2 and s &gt;= 3 the Addition tables over GF(ps) will always be distinct and hence the resulting sets of Orthogonal Structured Codes will always be cyclically distinct.
      <br/>
      This property is specifically beneficial when the sequences are used in multipath since they will remain `orthogonal` in multipath.
      <br/>
      This is in contrast to sets of Walsh Codes which are not cyclically distinct and hence do not remain orthogonal in multipath unless covered or masked by another pseudorandom sequence.
      <br/>
      When p=2 and s=2 the rows and columns of the Addition tables over GF(4) modulo g(x)=x2 +x+1 are not distinct (see the construction example given for Condition 3).
      <br/>
      It is conjectured that this is the only incident when the Addition tables are not distinct.
      <br/>
      However, if the crosscorrelation condition is relaxed between sets belonging to different Addition tabled derived from the same primitive element, then for this case an alternative form of the Addition table can be used which involves a rotation or exchange of the elements as illustrated below.
    </p>
    <p num="179">
      --
      <br/>
      --                       0          ALPHA 0   ALPHA 1   ALPHA 2
      <br/>
      -- +                0         1         x         x + 1
      <br/>
      --      0       0         0         1         x         x + 1
      <br/>
      --       ALPHA 0  1         1         0         x + 1 x
      <br/>
      --       ALPHA 1  x         x         x + 1 0         1
      <br/>
      --       ALPHA 2  x + 1 x + 1 x         1         0
      <br/>
      -- Addition table over GF(22) for  ALPHA  = x and g(x) = x2 + x + 1
    </p>
    <p num="180">
      --
      <br/>
      -- Modified Addition
      <br/>
      -- table based on
      <br/>
      -- A(22) for  ALPHA  = x
      <br/>
      --         0             1             x             x + 1
      <br/>
      --         1             x + 1    0             x
      <br/>
      --         x             0             x + 1    1
      <br/>
      --         x + 1    x             1             0
      <br/>
      -- Alternative Addition table over GF(22) for  ALPHA  = x and g(x) =
      <br/>
      --  x2 + x + 1
    </p>
    <p num="181">
      The alternative Addition table might be used in a spread spectrum communication system where a single set is deployed once, thereby avoiding crosscorrelation with other sets, while ensuring that the sequences of the set deployed are cyclically distinct thereby guaranteeing `orthogonality` in multipath.
      <br/>
      If several sets of Orthogonal Structured Codes are to be deployed simultaneously then the alternative Addition table is not preferable.
    </p>
    <p num="182">
      Using Structured Codes in a lightwave spread spectrum communication system is achieved by unipolar-bipolar correlation techniques.
      <br/>
      In general, unipolar-bipolar correlation introduces a disturbing term, namely an offset that can be removed by AC coupling the photodetector to the receiver preamplifier.
      <br/>
      The offset is caused by the one-zero imbalance of the sequences as well as the number of simultaneous sequence transmissions in the case of CDMA.
      <br/>
      In applications where DC coupling of the photodetector is needed, the off-set can be removed by using either balanced sequences or by using a complementary (second) channel that generates a differential signaling format; nominally the second channel being provided by wavelength division multiplexing techniques.
      <br/>
      Balanced Structured Codes are illustrated hereinafter for lightwave communication.
      <br/>
      However, Orthogonal Structured Codes may also be used to realise a differential unipolar-bipolar signaling scheme without the need for a second physical channel.
    </p>
    <p num="183">
      A set of Balanced Structured Codes can be constructed from a balanced seed set.
      <br/>
      The term balanced seed set is taken to mean that every sequence in the seed set has an equal number of "+1" and "-1" elements.
      <br/>
      When the seed set is balanced the resulting set of Structured Codes is also balanced.
      <br/>
      Sets of Structured Codes that are balanced have been called Balanced Structured Codes.
      <br/>
      Hence, the identification of balanced seed sets is specifically relevant to the generation of Balanced Structured Codes.
      <br/>
      A systematic way of constructing Balanced Structured Codes is also based on the use of a binary sequence +an }=(a0, a1, a2, . . . aw-1) of length w that is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition  (Equation image '5' not included in text)
    </p>
    <p num="184">
      Firstly, a set of sequences is constructed from the w left or right cyclical shifts of +an }. Secondly, if R( TAU )=-1 for  TAU  not equal to 0 then an additional sequence element equal to +-1} is appended to each sequence in the set.
      <br/>
      Alternatively, if R( TAU )=+1 for  TAU  not equal to 0 then an additional sequence element equal to ++1} is appended to each sequence in the set.
      <br/>
      The resulting set of sequences thus form a balanced seed set.
      <br/>
      Examples of sequences that are quasi-balanced and fulfill the optimal periodic autocorrelation condition include all m-sequences, the binary Barker sequences (++-), (+++--+-) and (+++---+--+-), Legendre sequences when w=4k-1 for integer k and certain GMW sequences.
      <br/>
      Other binary sequences that fulfill these conditions do exist.
      <br/>
      The procedure for constructing a balanced seed set when +an } is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition is illustrated by way of example below for +an }=(+++-+--), i.e. an m-sequence.
      <br/>
      In this example we note that m=7 while w=8.
    </p>
    <p num="185">
      --
      <br/>
      --               +a(7) } Seed Set
      <br/>
      --               +an(0) } +++ - + ---
      <br/>
      --               +an(1) } ++ - + -- + -
      <br/>
      --               +an(2) } + - + -- ++ -
      <br/>
      --               +an(3) } - + -- +++ -
      <br/>
      --               +an(4) } + -- +++ --
      <br/>
      --               +an(5) } -- +++ - + -
      <br/>
      --               +an(6) } - +++ - + --
    </p>
    <p num="186">Another systematic way to construct a set of Balanced Structured Codes is to use a small set of Balanced Structured Codes as the seed set in the construction of a larger set of Balanced Structured Codes.</p>
    <p num="187">
      Algorithms are thus realised for constructing the Structured Codes.
      <br/>
      Additionally, specific sets of sequences have been identified for use in spread spectrum communication techniques.
    </p>
    <p num="188">
      Applications of the signature sequences will now be described with reference to specific transmitter and receiver architectures.
      <br/>
      Usually, the transmitter and receiver are combined at each end of the communication path for bi-directional communication.
      <br/>
      Thus, by way of example the transceiver design is based on an M-ary bi-orthogonal keying scheme.
      <br/>
      An alternative example would be an M-ary orthogonal keying scheme.
      <br/>
      In an M-ary bi-orthogonal keying scheme one of M possible symbols is transmitted during each symbol interval, where M&gt;2.
      <br/>
      Each symbol represents a co-ordinate in a K-dimensional signal space using K=M/2 orthonormal basis functions.
      <br/>
      In M-ary bi-orthogonal keying the symbol set consists of M/2 orthonormal basis functions and their complements.
      <br/>
      For the transceiver designs presented, the orthonormal basis functions are chosen from sets of Orthogonal Structured Codes.
      <br/>
      Consequently, spectrum spreading and M-ary transmission are combined in a single bandwidth efficient modulation scheme.
      <br/>
      Though M-ary bi-orthogonal keying is an established digital modulation scheme, the use of Orthogonal Structured Codes as orthonormal basis functions is completely new.
    </p>
    <p num="189">
      In the description which follows the notation adopted is: + PHI n(j) } denotes the j-th Orthogonal Structured Code with elements  PHI n  EPSILON + +- 1}; + PHI n(j) } denotes the unipolar version of + PHI n(j) } with elements  PHI n  EPSILON +1,0}; and  PHI j (t) and  PHI j (t) denote bipolar and unipolar waveform versions of + PHI n(j) } and + PHI n(j) } respectively.
      <br/>
      In addition, d(t) and D(t) denote unit amplitude, rectangular bipolar and unipolar data waveforms, respectively.
    </p>
    <p num="190">
      In this general arrangement, the transmitter architecture is firstly described with reference to FIG. 1.
      <br/>
      Unipolar binary data D(t) is fed into a 1:k multiplexer at rate 1/T, where k=log2 M. At the multiplexer output, the (k-1) most-significant bits (MSB) are used to chose one from K=M/2=2k-1 sequences thereby determining the symbol waveform.
      <br/>
      The least significant bit (LSB) determines whether or not the sequence is complemented thereby realising the other half of the symbol code-book.
      <br/>
      The resulting symbol waveform is then made available for transmission.
      <br/>
      The transmitter architecture is based on a standard M-ary bi-orthogonal keying scheme except that the symbol waveforms have the dual functionality of spreading the spectrum and acting as orthonormal basis functions.
      <br/>
      This is possible because the sequences are taken from sets of Orthogonal Structured Codes.
      <br/>
      In general, this may be expressed by
      <br/>
      + PHI n(j) }=+sn(j) }
    </p>
    <p num="191">for 0 &lt;= j &lt;= K-1 and the maximum value of K is N.</p>
    <p num="192">
      FIG. 2 is a schematic diagram of a receiver design.
      <br/>
      For the M-ary transmitter architecture presented above, the corresponding receiver consists of a bank of K-correlators matched to the orthonormal basis functions  PHI j (t), where K=M/2=2k-1.
      <br/>
      The outputs from the correlators are passed to samplers and are sampled at time t=kT before being fed into a decision logic block where a maximum likelihood detection of the data transmitted is performed.
      <br/>
      For the M-ary bi-orthogonal scheme this involves a search for the greatest magnitude peak at the outputs of the bank of K-correlators and subsequently the polarity of the greatest magnitude peak.
      <br/>
      This information can then be used to uniquely identify the transmitted symbol and hence the corresponding data bits.
      <br/>
      The logic output is D(t), the estimate of D(t) the original unipolar binary data inputted to the transmitter.
    </p>
    <p num="193">
      In a first embodiment, a wireless communication system is disclosed.
      <br/>
      The transmitter and receiver architectures described with reference to FIGS. 1 and 2 are adapted for use with coded signals based on Orthogonal Structured Codes.
      <br/>
      Such generalised architectures may be used in any spread spectrum signaling scheme.
      <br/>
      For example, in a radio communications system the output of the transmitter shown in FIG. 1 can be directly carrier modulated using either amplitude, frequency or phase modulation techniques.
      <br/>
      In a wireless infrared communication system based on unipolar-bipolar correlation techniques, FIGS. 3 and 4 show schematic diagrams of the transmitter and receiver architectures incorporating the electro-optic interfaces.
      <br/>
      At the transmitter the same M-ary bi-orthogonal keying scheme is used to generate unipolar symbol waveforms which directly control a drive circuit that switches a lightwave source, such as a Light Emitting Diode or Laser Diode, on and off.
      <br/>
      As in the generalised architecture of FIG. 1, the orthonormal basis functions are obtained from sets of Orthogonal Structured Codes.
    </p>
    <p num="194">
      At the receiver shown in FIG. 4, the optical signal is detected by a photodiode or an array of photodiodes and amplified by a broadband transimpedance amplifier before being fed into a bank of K-correlators.
      <br/>
      The correlator outputs are passed through samplers to be sampled at time t=kT and then fed into a decision logic block that implements a maximum likelihood detection of the data transmitted.
    </p>
    <p num="195">
      When the photodiode is DC coupled to the receiver, the unipolar-bipolar correlation technique presented above generates an off-set if the spreading sequences are imbalanced.
      <br/>
      One method to remove this inherent off-set is to use Balanced Structured Codes as orthonormal basis functions.
      <br/>
      However, the performance of a full set of Balanced Structured Codes is inferior to the performance of a full set of Orthogonal Structured Codes.
      <br/>
      If the photodiode is AC coupled to the receiver then Orthogonal Structured Codes may be used without introducing a sequence dependent offset.
      <br/>
      In applications where DC coupling is required, the offset produced by imbalanced sequences can be removed efficiently by a differential unipolar-bipolar signaling format.
      <br/>
      FIG. 5 illustrates a schematic diagram of a differential unipolar-bipolar signaling scheme.
      <br/>
      In addition to removing the off-set effect, a differential unipolar-bipolar signaling scheme removes common mode interference.
      <br/>
      This is particularly useful for combating artificial ambient light interference, such as that produced by electronic-ballast-driven lamps, in an infrared wireless transmission embodiment.
    </p>
    <p num="196">
      Bipolar data d(t) at a rate of 1/T and its inverse -d(t) are spread by multiplication with the orthonormal basis functions  PHI jc (t) and  PHI js (t), respectively, where  PHI jc (t) and  PHI js (t) are an orthogonal pair of spreading sequences.
      <br/>
      In practice,  PHI jc (t) and  PHI js (t) can be selected from a set of Orthogonal Structured Codes.
      <br/>
      As an Orthogonal Structured Code +sn(j) } and its reverse sequence + SIGMA n(j) } form an orthogonal pair, it is recommended that  PHI jc (t).tbd.+sn(j) } and  PHI js (t).tbd.+ SIGMA n(j) } are chosen to result in an efficient allocation of sequences.
      <br/>
      The orthogonal pair of signals are then converted from bipolar to unipolar format using Level Shifters, summed together and then transmitted on a unipolar channel such as a lightwave medium.
    </p>
    <p num="197">
      At the receiver, the total received signal s(t) is directly multiplied in parallel by the bipolar orthonormal basis functions  PHI jc (t) and  PHI js (t).
      <br/>
      The outputs from the multipliers are differenced and the resulting difference signal is then integrated over the symbol period T. In a differential unipolar-bipolar signaling scheme, the in-phase value of the correlator output is the same as that obtained when a normal bipolar-bipolar signaling format is used.
    </p>
    <p num="198">The transmitter and receiver architectures shown in FIGS. 3 and 4 may be converted from a unipolar-bipolar signaling format to a differential unipolar-bipolar signaling format bit augmenting the M-ary bi-orthogonal keying scheme with the circuits shown in FIG. 5.</p>
    <p num="199">
      Consequently, in the receiver two multipliers are required per branch.
      <br/>
      A schematic diagram of an M-ary bi-orthogonal keying scheme incorporating differential signaling is shown in FIG. 6 while a schematic diagram of the corresponding receiver is shown in FIG. 7.
      <br/>
      In the transmitter, the differential symbol waveforms drive separate lightwave sources.
      <br/>
      Consequently, the summation of differential signals takes place on the lightwave channel.
      <br/>
      This configuration has the advantage that the drive circuits remain digital thereby avoiding non-linearity problems in the transmitter.
    </p>
    <p num="200">
      For a given sequence length N, the spectral efficiency of a spread spectrum communication system can be substantially increased by using two or more distinct sets of Orthogonal Structured Codes in one transceiver.
      <br/>
      FIGS. 8 and 9 show schematic diagrams of a transmitter and receiver, respectively, that use two distinct orthogonal code sets in an M-ary bi-orthogonal keying scheme.
      <br/>
      That is, the transceiver consists of two M-ary bi-orthogonal keying schemes combined in parallel but using two distinct code sets.
      <br/>
      In this case, the capacity of the communication link is doubled.
      <br/>
      In the transmitter, shown in FIG. 8, unipolar binary data D(t) is fed into a 1:2k multiplexer at rate 1/T, where k=log2 M. The first k multiplexed data bits feed one branch of the M-ary bi-orthogonal keying scheme while the second k multiplexed data bits feed the other branch of the M-ary bi-orthogonal keying scheme.
      <br/>
      The receiver, shown in FIG. 9, consists of two banks of K-correlators; one matched to the first code set while the other bank is matched to the second code set.
      <br/>
      Two distinct maximum likelihood detectors are used to detect the data belonging to each parallel M-ary bi-orthogonal scheme.
      <br/>
      Once detected, the data from each branch is combined using a 2k:1 multiplexer.
      <br/>
      Ideally, the distinct code-sets should be orthogonal in order to avoid any crosscorrelation interference when two symbol waveforms are transmitted and received in parallel.
      <br/>
      In practice, the distinct code sets are not mutually orthogonal and hence cross-interference occurs.
      <br/>
      However, code sets can be chosen from the large number of Orthogonal Structured Codes such that the crosscorrelation interference does not cause transmission errors.
      <br/>
      An example of two such code sets for N 16 are the Orthogonal Structured Codes constructed on the seed sequence +an }=(+,+,+,-) using two distinct Addition tables derived from the same Multiplication table.
    </p>
    <p num="201">
      It is considered preferable, although not essential, that the spreading sequences in a differential unipolar-bipolar signaling format are orthogonal.
      <br/>
      If the only requirement is to remove a sequence dependent off-set, then any pair of periodic binary sequences +an } and +bn } can be used providing that they have the same +1,0} chip imbalance.
      <br/>
      This condition may be satisfied by using a sequence pair consisting of the sequence +an } and its reverse sequence +bn }=+ SIGMA n }. A potential disadvantage of using a non-orthogonal sequence pair is that crosscorrelation interference is produced at the receiver.
      <br/>
      However, by an appropriate choice of the initial phase of the sequence, the crosscorrelation interference can be made constructive rather than destructive.
      <br/>
      FIG. 10 shows a schematic diagram of a differential unipolar-bipolar signaling scheme applicable to any periodic binary sequence.
    </p>
    <p num="202">In a first exemplifying embodiment, an infrared communications system for a wireless local area network comprises a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques, a means for transmitting coded infrared signals and a receiver circuit for receiving coded infrared signals having means for decoding signature sequences in a spread spectrum communication system.</p>
    <p num="203">
      In this embodiment each remote communication terminal comprises an infrared transceiver that can use either the transmitter and receiver pair shown in FIGS. 3 and 4, respectively, or the transmitter and receiver pair shown in FIGS. 6 and 7, respectively.
      <br/>
      For the transceiver implemented according to FIGS. 3 and 4, binary data is fed into a 1:k multiplexer from which the k-1 MSB are used to chose one from K sequences which may or may not be complemented by the LSB.
      <br/>
      The code set is chosen from a set of Orthogonal Structured Codes.
      <br/>
      The symbol waveform thus generated is used to intensity modulate a lightwave source such as a Light Emitting Diode or a Laser Diode.
      <br/>
      At the receiver a photosensitive detector, for example, a photodiode or an array of photodiodes, detects the lightwave signal.
      <br/>
      The resulting photocurrent is amplified and a bank of K-correlators generates K matched filter samples.
      <br/>
      The K samples are fed into a maximum likelihood detector circuit that detects the k transmitted data bits and converts them into a single serial bit stream, which is an estimate of the transmitted data.
      <br/>
      Each receiver contains a means of synchronisation that aligns the received signal with the locally generated spreading sequences used in the bank of K-correlators.
    </p>
    <p num="204">
      For the transceiver implemented according to FIGS. 6 and 7, unipolar binary data D(t) is fed into an 1:k multiplexer.
      <br/>
      The k-1 MSB feed two distinct code sets that are mutually orthogonal; i.e. code set + PHI }c and + PHI }s where + PHI }c is orthogonal to + PHI }s.
      <br/>
      The k-1 MSB are used to chose one from K sequences in both code sets denoted by + PHI n(j) }c and + PHI n(j) }s. The LSB when logic "Hi" will not complement + PHI n(j) }c but will complement + PHI n(j) }s and visa versa when the LSB is logic "Lo".
      <br/>
      Each symbol waveform is used to intensity modulate a separate lightwave source such as a Light Emitting Diode or a Laser Diode.
      <br/>
      The differential symbol waveform is formed by summation of the parallel symbol waveforms in the lightwave medium.
      <br/>
      Alternatively, the parallel symbol waveforms can be summed prior to electro-optic conversion and the resulting differential symbol waveform used to drive a single lightwave source.
      <br/>
      At the receiver a photosensitive detector, for example a photodiode or an array of photodiodes, detects the lightwave signal.
      <br/>
      The resulting photocurrent is amplified and a bank of K differential correlators generate K matched filter samples.
      <br/>
      A differential correlator consists of two parallel correlators, one for each possible pair of symbol waveforms, whose outputs are subtracted.
      <br/>
      The K samples are fed into a maximum likelihood detector circuit that detects the k transmitted data bits and converts them into a single serial bit stream, which is an estimate of the transmitted data.
      <br/>
      Each receiver contains a means of synchronisation that aligns the received signal with the locally generated spreading sequences used in the bank of K differential correlators.
    </p>
    <p num="205">The advantages of the techniques used in the above embodiment are:</p>
    <p num="206">
      (1) When combined with M-ary bi-orthogonal keying, sets of Orthogonal Structured Codes give bandwidth efficient modulation schemes that are robust against narrow band interference and multipath propagation effects.
      <br/>
      (2) When differential unipolar-bipolar signaling is embedded within a lightwave spread spectrum communication system then common mode interfering signals are removed.
      <br/>
      In a lightwave spread spectrum system this has the advantage of removing the DC offset caused by the sequence imbalance.
      <br/>
      In a wireless lightwave spread spectrum system this has the added advantage of reducing the degradation in system performance caused by interference from ambient artificial light.
      <br/>
      (3) When used as direct spreading sequences, sets of Orthogonal Structured Codes remain orthogonal under multipath condition and in general possess excellent autocorrelation and crosscorrelation properties.
      <br/>
      (4) When used as direct spreading sequences, sets of Orthogonal Structured Codes aid synchronisation between transceiver pairs because they form Complementary Sets.
    </p>
    <p num="207">In a second exemplifying embodiment, a radio communication system for a wireless local area network comprises a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques, a means for transmitting coded radio signals and a receiver circuit for receiving coded radio signals having means for decoding signature sequences in a spread spectrum communication system.</p>
    <p num="208">
      In this embodiment, each remote communication terminal comprises a radio transceiver that uses the transmitter and receiver pair shown in FIGS. 1 and 2, respectively.
      <br/>
      At the transmitter, binary data is fed into a 1:k multiplexer from which the k-1 MSB are used to chose one from K sequences that may or may not be complemented by the LSB.
      <br/>
      The code set is chosen from a set of Orthogonal Structured Codes.
      <br/>
      The symbol waveform generated modulates a radiowave carrier for transmission.
      <br/>
      At the receiver, the radiowave signal is detected via an antenna and subsequently is demodulated in order to remove the radiowave carrier.
      <br/>
      A bank of K-correlators generate K matched filter samples.
      <br/>
      The K samples are fed to a maximum likelihood detector circuit that detects the k transmitted data bits and converts them into a single serial bit stream, which is an estimate of the transmitted data.
      <br/>
      Each receiver contains a means of synchronisation that aligns the received signal with the locally generated spreading sequences used in the bank of K-correlators.
    </p>
    <p num="209">
      The advantages of the techniques used in the above embodiment are:
      <br/>
      (1) When combined with M-ary bi-orthogonal keying, sets of Orthogonal Structured Codes give bandwidth efficient modulation schemes that are robust against narrow band interference and multipath propagation effects.
      <br/>
      (2) When used as direct spreading sequences, sets of Orthogonal Structured Codes remain orthogonal under multipath condition and in general possess excellent autocorrelation and crosscorrelation properties.
      <br/>
      (3) When used as direct spreading sequences, sets of Orthogonal Structured Codes aid synchronisation between transceiver pairs because they form Complementary Sets.
    </p>
    <p num="210">In the above embodiment, common mode interfering signals can be removed by embedding a differential signaling scheme within a radiowave spread spectrum system based on the architectures shown in FIGS. 6 and 7.</p>
    <p num="211">
      In a third exemplifying embodiment, a radio code division multiple access (CDMA) communication system for use, for example, in cellular mobile radio networks, wireless local loop networks, radio packet data networks or satellite networks comprises a plurality of remote communication terminals that send and receive radio signals to and from, respectively, a central base station.
      <br/>
      Each remote terminal has a transmitter circuit having means for generating and encoding signature sequences for CDMA communication techniques, a means for transmitting coded radio signals and a receiver circuit for receiving coded radio signals having means for decoding signature sequences in a CDMA communication system.
      <br/>
      Each base station has transmitter circuits having means for generating and encoding signature sequences for CDMA communication techniques, a means for transmitting coded radio signals and receiver circuits for receiving coded radio signals having means for decoding signature sequences in a radio CDMA communication system.
    </p>
    <p num="212">
      This embodiment generally consists of a centralised access point, connected to a fixed network, and a number of remote terminals within the area of coverage of the access point.
      <br/>
      This network topology is typical of a cellular mobile radio network, a wireless local loop network or a packet data radio network.
      <br/>
      Usually, frequency division duplexing is used to separate the uplink and downlink transmissions.
      <br/>
      However, within either the uplink or downlink, separation between communication channels is achieved by code division multiple access.
      <br/>
      The downlink transmitter uses the binary data of a user to sequence inverse key an Orthogonal Structured Code.
      <br/>
      This process ensures that each user within a cell is orthogonal to every other user within the cell when a full set of Orthogonal Structured Codes are used.
      <br/>
      A significant advantage of using Orthogonal Structured Codes as opposed to Walsh codes in this application is that the Orthogonal Structured Codes remain orthogonal in multipath where as Walsh codes do not.
      <br/>
      After sequence inverse keying the symbol waveform modulates a radiowave carrier for transmission.
      <br/>
      The downlink receiver reverses the operations performed by the downlink transmitter.
      <br/>
      The radiowave signal is detected by an antenna and demodulated in order to remove the radiowave carrier.
      <br/>
      The resulting signal consists of the signals intended for all users in the cell.
      <br/>
      A user's data is recovered by using a matched filter detector matched to the corresponding Orthogonal Structured Code.
    </p>
    <p num="213">
      A user's uplink transmitter is based on the architecture shown in FIG. 1, that is an M-ary bi-orthogonal keying scheme.
      <br/>
      Binary data is fed into a 1:k multiplexer from which the k-1 MSB are used to chose one from K sequences which may or may not be complemented by the LSB.
      <br/>
      The code set is chosen from a set of Orthogonal Structured Codes.
      <br/>
      The symbol waveform generated modulates a radiowave carrier for transmission.
      <br/>
      A user's uplink receiver is based on the architecture shown in FIG. 2.
      <br/>
      The radiowave signal is detected by an antenna and demodulated in order to remove the radiowave carrier.
      <br/>
      A bank of K-correlators generate K matched filter samples.
      <br/>
      The K samples are fed to a maximum likelihood detector circuit that detects the k data bits and converts them into a single serial bit stream which is an estimate of the transmitted data.
      <br/>
      Each receiver contains a means of synchronisation that aligns the received signal with the locally generated spreading sequences used in the bank of K-correlators.
    </p>
    <p num="214">
      The advantages of the techniques used in the above embodiment are:
      <br/>
      (1) When combined with M-ary bi-orthogonal keying, sets of Orthogonal Structured Codes give bandwidth efficient modulation schemes that are robust against narrow band interference and multipath propagation effects.
      <br/>
      (2) When used as direct spreading sequences, sets of Orthogonal Structured Codes remain orthogonal under multipath condition and in general possess excellent autocorrelation and crosscorrelation properties.
      <br/>
      (3) When used as direct spreading sequences, sets of Orthogonal Structured Codes aid synchronisation between transceiver pairs because they form Complementary Sets.
    </p>
    <p num="215">
      In the above embodiment, common mode interfering signals can be removed by embedding a differential signaling scheme within a radiowave spread spectrum system based on the architectures shown in FIGS. 6 and 7.
      <br/>
      This can be done on both the uplink and downlink.
    </p>
    <p num="216">
      In a fourth exemplifying embodiment, a lightwave CDMA communication system for an optical fibre local area network comprises a plurality of remote communication terminals that transmit and receive lightwave signals and which are interconnected by optical fibre.
      <br/>
      Each terminal has a transmitter circuit having means for generating and encoding signature sequences for lightwave CDMA communication techniques, a means for transmitting coded lightwave signals and a receiver circuit for receiving coded lightwave signals having means for decoding signature sequences in a lightwave CDMA communication system.
    </p>
    <p num="217">The term "lightwave" is taken to mean electromagnetic radiation within the ranges of visible light and near and far infrared light.</p>
    <p num="218">
      In this embodiment each communication terminal comprises a lightwave transceiver based on the transmitter and receiver architecture shown in FIG. 5.
      <br/>
      In general, lightwave transceivers are interconnected by a shared lightwave medium such as optical fibre.
      <br/>
      At the transmitter binary data is converted from a single serial bit stream into two parallel differential bit streams consisting of the original data and its inverse.
      <br/>
      Each differential bit stream sequence inverse keys a unique spreading code where each unique spreading code is chosen from a set of Orthogonal Structured Codes.
      <br/>
      Each differential spread spectrum signal then intensity modulates an individual lightwave source, for example a Light Emitting Diode or a Laser Diode.
      <br/>
      The two emitted lightwave signals sum on the lightwave transmission medium to produce a differential spread spectrum signal.
      <br/>
      In an alternative arrangement the two parallel spread spectrum signals are first summed and the summand intensity modulates a single lightwave source.
      <br/>
      At the receiver a photosensitive detector, for example a photodiode, detects the lightwave signal.
      <br/>
      The resulting photocurrent is amplified and a differential correlator generates a matched filter sample.
      <br/>
      The sample is fed to a binary threshold detector circuit that detects the serial bit stream, which is an estimate of the transmitted data.
      <br/>
      It should be noted that a differential signaling scheme may use any code pair to spread the differential data providing that the sequences used have the same +1,0} chip imbalance (see FIG. 10).
      <br/>
      Each receiver contains a means of synchronisation that aligns the received signal with the locally generated spreading sequences used in the correlator.
    </p>
    <p num="219">
      The advantages of the techniques used in the above embodiment are:
      <br/>
      (1) When differential unipolar-bipolar signaling is embedded within a lightwave spread spectrum communication system then common mode interfering signals are removed.
      <br/>
      In a lightwave CDMA system this has the advantage of removing the DC offset caused by sequence imbalance.
      <br/>
      (2) When used as direct spreading sequences, sets of Orthogonal Structured Codes possess excellent autocorrelation and crosscorrelation properties.
      <br/>
      Specifically, when synchronised, the sequences will support N users where N is the set size as well as remove the near/far effect.
      <br/>
      (3) When used as direct spreading sequences, sets of Orthogonal Structured Codes aid synchronisation between transceiver pairs because they form Complementary Sets.
    </p>
    <p num="220">
      The sequences presented hereinabove represent a significant development in signature sequences for spread spectrum communication techniques.
      <br/>
      For example, Orthogonal Structured Codes combine properties of orthogonality for certain well defined cyclical shifts with small autocorrelation and crosscorrelation values for other cyclical shifts.
      <br/>
      These properties make Orthogonal Structured Codes ideal spreading sequences in a direct sequence spread spectrum system.
      <br/>
      Specifically, when synchronised Orthogonal Structured Codes can give a spectral efficiency of 100% while obviating the near/far effect in a non-dispersive channel.
      <br/>
      However, in a dispersive channel Orthogonal Structured Codes remain orthogonal unlike the Walsh codes.
      <br/>
      Significantly, the algorithm described herein is capable of systematically constructing multiple sets of orthogonal sequences for most practical code lengths and beyond.
      <br/>
      That is, two or more sets of Orthogonal Structured Codes can be constructed for a given sequence length N. The implication being that such code sets may be used in parallel in order to give a substantial increase in the capacity of a spread spectrum communication system.
      <br/>
      In addition, a very useful property of Orthogonal Structured Codes is that they form Complementary Sets of sequences.
      <br/>
      That is, the aperiodic autocorrelation function of all sequences in a set of Orthogonal Structured Codes sum to zero for every time shift, except the zero shift.
    </p>
    <p num="221">
      It will be seen that the application of these sequences is not limited to infrared wireless communication but may be applied to a wide range of communication techniques which include radiowave as well as lightwave techniques and fixed as well as wireless techniques.
      <br/>
      A sample application tree is illustrated in FIG. 11. Other communication systems that would particularly benefit from the sequences are cellular mobile radio networks, wireless local loop networks, radio packet data networks, satellite networks and radio local area networks.
      <br/>
      The use of Structured Codes, specifically Orthogonal Structured Codes, facilitates higher throughput of data for a given bandwidth allowing either a greater number of users or higher data rates for each channel.
    </p>
    <p num="222">
      Another contribution of the present invention is the disclosure of new M-ary digital transmission architectures based on Orthogonal Structured Codes.
      <br/>
      These M-ary architectures combine spectrum spreading with orthonormal basis functions to realise bandwidth efficient transmission schemes that are robust to interference and multipath propagation effects.
      <br/>
      General architectures relevant to any spread spectrum or CDMA communication system and specific architectures relevant to infrared wireless systems, radio systems and optical fibre systems are disclosed.
      <br/>
      In addition, transceiver architectures based on combining independent sets of Orthogonal Structured Codes are disclosed.
      <br/>
      Theses architectures can at least double the capacity of conventional spread spectrum communication systems.
    </p>
    <p num="223">
      The further contribution to the art is that of differential unipolar-bipolar signalling.
      <br/>
      This signalling scheme removes the sequence dependent off-set associated with unipolar-bipolar signalling and allows any family of binary signature sequences to be used in a lightwave (unipolar) transmission system.
      <br/>
      Differential unipolar-bipolar signalling uses code division of differential data on a single transmission channel.
      <br/>
      Code division is ideally achieved using Orthogonal Structured Codes, however, any binary code pair can be used providing they have the same +1,0} imbalance.
    </p>
    <p num="224">
      The sequences are generated by a combination of sequence modulation and concatenation of a selected seed set of sequences.
      <br/>
      When the seed set is orthogonal then the set of Structured Codes constructed is also orthogonal.
      <br/>
      Furthermore, by adopting different Addition tables, other sets of Structured Codes can be constructed.
    </p>
    <p num="225">
      Using Orthogonal Structured Codes to provide orthonormal basis function while spreading the spectrum at the same time is a significant development in the art of M-ary digital transmission.
      <br/>
      By combining two or more distinct sets of Orthogonal Structured Codes, spread spectrum communication systems with significantly enhanced capacities can be realised.
    </p>
    <p num="226">The use of code division to separate differential data on a single unipolar (lightwave) transmission channel is provided by the differential unipolar-bipolar signaling scheme presented above with reference to FIGS. 5 and 10. The realisation of code-division using any binary sequence and not just orthogonal sequences is a significant development as is the incorporation of a differential unipolar-bipolar signaling scheme into an M-ary digital transmission scheme based on Orthogonal Structured Codes.</p>
    <p num="227">In addition, the Structured Codes presented have beneficial applications in error correction/detection, synchronisation, cryptography, power-line communications, ranging and tomography.</p>
    <p num="228">The new Structured Codes disclosed in this document have been named Supergold codes and their application to specific systems has been named Supergold coding.</p>
    <p num="229">
      It will be understood that the current invention is not limited to the electromagnetic radiation based carriers such as lightwave carriers (e.g. infrared or visible light) or radio frequency carriers but may be implemented using any suitable carrier.
      <br/>
      Such suitable alternatives may include, but are not limited to the use of sonic or seismic media in response to a given application requirement.
    </p>
    <p num="230">
      It will also be understood that the mathematical techniques described throughout this specification in relation to the relative manipulation of row and column elements may be varied to obtain the same result.
      <br/>
      For example in the treatment of the case where the seed set is square (m=w) described above.
    </p>
    <p num="231">It will of course be understood that the invention is not limited to the specific details described herein, which are given by way of example only, and that various modification and alterations are possible within the scope of the invention.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for spread spectrum communication using a signature sequence, the signature sequence being generated by performing the steps of:</claim-text>
      <claim-text>selecting a seed set of sequences of a given size having a plurality of inner sequences; generating a plurality of cosets from the seed set of sequences by multiplying in turn each inner sequence by an element of an associated sequence; constructing a subset of sequences by concatenating the sequences of a coset;</claim-text>
      <claim-text>and constructing a full set of sequences by concatenating subsets of sequences.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein: the seed set contains binary sequences.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2, wherein: the binary sequence is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, wherein: the seed set contains complex sequences.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein: the seed set is orthogonal.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein: the subset of sequences is constructed by concatenating the sequences of a coset using an addition table.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6, wherein: the addition table is constructed using powers of a primitive root of the seed set of sequences, the primitive root being determined in accordance with the size of the seed set.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 6, wherein: the addition table is constructed using powers of a primitive element of the seed set of sequences, the primitive element being determined in accordance with the size of the seed set.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 1, wherein: the seed set is formed from a plurality of rotated sequences.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A method for producing a structured code for use in spread spectrum data communication, comprising the steps of: selecting a seed set of sequences of a given size having a plurality of inner sequences; generating a plurality of cosets from the seed set of sequences by multiplying in turn each inner sequence by an element of an associated sequence; constructing a subset of sequences by concatenating the sequences of a coset;</claim-text>
      <claim-text>and constructing a full set of sequences by concatenating subsets of sequences.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 10, wherein: the seed set contains binary sequences.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 11, wherein: the binary sequence is cyclically distinct, quasi-balanced and satisfies the optimal periodic autocorrelation condition.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 11, wherein: the seed set contains complex sequences.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 10, wherein: the seed set is orthogonal.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 10, wherein: the subset of sequences is constructed by concatenating the sequences of a coset using an addition table.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 15, wherein: the addition table is constructed using powers of a primitive root of the seed set of sequences, the primitive root being determined in accordance with the size of the seed set.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 15, wherein: the addition table is constructed using powers of a primitive element of the seed set of sequences, the primitive element being determined in accordance with the size of the seed set.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 10, wherein: the seed set is formed from a plurality of rotated sequences.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. An apparatus for constructing and encoding signature sequences for spread spectrum communication techniques, comprising: a seed set generating means for constructing a seed set of sequences having a plurality of inner sequences; a coset generating means for generating cosets of sequences by multiplying in turn each inner sequence by an element of an associated sequence; an expansion means for concatenating sequences of a generated coset according to a predetermined order, to form a subset of sequences for each coset;</claim-text>
      <claim-text>and a set generating means for constructing a full set of sequences by concatenating subsets.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The apparatus of claim 19, wherein: the seed set generating means comprises a plurality of shift registers, each shift register having an input, a system clock input, logic gates, a plurality of register cells/stages and an output to form a sequence of the seed set.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The apparatus of claim 19, wherein: the seed set generating means includes a number of linear feedback shift registers.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The apparatus of claim 19, wherein the expansion means comprises: a plurality of inputs, each input corresponding to a sequence from a coset; a plurality of multiplexers having associated counters and logic gates; a system clock input;</claim-text>
      <claim-text>and a plurality of outputs to form a subset of sequences.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. An apparatus in accordance with claim 19 for decoding signature sequences in a spread spectrum communications system, comprising: means for receiving coded signals; means for generating sequence functions; means for combining received coded signals with sequence functions to produce despread signal outputs; means for combining the despread signal outputs to generate a data stream;</claim-text>
      <claim-text>and logic circuitry for analysing the data stream.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A data transmission system, comprising: a transmitter and a receiver, the transmitter incorporating means for transmitting data using a signature sequence and the receiver formed for receiving and decoding data transmitted using a signature sequence, the signature sequence being generated by performing the steps of: selecting a seed set of sequences of a given size; generating a plurality of cosets from the seed set of sequences; constructing a subset of sequences by concatenating the sequences of a coset;</claim-text>
      <claim-text>and constructing a full set of sequences by concatenating subsets of sequences.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. An electromagnetic radiation or sonic communications system for a communications network comprising a plurality of remote communication terminals, each terminal including a transmitter circuit having means for generating and encoding signature sequences for spread spectrum communication techniques by performing the steps of: selecting a seed set of sequences of a given size having a plurality of inner sequences, generating a plurality of cosets from the seed set of sequences by multiplying in turn each inner sequence by an element of an associated sequence, constructing a subset of sequences by concatenating the sequences of a coset and constructing a full set of sequences by concatenating subsets of sequences, the transmitter circuit also having, a means for transmitting coded signals and a receiver circuit for receiving coded signals the receiver circuit having means for decoding signature sequences in a spread spectrum communication system.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The system of claim 25, wherein: the communications network uses a radio frequency carrier.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The system of claim 25, wherein: the communications network uses an ultrasound carrier.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The system of claim 25, wherein: the communications network uses a seismic carrier.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The system of claim 25, wherein: the communications network uses a lightwave carrier.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The system of claim 29, wherein: the communications network uses an infrared carrier.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The system of claim 29, wherein: the receiver circuit incorporates a photodetector, the photodetector having an associated coupling means communicating with a receiver preamplifier.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The system of claim 31, wherein: the coupling means is formed for differential signal recognition.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The system of claim 25, wherein: the seed set is a balanced seed set.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The system of claim 25, wherein: the encoding signature sequences incorporates orthogonal structured codes.</claim-text>
    </claim>
  </claims>
</questel-patent-document>