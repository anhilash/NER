<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181445B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181445</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181445</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="21967930" extended-family-id="14429756">
      <document-id>
        <country>US</country>
        <doc-number>09050860</doc-number>
        <kind>A</kind>
        <date>19980330</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09050860</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>14751229</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>5086098</doc-number>
        <kind>A</kind>
        <date>19980330</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09050860</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04N   1/46        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>1</main-group>
        <subgroup>46</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06T   1/00        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>T</subclass>
        <main-group>1</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04N   1/60        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>1</main-group>
        <subgroup>60</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>358520000</text>
        <class>358</class>
        <subclass>520000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>358504000</text>
        <class>358</class>
        <subclass>504000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>358518000</text>
        <class>358</class>
        <subclass>518000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H04N-001/60G</text>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>001</main-group>
        <subgroup>60G</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04N-001/6058</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>1</main-group>
        <subgroup>6058</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>16</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>11</number-of-drawing-sheets>
      <number-of-figures>25</number-of-figures>
      <image-key data-format="questel">US6181445</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Device-independent and medium-independent color matching between an input device and an output device</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>ROSE ODED, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5285297</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5285297</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>GRANGER EDWARD M</text>
          <document-id>
            <country>US</country>
            <doc-number>5650942</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5650942</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>TANAKA KENJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5767992</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5767992</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>LIANG TONY ZHONGJIE</text>
          <document-id>
            <country>US</country>
            <doc-number>5786908</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5786908</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>SMILANSKY ZEEV, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5339176</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5339176</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>WAN SHIJIE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5452112</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5452112</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>BESTMANN GUENTER</text>
          <document-id>
            <country>US</country>
            <doc-number>5481380</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5481380</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>ROLLESTON ROBERT J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5483360</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5483360</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>YAMADA OSAMU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5489998</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5489998</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>WAN SHIJIE</text>
          <document-id>
            <country>US</country>
            <doc-number>5491568</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5491568</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>SHERMAN DORON</text>
          <document-id>
            <country>US</country>
            <doc-number>5543940</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5543940</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>RYOO SUNG-GEOL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5552904</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5552904</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>STOKES MICHAEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5561459</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5561459</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>HARRINGTON STEVEN J</text>
          <document-id>
            <country>US</country>
            <doc-number>5581376</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5581376</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>ELLSON RICHARD N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5583666</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5583666</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>ROLLESTON ROBERT J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5594557</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5594557</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>KOMATSU MANABU</text>
          <document-id>
            <country>US</country>
            <doc-number>5610732</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5610732</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>GOVAERT RENE RAYMOND</text>
          <document-id>
            <country>US</country>
            <doc-number>5692071</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5692071</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>WAN SHIJIE J</text>
          <document-id>
            <country>US</country>
            <doc-number>5704026</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5704026</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>OHGA MANABU</text>
          <document-id>
            <country>US</country>
            <doc-number>5712925</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5712925</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>SPIE Optical Engineering Press, "Color Technology for Electronic Imaging Devices", 1997, pp. 64-101, 141-152 and 248-251, H.R. Kang.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Seiko Epson Corporation</orgname>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SEIKO EPSON</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Lin, Tsung-Nan</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Shu, Joseph</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Gabrik, Michael T.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Williams, Kimberly</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      The present invention is directed to a method and apparatus for improving color matching between original color images and reproductions thereof.
      <br/>
      In the present invention, color space transformations are derived for a color image reproduction system comprising an input device and an output device by obtaining a first transformation for the input device that maps from colors within an input-device-dependent color space to colors within a first device-independent color space, and obtaining a normalization transformation that normalizes information obtained from the first transformation with respect to a white point in a second device-independent color space.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
    <p num="1">
      This application is related to U.S. patent application entitled "Improved Scanner Calibration Technique to Overcome Tone Inversion" identified by Ser.
      <br/>
      No. 09/050,866 U.S. patent application entitled "Improved Color Matching Accuracy Inside and Outside the Gamut" identified by Ser.
      <br/>
      No. 09/050,862 and U.S. patent application entitled "Self-Calibration for Color Image Reproduction System" identified by Ser.
      <br/>
      No. 09/050,867, all filed concurrently with this application.
    </p>
    <heading>TECHNICAL FIELD</heading>
    <p num="2">The present invention relates generally to color image reproduction systems, and relates more particularly to features that improve color matching between original color images and reproductions of those images.</p>
    <heading>BACKGROUND ART</heading>
    <p num="3">Overview</p>
    <p num="4">
      Color image reproduction systems typically include an input device for obtaining a representation of an original image, an output device for generating a replica of the image, and a controlling device that processes signals received from the input device to generate new signals sent to the output device to produce the replica, which preferably is a high-fidelity reproduction of the original image.
      <br/>
      The controlling device may be implemented by a general-purpose computer with appropriate software and/or hardware for peripheral control and signal processing.
      <br/>
      Examples of an input device include hand held, flatbed and sheet-fed optical scanners, digital and video cameras, and software applications.
      <br/>
      In other words, an original image may be sensed or it may be created by a process.
      <br/>
      Examples of an output device include ink jet, laser and photolithography printers, electrostatic, flatbed and drum plotters, and video displays such as cathode ray tubes, thin-film-transistor and liquid crystal display panels.
    </p>
    <p num="5">
      Generally, input and output devices use some device dependent color-coordinate system to specify colors.
      <br/>
      These coordinate systems are often specified in some device-dependent color space that conveniently maps the color coordinates to the color-sensing or color-generating process of the particular device.
      <br/>
      The term "color space" refers to an N-dimensional space in which each point corresponds to a particular color.
    </p>
    <p num="6">
      One example of a three-dimensional color space is an RGB space in which point coordinates specify particular amounts of red (R), green (G) and blue (B) colorant that additively combine to represent a specific color.
      <br/>
      The operation of many scanners and color display devices may be conveniently controlled by signals that are specified in RGB space.
      <br/>
      An example of a four-dimensional color space is a CMYK color space in which point coordinates specify particular amounts of cyan (C), magenta (M), yellow (Y) and black (K) colorant that subtractively combine to represent a specific color.
      <br/>
      Another example is the three-dimensional CMY color space.
      <br/>
      The operation of many ink jet and laser printers may be conveniently controlled by signals that are specified in CMYK space or CMY space.
      <br/>
      Other color spaces that are related to particular devices are also known.
    </p>
    <p num="7">
      Many practical devices are capable of sensing or reproducing only a portion of the full range of colors that can be discerned by a human observer.
      <br/>
      A device "gamut" refers to the range of colors that can be sensed or reproduced by a particular device.
      <br/>
      For example, the gamut of a particular scanner refers to the range of colors that can be sensed by that scanner and the gamut of a particular printer refers to the range of colors that can be reproduced or printed by that printer.
    </p>
    <p num="8">A scanner gamut is determined by a variety of factors including the spectral response of the optical sensors, the spectral characteristics of color filters, spectral characteristics of the illumination source and the resolution and linearity of analog-to-digital converters.</p>
    <p num="9">A printer gamut is determined by a variety of factors including spectral characteristics of colorants such as ink, spectral and porosity characteristics of media such as paper, resolution or dots-per-inch of the printed image, half-toning methods and use of dithering, if any.</p>
    <p num="10">A video display gamut is determined by a variety of factors including spectral characteristics of the light emitting material, type of display device, resolution of pixels or video lines, and excitation voltage.</p>
    <p num="11">
      Although it is possible in principle to construct a color image reproduction system by merely connecting an output device directly to an input device, the results generally would not be satisfactory because the device-dependent coordinate systems and color spaces for the input and output devices are generally not the same.
      <br/>
      Even if the two sets of coordinate systems and color spaces are the same, the fidelity of the reproduced image as compared to an original image would probably be very poor because the gamut of the input device generally is not co-extensive with the gamut of the output device.
      <br/>
      Values representing "out-of-gamut" colors that are not in the output device gamut cannot be reproduced exactly.
      <br/>
      Instead, some "in-gamut" color that is in the gamut of the output device must be substituted for each out-of-gamut color.
    </p>
    <p num="12">
      Color image reproduction systems can achieve high-fidelity reproductions of original images by applying one or more transformations or mapping functions to convert point coordinates in one color space into appropriate point coordinates in another color space.
      <br/>
      These transformations may be conveniently performed by the controlling device, mentioned above.
      <br/>
      In particular, with respect to the output device gamut, transformations are used to convert values representing in-gamut and out-of-gamut colors in an input-device-dependent color space (DDCS) into values representing in-gamut colors in an output-DDCS.
      <br/>
      The mapping of in-gamut colors and out-of-gamut colors is discussed separately.
    </p>
    <p num="13">Mapping In-Gamut Colors</p>
    <p num="14">
      The transformation of output device in-gamut colors for many practical devices are non-linear and cannot be easily expressed in some analytical or closed form; therefore, practical considerations make accurate implementations difficult to achieve.
      <br/>
      Many known methods implement these transformations as an interpolation of entries in a look-up table (LUT) derived by a process that essentially inverts relationships between device responses to known input values.
      <br/>
      For example, a transformation for an input device may be derived by using a medium conveying patches of known color values in some device-independent color space (DICS) such as the Commission International de L'Eclairage (CIE) 1931 XYZ space, scanning the medium with the input device to generate a set of corresponding values in some input-DDCS such as RGB color space, and constructing an input LUT comprising table entries that associate the known color XYZ values with the scanned RGB values.
      <br/>
      In subsequent scans of other images, scanned RGB values can be converted into device-independent XYZ values by finding entries in the input LUT having RGB values that are close to the scanned values and then interpolating between the associated XYZ values in those table entries.
      <br/>
      Various interpolation techniques such as trilinear, prism, pyramidal and tetrahedral interpolation may be used.
    </p>
    <p num="15">
      Similarly, a transformation for an output device may be derived by producing a medium with color patches in response to color values selected from some output-DDCS such as CMYK color space, determining the color value of the patches in a DICS such as CIE XYZ space by measuring the patches using a spectral photometer, and constructing an output LUT comprising table entries that associate the measured color XYZ values with the corresponding CMYK values.
      <br/>
      In subsequent output operations, XYZ color values can be converted into device-dependent CMYK values by finding entries in the output LUT having XYZ values that are close to the desired values and then interpolating between associated CMYK values in those table entries.
      <br/>
      Various interpolations such as those mentioned above may be used.
    </p>
    <p num="16">
      In operation, a color image reproduction system scans an original image to obtained scanned value in some input-DDCS, transforms the scanned values into some DICS, transforms these device-independent values from the DICS into some output DDCS and, in response, generates a replica of the original image.
      <br/>
      As mentioned above, the transformations described thus far apply only to output device in-gamut colors.
    </p>
    <p num="17">Mapping Out-of-Gamut Colors</p>
    <p num="18">
      By definition, output device out-of-gamut colors cannot be reproduced exactly.
      <br/>
      Instead, high-quality color image reproduction systems use transforms or mapping functions that substitute an in-gamut color for each out-of-gamut color.
      <br/>
      Preferably, these transforms attempt to minimize the perceptible difference between each out-of-gamut color and the corresponding substitute in-gamut color.
    </p>
    <p num="19">
      Techniques for transforming out-of-gamut colors into in-gamut colors generally map the out-of-gamut colors to the boundary of the output device gamut or compress a region of color space so that all desired colors are mapped into the output device gamut. U.S. Pat. No. 5,185,661 describes a technique which seeks to preserve the hue of out-of-gamut colors.
      <br/>
      The technique disclosed in U.S. Pat. No. 5,450,216 seeks to minimize perceptible changes in luminance or chrominance. U.S. Pat. No. 5,491,568 discloses a technique that projects out-of-gamut colors onto the gamut boundary along a line orthogonal to a gray line in color space.
      <br/>
      In U.S. Pat. No. 5,692,071, a disclosed technique maps each out-of-gamut color to the closest entry in a LUT.
      <br/>
      The technique disclosed in U.S. Pat. No. 5,712,925 divides the output device gamut into a higher-fidelity region and a lower-fidelity region and compresses all color space outside the higher-fidelity region into the lower-fidelity region.
    </p>
    <heading>DISCLOSURE OF INVENTION</heading>
    <p num="20">It is an object of the present invention to provide a degree of device and medium independence by separately accounting for differences in luminance dynamic range of various devices and differences in medium spectral characteristics known as the white point.</p>
    <p num="21">According to the teachings of one aspect of the present invention, color space transformations are derived for a color image reproduction system comprising an input device and an output device by obtaining a first transformation for the input device that maps from colors within an input-device-dependent color space to colors within a first device-independent color space, and obtaining a normalization transformation that normalizes information obtained from the first transformation with respect to a white point in a second device-independent color space.</p>
    <p num="22">According to the teachings of another aspect of the present invention, a transformation compresses luminance levels of values in an input-device gamut into a range of luminance levels within an output-device gamut.</p>
    <p num="23">
      The various features of the present invention and its preferred embodiments may be better understood by referring to the following discussion and the accompanying drawings in which like reference numerals refer to like elements in the several figures.
      <br/>
      The contents of the following discussion and the drawings are set forth as examples only and should not be understood to represent limitations upon the scope of the present invention.
    </p>
    <heading>BRIEF DESCRIPTION OF DRAWINGS</heading>
    <p num="24">
      FIG. 1 illustrates major components in a typical color image reproduction system.
      <br/>
      FIGS. 2A and 2B illustrate major components for deriving transformations for input and output devices.
      <br/>
      FIGS. 3A and 3B are schematic representations of points and regions in color spaces, particularly corresponding points and regions in CIE XYZ space and CIE L*a*b* space.
      <br/>
      FIG. 4 is a schematic representation of two hypothetical gamuts within a two-dimensional projection of a normalized color space.
      <br/>
      FIGS. 5A and 5B are schematic representations of points and hypothetical gamut boundaries in CIE L*a*b* space.
      <br/>
      FIGS. 6A and 6B are schematic representations of points and transformational mappings onto the boundary of a hypothetical gamut in CIE L*a*b* space.
      <br/>
      FIG. 7 is a schematic representation of respective gamuts for two printers or, alternatively, one printer operating in two different modes.
      <br/>
      FIG. 8 is a schematic representation of a shift in the gamut of a hypothetical printer such as that caused by component aging, for example.
      <br/>
      FIG. 9 illustrates major components in one embodiment of a controlling device that achieves an improved degree of device and media independence.
      <br/>
      FIG. 10 illustrates major components in a color image reproduction system that provides recalibration of selected colors for an output device.
      <br/>
      FIG. 11 illustrates one embodiment of a recalibration transformation.
      <br/>
      FIG. 12 illustrates major components in a typical personal computer that may be used to implement various aspects of the present invention.
      <br/>
      FIGS. 13A through 13C illustrate the end-to-end effects of input or output devices and the system components that implement device transformations.
      <br/>
      FIG. 14 is flowchart illustrating one method for deriving a transformation to overcome tone inversion.
      <br/>
      FIG. 15 illustrates major components for deriving a transformation to overcome tone inversion.
      <br/>
      FIG. 16 is flowchart illustrating one method for improving the accuracy of a transformation for in-gamut colors.
      <br/>
      FIG. 17 is flowchart illustrating one method for improving the accuracy of a transformation for out-of-gamut colors.
      <br/>
      FIG. 18 is flowchart illustrating one method for deriving a recalibration transformation.
      <br/>
      FIG. 19 is a flowchart illustrating one method for using a recalibration transformation.
    </p>
    <heading>MODES FOR CARRYING OUT THE INVENTION</heading>
    <p num="25">Color Image Reproduction System Overview</p>
    <p num="26">
      FIG. 1 illustrates major components in a typical color image reproduction system.
      <br/>
      Input device 10 receives from path 11 signals representing an original image and generates along path 12 an input-device-dependent representation of the original image.
      <br/>
      Controlling device 20 receives this representation from path 12 and, in response, generates along path 31 an output-device-dependent representation of the original image.
      <br/>
      Output device 30 receives this representation from path 31 and, in response, generates along path 32 a replica of the original image.
      <br/>
      The present invention is directed toward improving the fidelity with which the replica reproduces the original image.
    </p>
    <p num="27">
      Input device 10 may be essentially any type of scanner, camera or digital graphics application.
      <br/>
      If input device 10 is an optical scanner, for example, the signals received from path 11 could be considered to be optical.
      <br/>
      If input device 10 is an application for creating or manipulating color images, for example, the signals received from path 11 could be considered to represent commands or data.
      <br/>
      Throughout this disclosure, more particular mention will be made of optical scanners; however, many of the principles and features of the present invention may be applied in systems incorporating other types of input devices.
    </p>
    <p num="28">
      Output device 30 may be essentially any type of printer, plotter or display.
      <br/>
      If output device 30 is an ink-jet printer, for example, the replica generated along path 32 could be considered to be the printed image.
      <br/>
      If output device 30 is a CRT or TFT display, for example, the replica generated along path 32 could be considered to represent the image formed on the display device.
      <br/>
      Throughout this disclosure, more particular mention will be made of printers; however, many of the principles and features of the present invention may be applied in systems incorporating other types of output devices.
    </p>
    <p num="29">
      By its very nature, the characteristics of the input-device-dependent representation generated along path 12 depends on the characteristics of input device 10.
      <br/>
      Many optical scanners, for example, generate signals representing colors as points with red (R), green (G) and blue (B) coordinates in an RGB device-dependent color space (DDCS).
      <br/>
      For ease of discussion herein, the input-DDCS will generally be referred to as RGB space; however, many other color spaces and representations may be used to practice the present invention.
    </p>
    <p num="30">
      Similarly, the characteristics of the output-device-dependent representation generated along path 31 are chosen to match the characteristics of output device 30.
      <br/>
      Many color printers, for example, generate images in response to values representing cyan (C), magenta (M), yellow (Y) and black (K) coordinates in a CMYK DDCS.
      <br/>
      Many display devices such as cathode ray tubes or thin-film-transistor panels generate images in response to values representing red, green and blue in an RGB DDCS.
      <br/>
      Because of the device-dependent nature of these color spaces, scanner RGB spaces should not be equated to display RGB spaces.
      <br/>
      For ease of discussion herein, the output-DDCS will generally be referred to as CMYK space; however, many other color spaces and representations may be used to practice the present invention.
    </p>
    <p num="31">
      Controlling device 20 is responsible for transforming signals representing the original image in the input-DDCS into signals representing the same image in the output-DDCS.
      <br/>
      This may be accomplished by using input-device map 21 to transform the input-DDCS signals into a representation in a device-independent color space (DICS), and using output-device map 23 to transform the DICS representation into the signals representing the same image in the output-DDCS.
      <br/>
      Controlling device 20 may include other transformations and processes such as those described herein.
    </p>
    <p num="32">
      Controlling device 20 may be implemented by software and/or hardware in a general-purpose computer such as that illustrated in FIG. 12. FIG. 12 is a functional block diagram of one embodiment of a typical personal computer system 40.
      <br/>
      CPU 42 provides computing resources. I/O control 43 represents an interface to I/O device 44 such as a keyboard, mouse or modem.
      <br/>
      RAM 45 is system random access memory.
      <br/>
      Storage control 46 represents an interface to storage device 47 that includes a storage medium such as magnetic tape or disk, or an optical medium.
      <br/>
      The storage medium may be used to record programs of instructions for operating systems, utilities and applications, and may include embodiments of programs that implement various aspects of the present invention.
      <br/>
      Display control 48 provides an interface to display device 49.
      <br/>
      Control 50 represents an interface to scanner 51 which is an input device like an optical scanner.
      <br/>
      Control 52 represents an interface to printer 53 which is an output device like an ink jet color printer.
      <br/>
      Devices like scanner 51 may serve as input device 10 and devices like display device 49 or printer 53 may serve as output device 30.
    </p>
    <p num="33">
      In the embodiment shown, all major system components connect to bus 41 which may represent more than one physical bus.
      <br/>
      For example, some personal computers incorporate only a so called Industry Standard Architecture (ISA) bus. Other computers incorporate an ISA bus as well as a higher bandwidth bus conforming to some bus standard such as the VESA local bus standard or the PCI local bus standard.
      <br/>
      Preferably, display control 48 connects to a high-bandwidth bus to improve the speed of display.
      <br/>
      A bus architecture is not required to practice the present invention.
    </p>
    <p num="34">The functions of one or more computer components as well as various aspects of the present invention can be implemented in a wide variety of ways including discrete logic components, one or more ASICs and/or program-controlled processors.</p>
    <p num="35">
      Controlling device 20 may also be implemented by a special-purpose device.
      <br/>
      The manner in which controlling device 20 is implemented is not important to the present invention.
      <br/>
      For example, the following disclosure will sometimes refer to implementations that store tables in RAM merely for ease of discussion.
      <br/>
      Other implementations including digital and analog processing circuitry may used.
    </p>
    <p num="36">Derivation of Input and Output Maps</p>
    <p num="37">
      FIGS. 2A and 2B illustrate major components for deriving input-device map 21 and output-device map 23.
      <br/>
      These illustrations and the following discussion are presented merely as examples to illustrate principles.
      <br/>
      These maps or transformations may be derived in other ways.
    </p>
    <p num="38">
      Referring to FIG. 2A, input-device map 21 may be derived by scanning an image 15 that has known color characteristics.
      <br/>
      For example, image 15 may be one or more sheets of paper with areas or "patches" of known color.
      <br/>
      The color characteristics of these patches may be determined by measure device 60 such as a spectral photometer or colorimeter.
      <br/>
      According to the technique shown in the figure, measure device 60 scans image 15 and generates signals along path 61 representing the colors of the patches in some DICS such as the Commission International de L'Eclairage (CIE) 1931 XYZ space, referred to herein as CIE XYZ space.
      <br/>
      Input device 10 scans image 15 and generates signals along path 12 representing the colors of the patches in an input-DDCS such as scanner RGB space.
    </p>
    <p num="39">
      The device-independent and the device-dependent representations generated along paths 61 and 12, respectively, provide selected points in the two color spaces that define a forward function .function.I representing the way in which input device 10 converts real-world colors into a device-dependent representation.
      <br/>
      In response to these signals, calibration device 65 derives input-device map 21 which is an inverse function .function.I-1 from the DCCS to the DICS.
      <br/>
      For example, if measure device 60 generates values in CIE XYZ space and input device 10 generates signals in some RGB space, then the forward function corresponding to input device 10 may be denoted as
      <br/>
      .function.I : XYZ --&gt; RGB
    </p>
    <p num="40">
      and the inverse function corresponding to input-device map 21 may be denoted as
      <br/>
      .function.I-1 : RGB --&gt; XYZ.
    </p>
    <p num="41">
      The way in which these two components work together is illustrated in FIG. 13A. Input device 10 effects a transformation .function.I on values representing real-world colors to obtain values in some input-DDCS.
      <br/>
      It is often convenient to represent real-world colors in some DICS such as CIE XYZ space.
      <br/>
      The transformation may then be expressed as a mapping from CIE XYZ space to some input-DDCS such as an RGB space as described above.
      <br/>
      Input-device map 21 effects a transformation .function.I-1 on the values in the input-DDCS to obtain mapped values in some DICS such as CIE XYZ space.
      <br/>
      The end-to-end effects of these two components is to effect a transformation from one DICS to another DICS.
      <br/>
      According to the example discussed above and illustrated in the figure, the transformation is, in principle, similar to the identify matrix that maps from CIE XYZ space to CIE XYZ space, which may be denoted as
      <br/>
      FI : XYZ --&gt; XYZ.
    </p>
    <p num="42">In practice, however, arithmetic round off errors and interpolation errors introduce noise into the process.</p>
    <p num="43">
      Referring to FIG. 2B, output-device map 23 may be derived by using output device 30 to generate image 35 and determining the color characteristics of image 35.
      <br/>
      For example, image 35 may be one or more sheets of paper with patches that are analyzed by measure device 62 such as a spectral photometer or colorimeter.
      <br/>
      According to the technique shown in the figure, measure device 62 scans image 35 and generates signals along path 63 representing the colors of the patches in some DICS such as CIE XYZ or CIE L*a*b* space.
      <br/>
      Output device 30 or some component controlling output device 30 generates signals along path 33 representing the patches in some output-DDCS such as printer CMYK space.
    </p>
    <p num="44">
      The device-independent and the device-dependent representations generated along paths 63 and 33, respectively, provide selected points in the two color spaces that define a forward function .function.O representing the way in which output device 30 converts the device-dependent representation into real-world colors.
      <br/>
      In response to these signals, calibration device 67 derives output-device map 23 which is an inverse function .function.O-1 from the DICS to the DDCS.
      <br/>
      For example, if measure device 62 generates values in CIE L*a*b* space and output device 30 generates the image in response to signals in some CMYK space, then the forward function corresponding to output device 30 may be denoted as .function.O : CMYK --&gt; L*a*b*
    </p>
    <p num="45">
      and the inverse function corresponding to output-device map 23 may be denoted as
      <br/>
      .function.O-1 : L*a*b* --&gt; CMYK.
    </p>
    <p num="46">
      The way in which these two components work together is illustrated in FIG. 13B. Output-device map 23 effects a transformation .function.I-1 on values representing colors in some DICS to obtain values in some output-DDCS.
      <br/>
      Output device 30 effects a transformation .function.I on the values in the output-DDCS to obtain a replica image with real-world colors.
      <br/>
      If the real-world colors are expressed in some DICS such as CIE XYZ space, the transformation may then be expressed as a mapping from the output-DDCS to CIE XYZ as described above.
      <br/>
      The end-to-end effects of these two components is to effect a transformation from one DICS to another DICS.
      <br/>
      According to the example discussed above and illustrated in the figure, the transformation maps from CIE L*a*b* space to CIE XYZ space, which may be denoted as
      <br/>
      FO : L*a*b* --&gt; XYZ.
    </p>
    <p num="47">
      FIGS. 3A and 3B are schematic representations of points and regions in two color spaces.
      <br/>
      These figures illustrate corresponding points and regions in CIE XYZ space and CIE L*a*b* space, discussed more fully below; however, these figures are useful to illustrate principles of a mapping relationship between arbitrary color spaces.
      <br/>
      As shown in the figures, points 101-104 in one color space correspond to points 111-114, respectively, in another color space.
      <br/>
      The points along the four straight-line segments connecting these references points in the color space of FIG. 3A space correspond to points along the curved and straight-line segments connecting the referenced points in the color space of FIG. 3B.
    </p>
    <p num="48">
      As these figures show, the correspondence is often non-linear.
      <br/>
      Because the transformation between color spaces usually cannot be expressed in a closed or analytical form, these transformations are often implemented by a look-up table, from which values of intermediate points may be obtained by interpolation.
    </p>
    <p num="49">
      For reasons that are discussed below, preferred embodiments of systems incorporating scanners and printers use two DICS.
      <br/>
      Scanner signals are mapped into CIE XYZ space and printer signals are mapped from CIE L*a*b* space.
      <br/>
      It is, therefore, necessary to provide a map or transformation from CIE XYZ to CIE L*a*b* space.
      <br/>
      This transformation may be denoted
      <br/>
      .function.T : XYZ --&gt; L*a*b*.
    </p>
    <p num="50">
      As mentioned above, this transformation is illustrated in FIGS. 3A and 3B. In such embodiments, controlling device 20 converts signals received from path 12 into signals generated along path 31 according to a transformation .function.C that is equivalent to a cascaded application of the transformations discussed above, denoted here as
      <br/>
      .function.C =.function.I-1 * .function.T * .function.. sub.O-1,
    </p>
    <p num="51">
      or
      <br/>
      .function.C : RGB --&gt; CMYK=.function.I-1 : RGB --&gt; XYZ * .function.T : XYZ --&gt; L*a*b* * .function.O-1 : L*a*b* --&gt; CMYK.
    </p>
    <p num="52">
      The effect of this transformation in conjunction with the other transformations is illustrated in FIG. 13C. As explained above, input device 10 and input-device map 21 effect a transformation from one DICS to another DICS such as from CIE XYZ space to CIE XYZ space, denoted as
      <br/>
      FI : XYZ --&gt; XYZ.
    </p>
    <p num="53">
      Output-device map 23 and output device 30 effect a transformation from one DICS to another DICS such as from CIE L*a*b* space to CIE XYZ space, denoted as
      <br/>
      FO : L*a*b* --&gt; XYZ
    </p>
    <p num="54">By effecting a transformation from CIE XYZ space to CIE L*a*b* space, the .function.T transformation provides the link required to couple the FI and the FO transformations together.</p>
    <p num="55">
      The end-to-end effect of these coupled transformations represents the overall operation of the color image reproduction system.
      <br/>
      According to the example discussed above and illustrated in the figure, this end-to-end effect is a mapping Fs from CIE XYZ space to CIE XYZ space which is, as mentioned above, equivalent in principle to an identity matrix.
      <br/>
      In absence of arithmetic round off errors and accuracy errors in the component transformations, the color image reproduction system is a transparent system that is able to reproduce an original image perfectly.
    </p>
    <p num="56">
      Unfortunately, even if the transformations could be implemented perfectly, reproduction errors still occur because practical input and output devices have limited gamuts that are generally not coextensive.
      <br/>
      As a result, the perceived accuracy of the replica depends on the ability of the system to substitute an in-gamut color that is indistinguishable from each out-of-gamut color.
      <br/>
      This process is sometimes referred to as gamut mapping.
    </p>
    <p num="57">Gamut Mapping</p>
    <p num="58">
      As mentioned above, input and output devices are capable of sensing or reproducing only a portion of the full range of colors that can be discerned by a human observer.
      <br/>
      The "gamut" of a scanner, for example, refers to the range of colors that can be sensed by that scanner.
      <br/>
      The gamut of a printer refers to the colors that can be generated by that printer.
      <br/>
      The colors that can be reproduced are referred to as "in gamut" colors and the colors that cannot be reproduced are referred to as "out-of-gamut" colors.
    </p>
    <p num="59">
      FIG. 4 is a schematic representation of two hypothetical device gamuts.
      <br/>
      Closed contour 120 represents a two-dimensional projection of a normalized color space, such as the CIE xy chromaticity diagram, that represents the chromaticity of the visible spectrum.
      <br/>
      Colors are plotted in the diagram according to wavelength.
      <br/>
      The shortest wavelengths appear in the lower-left region within contour 120 and the longest wavelengths appear in the lower-right region within contour 120.
    </p>
    <p num="60">
      The triangle with vertices at points 121-123 represents a device gamut that is typically represented in an RGB space; however, as shown, the boundary of this gamut is plotted in CIE xy space.
      <br/>
      Vertex 121 represents the extent to which the gamut includes colors in the red portion of the spectrum.
      <br/>
      The vertices at points 122 and 123 represent the extent to which this gamut includes colors in the green and blue portions of the spectrum, respectively.
      <br/>
      Ignoring granularity due to the discrete nature of digital devices, a device having this gamut is capable of reproducing all of the colors inside this triangle.
    </p>
    <p num="61">
      Similarly, the polygon with three of its vertices at points 126-128 represents a device gamut that is typically represented in CMY space; however, as shown, the boundary of this gamut is plotted in CIE xy space.
      <br/>
      The vertices at points 126-128 correspond to colors in the cyan, magenta and yellow portions of the spectrum, respectively.
      <br/>
      Ignoring granularity due to digital implementations, a device having this gamut is capable of reproducing all colors included within the polygon.
    </p>
    <p num="62">
      FIGS. 5A and 5B are schematic representations of points and hypothetical gamut boundaries in CIE L*a*b* space.
      <br/>
      The L* coordinate represents luminance or brightness and the a*,b* coordinates represent color.
      <br/>
      Points having the same L* coordinate have the same luminance and points having the same angle with respect to the a*,b* axes have the same color or hue.
      <br/>
      The distance between a point and the L* axis is a measure of chroma magnitude or chromaticity.
      <br/>
      Points along the L* axis represent shades of gray from black to white which are neutral in color.
    </p>
    <p num="63">
      FIG. 5A illustrates two hypothetical gamuts 131 and 133 in L*a*b* color space as viewed along the L* axis.
      <br/>
      FIG. 5B illustrates gamuts 131 and 133 as viewed along the b* axis.
      <br/>
      The gamut boundaries shown in FIG. 5A as well as in other figures are intended to provide simple illustrations suitable for understanding principles of the present invention.
      <br/>
      They arc not intended to represent the boundaries of gamuts for actual devices which are generally more complex.
    </p>
    <p num="64">
      Circles 131 and 133 shown in FIG. 5A illustrate the locus of points in plane 130 at the boundaries of the two gamuts.
      <br/>
      Point 134 is inside gamut 131 but outside gamut 133.
      <br/>
      Point 136 is inside both gamuts.
      <br/>
      As may be seen from the two figures, gamut 131 includes a greater range of colors and luminance than does gamut 133.
      <br/>
      The gamut of a typical scanner often includes a greater range of colors than does the gamut of a typical printer.
      <br/>
      It is not uncommon, however, for a printer gamut to include some colors that are outside a scanner gamut.
      <br/>
      This situation poses no difficulty because the scanner inherently maps such colors into its own gamut.
    </p>
    <p num="65">Mapping In-Gamut Colors</p>
    <p num="66">
      As mentioned above, transformations from a first color space to a second color space are often non-linear and usually difficult if not impossible to express in some closed or analytical form.
      <br/>
      These transformations are generally implemented by an approximation technique such as multi-dimensional interpolation of entries in a LUT.
      <br/>
      Each entry in the LUT contains coordinates of a specific point in the first color space and coordinates of the corresponding point in the second color space.
      <br/>
      For any arbitrary point in the first color space, the coordinates of the corresponding point in the second color space can be approximated by interpolating coordinates of selected table entries.
      <br/>
      Trilinear prism, pyramidal and tetrahedral interpolation techniques and a number variations of such techniques are known; however, some form of tetrahedral interpolation is generally preferred.
    </p>
    <p num="67">
      According to tetrahedral interpolation, the LUT is searched to find entries representing points in the first color space that define the vertices of the smallest tetrahedron that encloses the arbitrary point.
      <br/>
      Interpolation coefficients are calculated based on the relative position of the arbitrary point with respect to the four vertices.
      <br/>
      Finally, an approximation of the mapped point is obtained by using the interpolation coefficients to form a linear combination of the coordinates in the second color space that correspond to the four vertices.
      <br/>
      This linear combination may be represented as:
      <br/>
      xp =a1 x1 +a2 x2 +a3 x3 +a4 x4
      <br/>
      yp =a1 y1 +a2 y2 +a3 y3 +a4 y4
      <br/>
      zp =a1 z1 +a2 z2 +a3 z3 +a4 z4
    </p>
    <p num="68">where</p>
    <p num="69">
      xp =the point in second color space corresponding to the arbitrary point, a1 through a4 are the coefficients of interpolation,
      <br/>
      (x1,y1,z1)=coordinates of vertex 1 in the second color space,
      <br/>
      (x2,y2,z2)=coordinates of vertex 2 in the second color space,
      <br/>
      (x3,y3,z3)=coordinates of vertex 3 in the second color space, and
      <br/>
      (x4,y4,z4)=coordinates of vertex 4 in the second color space.
    </p>
    <p num="70">Additional information regarding various forms of interpolation may be obtained from H. R. Kang, "Color Technology for Electronic Imaging Devices," SPIE Optical Engineering Press, 1997, pp. 64-101, 141-152 and 248-251, which is incorporated herein by reference.</p>
    <p num="71">Mapping Out-of-Gamut Colors to Gamut Boundary</p>
    <p num="72">
      In preferred embodiments, out-of-gamut colors are mapped onto the boundary of the gamut by projecting the color onto the line in color space representing neutral (gray) colors and clipping the projection at the gamut boundary.
      <br/>
      This can be performed conveniently in CIE L*a*b* space where points on the L* axis represent neutral colors.
    </p>
    <p num="73">
      Referring to FIG. 6A, the out-of-gamut color represented by point 134 is mapped to the color represented by point 135 on the gamut boundary by projecting a line from point 134 to the L* axis and finding the intersection of the projection with the boundary.
      <br/>
      If possible, the projection is orthogonal to the L* axis so that the luminance level is preserved.
    </p>
    <p num="74">
      An orthogonal projection to the L* axis is not always possible.
      <br/>
      Referring to FIG. 6B, the colors represented by points 141 and 144 have luminance levels that lie outside the gamut.
      <br/>
      The projection from point 141 is made to point 142, which represents the minimum value for L* in the gamut along the neutral-color line.
      <br/>
      The projection from point 144 is made to point 145, which represents the maximum value for L* in the gamut along the neutral-color line.
    </p>
    <p num="75">
      This mapping may be performed in other color spaces.
      <br/>
      For example, in CIE XYZ space, the points of neutral color define a line for which x/x0 =y/y0 =z/z0, where (x0,y0,z0) specifies normalization coordinates for the color space.
      <br/>
      An out-of-gamut color may be mapped to the intersection of the gamut boundary with a curve connecting the point to this line.
      <br/>
      The curve corresponds to the orthogonal projection in L*a*b* space that preserves luminance.
      <br/>
      Alternatively, a straight-line projection or some other curve can be used in XYZ space, which will provide a different result.
    </p>
    <p num="76">Extending the Color Range for the Input-Device Gamut</p>
    <p num="77">
      The accuracy of input-device map 21 provided by a technique such as that illustrated in FIG. 2A is enhanced if the range of colors conveyed by image 15 is at least as broad as the gamut of input device 10.
      <br/>
      In other words, it is very likely that the accuracy of input-device map 21 will be very poor in those regions of color space that are not represented by any patches in image 15.
      <br/>
      This poor accuracy can cause an input-device transformation to map colors in a way that does not preserve relative chroma magnitudes.
    </p>
    <p num="78">
      Referring to FIG. 7, point 165 represents an out-of-gamut color that has a chroma magnitude greater than the chroma magnitude of an in-gamut color represented by point 155.
      <br/>
      If input-device map 21 is derived from only the colors available from gamut 150, then a color represented by a point such as point 165 will be mapped by interpolation to point 167 inside the boundary of gamut 150.
      <br/>
      The color will be mapped inside the gamut boundary because the four points defining the smallest tetrahedron that encloses point 165 are all on the gamut boundary.
      <br/>
      In other words, because input-device map 21 is formed from only colors found within gamut 150, there are no points outside the gamut to provide a vertex for interpolation.
      <br/>
      The extent to which a point representing an out-of-gamut color is mapped to a point inside the boundary will depend on the accuracy and resolution of the interpolation points and the convexity of the local gamut boundary.
      <br/>
      If the accuracy of the input-device transformation is sufficiently poor or the convexity of the local gamut boundary is sufficiently large, the chroma magnitude of the color represented by point 167 may be less than the chroma magnitude of the color represented by point 155.
      <br/>
      This result may be perceived as an inversion of chromaticity, sometimes referred to as tone inversion.
    </p>
    <p num="79">
      Tone inversion may be avoided or at least reduced by using a broader range of colors to derive the input-device map.
      <br/>
      One way to produce a broader range of colors is to use a printer or other output device with a very broad gamut to generate image 15.
      <br/>
      Such devices are usually expensive or difficult to acquire.
    </p>
    <p num="80">
      Another way to produce a broader range of colors is to use multiple printers that have widely varying gamuts or to operate one or more printers in multiple modes.
      <br/>
      In this context, "mode" refers to a number of operating conditions including printing resolution (dpi), choice of colorants or media, and half-toning methods or stochastic screening techniques.
    </p>
    <p num="81">
      FIG. 7 is a schematic representation of respective gamuts 150 and 160 for two printers or, alternatively, one printer operating in two different modes.
      <br/>
      For ease of explanation, either or both of these situations are included in the following discussion that refers to gamuts of different printers.
    </p>
    <p num="82">
      FIG. 14 illustrates one method for deriving an input-device map 21 to overcome tone inversion.
      <br/>
      First, using a technique similar to that described above, an inverse function g1-1 is obtained (step S241) for the points in gamut 150 representing colors printed by the first printer.
      <br/>
      Similarly, an inverse function g2-1 is obtained (step S242) for the points in gamut 160 representing colors printed by the second printer.
      <br/>
      If a color is represented by points in both gamuts (step S243) such as those represented by points 152 and 162, the inverse function .function.I-1 for input-device map 21 is equal to the average of the inverse functions (step S244).
      <br/>
      The "same" color from two sets of patches will not necessarily be mapped by the input device to the same point in DDCS.
      <br/>
      The difference in mapped points may occur due to noise in the scanning process and/or because of minor differences in the actual colors.
    </p>
    <p num="83">
      If a color is represented by a point in only gamut 150 (step S245) such as that represented by point 151, the inverse function .function.I-1 is equal to the inverse function g1-1 obtained for that gamut (step S246).
      <br/>
      If a color is represented by a point in only gamut 160 (step S247) such as that represented by point 166, the inverse function .function.I-1 is equal to the inverse function g2-1 obtained for that gamut (step S248).
      <br/>
      If a color is represented by point that is in neither gamut such as the color represented by point 165, a projection is made to a line representing neutral colors (step S249) and the points p1 and p2 of intersection of that projection with the boundary of gamut 150 and 160, respectively, is determined (step S250).
      <br/>
      If the point of intersection p1 with gamut 150 represents a color with a greater chroma magnitude than the point of intersection p2 with gamut 160 (step S251), then point p1 is selected to be the mapped point (step S252).
      <br/>
      Otherwise, point p2 is selected to be the mapped point (step S253).
      <br/>
      Alternatively, the point of intersection representing the color with the largest magnitude chroma coordinate may be selected.
    </p>
    <p num="84">
      In the example shown in FIG. 7, the projection from point 165 intersects the boundaries of the two gamuts at points 166 (point p2) and 167 (point p1).
      <br/>
      The color represented by point 166 has the larger chroma magnitude; therefore, point 166 is selected to define the mapping for the color represented by point 165.
    </p>
    <p num="85">This relationship may be summarized as follows:  (Equation image '1' not included in text)</p>
    <p num="86">
      where
      <br/>
      p1 =the intersection of a projection of point p onto the neutral-color line and the boundary of gamut 1, and
      <br/>
      p2 =the intersection of a projection of point p onto the neutral-color line and the boundary of gamut 2.
    </p>
    <p num="87">
      FIG. 15 illustrates major components of one way for deriving a transformation in this manner.
      <br/>
      Check gamuts 82 receives information from path 81 representing one or more points in color space and determines whether a respective point p is in either or both of two gamuts.
      <br/>
      If point p is in the first gamut, information representing that point is passed along path 83 to transformation 91 which implements inverse function g1-1 discussed above.
      <br/>
      If point p is in the second gamut, information representing that point is passed along path 84 to transformation 92 which implements inverse function g2-1 discussed above.
      <br/>
      If point p is in both gamuts, information is passed to both transformations and an indication of this is passed along path 85.
      <br/>
      If point p is in neither gamut, information representing that point is passed along path 86.
    </p>
    <p num="88">
      Projection/clip chroma 87 projects a line from point p to the neutral-color line, determines the intersection or clip point p1 of this projection with the boundary of the first gamut, and determines the chroma for point p1.
      <br/>
      In one embodiment, the chroma is determined from the chroma magnitude which, in L*a*b* space, is equal to the square root of the sum of the squares of the a* and b* coordinates.
      <br/>
      In another embodiment, the chroma is determined from the magnitude of the largest coordinate which, in L*a*b* space is the larger of .vertline.a*.vertline. and .vertline.b*.vertline.. Similarly, projection/clip chroma 88 projects a line from point p to the neutral-color line, determines the intersection or clip point p2 of this projection with the boundary of the second gamut, and determines the chroma for point p2.
    </p>
    <p num="89">
      Compare 89 determines whether point p1 or point p2 has the larger chroma.
      <br/>
      If point p1 has the larger chroma, compare 89 passes information representing point p1 along path 83 to transformation 91.
      <br/>
      If point p2 has the larger chroma, compare 89 passes information representing point p2 along path 84 to transformation 92.
    </p>
    <p num="90">
      Select 93 receives the results of transformation 91 and transformation 92 and, if the indication received from path 85 indicates point p is in both gamuts, generates along path 94 information representing the average of the results received from both transformations.
      <br/>
      If the indication received from path 85 does not indicate point p is in both gamuts, select 93 generates along path 94 information representing the sum of the results received from both transformations.
      <br/>
      In this embodiment, it is assumed that if no information is passed to a respective transformation, that transformation produces a result equal to zero; therefore, the sum of the results will be equal to whichever transformation was passed information.
    </p>
    <p num="91">
      This technique may be used with any number (N&gt;1) of gamuts by obtaining an inverse transformation for each gamut, determining whether a point p is in all of the gamuts and, if so, taking the average of the respective inverse transformations for each gamut.
      <br/>
      If the point is not in all gamuts, a check is made to determine if point p is in some combination of N-1 gamuts.
      <br/>
      If so, an average of the respective inverse transformations for those N-1 gamuts is taken.
      <br/>
      If not, a check is made for all combinations of N-2 gamuts.
      <br/>
      This process continues until it is determined that point p is in none of the gamuts.
      <br/>
      A projection to the neutral-color line is made and a check is made to determine all intersections with various gamut boundaries.
      <br/>
      The intersection with the largest chroma magnitude, or alternatively the largest chroma coordinate, is selected and the appropriate inverse transformation is taken of that point.
    </p>
    <p num="92">Device and Media Independence</p>
    <p num="93">
      In preferred embodiments, input-device map 21 is independent of output device 30, output device map 23 is independent of input device 10, and both maps are independent of the media used by output device 30 to generate the replica.
      <br/>
      Nevertheless, if a color image reproduction system uses multiple input devices, output devices and/or media types, considerable memory is required to store the transformation LUT for each.
      <br/>
      The technique described below can reduce the amount of memory required to store LUT by eliminating the need for multiple transformations to accommodate media variations and by simplifying the process required to accommodate differences in the dynamic range of luminance for various device gamuts.
      <br/>
      One embodiment of controlling device 20 that comprises components providing these features is illustrated in FIG. 9.
    </p>
    <p num="94">
      A degree of media independence may be achieved by normalize 24, which accounts for differences in the "white point" for respective media.
      <br/>
      This may be accomplished conveniently in the .function.T transformation discussed above that converts values from CIE XYZ space into CIE L*a*b* space.
      <br/>
      A point in XYZ space may be mapped into L*a*b* space by the following non-linear equations:
      <br/>
      L*=116m(y/y0)-16
      <br/>
      a*=500�m(x/x0)-m(y/y0)�
      <br/>
      b*=500�m(y/y0)-m(z/z0)�
    </p>
    <p num="95">
      where
      <br/>
      x,y,z,=coordinates in CIE XYZ space,
      <br/>
      x0 y0,z0 =maximum value for the coordinates in CIE XYZ space,
      <br/>
      m(t)=t1/3 if 0.008856&lt;t &lt;= 1, and
      <br/>
      m(t)=7.787 t+(16/116) if 0 &lt;= t&lt;0.008856
    </p>
    <p num="96">for the independent variable t.</p>
    <p num="97">
      By varying the values of the x0, y0,z0 coordinates, normalize 24 can normalize the XYZ space according to a desired medium "white point" as the mapping into L*a*b* space is performed.
      <br/>
      As a result, variations in media white point can be accommodated by an implementation that requires only enough memory to store one transformation LUT.
    </p>
    <p num="98">The desired white point for a particular medium can be determined by scanning the medium and transforming the scanned values using an appropriate transformation such as input-device map 21; however, more accurate results may be obtained if the white point is determined by analyzing the medium with a spectral photometer.</p>
    <p num="99">
      Normalize 24 can be made responsive to a variety of input.
      <br/>
      For example, normalize 24 may select normalization parameters from a table in response to a signal received from path 13 such as that provided by a user activated switch or selected software option, or it may adapt normalization parameters in response to a white point measurement provided by input device 10 and input-device map 21.
      <br/>
      The measurement may be taken during a special white-point calibration scan or possibly from an assessment of the predominant color in a scanned original image.
    </p>
    <p num="100">
      A greater degree of device independence may be achieved by compress 25, which accounts for differences in the range of luminance levels for input- and output-device gamuts.
      <br/>
      Referring to FIG. 5B, suppose gamut 131 represents a scanner gamut with a detectable range of luminance levels from L*=0 to 100, and gamut 133 represents a printer gamut with a reproducible range of luminance levels from L*=30 to 100.
      <br/>
      In the example shown, the two devices have the same upper limit but have different lower limits.
      <br/>
      The technique discussed here may be applied to devices with respective luminance ranges that differ in essentially any way.
    </p>
    <p num="101">
      As explained above, out-of-gamut colors such as the color represented by point 141 in FIG. 6B may be mapped to the minimum luminance level for a neutral color in the printer gamut.
      <br/>
      Alternatively, such colors may be mapped into the printer gamut by compressing the luminance level.
      <br/>
      In the example mentioned above, this could be accomplished by linear compression of luminance levels in the range from L*=0 to 40 into the range from L*=30 to 40.
      <br/>
      Luminance levels from L*=40 to 100 are unchanged.
      <br/>
      Essentially any form of compression may be used; however, linear compression of this type is inexpensive to perform, provides some gradation in luminance level rather than merely clipping all low-level colors to the minimum, restricts changes in luminance to lower levels where changes are not easily perceived, and preserves luminance values at higher levels where changes are more easily perceived.
    </p>
    <p num="102">
      Luminance compression can be provided easily without requiring an elaborate transformation.
      <br/>
      As a result, luminance dynamic range variations in device-dependent gamuts can be accommodated and a degree of device independent can be achieved without requiring significant additional memory to store a LUT.
    </p>
    <p num="103">
      This compression can be made responsive to a variety of input.
      <br/>
      Compress 25 may select compression parameters from a table in response to a signal received from path 14 such as that provided by a user activated switch or selected software option, or it may adapt the compression parameters in response to signals identifying an output device that are received from the output device itself.
    </p>
    <p num="104">
      Preferably, after luminance compression, the resulting L*a*b* coordinates for each picture element (pixel) is compared to thresholds and, if the color space coordinates representing that pixel have a prescribed relationship with respect to those thresholds, the L*a*b* coordinates are set to some specified values, say (100,0,0).
      <br/>
      This may be represented by the following pseudo code fragment:
      <br/>
      if L*&gt;LTH and .vertline.a*.vertline.&lt;aTH and .vertline.b*.vertline.&lt;bTH
    </p>
    <p num="105">
      then
      <br/>
      set L* equal to 100
      <br/>
      set a* equal to 0
      <br/>
      set b* equal to 0
    </p>
    <p num="106">The thresholds may be specified as LTH =95, aTH =2 and bTH =3, for example.</p>
    <p num="107">
      This process is represented by white point background 26 in FIG. 9.
      <br/>
      The specified values represent a desired white point for the output replica.
      <br/>
      This process tends to remove artifacts from the replica that are created by noise in the scanning process and by arithmetic round off errors in the transformation processes.
      <br/>
      This operation may also be used to remove the background color of the original medium without changing the colors of the reproduced image.
    </p>
    <p num="108">Improving Accuracy of an Input Device Map</p>
    <p num="109">
      As mentioned above, transformations are often implemented by an interpolation of entries in a look-up table (LUT).
      <br/>
      Because the transformations are non-linear, the accuracy of the interpolation is affected by the distance between points represented by adjacent entries in the table.
    </p>
    <p num="110">
      As discussed above in connection with FIGS. 3A and 3B, a point can mapped from CIE XYZ space into CIE L*a*b* space by a set of analytical expressions.
      <br/>
      This type of transformation is not available for many color space mappings but it is useful to illustrate the accuracy of interpolation.
    </p>
    <p num="111">
      Point 107 is shown in FIG. 3A to be within a tetrahedron that has vertices at points 101-104.
      <br/>
      By applying tetrahedral interpolation to corresponding points 111-114 in L*a*b* space according to the relative position of point 107 with respect to the tetrahedral vertices, an approximate position can be obtained for the corresponding point in L*a*b* space.
      <br/>
      This approximate location is illustrated as point 118.
      <br/>
      By applying the three analytical expressions discussed above, an exact mapping in L*a*b* space for point 107 can be obtained.
      <br/>
      This exact mapping is shown as point 117.
      <br/>
      The distance between points 117 and 118 represents the interpolation error.
    </p>
    <p num="112">
      One common method for improving the accuracy of interpolation is to increase the density of the points represented in the LUT.
      <br/>
      Although this solution is simple in concept, it is often impractical because of the increase in cost for the memory required to store the LUT.
    </p>
    <p num="113">
      The interpolation accuracy of an input-device map may be improved without increasing the number of LUT entries by modifying some of the points represented in the LUT for selected regions of color space.
      <br/>
      One important region of color space that generally requires high accuracy is the region containing the points of neutral color.
      <br/>
      In some color spaces such as CIE L*a*b*, these points are coincident with the L* axis, or a*=b*=0.
    </p>
    <p num="114">
      The accuracy of interpolation for a selected region of a mapped color space can be improved by obtaining color patches for a selected color within the selected region, measuring the patch as necessary to obtain appropriate values in a DICS, scanning the patch to obtain appropriate values in the input-DDCS, and modifying entries in the LUT representing points adjacent to the selected color.
      <br/>
      Patches of selected colors may be obtained by choosing points that are interior to each region of interest, mapping the points to the appropriate output-DDCS, generating the appropriate patches.
      <br/>
      If the selected color is outside the gamut of a particular output device, another output device may be used.
    </p>
    <p num="115">
      The table entries corresponding to the four vertices are modified according to two different processes depending upon whether the region of interest is inside or outside the gamut.
      <br/>
      The process of improving accuracy for regions inside the gamut will be discussed first.
    </p>
    <p num="116">Improving Accuracy of In-Gamut Colors</p>
    <p num="117">
      In a preferred embodiment, the entries in the LUT correspond to uniformly spaced grid points in a color space.
      <br/>
      Because it is difficult if not impossible to obtain color patches for specific grid points in the color space, the values for essentially all of the LUT entries are calculated by interpolation of the values that can be obtained from actual color patches.
      <br/>
      The perceptible effect caused by the errors introduced by this process depend on a number of factors including the relative spacing of the color patches in the color space and the varying sensitivity of the human observer to changes in color across the color space.
    </p>
    <p num="118">
      The accuracy of a LUT derived in this manner can be improved by obtaining a very large number of patches having colors represented by points closely spaced in the color space; however, this is usually impractical.
      <br/>
      This technique overcomes this problem by deriving the LUT from a relatively small number of patches represented by colors widely separated in the color space and obtaining additional patches for selected in-gamut colors as required to improve the LUT accuracy in those regions of color space where transform accuracy is more important.
      <br/>
      As mentioned above, one important region contains the points of neutral color.
    </p>
    <p num="119">
      For a LUT used for tetrahedral interpolation, an additional patch for a selected in-gamut color may be obtained by identifying an interior point of a tetrahedron having four vertices defined by points in the LUT.
      <br/>
      An interior point (xp,yp,zp) to a specific tetrahedron defined by vertices at points (x1,y1,z1) through (x4,y4,z4) may be determined from the expressions:
      <br/>
      xp =a1 x1 +a2 x2 +a3 x3 +a4 x4
      <br/>
      yp =a1 y1 +a2 y2 +a3 y3 +a4 y4
      <br/>
      zp =a1 z1 +a2 z2 +a3 z3 +a4 z4
    </p>
    <p num="120">where a1 through a4 are coefficients of interpolation chosen such that a1 +a2 +a3 +a4 =1 and all the coefficients are greater than zero.</p>
    <p num="121">
      Referring to FIG. 3A, suppose points 101-104 represent vertices at points (x1,y1,z1) through (x4,y4,z4), respectively.
      <br/>
      By setting the coefficients of interpolation appropriately, any point internal to the tetrahedron may be chosen.
      <br/>
      Point 107, for example, may be selected by choosing the interpolation coefficients appropriately.
    </p>
    <p num="122">
      The interpolation process used to derive a LUT entry from measured values is essentially the same process as that used to implement the device transforms themselves.
      <br/>
      By obtaining additional color patches in selected regions of color space, the distance between the measured points in those regions is reduced and the accuracy of interpolation between these more closely spaced points is enhanced.
      <br/>
      As a result, the accuracy of the transform implemented by the LUT is also enhanced.
      <br/>
      This process may be repeated until a desired level of transformation accuracy is achieved.
    </p>
    <p num="123">
      Referring to FIG. 16, this process may be carried out by printing color patches that correspond to some set of points separated in color space by some suitably large distance (step S261) and deriving from these patches a LUT with uniform spacing (step S262).
      <br/>
      The tetrahedral regions formed by points in the LUT entries are examined to determine if the mapping error is unacceptable large (step S263).
      <br/>
      For any particular tetrahedron, the mapping error may be determined by selecting an interior point of the tetrahedron, printing a corresponding patch, measuring the actual color of the patch using a measuring device such as a spectral photometer, and comparing the measured values with the values obtained by LUT interpolation.
      <br/>
      The way in which an interior point may be selected is described above.
    </p>
    <p num="124">
      If no region has an unacceptably large error, the process terminates (step S264), otherwise a point interior to that tetrahedral region is selected and a corresponding color patch is printed (step S265).
      <br/>
      The color patch is scanned (step S266) and the information in the LUT entries for the four points defining the tetrahedral region are derived again using the new color point (step S267).
      <br/>
      The color patch and scanned values used to determine the mapping error may also be used here.
      <br/>
      This process reiterates until no tetrahedral region represented by LUT entries has interpolation errors that are unacceptably large.
    </p>
    <p num="125">Improving Accuracy for Out-of-Gamut Colors</p>
    <p num="126">
      The accuracy of LUT entries for out-of-gamut colors can be improved by obtaining additional patches for selected out-of-gamut colors as required to improve the LUT accuracy in those regions of color space where transform accuracy is more important.
      <br/>
      These patches may be obtained from another source such as a different output device or by operating a given output device in a different mode, as described above.
      <br/>
      The coordinates of the point in DICS representing the patch color may be obtained from a measuring device such as a spectral photometer.
    </p>
    <p num="127">
      Referring to FIG. 17, a method for improving the accuracy of out-of-gamut colors comprises using current LUT entries to obtain an initial estimate of the patch color space coordinates (step S271), comparing the estimated coordinates to the actual (measured) coordinates to obtain the estimation error (step S272), determining if the estimation error is acceptably small (step S273) and, if not, modifying current LUT entries according to the estimation error (step S274).
      <br/>
      The process terminates (step S275) when the estimation error is acceptably small.
    </p>
    <p num="128">
      An initial estimate of the coordinates (xs,ys,zs) in the DICS for a selected out-of-gamut color is obtained by tetrahedral interpolation of the four points closest to the scanned point according to:
      <br/>
      xs =a1 x1 +a2 x2 +a3 x3 +a4 x4
    </p>
    <p num="129">
      ys =a1 y1 +a2 y2 +a3 y3 +a4 y4
      <br/>
      zs =a1 z1 +a2 z2 +a3 z3 +a4 z4
    </p>
    <p num="130">where interpolation coefficients a4 through a4 are determined by the location of the interpolated point relative to the locations of these four closest points.</p>
    <p num="131">
      The estimation errors in the x, y and z dimensions are obtained from the expressions:
      <br/>
      ex =xm -xs
      <br/>
      ey =ym -ys
      <br/>
      ez =zm -zs
    </p>
    <p num="132">
      where the coordinates xm, ym and zm are known from measurements of the color patch.
      <br/>
      Alternatively, other measures of estimation error may be used such as the square of the differences shown above.
    </p>
    <p num="133">
      The coordinates of the four closest points are modified to obtain a lower estimation error.
      <br/>
      For example, the x coordinates are modified reiteratively according to the following expressions:  (Equation image '2' not included in text)
    </p>
    <p num="134">
      where
      <br/>
      i=index of iteration, and
      <br/>
      ETA =convergence coefficient.
    </p>
    <p num="135">
      The y and z coordinates are modified in a similar manner.
      <br/>
      After each iteration, a new interpolation is performed according to
      <br/>
      xs =a1 x1 (i)+a2 x2 (i)+a3 x3 (i)+a4 x4 (i)
      <br/>
      ys =a1 y1 (i)+a2 y2 (i)+a3 y3 (i)+a4 y4 (i)
    </p>
    <p num="136">zs =a1 z1 (i)+a2 z2 (i)+a3 z3 (i)+a4 z4 (i)</p>
    <p num="137">
      and a new estimation error is obtained as explained above.
      <br/>
      The iteration continues until the estimation error is acceptably small.
    </p>
    <p num="138">By using these two techniques, the interpolation accuracy of a LUT for both in-gamut and out-of-gamut colors may be improved without increasing the number of entries in the LUT.</p>
    <p num="139">Retaining Useful Information in Self-Calibration Techniques</p>
    <p num="140">
      The operational characteristics of many input and output devices change with time.
      <br/>
      These changes cause shifts in the location and size of device gamuts in color space.
      <br/>
      Similar changes may occur as a result of operating an output device in a new mode or using different media.
      <br/>
      As a result, it is desirable to modify transformations to account for these changes so that the reproduction accuracy of a system can be maintained.
      <br/>
      The following technique accounts for changes in the gamut of output device 30 by deriving a recalibration transformation.
    </p>
    <p num="141">
      FIG. 8 is a schematic representation of a shift in the gamut of a hypothetical output device such as that caused by component aging.
      <br/>
      Gamut 170 represents the original characteristics of output device 30 which was used originally to calibrate the color image reproduction system.
      <br/>
      The colors represented by points 171 and 173 are in the original gamut and colors represented by points 185 and 188 are outside the original gamut.
      <br/>
      Points 185 and 188 are mapped onto the boundary of the original gamut at points 176 and 179, respectively.
    </p>
    <p num="142">
      Gamut 180 represents current characteristics of output device 30 which is to be used to recalibrate the system.
      <br/>
      According to this new gamut, colors represented by points 181 and 188 are in the current gamut and colors represented by points 173 and 185 are outside the current gamut.
    </p>
    <p num="143">
      One way in which a system may be recalibrated is to merely invoke the procedures described above, deriving new device maps in a manner similar to that done to derive original maps.
      <br/>
      This approach is not attractive because the derivation of an accurate map for an entire gamut can require considerable time and expense and because it discards useful information that may not be available at the time of recalibration.
      <br/>
      For example, patches of a particular color that were used to derive an original device map may not be available at the time of recalibration.
    </p>
    <p num="144">
      The technique described below overcomes these problems by providing for self-recalibration and by restricting the recalibration to those regions of color space that are inside the current output device gamut.
      <br/>
      As a result, LUT entries for colors such as those represented by points 181 and 188 are affected by the recalibration process but LUT entries for colors such as those represented by point 173 are not affected.
    </p>
    <p num="145">
      Referring to FIGS. 10 and 18, controlling device 20 selects values in the output-DDCS to cause output device 30 to generate image 37 (step 281) containing patches of colors that are inside the current output device gamut.
      <br/>
      Input device 10 scans image 37 (step 282) to generate values within input-DDCS, which input device map 21 and output device map 23 collectively transform into values in the output-DDCS (step 283) according to some transformation such as .function.c discussed above.
      <br/>
      In some embodiments, input-device map 21 and output-device map 23 are merged into a single LUT to reduce the amount of memory required to store the transformation.
      <br/>
      In such embodiments, the recalibration technique described here is especially attractive.
      <br/>
      Because the output device gamut has changed, some of the values obtained from output device map 23 will differ significantly from the corresponding values used to generate the color patches.
    </p>
    <p num="146">
      These differences can be expressed as a transform
      <br/>
      e:CMYCUR --&gt; CMYORIG
    </p>
    <p num="147">
      that maps color coordinates CMYCUR pertaining to the current output device gamut to color coordinates CMYORIG as they pertain to the original gamut.
      <br/>
      By deriving the inverse function
      <br/>
      e-1 :CMYORIG --&gt; CMYCUR
    </p>
    <p num="148">
      (step 284), recalibrate map 22 can apply appropriate correction to obtain proper values for output device 30.
      <br/>
      This inverse function is referred to herein as a recalibration transformation.
    </p>
    <p num="149">
      In one embodiment, the recalibration transformation is implemented as a LUT.
      <br/>
      The recalibration LUT includes information in each table entry indicating whether the respective point represented by that table entry is inside or outside the current output device gamut.
      <br/>
      During operation of the color image reproduction system, referring to FIGS. 10 and 19, input device 10 scans an original image (step 291), output device map 23 subsequently obtains an interim mapping of pixels in the output-DDCS (step 292) and recalibrate map 22 selectively applies the recalibration transformation to these mapped pixels as required.
      <br/>
      This is accomplished by identifying the four points in output-DDCS (step 293) that define the smallest tetrahedron enclosing the color point for a respective pixel, and interrogating the recalibration LUT entries (step 294) for these four points to determine if all are within the current output device gamut.
      <br/>
      If all points are in the current output device gamut, the recalibration transformation is applied (step 295) by performing interpolation among those four points in the recalibration LUT.
      <br/>
      The results of this interpolation is used to control output device 30 for that particular pixel.
    </p>
    <p num="150">
      If at least one of the four points is not within the current output device gamut, the results obtained from the original output device map 23 is projected to the neutral-color line and clipped at the current gamut boundary (step 296).
      <br/>
      This point at the boundary is used to control output device 30 for the respective pixel.
    </p>
    <p num="151">
      FIG. 11 illustrates major components of one way for using the recalibration transformation discussed above.
      <br/>
      Path 71 receives information representing points in color space.
      <br/>
      In one embodiment, this information includes an indication whether each point is in the current output device gamut.
      <br/>
      In another embodiment, check gamut 73 determines this by comparing the color space coordinates of each point with the location of the current gamut boundary.
    </p>
    <p num="152">
      For either embodiment, check gamut 73 controls switch 72 to connect with path 74 if a respective point p is not in the current gamut.
      <br/>
      Project and clip 76 projects a line from point p to the neutral-color line and determines the intersection or clip point p' of this projection with the boundary of the current gamut.
      <br/>
      Information representing clip point p' is passed along path 78.
    </p>
    <p num="153">
      If point p is in the current gamut, check gamut 73 causes switch 72 to connect with path 75.
      <br/>
      Recalibration transformation 77 implements the e-1 transformation discussed above and passes the results of this transformation along path 78.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for deriving color space transformations for a color image reproduction system comprising an input device and an output device, wherein said output device has an output-device gamut including colors capable of being rendered by said output device, said method comprises:</claim-text>
      <claim-text>obtaining a first transformation for said input device that maps from colors within an input-device-dependent color space to colors within a first device-independent color space, and obtaining a normalization transformation that normalizes all color data information in said first device-independent color space with respect to a white point in a second device-independent color space, wherein x0,y0,z0 is the maximum value for the coordinates in said first device-independent color space and wherein said normalization transformation is obtained by varying the values of the x0,y0,z0 coordinates.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method according to claim 1 wherein said first transformation is obtained by a process that comprises: generating coordinate values for points in said input-device-dependent color space by scanning a medium conveying a plurality of first areas having different first color characteristics, obtaining coordinate values for points in said first device-independent color space representing said first color characteristics, defining a first initial transformation that maps from points in said first device-independent color space to corresponding points in said input-device-dependent color space, and deriving said first transformation from said first initial transformation such that,</claim-text>
      <claim-text>- for a color within said output-device gamut, said first transformation is defined by interpolation of point values within said first device-independent color space, and - for a first color outside of said output-device gamut, said first transformation is defined by a point in said first device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said first color and a neutral-color line.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method according to claim 1 or 2 that further comprises obtaining a second transformation for said output device that maps from colors within said second device-independent color space to colors within an output-device-dependent color space, wherein said second transformation is obtained by a process that comprises: generating coordinate values for points in said output-device-dependent color space and, in response thereto, producing a medium conveying a plurality of second areas having different second color characteristics, measuring the color characteristics of said plurality of second areas and generating coordinate values for points in said second device-independent color space representing said second color characteristics, defining a second initial transformation that maps from points in said input-device-dependent color space to corresponding points in said second device-independent color space, and deriving said second transformation from said second initial transformation such that, - for a color within said output-device gamut, said second transformation is defined by interpolation of point values within said second device-independent color space, and - for a second color outside of said output-device gamut, said second transformation is defined by a point in said second device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said second color and a neutral-color line.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A method according to claim 1 or 2 that further comprises deriving a transformation that compresses luminance levels of values derived from said first transformation into a range of luminance levels within said output-device gamut.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method according to claim 1 or 2 that further comprises comparing values obtained from said normalization transform with one or more thresholds and modifying those values having specified relationships with said thresholds to represent said white point.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A color image reproduction system comprising an input device, an output device and a controlling device, wherein said output device has an output-device gamut including colors capable of being rendered by said output device, said controlling device comprises components that: receive first signals from said input device representing in an input-device-dependent color space one or more colors appearing in an original image, generate second signals according to a first transformation that transforms information represented by said first signals in said input-device-dependent color space into information represented by said second signals in a first device-independent color space, and generate third signals according to a normalization transformation that transforms information represented by said second signals in said first device-independent color space into information represented by said third signals in a second device-independent color space by normalizing all of the color data information represented by said second signals with respect to a white point within said second device-independent color space, wherein x0,y0,z0 is the maximum value for the coordinates in said first device-independent color space and wherein said normalization transformation is obtained by varying the values of the x0,y0,z0 coordinates.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A system according to claim 6 wherein, for obtaining said first transformation, said controlling device comprises components that: generate coordinate values for points in said input-device-dependent color space by scanning a medium conveying a plurality of first areas having different first color characteristics, obtain coordinate values for points in said first device-independent color space representing said first color characteristics, define a first initial transformation that maps from points in said first device-independent color space to corresponding points in said input-device-dependent color space, and derive said first transformation from said first initial transformation such that, - for a color within said output-device gamut, said first transformation is defined by interpolation of point values within said first device-independent color space, and - for a first color outside of said output-device gamut, said first transformation is defined by a point in said first device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said first color and a neutral-color line.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A system according to claim 6 or 7 wherein, for obtaining a second transformation for said output device that maps from colors within said second device-independent color space to colors within an output-device-dependent color space, said controlling device comprises components that: generate coordinate values for points in said output-device-dependent color space and, in response thereto, producing a medium conveying a plurality of second areas having different second color characteristics, measure the color characteristics of said plurality of second areas and generating coordinate values for points in said second device-independent color space representing said second color characteristics, define a second initial transformation that maps from points in said input-device-dependent color space to corresponding points in said second device-independent color space, and derive said second transformation from said second initial transformation such that, - for a color within said output-device gamut, said second transformation is defined by interpolation of point values within said second device-independent color space, and - for a second color outside of said output-device gamut, said second transformation is defined by a point in said second device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said second color and a neutral-color line.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A system according to claim 6 or 7 wherein said controlling device further comprises components that derive a transformation that compresses luminance levels of values derived from said first transformation into a range of luminance levels within said output-device gamut.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A system according to claim 6 or 7 wherein said controlling device further comprises components that compare values obtained from said normalization transform with one or more thresholds and modifies those values having specified relationships with said thresholds to represent said white point.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A medium readable by a machine embodying a program of instructions for execution by said machine to perform a method for deriving color space transformations for a color image reproduction system comprising an input device and an output device, wherein said output device has an output-device gamut including colors capable of being rendered by said output device, said method comprises: obtaining a first transformation for said input device that maps from colors within an input-device-dependent color space to colors within a first device-independent color space, and obtaining a normalization transformation that normalizes all color data information in said first device-independent color space with respect to a white point in a second device-independent color space, wherein x0,y0,z0 is the maximum value for the coordinates in said first device-independent color space and wherein said normalization transformation is obtained by varying the values of the x0,y0,z0 coordinates.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A medium according to claim 11 wherein said first transformation is obtained by a process that comprises: generating coordinate values for points in said input-device-dependent color space by scanning a medium conveying a plurality of first areas having different first color characteristics, obtaining coordinate values for points in said first device-independent color space representing said first color characteristics, defining a first initial transformation that maps from points in said first device-independent color space to corresponding points in said input-device-dependent color space, and deriving said first transformation from said first initial transformation such that, - for a color within said output-device gamut, said first transformation is defined by interpolation of point values within said first device-independent color space, and - for a first color outside of said output-device gamut, said first transformation is defined by a point in said first device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said first color and a neutral-color line.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A medium according to claim 11 or 12 that further comprises obtaining a second transformation for said output device that maps from colors within said second device-independent color space to colors within an output-device-dependent color space, wherein said second transformation is obtained by a process that comprises: generating coordinate values for points in said output-device-dependent color space and, in response thereto, producing a medium conveying a plurality of second areas having different second color characteristics, measuring the color characteristics of said plurality of second areas and generating coordinate values for points in said second device-independent color space representing said second color characteristics, defining a second initial transformation that maps from points in said input-device-dependent color space to corresponding points in said second device-independent color space, and deriving said second transformation from said second initial transformation such that, - for a color within said output-device gamut, said second transformation is defined by interpolation of point values within said second device-independent color space, and - for a second color outside of said output-device gamut, said second transformation is defined by a point in said second device-independent color space that corresponds to an intersection of a boundary of said output-device gamut with a projection between a point representing said second color and a neutral-color line.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A medium according to claim 11 or 12 that further comprises deriving a transformation that compresses luminance levels of values derived from said first transformation into a range of luminance levels within said output-device gamut.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A medium according to claim 11 or 12 that further comprises comparing values obtained from said normalization transform with one or more thresholds and modifying those values having specified relationships with said thresholds to represent said white point.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. An color image reproduction system for providing color matching between an original color image input to an input device and a reproduction of the original color image output by an output device, the input device having first color characteristics defined in a first device dependent color space represented by a first transformation function, the output device having a second color characteristics defined in a second device dependent color space represented by a second transformation function, said color image reproduction system comprising: an input device mapper to convert the image input to the input device from the first device dependent color space to a first device independent color space in accordance with an inverse of the first transformation function; a normalizer to normalize all color data representing the image in the first device independent color space from said input device mapper to a second device independent color space with respect to a white point within the second device independent color space, wherein x0,y0,z0 is the maximum value for the coordinates in said first device independent color space and wherein all of the color data is normalized by varying the values of the x0,y0,z0 coordinates; a compressor to compress luminance levels of the image normalized in the second device independent color space into a range of luminance levels within a gamut of the output device to provide a compressed output normalized in the second device independent color space;</claim-text>
      <claim-text>and an output device mapper to compress the output from said compressor into the second device dependent color space in accordance with an inverse of the second transformation function.</claim-text>
    </claim>
  </claims>
</questel-patent-document>