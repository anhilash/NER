<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182207B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182207</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182207</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="9514874" extended-family-id="16540374">
      <document-id>
        <country>US</country>
        <doc-number>09213522</doc-number>
        <kind>A</kind>
        <date>19981217</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09213522</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>16950810</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>FR</country>
        <doc-number>9716198</doc-number>
        <kind>A</kind>
        <date>19971219</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997FR-0016198</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F   9/355       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>355</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F   9/38        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>38</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>712225000</text>
        <class>712</class>
        <subclass>225000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>711103000</text>
        <class>711</class>
        <subclass>103000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>711219000</text>
        <class>711</class>
        <subclass>219000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>712036000</text>
        <class>712</class>
        <subclass>036000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>712038000</text>
        <class>712</class>
        <subclass>038000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>712E09042</text>
        <class>712</class>
        <subclass>E09042</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>712E09069</text>
        <class>712</class>
        <subclass>E09069</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-009/355</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>355</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-009/38S</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>009</main-group>
        <subgroup>38S</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/355</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>355</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/3877</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>3877</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>15</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>2</number-of-figures>
      <image-key data-format="questel">US6182207</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Microcontroller with register system for the indirect accessing of internal memory via auxiliary register</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>TADDEI VINCENT J</text>
          <document-id>
            <country>US</country>
            <doc-number>3972025</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3972025</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>WEBER GERALD, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>3975714</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3975714</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>BLUME JR HENRY M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4153933</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4153933</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>GHORI AMAR, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5428760</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5428760</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>PAWLOSKI MARTIN B</text>
          <document-id>
            <country>US</country>
            <doc-number>5426769</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5426769</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>CHIN ARTHUR L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5524267</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5524267</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>STMicroelectronics S.A.</orgname>
            <address>
              <address-1>Gentilly, FR</address-1>
              <city>Gentilly</city>
              <country>FR</country>
            </address>
          </addressbook>
          <nationality>
            <country>FR</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>STMICROELECTRONICS</orgname>
          </addressbook>
          <nationality>
            <country>FR</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Poivre, Gregory</name>
            <address>
              <address-1>Grenoble, FR</address-1>
              <city>Grenoble</city>
              <country>FR</country>
            </address>
          </addressbook>
          <nationality>
            <country>FR</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Bosset, Jean-Hugues</name>
            <address>
              <address-1>Grenoble, FR</address-1>
              <city>Grenoble</city>
              <country>FR</country>
            </address>
          </addressbook>
          <nationality>
            <country>FR</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Galanthay, Theodore E.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <orgname>Allen, Dyer, Doppelt, Milbrath &amp; Gilchrist, P.A</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Ellis, Richard L.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      To accelerate read operations, or the operations that modify the operating parameters of a microcontroller, an interface is provided with three registers-an address register, an instruction and data register, and an auxiliary register.
      <br/>
      The instruction and data register supports the auxiliary register by indirect addressing.
      <br/>
      The address register is furthermore provided with an incrementation circuit mechanism for indirect incrementation.
      <br/>
      With the indirect addressing and the automatic incrementation, the number of external operations are reduced for continuous read or write operations.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">The invention relates to microcontrollers, and, more particularly, to a microcontroller interface.</p>
    <heading>DESCRIPTION OF THE PRIOR ART</heading>
    <p num="2">
      A microcontroller is a circuit that includes a microprocessor or a central processing unit, and a program memory on the same integrated circuit.
      <br/>
      A set of instructions for the microprocessor is stored in the program memory, and is adapted to a program or application executable by the microcontroller.
      <br/>
      There are known microcontrollers with sets of instructions that are powerful in varying degrees.
      <br/>
      These programs vary in size depending on the application for which they are intended.
      <br/>
      Example applications include control of a hard disk in a compatible type microcomputer, or control of an element, such as flasher lights in an automobile.
    </p>
    <p num="3">
      Conceiving and finalizing a set of instructions for the microcontroller program is often a slow and tedious process.
      <br/>
      The microcontroller has an interface to exchange information external to the microcontroller.
      <br/>
      This information includes data to be received and data to be sent, which corresponds to the intended use of the microcontroller.
      <br/>
      To support this exchange of information, the interface has a control bus and, more generally, two data exchange registers or address exchange registers.
    </p>
    <p num="4">
      The interface is generally a wired circuit that provides for a series-parallel conversion between a protocol (parallel) internal to the microcontroller, and a protocol (series) generally used to interface the microcontroller.
      <br/>
      More generally, the interface has protocol conversion circuits.
      <br/>
      In certain cases, the control bus itself is non-existent.
      <br/>
      The control bus is replaced by a particular configuration of bits of words loaded into the exchange registers.
    </p>
    <p num="5">
      For cost reasons, it is acceptable to reduce the exchange structure external to the microcontroller to a strict minimum.
      <br/>
      In particular, this is why the number of registers are small.
      <br/>
      As a result, the use of the microcontroller becomes cumbersome, especially during a phase of setting the control program.
      <br/>
      During the setting phase, the microcontroller is connected to a host circuit.
      <br/>
      The purpose of this connection is to monitor the operation of the microcontroller.
      <br/>
      In this case, it is necessary to read electrical states of the microcontroller at certain stages, e.g., those stages where a faulty operation has been detected.
    </p>
    <p num="6">
      Another purpose of the connection is to set the operation of the microcontroller.
      <br/>
      In this case, the host circuit writes states in certain registers of the microcontroller.
      <br/>
      For each read action performed on the microcontroller, the host circuit has to initiate three operations.
      <br/>
      The first operation includes loading into the exchange registers a read command and the address where data must be read in the microcontroller.
      <br/>
      The second operation relates to the execution of the command that has been loaded.
      <br/>
      The third operation relates to reading in an exchange register of the data element read at the indicated address.
    </p>
    <p num="7">
      This mechanism is lengthy.
      <br/>
      A problem of the duration of the finalizing process arises, especially when the number of locations of the microcontroller memory to be read is large.
      <br/>
      At the time of the write operation for the setting of the microcontroller, the operation is slightly shorter.
      <br/>
      A first step includes loading of the write command and the data to be read, as well as the address at which the data must be written in the memory (or in a register) of the microcontroller.
      <br/>
      In a second step, the host circuit commands the microcontroller to carry out the write instruction available in the exchange registers.
      <br/>
      In the above described case, two steps are needed to modify a data element which is too lengthy.
    </p>
    <p num="8">
      Memory locations in the memory of the microcontroller where writing or reading is to be performed are varied.
      <br/>
      Hereinafter, this description limits itself to the term "memory." The term "memory of the microcontroller" relates to the memory and the working registers of the microcontroller.
      <br/>
      This memory may thus be a program memory, i.e., where the instructions to be performed are stored in the microprocessor.
      <br/>
      This memory may also be a data memory, i.e., where the measured data or control parameters of the microcontroller are stored.
    </p>
    <p num="9">
      Finally, this memory could represent a batch of parameter-setting registers or operation registers of the microcontroller.
      <br/>
      In particular, the memory represents a batch of registers for setting the parameters of its peripherals.
      <br/>
      Because the interface itself is likely to accept different protocols, the interface must have its parameters set by states stored in the registers.
      <br/>
      Other peripherals such as internal counters, clock frequency registers, or even registers for monitoring the microcontroller are thus effected by the exchanges with the interface.
    </p>
    <p num="10">
      In particular, with regard to monitoring of the operation of the microcontroller, certain applications set up supplementary registers that can be used, in emulation, to monitor the operation of the microcontroller.
      <br/>
      This monitoring is necessary during the finalizing steps.
      <br/>
      Thus, the slowness of the communications carried out at the interface is further emphasized by the structurally complicated relationship with the supplementary registers in an indirect addressing mode.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="11">
      An object of the present invention is to provide a microcontroller with an improved interface, as well as a method for using the microcontroller with its improved interface.
      <br/>
      The present invention seeks to accelerate the interface between a microcontroller and devices external to the microcontroller.
      <br/>
      This acceleration primarily relates to the final adjusting of the operation of the microcontroller.
      <br/>
      However, it could relate to any conventional phase of use of the microcontroller.
    </p>
    <p num="12">
      It is an object of the invention to resolve the slowness of the exchanges by accelerating operations of the interface.
      <br/>
      Rather than follow a three-step operation or a two-step operation for the write operation, the invention modifies the architecture of the microcontroller so that it can be performed in only one step.
      <br/>
      In the invention, the interface is provided with an auxiliary supplementary register.
      <br/>
      Furthermore, there is a provision for automatically incrementing the address contained in one of the two exchange registers initially provided.
      <br/>
      For the finalizing process, it is primarily the monitoring of the registers or of the contiguous address memory locations that is performed.
      <br/>
      Consequently, an incrementation circuit added to the structure of the invention automatically provides an address increment.
      <br/>
      In practice, the address increment is equal to 1, but could nevertheless be arranged differently.
    </p>
    <p num="13">
      In one approach, the incrementation circuit is correlated to the reading or writing of the auxiliary register.
      <br/>
      Thus, it is sufficient to read or write the auxiliary register so that a command loaded into the control register is automatically executed.
      <br/>
      It can also be shown that management of the interfaces is carried out three times faster.
    </p>
    <p num="14">
      Another object of the invention therefore is to provide a microcontroller that includes a central processing unit, a program and/or data memory connected with the central processing unit, an input/output interface, a first exchange register containing an instruction code and an information element pertaining to a data element to be read or written, and a second exchange register containing an address.
      <br/>
      The first and second registers are connected to the interface.
      <br/>
      A switching circuit is connected to the interface, the program memory, and the central processing unit to carry out the switch-over as a function of a control signal.
      <br/>
      The control signal is available at this interface to provide a connection between the central processing unit and the program memory to provide a connection between the two exchange registers and the central processing unit.
    </p>
    <p num="15">
      The microcontroller also includes an auxiliary register connected to the interface, an automatic address implementation circuit to increment the value of an address contained in the second exchange register, and means for indirect addressing directed towards the auxiliary register.
      <br/>
      Using information on the data element, the means for indirect addressing takes the address of the auxiliary register, where the data element is stored, from the first exchange register.
    </p>
    <p num="16">
      Another object of the invention is to provide a method for reading/writing in a data memory for a microcontroller from an input/output interface in which an instruction code, an information element pertaining to a data element to be read or written, and an address are loaded into first and second exchange registers of the microcontroller.
      <br/>
      The operation of a central processing unit of the microcontroller is switched over for executing the instruction code loaded into the first register.
      <br/>
      The data read or to be written is loaded into an auxiliary register connected to the interface.
      <br/>
      An incrementation circuit is used to automatically increment the address loaded into the second register.
      <br/>
      The instruction code loaded into the first register is executed with an indirect addressing operation directed towards the auxiliary register.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      The invention will be understood more clearly from the following description and from the appended figures. These figures are given purely by way of an indication and in no way restrict the scope of the invention. Of these figures:
      <br/>
      FIG. 1 provides a schematic view of a microcontroller according to the prior art; and
      <br/>
      FIG. 2 provides a schematic view of a microcontroller according to the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="18">
      FIGS. 1 and 2 show a microcontroller 1 having a central processing unit 2, a program memory 3 and a data memory 4.
      <br/>
      The program memory 3 and the data memory 4 may be merged into a single memory.
      <br/>
      In one embodiment, the program memory 3 is a non-volatile memory or a back-up memory, and the data memory 4 is a volatile memory.
      <br/>
      However, the program memory 3 can be a volatile memory, and its loading can be performed when the microcontroller 1 is put into operation.
      <br/>
      The memories 3 and 4, which are symbolically shown in FIGS. 1 and 2, may also comprise parameter-setting registers for operating the microcontroller or its peripherals.
      <br/>
      As indicated above, they may also represent registers for the monitoring operation of the microcontroller in an emulation mode.
    </p>
    <p num="19">
      The microcontroller 1 of FIGS. 1 and 2 also comprises an input/output (I/O) interface 5.
      <br/>
      The I/O interface 5 is used to provide for the interface between a host circuit 6 and a microcontroller 1.
      <br/>
      In one example, the host circuit 6 is a compatible type microcomputer connected to the interface by an RS232 type interface 7.
      <br/>
      In one embodiment, the I/O interface 5 is a parallel/series interface.
      <br/>
      On the microcontroller side, the interface is parallel.
      <br/>
      There are as many wires as are necessary in the communication buses with the circuits of the microcontroller 1.
      <br/>
      In the interface 7 with the host circuit 6, the number of wires is generally reduced.
      <br/>
      In addition, two-wire buses are well known in the art.
      <br/>
      The I/O interface 5 carries out the protocol conversion between internal and external communications of the microcontroller 1.
    </p>
    <p num="20">
      The microcontroller 1 furthermore has a first exchange register 8 and a second exchange register 9.
      <br/>
      The first register 8 is designed to contain an instruction code 10 and an information element 11 pertaining to a data element to be read or written.
      <br/>
      In the prior art (FIG. 1), the data element loaded into the information element 11 of the first register 8 is the data element itself.
      <br/>
      The data element is one that has been read or has to be written in one of the memories 3 or 4.
    </p>
    <p num="21">
      In the present invention (FIG. 2), the information pertaining to the data element to be read or written is actually an address information.
      <br/>
      The address is the address of an auxiliary register where the data element read has been written, or it is the address which has been written before the intended writing operation is performed.
      <br/>
      The second register 9 has an information element pertaining to the address of the location where it is necessary to read or write the data element referenced in the information element 11 of the first register 8.
    </p>
    <p num="22">
      The circuits of FIGS. 1 and 2 have a switching circuit 12 for the switching over, as a function of a control signal, an interface 13 between the central processing unit 2 and the program memory 3 to an interface 14 between the central processing unit 2 and the set of registers 8 and 9.
      <br/>
      The control signal of the switching circuit 12 is provided by a bus 15 connected to the I/O interface 5.
    </p>
    <p num="23">
      In the prior art, a read operation is performed as follows.
      <br/>
      Initially, by means of the I/O interface 5, the host circuit 6 loads an instruction code in the first register 8 and an address in the second register 9 into the set of registers 8 and 9.
      <br/>
      In the meantime, the central processing unit 2 is still in a normal interface 13 between the program memory 3 and the data memory 4.
      <br/>
      During a second step, the host circuit 6 sends a command through the I/O interface 5 to the bus 15 to activate the switch-over of the switching circuit 12.
      <br/>
      Thus, the loaded instruction code 10 is transmitted through an instruction decoder 16 to the central processing unit 2.
      <br/>
      This central processing unit 2 executes the instruction.
      <br/>
      For example, since the instruction is a read instruction, the central processing unit 2 prompts the reading in the data memory 4 of an information element stored at an address "mem" whose value is stored in the second register 9.
    </p>
    <p num="24">
      The instruction code 10 loaded into the first register 8 has the effect of executing the central processing unit 2 to transfer the value read in the data memory 4 into the instruction element 11 of the first register 8.
      <br/>
      Following the read operation, the data element read at the address "mem" is available in the information element 11 of the first register 8.
      <br/>
      During a third step, the host circuit 6 reads the contents of the first register 8, which is a fairly lengthy operation.
    </p>
    <p num="25">
      In the invention, as illustrated in FIG. 2, the architecture of the microcontroller 1 of FIG. 1 has been modified to include an auxiliary register 17.
      <br/>
      The auxiliary register 17 is connected to the I/O interface 5 and to the central processing unit 2.
      <br/>
      This configuration allows the auxiliary register 17 to be addressed by the central processing unit 2 and by the I/O interface 5.
    </p>
    <p num="26">
      The microcontroller 1 of the present invention furthermore has an incrementation circuit 18 to automatically increment the value of an address contained in the second register 9.
      <br/>
      As indicated above, the information stored in the information element 11 of the first register 8 no longer concerns the data element itself but contains, for a read or write mode, the address of the auxiliary register 17.
    </p>
    <p num="27">
      The use of the circuit of the invention is simpler than that of the prior art.
      <br/>
      In one embodiment, it is enough to drive the incrementation circuit 18 to prompt the incrementation of the location where the data elements are to be read or written.
      <br/>
      Operation of the incrementation circuit 18 may be obtained by a connection to the bus 15.
      <br/>
      Operation of the microcontroller 1 is then as follows.
      <br/>
      For the reading of a location of the memory, there is a succession of commands as described in the following paragraphs.
    </p>
    <p num="28">
      In a first step, the loading of the read instruction code 10 into the first register 8 is performed, and the loading of the address of the auxiliary register 17 into the information element 11 of the first register 8 is performed.
      <br/>
      During the same step, the address "mem-1", i.e., the location of the data memory 4 where the information has to be read, is loaded into the second register 9.
    </p>
    <p num="29">
      During a second step, the read command is sent over the bus 15.
      <br/>
      At the same time, the switch-over command is sent to the switching circuit 12, the incrementation circuit 18 modifies the value of the address stored in the second register 9, and this address becomes "mem." The central processing circuit 2 then performs the read instruction loaded into the instruction code 10 of the first register 8.
      <br/>
      However, the instruction code 10 of this read instruction is different from the instruction code of the read instruction in FIG. 1.
      <br/>
      The difference is that the result read in the data memory 4 should subsequently not be stored in the information element 11 of the first register 8, but in the auxiliary register 17.
      <br/>
      In a third step, the host circuit 6 reads the result in the auxiliary register 17 instead of reading it in the first register 8.
    </p>
    <p num="30">
      For this first read operation, there is no advantage with the circuit of the invention.
      <br/>
      On the contrary, for a following read operation, it is no longer necessary to load either the first register 8 or the second register 9.
      <br/>
      It is sufficient to send the switch-over command or the command for maintaining the relationship over interface 14 between the central processing unit 2 and the set of registers 8 and 9 on the bus 15.
      <br/>
      In other words, in only two steps instead of three steps, the data elements stored in the data memory 4 at the address "mem+1" are available in the auxiliary register 17.
      <br/>
      The duration of the read operation is reduced by 30% for the following locations of the data memory 4.
    </p>
    <p num="31">
      For the write operation, the duration would be the same since it is necessary to record the data to be written in the auxiliary register 17 and initiate the instruction by a command over the bus 15.
      <br/>
      In one embodiment, the command sent by the I/O interface 5 on the bus 15 is eliminated.
      <br/>
      More specifically, the step during which the switch-over command is sent on the bus 15 is eliminated.
      <br/>
      This independent step is replaced by an automatic performance of this step at the end of the reading or writing of the data in the auxiliary register 17.
    </p>
    <p num="32">
      Thus, for the read operation, the instruction code loaded into the instruction code 10 of the first register 8 is still different.
      <br/>
      The central processing unit 2 interprets the instruction code to read data elements in the data memory 4 and write them in the auxiliary register 17.
      <br/>
      The central processing unit 2 monitors the auxiliary register 17 or the I/O interface 5 to detect the point in time at which the host circuit 6 will have read the data available in the auxiliary circuit 17.
      <br/>
      As soon as this read operation is performed, the central processing unit 2 prompts an incrementation by the incrementation circuit 18 of the address in the second register 9, and the instruction code which has remained stored in the instruction code 10 is executed.
    </p>
    <p num="33">
      The monitoring of the reading of the auxiliary register 17 or of the I/O interface 5 is done by the central processing unit 2 through the reading of one of the registers designed for the management of the peripheral of the I/O interface 5 or auxiliary register 17.
      <br/>
      The monitoring by the central processing unit 2 of the reading of the auxiliary register 17 or of the I/O interface 5 at the time of the reading is shown by dashed sections 20 and 21.
      <br/>
      The control of the incrementation of the incrementation circuit 18 is represented by a dashed interface 22.
      <br/>
      The central processing unit 2 therefore can easily prompt the reiteration of the successive read operations and can easily make all the data elements that are read available in the auxiliary register 17.
      <br/>
      For the write operation, it is precisely the same steps that take place, except that the central processing unit 2 now monitors if the host circuit 6 has written a new data element in the auxiliary register 17.
    </p>
    <p num="34">
      To simplify the description, for 100 successive read operations, the circuit of the invention requires 102 interventions by the host circuit 6 over the I/O interface 5 instead of the 300 interventions of the prior art.
      <br/>
      With regards to the write operation, there will be 101 actions instead of the 200 actions in the prior art.
      <br/>
      The increases in speed of exchanges between the host circuit 6 and the central processing unit 2 are therefore highly significant.
    </p>
    <p num="35">
      To end the operation, the central processing unit 2 can be provided with a counter.
      <br/>
      This counter would be precharged as a function of the number of increments of positions in the data memory 4 that have to be considered.
      <br/>
      The counter would be similar to a counter 24 of stacks that takes instructions one after the other from the program memory 3.
      <br/>
      It is also possible to change the instruction code memorized in the instruction code 10 of the first register 8 in such a way that this instruction code no longer provides for the automatic incrementation of the incrementation circuit 18.
      <br/>
      This is done before reading or writing the last data element in the auxiliary register 17.
    </p>
    <p num="36">
      An incrementation circuit 18 external to the central processing unit 2 is shown in FIG. 2.
      <br/>
      However, the function of the incrementation circuit 18 is executed by the central processing unit 2.
      <br/>
      In this way, the incrementation circuit 18 will conventionally perform only one of the operations naturally performed by the central processing unit 2.
      <br/>
      The counting could also be limited by a counting performed by the central processing unit 2 on the number of iterations to be undertaken.
      <br/>
      The number of iterations may be loaded as one of the arguments of the instruction code or of the address "mem" when the operation is begun.
      <br/>
      Alternatively, the host circuit 6 could include a counter 19 for notifying when it is necessary to modify the instruction code loaded into the instruction code 10 of the first register 8 to make the iteration stop.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>That which is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A microcontroller comprising:</claim-text>
      <claim-text>a central processing unit; a memory connected to said central processing unit; an input/output interface; a first exchange register connected to said input/output interface, said first exchange register to contain an instruction code and an information element corresponding to a data element to be read or written; a second exchange register connected to said input/output interface, said second exchange register to contain an address; a switching circuit connected to said input/output interface, to said program memory, to said central processing unit, to said first and second exchange registers, said switching circuit responsive to a control signal provided by said input/output interface for carrying out a switchover of a connection between said central processing unit and said memory to a connection between said central processing unit and said first and second exchange registers; an auxiliary register connected to said input/output interface; an incrementation circuit for automatically incrementing a value of the address in said second exchange register;</claim-text>
      <claim-text>and means for indirect addressing directed towards said auxiliary register, wherein the information element contained in said first register corresponds to an address in said auxiliary register where the data element is to be stored.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A microcontroller according to claim 1, further comprising means to initiate execution of the instruction code for loading into said first register as soon as said input/output interface has read or written the data element in said auxiliary register.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A microcontroller according to claim 1, wherein said memory comprises a program memory.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A microcontroller according to claim 1, wherein said memory comprises a data memory.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A microcontroller according to claim 1, wherein said input/output interface comprises a parallel/serial interface.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A microcontroller according to claim 1, further comprising a counter connected to said memory for counting a number of iterations to be performed.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A microcontroller comprising: a central processing unit; a program memory connected to said central processing unit; a data memory connected to said central processing unit; an input/output interface; a first exchange register connected to said input/output interface, said first exchange register to contain an instruction code and an information element corresponding to a data element to be read or written; a second exchange register connected to said input/output interface, said second exchange register to contain an address corresponding to a location in said data memory where the data element is to be read or written; a switching circuit connected to said input/output interface, to said program memory, to said central processing unit, and to said first and second exchange registers, said switching circuit responsive to a control signal provided by said input/output interface for carrying out a switchover of a connection between said central processing unit and said memory to a connection between said central processing unit and said first and second exchange registers; an auxiliary register connected to said input/output interface and to said data memory; an incrementation circuit for automatically incrementing a value of the address in said second exchange register;</claim-text>
      <claim-text>and means for indirect addressing directed towards said auxiliary register, wherein the information element contained in said first register corresponds to an address in said auxiliary register where the data element is to be stored.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A microcontroller according to claim 7, further comprising means to initiate execution of the instruction code for loading into said first register as soon as said input/output interface has read or written the data element in said auxiliary register.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A microcontroller according to claim 7, wherein said input/output interface comprises a parallel/serial interface.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A microcontroller according to claim 7, further comprising a counter connected to said memory for counting a number of iterations to be performed.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A method for reading/writing in a data memory of a microcontroller from an input/output interface, the method comprising the steps of: loading an instruction code and an information element corresponding to a data element to be read or written into a first register of the microcontroller; loading an address into a second exchange register of the microcontroller; switching over operation of a central processing unit of the microcontroller so that the central processing unit executes the instruction code loaded into the first register; loading the data read or to be written into an auxiliary register connected to the input/output interface; automatically incrementing the address loaded into the second register;</claim-text>
      <claim-text>and executing the instruction code with an indirect addressing directed towards said auxiliary register, wherein the information element contained in said first register corresponds to an address in said auxiliary register where the data element is to be stored.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method according to claim 11, wherein said input/output interface comprises a parallel/serial interface.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A method according to claim 11, wherein the step of switching comprises the step of switching over a connection between the central processing unit and a memory to a connection between the central processing unit and the first and second exchange registers.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A method according to claim 11, wherein the step of switching is activated based upon a control signal provided over the input/output interface.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A method according to claim 11, further comprising the step of counting a number of iterations to be performed.</claim-text>
    </claim>
  </claims>
</questel-patent-document>