<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06189018B1.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as first publication">
      <document-id>
        <country>US</country>
        <doc-number>06189018</doc-number>
        <kind>B1</kind>
        <date>20010213</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6189018</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B1</original-publication-kind>
    <application-reference family-id="25109636" extended-family-id="42060330">
      <document-id>
        <country>US</country>
        <doc-number>09368312</doc-number>
        <kind>A</kind>
        <date>19990803</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09368312</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43098714</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>36831299</doc-number>
        <kind>A</kind>
        <date>19990803</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09368312</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>77722396</doc-number>
        <kind>A</kind>
        <date>19961227</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1996US-08777223</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010213</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/22        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>22</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  17/24        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>24</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>715205000</text>
        <class>715</class>
        <subclass>205000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>715841000</text>
        <class>715</class>
        <subclass>841000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-017/22H</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>22H</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-017/22M</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>22M</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G06F-017/24</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>24</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/2247</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>2247</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/2235</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>2235</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/24</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>24</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>16</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>12</number-of-drawing-sheets>
      <number-of-figures>12</number-of-figures>
      <image-key data-format="questel">US6189018</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus for implementing universal resource locator menus</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BERNSTEIN KEITH, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5204947</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5204947</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>NAKANO YOSHIO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5708787</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5708787</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>BARRETT ROBERT CARL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5727129</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5727129</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>BALA GREGORY PAUL</text>
          <document-id>
            <country>US</country>
            <doc-number>5731814</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5731814</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>DOLAN MICHAEL A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5801702</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5801702</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>ARORA SAMIR, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5845299</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5845299</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>NIELSEN JAKOB</text>
          <document-id>
            <country>US</country>
            <doc-number>5897670</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5897670</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>SCHUMACHER ROBERT M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5933841</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5933841</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>NEWMAN STEVE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5983245</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5983245</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>BERTRAM RANDAL LEE</text>
          <document-id>
            <country>US</country>
            <doc-number>6011546</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6011546</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>GENTNER DONALD R</text>
          <document-id>
            <country>US</country>
            <doc-number>5724595</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5724595</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>HERR-HOYMAN DIRK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5727156</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5727156</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>GIBSON WILLIAM, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5758351</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5758351</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>BURROWS MICHAEL</text>
          <document-id>
            <country>US</country>
            <doc-number>5787435</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5787435</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>LOGAN JAMES, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5802299</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5802299</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>VAN HOFF ARTHUR A</text>
          <document-id>
            <country>US</country>
            <doc-number>5802530</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5802530</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Lemay Laura Lemay's Web Workshop: Microsoft FrontPage 97, Sam.net, 1997, pp. 153-168.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Senna, "Web site authoring software Lots of extras in FrontPage 97", from http://www.infoworld.com/cgi-bin/displayArchives.pl?dt_iwe41-96_80.htm, pp. 1-3, Oct. 7, 1996.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Simpson, Mastering WordPerfect 5.1&amp;5.2 for Windows, SYBEX Inc., 1993, p. 10.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Sharon Terdeman, "Web Authoring," PC Magazine Online, www.PCMAG.COM, Sep. 10, 1996, pp. 116-164.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>77722396</doc-number>
              <kind>A</kind>
              <date>19961227</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5983245</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Apple Computer, Inc.</orgname>
            <address>
              <address-1>Cupertino, CA, US</address-1>
              <city>Cupertino</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>APPLE COMPUTER</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Newman, Steve</name>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Schillace, Sam</name>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Beyer Weaver &amp;Thomas LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Hong, Stephen S.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Disclosed is a method for generating universal resource locator links in a graphical user interface based HTML file.
      <br/>
      The method includes the operations of selecting one of a picture object and text contained within the graphical user interface based HTML file.
      <br/>
      Once one of the picture object and text are selected, a short-cut universal resource locator icon is selected.
      <br/>
      Upon selecting the short-cut universal resource locator icon, a nested menu is displayed.
      <br/>
      Preferably, the nested menu contains a list of most recently used universal resource locators, and a list of open HTML files.
      <br/>
      Next, one of the universal resource locators is selected from the list of most recently used universal resource locators and the open HTML file from the list of open HTML files.
      <br/>
      Once selected, a link is generated from the selected one of the picture object and text contained within the graphical user interface based HTML file to one of the selected universal resource locators from the list of most recently used universal resource locators and the open HTML file.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">This is a divisional application of copending prior Application No. 08/777,223 filed on Dec. 27, 1996, now U.S. Pat. No. 5,983,245, the disclosure of which is incorporated herein by reference.</p>
    <p num="2">
      A portion of the disclosure of this patent document contains material which is subject to copyright protection.
      <br/>
      The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="3">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="4">The present invention relates generally to universal resource locator links, and more particularly, to methods and apparatuses for generating universal resource locator links through a computer graphical user interface linking editor.</p>
    <p num="5">2. Description of the Related Art</p>
    <p num="6">
      Due to the increased popularity of the internet (also known as the world wide web), using the internet has nearly become a necessity for many segments of the population.
      <br/>
      Accordingly, developers of internet computer software have been racing to make their products less complicated and easier to use.
      <br/>
      By way of example, many new internet products implement easy-to-use graphical user interfaces that simplify a user's task of navigating around networks like the world wide web and local area networks (LANs).
      <br/>
      In response to the internet's increased popularity, a larger number of individuals and businesses now have "web sites" posted on internet servers.
      <br/>
      As is well known in the art, internet servers are large scale computers connected to the world wide web and regularly maintained by service providers.
    </p>
    <p num="7">
      While establishing an internet presence for many businesses was important, most business typically contracted with experts to create their web sites and maintain them.
      <br/>
      Experts were generally used because most internet users did not understand, nor had the time to learn HTML programming.
      <br/>
      As is well known, HTML is a programming language that is generally used to create web sites that have text, graphics and pictures.
      <br/>
      Thus, to program in HTML, a person would need to understand numerous special codes and characters used for illustrating text, graphics, tables, pictures, and links within a web site file.
    </p>
    <p num="8">
      To meet consumer demand, many software developers introduced software packages that allowed people having little or no knowledge of HTML programming to create web sites.
      <br/>
      These packages generally implement graphical user interfaces that allowed users to type in text, create graphics and create links without generating the HTML code from scratch.
      <br/>
      Therefore, these packages implement software algorithms for converting the graphical user interface commands into appropriate HTML code.
      <br/>
      Of course, the HTML code was still being generated by the software algorithms without the knowledge of the user.
    </p>
    <p num="9">
      FIG. 1 is an exemplary block diagram of a web site having a number of related files that make up a web site.
      <br/>
      As shown, there is a "Home Web Site Page" which may be the initial page in a web site.
      <br/>
      Further, as is well known in the art, the various HTML files may be linked to one another through the use of universal resource locator (URL) links.
      <br/>
      In addition to linking to a particular file in general, users may also link to selected portions of an HTML file by linking to an "anchor," that was previously defined within the HTML file.
      <br/>
      By way of example, file2.html, file3.html and file6.html all have previously defined anchors that may be used by any of the web site files (or internet files) to quickly reference specific parts of an HTML file containing anchors.
      <br/>
      In this example, file1.html is shown being linked to anchors A, B, C and D, and all other files in the web site are shown linked back to file1.html, which is the Home Web Site Page.
    </p>
    <p num="10">
      Although having links between files and anchors is an efficient way to interconnect web site files and anchors, most well known web site creating packages make generating links laborious and clumsy.
      <br/>
      By way of example, each time a link is needed, users are generally required to call up a modal dialog from a menu bar (e.g., typically includes a list of functional pull-down menus) which subsequently displays to user a multiplicity of selection options.
      <br/>
      In some cases, the selection options are so complex that a user is required to perform numerous mechanical mouse clicks before a single link is created.
      <br/>
      As can be appreciated, the task of creating links for an entire web site can be very time consuming and confusing.
      <br/>
      In addition, due to the nature of modal dialogs, the user is generally required to complete the entire link configuration before the user is allowed to continue working on the web site files.
    </p>
    <p num="11">
      Another time consuming task is the typing in of URL's.
      <br/>
      As is well known to those skilled in web site building, many of the URL's used during the creation of a web site are quite long.
      <br/>
      In some cases, URL's may be a paragraph long.
      <br/>
      Certainly, the task of constantly re-typing the same URL for different locations of a file, or to link a web site's files together can be a very daunting and time consuming task.
      <br/>
      As an example, FIG. 1 shows all of the files in the web site having a link (i.e., Go Home) that takes a user that is navigating in each in the web site files back to the Home Web Site Page.
      <br/>
      Consequently, the web site creator is generally required to create a link at the bottom of each file using a conventional modal dialog, which unfortunately requires the user to constantly call up the modal dialog from the menu bar and re-type the identical URL.
    </p>
    <p num="12">In view of the foregoing, there is a needed for improved methods and apparatuses for generating universal resource locator links through a computer graphical user interface.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="13">
      Broadly speaking, the present invention provides methods and apparatuses for efficiently generating universal resource locator links through a graphical user interface.
      <br/>
      It should be appreciated that the present invention can be implemented in numerous ways, including as a process, an apparatus, a system, a device, a method, or a computer readable medium.
      <br/>
      Several inventive embodiments of the present invention are described below.
    </p>
    <p num="14">
      In one embodiment, a method for generating universal resource locator links in a graphical user interface based HTML file is disclosed.
      <br/>
      The method includes the operations of selecting one of a picture object and text contained within the graphical user interface based HTML file.
      <br/>
      Once one of the picture object and text are selected, a short-cut universal resource locator icon is selected.
      <br/>
      Upon selecting the short-cut universal resource locator icon, a nested menu is displayed.
      <br/>
      Preferably, the nested menu contains a list of most recently used universal resource locators, and a list of open HTML files.
      <br/>
      The list of most recently used universal resource locators includes at least one universal resource locator, and the list of open HTML files that include at least one HTML file.
      <br/>
      Next, one of the universal resource locators is selected from the list of most recently used universal resource locators and the open HTML file from the list of open HTML files.
      <br/>
      Once selected, a link is generated from the selected one of the picture object and text contained within the graphical user interface based HTML file to one of the selected universal resource locators from the list of most recently used universal resource locators and the open HTML file from the list of open HTML files.
    </p>
    <p num="15">
      In another embodiment, a method for generating a cascaded graphical user interface menu is disclosed.
      <br/>
      The cascaded graphical user interface menu is preferably used for creating universal resource locator links.
      <br/>
      The method includes retrieving a list of most recently used universal resource locators from memory.
      <br/>
      Then, retrieving a list of active HTML files from memory.
      <br/>
      Next, a first menu data structure is created and entries are added to the first menu data structure for each universal resource locator in the list of most recently used universal resource locators.
      <br/>
      The method further adds entries to the first menu data structure for any open HTML files, and then displays the cascaded graphical user interface menu that is partitioned into a first portion and a second portion.
    </p>
    <p num="16">Other aspects and advantages of the invention will become apparent from the following detailed description, taken in conjunction with the accompanying drawings, illustrating by way of example the principles of the invention.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      The present invention will be readily understood by the following detailed description in conjunction with the accompanying drawings, wherein like reference numerals designate like structural elements, and in which:
      <br/>
      FIG. 1 is an exemplary block diagram of a web side having a number of related files.
      <br/>
      FIG. 2A is a flowchart diagram illustrating the method operations associated with generating a universal resource locator link in accordance with one embodiment of the present invention.
      <br/>
      FIG. 2B is a more detailed flowchart diagram illustrating the operations associated with generating a link from a selected picture or text to a selected URL in accordance with one embodiment of the present invention.
      <br/>
      FIG. 2C is a more detailed flowchart diagram illustrating the operations associated with selecting a URL link from a cascaded menu in accordance with one embodiment of the present invention.
      <br/>
      FIG. 2D is a more detailed flowchart diagram of the operations carried out by a computer in accordance with one embodiment of the present invention.
      <br/>
      FIG. 3 is an exemplary screen shot of an HTML file in accordance with one embodiment of the present invention.
      <br/>
      FIG. 4 is another exemplary screen shot of an HTML file that may be part of ABC Company's web site in accordance with one embodiment of the present invention.
      <br/>
      FIG. 5 is an exemplary screen shot a floating anchor window shown in accordance with one embodiment of the present invention.
      <br/>
      FIG. 6 is a graphical user interface illustration of a floating link editor containing a short-cut URL pop-up button in accordance with one embodiment of the present invention.
      <br/>
      FIG. 7 is another graphical user interface illustration of a floating link editor in accordance with one embodiment of the present invention.
      <br/>
      FIG. 8 shows an HTML file displayed in edit html source code mode in accordance with one embodiment of the present invention.
      <br/>
      FIG. 9 is a block diagram of an exemplary computer system for carrying out the processing according to the invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="18">
      An invention is described for efficiently generating universal resource locator links through a graphical user interface.
      <br/>
      In one embodiment, the graphical user interface utilized to generate the universal resource locator links is a floating link editor.
    </p>
    <p num="19">
      In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention.
      <br/>
      It will be obvious, however, to one skilled in the art, that the present invention may be practiced without some or all of these specific details.
      <br/>
      In other instances, well known process operations have not been described in detail in order not to unnecessarily obscure the present invention.
    </p>
    <p num="20">
      The present invention discloses methods and apparatuses for generating universal resource locator links in a web site file by implementing a smart graphical user interface linking editor.
      <br/>
      In one embodiment, the smart graphical user interface linking editor is a floating link editor that remains active while web site files are being created.
      <br/>
      By way of example, the floating link editor preferably has a short-cut URL pop-up button (i.e., a functional icon) that, once selected, displays a cascaded menu.
      <br/>
      The cascaded menu is preferably divided into a first and second part.
      <br/>
      In the first part, a list of most recently used URL's is automatically maintained and updated while the user is editing a web site.
      <br/>
      The second part of the cascaded menu has a list of all of the web site files that are currently open.
      <br/>
      That is, "open files" means html files that are being created for use with one or more web sites.
    </p>
    <p num="21">
      Advantageously, having a list of the most recently used URLs and a list of the open web site files, the present invention makes creating links very efficient.
      <br/>
      As an example, once the floating link editor is open, the user may create a link from text in one file to any of the currently open files by performing a single mouse click.
      <br/>
      In a further embodiment, a user may also link to a particular anchor defined within one of the open files identified in the second part of the cascaded menu.
      <br/>
      Preferably, if an open file contains anchors, the anchors within that file will be displayed as a nested menu that may also be efficiently selected with one mouse click of the short-cut URL pop-up button.
    </p>
    <p num="22">
      FIG. 2A is an overview flowchart diagram illustrating the method operations associated with selecting a link editor, implementing a short-cut URL pop-up button, and generating a universal resource locator link in accordance with one embodiment of the present invention.
      <br/>
      The method starts at an operation 50 where a picture or text is selected in order to create a link from a selected picture or text to a particular URL or open file.
      <br/>
      By way of example, in a typical web site file (i.e., web page), there may be a variety of different types of graphics and text characters distributed throughout a page.
      <br/>
      In order to create a link between one of the pictures or text characters on the web site file, a user must first select one of the various pictures or text to serve as a jump site.
      <br/>
      As is well know in the art, when text serves as a jump site, it is typically displayed with an underline, and in some cases, the text is colored blue.
    </p>
    <p num="23">
      Accordingly, once a picture or text has been selected to create a link in operation 50, the method proceeds to an operation 52 where a link from a floating link editor is selected by accessing a short-cut URL pop-up button.
      <br/>
      As described above, once the short-cut URL pop-up button is selected from the floating link editor, a cascaded menu is present to the user.
      <br/>
      After a link is selected from the cascaded menu, the previously selected picture or text will be automatically linked to the selected link (i.e., the URL will automatically be created).
      <br/>
      As will be described in greater detail below, the short-cut URL address pop-up button contained within the floating link editor provides a very efficient manner for creating URL addresses without having to manually type in the URL each time it is needed.
    </p>
    <p num="24">
      As is well known in the art, floating-type windows allow users to access functional icons while advantageously allowing a user to continue working on the various files of a web site.
      <br/>
      This flexibility is especially useful to users that create numerous links within a local web site and to lengthy internet URL links.
      <br/>
      In addition, the cascaded menu provided by selecting the short-cut URL pop-up button further reduces the laborious task of re-typing URLs that are lengthy and frequently used.
      <br/>
      This is because the list of frequently used URLs that lie within a first portion of the cascaded menu is constantly and automatically being updated each time a new URL is implemented in the web site.
    </p>
    <p num="25">
      Once a link has been selected using the shortcut menu in operation 52, the method proceeds to a operation 54 where a URL link is generated from the selected picture or text to the link selected in the cascaded menu provided by the short-cut URL pop-up button of operation 52.
      <br/>
      The method operations associated with generating a URL link are preferably carried out by a computer as described in grater detail in FIG. 2D below.
      <br/>
      Once the URL link is generated in operation 54, the method is done.
    </p>
    <p num="26">
      FIG. 2B is a more detailed flowchart diagram illustrating the operations associated with generating a link from a selected picture or text to a selected URL in accordance with one embodiment of the present invention.
      <br/>
      The method starts at an operation 100 where a link editor is selected from a menu bar which is typically provided at a topmost region of a computer screen.
      <br/>
      By way of example, the link editor will preferably be located in a pull-down menu entitled "window".
      <br/>
      Once pull-down menu window is activated, the user may select an option entitled "show link editor." Once the show link editor option is selected, a floating link editor is displayed to the user.
      <br/>
      As is well known in the art, floating windows are also referred to as "palettes" which generally remain open and active while the user performs edits to an HTML file.
      <br/>
      Of course, any other suitable way for accessing the floating link editor may also be implemented.
      <br/>
      Suitable alternatives may include using an functional icon that calls up the floating link editor or a short cut key-stroke.
    </p>
    <p num="27">
      After the link editor has been selected and a floating link editor is displayed in operation 100, the method proceeds to an operation 102 where an HTML file is selected for editing.
      <br/>
      By way of example, an HTML file may be "file 1.html" which is, in the exemplary web site of FIG. 1, the Home Web Site Page.
      <br/>
      Once an HTML file has been selected for editing in operation 102, the method proceeds to a decision operation 104 where it is determined whether there is a picture or text in the HTML file selected in operation 102.
      <br/>
      It should be understood that a picture may be a graphical box, a scanned in photograph, or any type of image or graphic that may be created using a graphics software package or other suitable software package.
    </p>
    <p num="28">
      If it is determined in operation 104 that there are no pictures nor text in the HTML file, the method will proceed to an operation 106 where a user may input a picture or text into the HTML file using suitable text editing and graphics tools.
      <br/>
      In one embodiment, the text editing and graphics tools may be provided as part of an HTML web page creation program.
      <br/>
      However, graphics created using other software products may also be incorporated into an HTML file (e.g., by drag-and-drop, and cut/copy-and-paste).
      <br/>
      Once the user has input a picture or text into the HTML file selected in operation 102, the method will proceed to an operation 108 where the picture or text contained within the HTML file is identified to create a link.
    </p>
    <p num="29">
      On the other hand, if it is determined in operation 104 that there already is a picture or text in the HTML file selected in operation 102, the method would also proceed to operation 108 where the picture or text contained within the HTML file is identified to create a link.
      <br/>
      After the picture or text is identified in operation 108, the method will proceed to an operation 110 where the identified picture or text is selected.
      <br/>
      In one embodiment, selection may be appropriately performed by clicking on a mouse once a GUI selection pointer has been placed over the identified picture or text as described above.
      <br/>
      Of course, other selection methods may also be used.
      <br/>
      By way of example, the user may implement a touch screen pen or simply use a computer keyboard to perform an appropriate selection.
      <br/>
      At this point, the operation of selecting a picture or text to create a link is complete, and the method proceeds to an operation 112 of FIG. 2C.
    </p>
    <p num="30">
      FIG. 2C is a more detailed flowchart illustrating the operations associated with selecting a URL link from a cascaded menu provided from a short-cut URL pop-up button in accordance with one embodiment of the present invention.
      <br/>
      In operation 112, a user may select a URL shortcut pop-up button in accordance with one embodiment of the present invention.
      <br/>
      Preferably, the URL shortcut pop-up button will be illustrated as a graphical user interface selection icon on a floating link editor as described above.
      <br/>
      Once the shortcut pop-up button has been selected, a cascaded menu will preferably be displayed in a nested format for the user's selection.
    </p>
    <p num="31">
      By way of example, the user will preferably be presented with an option of selecting a URL from a list of most recently used URLs, or a file from a list of open HTML files that may be associated with a current web site.
      <br/>
      As described with reference to FIG. 1, a web site may include one or more related HTML files that may be open while a web site is being created and edited.
      <br/>
      Further, the various HTML files may be linked together, e.g., from underlined text characters in a current HTML file to the "top of a page" of another selected HTML file.
      <br/>
      Of course, if a selected HTML file has a previously defined anchor, a user may also choose to link to a specific anchor within a selected HTML file.
    </p>
    <p num="32">
      Once the shortcut URL pop-up button has been selected in operation 112, the method will proceed to a decision operation 120 where it is determined whether a most recent URL link is selected from the list of most recently used URLs.
      <br/>
      If it is determined that the user does not select a most recently used URL link from the URL list, the method will proceed to an operation 114 where a file from the list of active HTML files is selected.
      <br/>
      As described above, an active HTML file will preferably be an HTML file that is currently open and a user is able to edit and create text, pictures and links.
    </p>
    <p num="33">
      After an active HTML file is selected in operation 114, the method will proceed to a decision operation 116 where it is determined whether the selected file contains anchors.
      <br/>
      As described above, an anchor is typically used for linking to selected portions within an HTML file.
      <br/>
      In one embodiment, an anchor may also be used within the same HTML file to link a user from one part of a lengthy file to another.
    </p>
    <p num="34">
      If the HTML file selected in operation 114 does contain anchors, the method will proceed from operation 116 to an operation 118 where an anchor may be selected within the HTML file.
      <br/>
      On the other hand, if the file does not contain anchors, the method will proceed directly to an operation 124 where a program automatically creates a link to a selected URL associated with the selected HTML file back to the selected picture or text identified in operation 108.
      <br/>
      It should be appreciate that the program itself creates the URL address itself, e.g., without having to manually type it in.
    </p>
    <p num="35">
      Referring back to operation 120, if the user does use a most recent URL from the URL list, the method will proceed to an operation 122.
      <br/>
      In operation 122, a user may select a URL from the most recently used URL list.
      <br/>
      In one embodiment, the most recent URL list preferably contains 10 most recent URLs.
      <br/>
      However, it should be obvious that any suitable number of URLs may be used depending on a user's requirements.
      <br/>
      Once a URL is selected from the most recent URL list in operation 122, the method will then proceed to operation 124 where the program again establishes a link from the URL selected from the most recent URL list to the selected picture or text identified in operation 108.
    </p>
    <p num="36">
      FIG. 2D is a more detailed flowchart diagram of the operations carried out by a computer in operation 112 of FIG. 2B to generate a cascaded menu from a floating link editor in accordance with one embodiment of the present invention.
      <br/>
      The method begins at an operation 200 where a list of the most recently used URLs are retrieved from memory.
      <br/>
      In one embodiment, memory may be suitable random access memory (RAM).
      <br/>
      Once the list of most recently used URLs have been retrieved from memory, the method will proceed to an operation 202.
      <br/>
      In operation 202, a list of active HTML files are retrieved from memory in a suitable manner as described with reference to operation 200.
    </p>
    <p num="37">
      The method now proceeds to an operation 204 where a first menu data structure is created.
      <br/>
      After the first menu data structure is created, the method proceeds to an operation 206 where, for each entry in the retrieved list of most recently used URLs, an entry in the first menu data structure is added.
      <br/>
      Once the first menu data structure contains, as entries, the list of most recently used URLs, the method will proceed to a decision operation 208 where it is determined whether there are anymore HTML files to process.
    </p>
    <p num="38">
      If it is determined that there are more HTML files to process, the method will proceed to another decision operation 212 where it is determined whether a current HTML file contains anchors.
      <br/>
      If it is determined that the current file does not contain anchors, the method will proceed to an operation 220 where an entry representing the current HTML file is added to the first menu data structure.
      <br/>
      One the other hand, if it is determined in operation 212 that the current HTML file does anchors, the method will proceed to an operation 214 where a second menu data structure is created.
    </p>
    <p num="39">
      In one embodiment, the second menu data structure will be a subordinate data structure to the first menu data structure which, may be displayed within a cascaded menu as described above.
      <br/>
      After the second menu data structure is created in operation 214, the method proceeds to an operation 216 where an item representing the current HTML file is added to the second menu data structure.
      <br/>
      By way of example, the item representing the current HTML file will preferably be a designation to the "top of page" of the current HTML file as will be illustrated in FIG. 6.
    </p>
    <p num="40">
      The method now proceeds to an operation 218 where for each anchor contained within the current HTML file, an entry is added to the second menu data structure.
      <br/>
      Once an entry has been added to the second menu data structure for each anchor in operation 218, the method will again proceed to decision operation 208 where it is again determined whether there are anymore HTML files to process.
      <br/>
      If there are more HTML files to process, the method will continue to loop through operations 212, 214, 216, 218, 220, and again back to operation 208 for each HTML file that is open in a particular web site.
      <br/>
      By way of example, if the web site included the open HTML files shown in FIG. 1, the process would proceed through the aforementioned loop for each of the open HTML files.
      <br/>
      Of course, because file1.html, file4.html, file5.html, and fileN.html are shown having no anchors, the method would preferably not loop through operations 214, 216 and 218.
    </p>
    <p num="41">
      Once it is determined that there are no more open HTML files to process in operation 208, the method will proceed to an operation 210 where a cascaded nested menu is displayed to the user.
      <br/>
      As is well known in the art, displaying the menu in a cascaded nested format is a general operating system function which incorporates the first and second menu data structures as part of the displayed cascaded nested menus.
      <br/>
      At this point, the method proceeds to operation 124 of FIG. 2B where the program creates a link from one of a selected most recent URL, or open HTML file that may have an associated anchor, to a previously selected picture or text.
    </p>
    <p num="42">
      FIG. 3 is an exemplary screen shot of a file 2.html 300 in accordance with one embodiment of the present invention.
      <br/>
      In this example, file 2.html 300 may represent the home page of ABC Company's web site.
      <br/>
      As shown, ABC Company has an address of "123 First Street, Newtown, Calif. 91234," which is designated as their main office.
      <br/>
      Further, ABC Company has generated links from their home page to other HTML files in their web site.
      <br/>
      By way of example, ABC company has created jump sites (e.g., links) at "products in stock" 320, special order products 322, and other offices 324.
      <br/>
      In this manner, if a user selects that particular text, a link will be activated to another location.
      <br/>
      Although the jump sites are illustrated as underlined text, jump sites may also be made from pictures and graphics as described above.
    </p>
    <p num="43">
      As clearly illustrated, file 2.html 300 also contains a variety of suitable editing tools 301 that may be used to create and edit various portions of ABC Company's home page.
      <br/>
      By way of example, a button icon 302 represents an "edit page mode" which may be selected when portions of ABC Company's home page are being created, edited, updated or revised.
    </p>
    <p num="44">
      A "preview page mode" button icon 304 is also provided to preview an HTML file as well as the functional links generated in accordance with one embodiment of the present invention.
      <br/>
      An "edit html source code" button icon 306 is also provided to allow a user to view and edit the HTML code parameters.
      <br/>
      By way of example, if the user understands HTML code, the edit html source code button icon 306 will advantageously allow the user to add or modify features of an HTML file.
      <br/>
      An exemplary HTML source code file for file2.html 300 is shown in FIG. 8 below.
    </p>
    <p num="45">
      A "preview browser mode" button icon 308 is a functional feature that allows a user to preview their newly created web page or site over the internet.
      <br/>
      By way of example, if the newly created web page has links to the world wide web, these links may be previewed to determine whether they are appropriately set.
      <br/>
      A "link editor" icon button 312 is shown as a graphical user interface button icon, which may be selected to quickly display the aforementioned floating link editor in accordance with one embodiment of the present invention.
      <br/>
      Of course, the floating link editor may also be called-up from the menu bar/pull down menu as described above.
      <br/>
      Finally, an "anchor creation mode" icon button 316 may be used to set and define anchors within an HTML file.
      <br/>
      By way of example, once a text or picture has been selected, the user may then select icon button 316 to define the selected text or picture as an anchor.
    </p>
    <p num="46">
      FIG. 4 is another exemplary screen shot of an HTML file that may be part of ABC Company's web site in accordance with one embodiment of the present invention.
      <br/>
      As shown, file 1.html.350 is divided into three sections that contain previously defined anchors 352, 354, and 356.
      <br/>
      As well known to those skilled in the art, anchors are used so that links may be established to predefined sections within an HTML file such as those shown in file 1.html 350.
    </p>
    <p num="47">
      In this example, Section 1 has ABC Company's "In Stock Product List" 358 that contains a list of widget -1, widget -2, and widget -3.
      <br/>
      Also shown is Section 2 that has ABC Company's "Special Order Product List" 360 that contains a list of widget -4, widget -5, and widget -6.
      <br/>
      And finally, Section 3 has ABC Company's "Other Offices" and the corresponding address 362.
      <br/>
      As illustrated, Section 1, Section 2 and Section 3 have all been defined as anchors.
    </p>
    <p num="48">
      In one embodiment, anchor 352 may be created using icon button 316.
      <br/>
      Preferably, the word "Section 1" is first highlighted to designate it as selected, and then icon button 316 is selected with a simple mouse click or any other suitable selection means.
      <br/>
      Of course, anchors may also be set using a suitable pull-down menu from a menu bar.
    </p>
    <p num="49">
      As shown in FIG. 5, to verify that an anchor was indeed defined for Section 1, the downward pointing arrow which designates an anchor may be selected by, e.g., a double click.
      <br/>
      As shown, a floating window 352' labeled "Anchor" is displayed.
      <br/>
      Floating window 352' has the name of the created anchor as "Section 1," which verifies that an anchor was actually defined for Section 1.
      <br/>
      In this embodiment, floating window 352' also contains a reminder that informs the user that when using an anchor name in a URL, a "-" should be used as part of the name, however, it should not be entered at this field location.
    </p>
    <p num="50">
      FIG. 6 is a graphical user interface illustration of a floating link editor 380 containing a short-cut URL pop-up button 381 in accordance with one embodiment of the present invention.
      <br/>
      As shown, floating link editor 380 contains a field 382 for manually typing in a desired URL address for a selected picture or text.
      <br/>
      By way of example, once a user selects a particular "text" such as "Products In Stock" 320 of FIG. 3, the user may then select link editor 312 from tool bars 301.
      <br/>
      Alternatively, the user may select "show link editor" from a "window" menu bar pull-down menu.
      <br/>
      Once the link editor is appropriately selected, floating link editor 380 will be displayed as shown in FIG. 6.
    </p>
    <p num="51">
      Thus, once "Products In Stock" 320 has been selected and floating link editor 380 has been displayed, the user may select floating link editor 380 with Examples 384 that provide a user with a "look-up reference list" for manually typing in URLs in field 382, or may select "Hide Examples" 384' to display a floating link editor 380' without examples 384.
      <br/>
      However, it should be understood that the functionality of floating link editor 380 and 380' are identical in nature.
    </p>
    <p num="52">
      Once "Products In Stock" 320 has been selected as described above, the user may select, with a selection pointer 393, short-cut URL icon button 381 by holding down the selection mouse clicker and navigating (i.e., sliding the mouse/pointer) through the various choices presented in a cascaded nested menu.
      <br/>
      By way of example, the user may select a URL link from a most recently used URLs section 386, or may select a link to an open files section 388.
      <br/>
      As described above, the list of open files may represent the active open files of FIG. 1 which correspond to a particular web site.
    </p>
    <p num="53">
      As described above, if the user wants to create a link to a selected anchor within an open file shown in open files section 388, the user may simply slide selection pointer 393 from short-cut URL icon button 381 down to an anchor defined within a selected open file.
      <br/>
      By way of example, the user may simply slide selection pointer 393 along a path 394 to select file 1.html and then select -Section 1 within an anchor list 392.
      <br/>
      In an other embodiment, because file1.html contains anchors, the user is preferably required to select either "top of page" 390 or an anchor from anchor list 392.
      <br/>
      On the other hand, if the open file selected from open files section 388 does not contain anchors, the nested window containing top of page 390 and anchor list 392 would preferably not be displayed.
    </p>
    <p num="54">
      Advantageously, creating links using floating link editor and short-cut URL icon button 381 is very efficient.
      <br/>
      As an example, once floating link editor is displayed, the user may effortlessly create links with one simple mouse click.
      <br/>
      Further, if the user frequently implements the same few URLs, the most recently used URLs section 386 provides an efficient manner for rapidly selecting a URL without having to manually type it in.
    </p>
    <p num="55">To illustrate the smart functionality of the most recently used URLs section 386, the status of the list before a selection is made following the exemplary path 394 is:</p>
    <p num="56">
      --
      <br/>
      --        file%201.html-Section3
      <br/>
      --        file%201.html-Section2
      <br/>
      --        file%201.html-Section1
      <br/>
      --        file%205.html
      <br/>
      --        file%20N.html
      <br/>
      --        http://www.claris.com/products/clarispage20/claris20.html
    </p>
    <p num="57">
      Once the exemplary link is created by following path 394, the status of most recently used URLs section 386 will change.
      <br/>
      Preferably, the most recently used URL, which in this case is the newly created URL will now be "the most recently used" URL.
      <br/>
      Accordingly, the newly created URL will be displayed at the "top" of the list, and all other URLs will be shifted down as shown below:
    </p>
    <p num="58">
      --
      <br/>
      --        file%201.html-Section1
      <br/>
      --        file%201.html-Section3
      <br/>
      --        file%201.html-Section2
      <br/>
      --        file%205.html
      <br/>
      --        file%20N.html
      <br/>
      --        http://www.claris.com/products/clarispage20/claris20.html
    </p>
    <p num="59">
      In the above example, the URL to Section 1 of file 1 was one that already existed, and therefore, it was shifted up to the top of the list from its previous placement in the list.
      <br/>
      However, if an entirely new URL was selected or created, an additional URL would be listed in the most recently used URL list 386 (i.e., at the top).
      <br/>
      As described above, a preferable number of URLs may be 10.
      <br/>
      Accordingly, if the list already included 10 and a brand new URL was created for the web site (or the open files), the oldest URL in the list would be discarded and the new URL would be displayed at the top of the list.
    </p>
    <p num="60">
      Another advantageous feature of this invention is that very long URLs that may be used throughout a web site need not be manually typed-in over and over again.
      <br/>
      By way of example, when a very long URL to the world wide web (e.g., http://www.claris.com/products/clarispage20/claris20.html) is frequently used, the user does not have to laboriously re-type or locate the URL in order to "copy/cut and paste" it into field 382 of floating link editor.
      <br/>
      In addition, once floating link editor has been selected and displayed on the screen, the user may access its advantageous functionalities during the entire web site creation, editing or updating session.
    </p>
    <p num="61">
      FIG. 7 is a graphical illustration of a floating link editor 380' containing a URL in accordance with one embodiment of the present invention.
      <br/>
      As shown, while floating link editor 380' is actively displayed on the screen, selection pointer 393 is used to double click on "Products In Stock" 320 while file2.html 300 is in edit page mode 302.
      <br/>
      After Products In Stock 320 is selected, the URL 396 previously created (i.e., using floating link editor as shown in FIG. 6) for "text" Products In Stock 320 is automatically displayed in field 382.
      <br/>
      Thus, the user may efficiently verify that the appropriate URL 396 was indeed created for the selected text.
      <br/>
      Although the illustrations above have concentrated on creating links from text, all of the above examples are equally applicable to creating links from pictures, graphics and any other objection on an HTML file.
    </p>
    <p num="62">
      FIG. 8 shows file2.html 300 once edit html source code button icon 306 is selected in accordance with one embodiment of the present invention.
      <br/>
      As shown, once the appropriate links are created using floating link editor 380, HTML source code 397 may be used to designate where links are allowed with file2.html 300. By way of example, the HTML link to Products In Stock 320 is shown as "&lt;LI&gt;&lt;A HREF=file%201.html-Section1"&gt;Products In Stock&lt;/A&gt;." Although most beginning users may not actually edit the HTML source code, making the HTML source code easily accessible from the graphical user interface of file2.html 300 allows users experienced in HTML programming to freely modify or introduce new source code in the future.
    </p>
    <p num="63">
      The invention employs various computer-implemented operations involving data stored in computer systems.
      <br/>
      These operations are those requiring physical manipulation of physical quantities.
      <br/>
      Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated.
      <br/>
      Further, the manipulations performed are often referred to in terms, such as producing, identifying, determining, or comparing.
    </p>
    <p num="64">
      Any of the operations described herein that form part of the invention are useful machine operations.
      <br/>
      The invention also relates to a device or an apparatus for performing these operations.
      <br/>
      The apparatus may be specially constructed for the required purposes, or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer.
      <br/>
      In particular, various general purpose machines may be used with computer programs written in accordance with the teachings herein, or it may be more convenient to construct a more specialized apparatus to perform the required operations.
      <br/>
      An exemplary structure for the invention is described below.
    </p>
    <p num="65">
      FIG. 9 is a block diagram of an exemplary computer system 400 for carrying out the processing according to the invention.
      <br/>
      The computer system 400 includes a digital computer 402, a display screen (or monitor) 404, a printer 406, a floppy disk drive 408, a hard disk drive 410, a network interface 412, and a keyboard 414.
      <br/>
      The digital computer 402 includes a microprocessor 416, a memory bus 418, random access memory (RAM) 420, read only memory (ROM) 422, a peripheral bus 424, and a keyboard controller 426.
      <br/>
      The digital computer 400 can be a personal computer (such as an IBM compatible personal computer, a Macintosh computer or Macintosh compatible computer), a workstation computer (such as a Sun Microsystems or Hewlett-Packard workstation), or some other type of computer.
    </p>
    <p num="66">
      The microprocessor 416 is a general purpose digital processor which controls the operation of the computer system 400.
      <br/>
      The microprocessor 416 can be a single-chip processor or can be implemented with multiple components.
      <br/>
      Using instructions retrieved from memory, the microprocessor 416 controls the reception and manipulation of input data and the output and display of data on output devices.
      <br/>
      According to the invention, a particular function of microprocessor 416 is to assist in the processing the URL links, the floating link editor, and the menu data structures that form part of the cascaded nested menus.
    </p>
    <p num="67">
      The memory bus 418 is used by the microprocessor 416 to access the RAM 420 and the ROM 422.
      <br/>
      The RAM 420 is used by the microprocessor 416 as a general storage area and as scratch-pad memory, and can also be used to store input data and processed data.
      <br/>
      The ROM 422 can be used to store instructions or program code followed by the microprocessor 416 as well as other data.
    </p>
    <p num="68">
      The peripheral bus 424 is used to access the input, output, and storage devices used by the digital computer 402.
      <br/>
      In the described embodiment, these devices include the display screen 404, the printer device 406, the floppy disk drive 408, the hard disk drive 410, and the network interface 412.
      <br/>
      The keyboard controller 426 is used to receive input from keyboard 414 and send decoded symbols for each pressed key to microprocessor 416 over bus 428.
    </p>
    <p num="69">
      The display screen 404 is an output device that displays images of data provided by the microprocessor 416 via the peripheral bus 424 or provided by other components in the computer system 400.
      <br/>
      The printer device 406 when operating as a printer provides an image on a sheet of paper or a similar surface.
      <br/>
      Other output devices such as a plotter, typesetter, etc. can be used in place of, or in addition to, the printer device 406.
    </p>
    <p num="70">
      The floppy disk drive 408 and the hard disk drive 410 can be used to store various types of data.
      <br/>
      The floppy disk drive 408 facilitates transporting such data to other computer systems, and hard disk drive 410 permits fast access to large amounts of stored data.
    </p>
    <p num="71">
      The microprocessor 416 together with an operating system operate to execute computer code and produce and use data.
      <br/>
      The computer code and data may reside on the RAM 420, the ROM 422, or the hard disk drive 420.
      <br/>
      The computer code and data could also reside on a removable program medium and loaded or installed onto the computer system 400 when needed.
      <br/>
      Removable program mediums include, for example, CD-ROM, PC-CARD, floppy disk and magnetic tape.
    </p>
    <p num="72">
      The network interface 412 is used to send and receive data over a network connected to other computer systems.
      <br/>
      An interface card or similar device and appropriate software implemented by the microprocessor 416 can be used to connect the computer system 400 to an existing network and transfer data according to standard protocols.
    </p>
    <p num="73">
      The keyboard 414 is used by a user to input commands and other instructions to the computer system 400.
      <br/>
      Other types of user input devices can also be used in conjunction with the present invention.
      <br/>
      For example, pointing devices such as a computer mouse, a track ball, a stylus, or a tablet can be used to manipulate a pointer on a screen of a general-purpose computer.
    </p>
    <p num="74">
      The invention can also be embodied as computer readable code on a computer readable medium.
      <br/>
      The computer readable medium is any data storage device that can store data which can be thereafter be read by a computer system.
      <br/>
      Examples of the computer readable medium include read-only memory, random-access memory, CD-ROMs, magnetic tape, optical data storage devices.
      <br/>
      The computer readable medium can also be distributed over a network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion.
    </p>
    <p num="75">
      Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims.
      <br/>
      Further, the HTML files may be stored and retrieved from any suitable storage medium.
      <br/>
      By way of example, such storage mediums may include a disk drive, a hard drive, a floppy disk, a server computer, a remotely networked computer, etc.
      <br/>
      Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for generating a cascaded graphical user interface menu in a webpage authoring environment, the cascaded graphical user interface menu being used for creating universal resource locator links within webpages, the method comprising:</claim-text>
      <claim-text>retrieving a list of most recently used universal resource locators from memory, the list of most recently used universal resource locators being previously used for creating universal resource locator links within webpages; retrieving a list of open webpage files from memory; creating a first menu data structure; adding entries to the first menu data structure for each universal resource locator in the list of most recently used universal resource locators; adding entries to the first menu data structure for any open webpage files;</claim-text>
      <claim-text>and displaying the cascaded graphical user interface menu formed in accordance with the first menu data structure, thereby facilitating creation of subsequent universal resource locator links.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method for generating a cascaded graphical user interface menu as recited in claim 1, wherein the cascaded graphical user interface menu is partitioned into a first portion and a second portion, and wherein the first portion contains a list of most recently used universal resource locators.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method for generating a cascaded graphical user interface menu as recited in claim 2, wherein the second portion contains a list of open webpage files.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A method for generating a cascaded graphical user interface menu as recited in claim 1, wherein displaying the cascaded graphical user interface menu is performed by a computer operating system.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method for generating a cascaded graphical user interface menu as recited in claim 1, further comprising: creating a second menu data structure; adding an entry for a current webpage file; adding entries to the second menu data structure for each anchor contained within the current webpage file;</claim-text>
      <claim-text>and displaying the cascaded graphical user interface menu that includes a nested sub-menu formed in accordance with the second menu data structure.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A method for generating a cascaded graphical user interface menu as recited in claim 5, wherein the nested sub-menu includes each of the anchors contained within the current webpage file.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A method for generating a cascaded graphical user interface menu as recited in claim 2, further comprising: updating the list of most recently used universal resource locators each time a universal resource locator is used.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A method for generating a cascaded graphical user interface menu as recited in claim 3, further comprising: updating the list of open webpage files each time a webpage file is opened and closed.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A computer readable medium including at least computer program code for generating a cascaded graphical user interface menu in a webpage authoring environment, the cascaded graphical user interface menu being used for creating universal resource locator links within webpages, said computer readable medium comprising: computer program code for retrieving a list of most recently used universal resource locators from memory, the list of most recently used universal resource locators being previously used for creating universal resource locator links within webpages; computer program code for retrieving a list of open webpage files from memory; computer program code for generating the cascaded graphical user interface menu, the cascaded graphical user interface menu including at least entries for each universal resource locator in the list of most recently used universal resource locators and for each open webpage file in the list of open webpage files;</claim-text>
      <claim-text>and computer program code for displaying the cascaded graphical user interface menu, thereby facilitating creation of subsequent universal resource locator links.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A computer readable medium as recited in claim 9, wherein the cascaded graphical user interface menu is partitioned into a first portion and a second portion, and wherein the first portion contains a list of most recently used universal resource locators.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A computer readable medium as recited in claim 10, wherein the second portion contains a list of open webpage files.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A computer readable medium as recited in claim 9, wherein said computer program code for displaying the cascaded graphical user interface menu is associated with a computer operating system.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A computer readable medium as recited in claim 9, wherein said computer program code for generating the cascaded graphical user interface menu comprises:</claim-text>
      <claim-text>- computer program code for generating a nested sub-menu, the nested sub-menu including at least entries for at least one anchor within a current webpage file, and wherein said computer readable medium further comprises: - computer program code for displaying the nested sub-menu in association with the cascaded graphical user interface menu.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A computer readable medium as recited in claim 13, wherein the nested sub-menu includes each of the anchors contained within the current webpage file.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A computer readable medium as recited in claim 10, said computer readable medium further comprising: computer program code for updating the list of most recently used universal resource locators each time a universal resource locator is used.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A computer readable medium as recited in claim 11, said computer readable medium further comprising: computer program code for updating the list of open webpage files each time a webpage file is opened and closed.</claim-text>
    </claim>
  </claims>
</questel-patent-document>