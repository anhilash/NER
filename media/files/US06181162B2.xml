<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181162B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181162</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181162</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="27360226" extended-family-id="42107479">
      <document-id>
        <country>US</country>
        <doc-number>09003261</doc-number>
        <kind>A</kind>
        <date>19980106</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09003261</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43163713</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>326198</doc-number>
        <kind>A</kind>
        <date>19980106</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09003261</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>83839897</doc-number>
        <kind>A</kind>
        <date>19970403</date>
        <priority-linkage-type>1</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1997US-08838398</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>US</country>
        <doc-number>1494296</doc-number>
        <kind>P</kind>
        <date>19960405</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1996US-60014942</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="4">
        <country>US</country>
        <doc-number>1512294</doc-number>
        <kind>F</kind>
        <date>19940410</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="4">
        <doc-number>1994US-29015122</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H03K  19/177       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>177</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>326041000</text>
        <class>326</class>
        <subclass>041000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>326047000</text>
        <class>326</class>
        <subclass>047000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H03K-019/177F</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177F</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H03K-019/177D2</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177D2</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/17736</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>17736</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/17728</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>17728</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>10</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>6</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6181162</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Programmable logic device with highly routable interconnect</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HO WALFORD W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5455525</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5455525</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="2">
          <document-id>
            <country>US</country>
            <doc-number>RE34363</doc-number>
            <kind>E</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>USRE34363</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="3">
          <text>WAHLSTROM SVEN ERIK</text>
          <document-id>
            <country>US</country>
            <doc-number>3473160</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3473160</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <text>MANNING FRANK</text>
          <document-id>
            <country>US</country>
            <doc-number>4020469</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4020469</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>BIRKNER JOHN M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4124899</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4124899</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>MELAS CONSTANTIN M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4417245</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4417245</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4609986</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4609986</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4617479</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4617479</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>CARTER WILLIAM S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4642487</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4642487</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>VEENSTRA KERRY S</text>
          <document-id>
            <country>US</country>
            <doc-number>4677318</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4677318</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>CARTER WILLIAM S</text>
          <document-id>
            <country>US</country>
            <doc-number>4706216</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4706216</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4713792</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4713792</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>HARVEY PAUL W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4717912</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4717912</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>KIKUCHI HIDEO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4823278</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4823278</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>WONG SAU-CHING, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4871930</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4871930</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>SO HOCK-CHUEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4899067</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4899067</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>WONG SAU-CHING, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4912342</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4912342</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5036473</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5036473</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5109353</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5109353</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>PEDERSEN BRUCE B</text>
          <document-id>
            <country>US</country>
            <doc-number>5121006</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5121006</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>DEBRULER DENNIS L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5155858</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5155858</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>TURNER JONATHAN S</text>
          <document-id>
            <country>US</country>
            <doc-number>5179551</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5179551</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>PEDERSEN BRUCE B, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5241224</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5241224</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>PEDERSEN BRUCE B, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5260610</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5260610</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5260611</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5260611</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>SWANSON CAROL J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5276425</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5276425</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="27">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5329470</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5329470</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="28">
          <text>POPLI SANJAY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5336950</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5336950</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="29">
          <text>PATEL RAKESH H</text>
          <document-id>
            <country>US</country>
            <doc-number>5350954</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5350954</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="30">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5352123</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5352123</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="31">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5448496</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5448496</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="32">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5452231</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5452231</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="33">
          <text>DAI WEI-JIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5452239</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5452239</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="34">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5477475</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5477475</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="35">
          <text>KUMAR MANOJ</text>
          <document-id>
            <country>US</country>
            <doc-number>5495476</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5495476</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="36">
          <text>DEWITT JOHN R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5598318</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5598318</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="37">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5612891</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5612891</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="38">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5644515</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5644515</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="39">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5657241</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5657241</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="40">
          <text>BUTTS MICHAEL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5661662</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5661662</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="41">
          <document-id>
            <country>US</country>
            <doc-number>B14617479</doc-number>
            <kind>I5</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>USB14617479</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="42">
          <text>HONEYWELL INF SYSTEMS</text>
          <document-id>
            <country>GB</country>
            <doc-number>1444084</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>GB1444084</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Minnick, Survey of Microcellular Research, Journal of ACM, Apr. 1967.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Nichols, A Logical Next Step for Read-Only Memories, Electronics, Jun. 1967.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Wahlstrom, Programmable Logic Arrays-Cheaper by the Millions, Electronics, Dec. 1967.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Shoup, Programmable Cellular Logic Arrays, Carnegie Mellon Ph.D. Thesis, Mar. 1970.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>Fleisher, The Writeable Personalized Chip, Computer Design, Jun. 1970.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>Mukhopadhyay, Recent Deveolopments in Switching Theory, Academic Press, 1970.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>Heutink, Implications of Busing for Cellular Arrays, Computer Design, Nov. 1974.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>AT&amp;T Microelec. Advance Data Sheet, Optimized Reconfigurable Cell Array (ORCA) Series Field-Programmable Gate Arrays, Feb. 1993.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>Benes, V.E., Mathematical Theory of Connecting Networks and Telephone Traffic, Chapter 3: Rearrangeable Networks, Academic Press, Inc., 1965, pp. 82-135.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>83839897</doc-number>
              <kind>A</kind>
              <date>19970403</date>
            </document-id>
          </parent-doc>
        </relation>
      </continuation>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/014,942</doc-number>
          <date>19960405</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/015,122</doc-number>
          <date>19940410</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/014942</doc-number>
          <date>19960405</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/015122</doc-number>
          <date>19940410</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Altera Corporation</orgname>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>INTEL</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Lytle, Craig S.</name>
            <address>
              <address-1>Mountain View, CA, US</address-1>
              <city>Mountain View</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Veenstra, Kerry S.</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Townsend and Townsend and Crew LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Tokar, Michael</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A programmable logic device architecture with a highly routable programmable interconnect structure.
      <br/>
      The arrangement of the logic array blocks (LABs), programmable interconnect structure, and other logical elements forms a Clos network.
      <br/>
      After specific constraints have been met, the architecture is guaranteed to route.
      <br/>
      The architecture is provably routable when there is no fan-out in the middle stage.
      <br/>
      A LAB (200) comprises an input multiplexer region (504), logic elements (300), input-output pins (516), and output multiplexer region (508).
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is a continuation of U.S. patent application Ser.
      <br/>
      No. 08/838,398, filed Apr. 3, 1997, which claims the benefit of U.S. Provisional Applications Numbers 60/014,942, filed Apr. 5, 1996, and 60/015,122, filed Apr. 10, 1994, all of which are incorporated herein by reference.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      The present invention relates to the field of programmable logic integrated circuits.
      <br/>
      More specifically, the present invention provides an enhanced programmable logic architecture, improving upon the composition, configuration, and arrangements of logic array blocks and logic elements and also the interconnections between these logic array blocks and logic elements.
    </p>
    <p num="3">
      Programmable Logic Devices (PLDs) are well known to those in the electronic art.
      <br/>
      Such programmable logic devices are commonly referred as PALs (Programmable Array Logic), PLAs (Programmable Logic Arrays), FPLAs (Field Programmable Logic Arrays), PLDs (Programmable Logic Devices), EPLDs (Erasable Programmable Logic Devices), EEPLDs (Electrically Erasable Programmable Logic Devices), LCAs (Logic Cell Arrays), FPGAs (Field Programmable Gate Arrays), and the like.
      <br/>
      Such devices are used in a wide array of applications where it is desirable to program standard, off-the-shelf devices for a specific application.
      <br/>
      Such devices include, for example, the well-known, Classic (tm) , MAX.RTM. 5000, MAX.RTM. 7000, FLEX.RTM. 8000, and FLEX.RTM. 10K families of devices made by Altera Corp.
    </p>
    <p num="4">
      PLDs are generally known in which many logic array blocks (LABs) are provided in a two-dimensional array.
      <br/>
      Further, PLDs have an array of intersecting signal conductors for programmably selecting and conducting logic signals to, from, and between the logic array blocks.
      <br/>
      LABs contain a number of relatively elementary logic individual programmable logic elements (LEs) which provide relatively elementary logic gates such as NAND, NOR, and exclusive OR gates.
    </p>
    <p num="5">
      Resulting from the continued scaling and shrinking of semiconductor device geometries, which are used to form integrated circuits (also known as "chips"), integrated circuits have progressively become smaller and denser.
      <br/>
      For programmable logic, it becomes possible to put greater numbers of programmable logic elements onto one integrated circuit.
      <br/>
      Furthermore, as the number of elements increases, it becomes increasingly important to improve the techniques and architectures used for interconnecting the elements and routing signals between the logic blocks.
      <br/>
      In particular, it is important to provide enough interconnection resources between the programmable logic elements so that the capabilities of the logical elements can be fully utilized and so that complex logic functions (e.g., requiring the combination of multiple LABs and LEs) can be performed, without providing so much interconnection resources that there is a wasteful excess of this type of resource.
    </p>
    <p num="6">
      While such devices have met with substantial success, such devices also meet with certain limitations, especially in situations in which the provision of additional or alternative types of interconnections between the logic modules would have benefits sufficient to justify the additional circuitry and programming complexity.
      <br/>
      Such additional interconnection paths may be desirable for making frequently needed kinds of interconnections, for speeding certain kinds of interconnections, for allowing short distance connections to be made without tying up more general purpose and therefore long distance interconnection resources, etc.
      <br/>
      There is also a continuing demand for logic devices with larger capacity.
      <br/>
      This produces a need to implement logic functions more efficiently and to make better use of the portion of the device which is devoted to interconnecting individual logic modules.
    </p>
    <p num="7">As can be seen, an improved programmable logic array integrated circuit architecture is needed, especially an architecture providing additional possibilities for interconnections between the logic modules and improved techniques for organizing and interconnecting the programmable logic elements, including LABs and LEs.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="8">
      The present invention is a programmable logic device architecture with a highly routable programmable interconnect structure.
      <br/>
      The arrangement of the logic array blocks (LABs), programmable interconnect structure, and other logical elements forms a Clos network.
      <br/>
      In one embodiment, the present invention implements a three-stage Clos network.
    </p>
    <p num="9">
      After specific constraints have been met, the architecture is guaranteed to route.
      <br/>
      The architecture is provably routable when there is no fan-out in the middle stage.
      <br/>
      Provable routability refers to a condition where it has been mathematically shown, as long as certain constraints have been satisfied, that a signal at any input at the first stage may be routed to any output at the third stage.
    </p>
    <p num="10">
      A LAB of the present invention comprises an input multiplexer region (IMR), logic elements, input-output pins, and output multiplexer region (OMR).
      <br/>
      The PLD of the present invention implements a Clos network in the directions of the programmable global horizontal interconnect (row) and programmable global vertical interconnect (column).
    </p>
    <p num="11">
      More specifically, for the row interconnect, the OMR implements a full crossbar switch for the first stage of a Clos network.
      <br/>
      Multiplexers in a programmable global horizontal interconnect form a second stage.
      <br/>
      And, the IMR implements a full crossbar switch for a third stage of a Clos network.
      <br/>
      For the column interconnect, the IMR implements a first stage of a Clos network.
      <br/>
      Multiplexers in the programmable global vertical interconnect form a second stage.
      <br/>
      And, the OMR forms a third stage of a Clos network.
    </p>
    <p num="12">In accordance with the teachings of the present invention, a logic array block for a programmable logic device is disclosed, which includes: a plurality of logic elements, where the logic elements are programmably configurable to implement logical functions; an input multiplexer region, which programmably couples a plurality of global horizontal conductors to inputs of the logic elements; and an output multiplexer region, which programmably couples outputs of the logic elements to the plurality of global horizontal conductors.</p>
    <p num="13">Other objects, features, and advantages of the present invention will become apparent upon consideration of the following detailed description and the accompanying drawings, in which like reference designations represent like features throughout the figures.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="14">
      FIG. 1 is a block diagram of a digital system incorporating a programmable logic device integrated circuit;
      <br/>
      FIG. 2 is a block diagram showing the overall architecture of a programmable logic device;
      <br/>
      FIG. 3 is a simplified block diagram of a logic array block (LAB) of a programmable logic device;
      <br/>
      FIG. 4 is a diagram of a Clos network;
      <br/>
      FIG. 5 is a diagram of a logic array block of the present invention;
      <br/>
      FIG. 6 is a diagram of a logic array block pair of the present invention;
      <br/>
      FIG. 7 is a diagram of the connections of a logic array block pair to the GH interconnect;
      <br/>
      FIG. 8 is a diagram of the connections of a logic array block to the GV interconnect; and
      <br/>
      FIG. 9 is a flow diagram of a procedure for programming a programmable logic device of the present invention.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="15">
      FIG. 1 shows a block diagram of a digital system within which the present invention may be embodied.
      <br/>
      In the particular embodiment of FIG. 1, a processing unit 101 is coupled to a memory 105 and an I/O 111 and incorporates a programmable logic device (PLD) 121. PLD 121 may be specially coupled to memory 105 through connection 131 and to I/O 111 through connection 135.
      <br/>
      The system may be a programmed digital computer system, digital signal processing system, specialized digital switching network, or other processing system.
      <br/>
      Moreover, the system may be a general purpose computer, a special purpose computer (such as telecommunications equipment) optimized for an application-specific task such as programming PLD 121, or a combination of a general purpose computer and auxiliary special purpose hardware.
    </p>
    <p num="16">
      Processing unit 101 may direct data to an appropriate system component for processing or storage, execute a program stored in memory 105 or input using I/O 111, or other similar function.
      <br/>
      Processing unit 101 may be a central processing unit (CPU), microprocessor, floating point coprocessor, graphics coprocessor, hardware controller, microcontroller, programmable logic device programmed for use as a controller, or other processing unit.
      <br/>
      Furthermore, in many embodiments, there is often no need for a CPU.
      <br/>
      For example, instead of a CPU, one or more PLDs 121 may control the logical operations of the system.
    </p>
    <p num="17">
      In some embodiments, processing unit 101 may even be a computer system.
      <br/>
      In one embodiment, source code may be stored in memory 105, compiled into machine language, and executed by processing unit 101.
      <br/>
      Processing unit 101 need not contain a CPU and in one embodiment, instructions may be executed by one or more PLDs 121.
      <br/>
      Instead of storing source code in memory 105, only the machine language representation of the source code, without the source code, may be stored in memory 105 for execution by processing unit 101.
      <br/>
      Memory 105 may be a random access memory (RAM), read only memory (ROM), fixed or flexible disk media, PC Card Flash disk memory, tape, or any other storage retrieval means, or any combination of these storage retrieval means.
    </p>
    <p num="18">
      Processing unit 101 uses I/O 111 to provide an input and output path for user interaction.
      <br/>
      For example, a user may input logical functions to be programmed into programmable logic device 121. I/O 111 may be a keyboard, mouse, track ball, digitizing tablet, text or graphical display, touch screen, pen tablet, printer, or other input or output means, or any combination of these means.
      <br/>
      In one embodiment, I/O 111 includes a printer used for printing a hard copy of any processing unit 101 output.
      <br/>
      In particular, using I/O 111, a user may print a copy of a document prepared using a word processing program executed using processing unit 101.
      <br/>
      In other cases, a user may print out a copy of the source code or a listing of the logical functions contained within PLD 121.
    </p>
    <p num="19">
      PLD 121 may serve many different purposes within the system in FIG. 1.
      <br/>
      PLD 121 may be a logical building block of processing unit 101, supporting its internal and external operations.
      <br/>
      PLD 121 is programmed to implement the logical functions necessary to carry on its particular role in system operation.
    </p>
    <p num="20">
      As some examples of the multitude of uses for PLD 121, processing unit 101 may use PLD 121, through connection 131, to decode memory or port addresses for accessing memory 105 or I/O 111.
      <br/>
      PLD 121 may be programmed to store data like a memory or specialized memory, where this comes from processing unit 101 or memory 105 (via connection 131).
      <br/>
      PLD 121 may be used as a microcontroller for a memory 105 device such as a fixed or flexible disk drive.
      <br/>
      PLD 121 may also be configured to be a microcontroller for an I/O 111 device such as a keyboard or scanner, passing data through connection 135.
    </p>
    <p num="21">
      In other embodiments, PLD 121 may be used as a controller or specialized processing unit such as a coprocessor for performing mathematical or graphical calculations.
      <br/>
      In still other embodiments, PLD 121 may be used for telecommunications applications.
      <br/>
      For example, processing unit 101 would direct data to PLD 121; PLD 121 processes this data; then PLD 121 returns the results to processing unit 101.
      <br/>
      Furthermore, processing unit 101 may pass or direct a program stored in memory 105 or input using I/O 111 to PLD 121 for execution.
      <br/>
      These are some of multitude of uses of PLD 121 within a digital system.
      <br/>
      Also, a system such as the one shown in FIG. 1 may embody a plurality of PLDs 121, each performing different system functions.
    </p>
    <p num="22">
      The system shown in FIG. 1 may also be used for programming PLD 121 with a particular logic pattern.
      <br/>
      A computer program for designing functions into a PLD may be stored in memory 105 and executed using processing unit 101.
      <br/>
      Then, a design characteristic which is to be programmed into PLD 121 is input via. I/O 111 and processed by processing unit 101.
      <br/>
      In the end, processing unit 101 transfers and programs the design characteristic into PLD 121.
    </p>
    <p num="23">
      In FIG. 1, processing unit 101 is shown incorporating PLD 121.
      <br/>
      However, in other embodiments, PLD 121 may be external to processing unit 101, and a PLD interface may be coupled between processing unit 101 and PLD 121.
      <br/>
      The PLD interface would provide the proper adapters or sockets for interfacing PLD 121 to processing unit 101.
      <br/>
      Moreover, the PLD interface would provide the proper voltages and electrical characteristics for coupling PLD 121 to processing unit 101.
    </p>
    <p num="24">
      FIG. 2 is a simplified block diagram of the overall internal architecture and organization of PLD 121 of FIG. 1.
      <br/>
      Many details of PLD architecture, organization, and circuit design are not necessary for an understanding of the present invention and such details are not shown in FIG. 2.
    </p>
    <p num="25">
      FIG. 2 shows a six-by-six two-dimensional array of thirty-six logic array blocks (LABs) 200. LAB 200 is a physically grouped set of logical resources that is configured or programmed to perform logical functions.
      <br/>
      The internal architecture of a LAB will be described in more detail below in connection with FIG. 3.
      <br/>
      PLDs may contain any arbitrary number of LABs, more or less than the PLD 121 shown in FIG. 2.
      <br/>
      Generally, in the future, as technology advances and improves, programmable logic devices with even greater numbers of logic array blocks will undoubtedly be created.
      <br/>
      Furthermore, LABs 200 need not be organized in a square matrix; for example, the array may be organized in a five-by-seven or a twenty-by-seventy matrix of LABs.
    </p>
    <p num="26">
      LAB 200 has inputs and outputs (not shown) which may or may not be programmably connected to a global interconnect structure, comprising an array of global horizontal interconnects (GHs) 210 and global vertical interconnects (GVs) 220. Although shown as single lines in FIG. 2, each GH 210 and GV 220 line represents a plurality of signal conductors.
      <br/>
      The inputs and outputs of LAB 200 are programmably connectable to an adjacent GH 210 and an adjacent GV 220.
      <br/>
      Utilizing GH 210 and GV 220 interconnects, multiple LABs 200 may be connected and combined to implement larger, more complex logic functions than can be realized using a single LAB 200.
    </p>
    <p num="27">
      In one embodiment, GH 210 and GV 220 conductors may or may not be programmably connectable at intersections 225 of these conductors.
      <br/>
      Moreover, GH 210 and GV 220 conductors may make multiple connections to other GH 210 and GV 220 conductors.
      <br/>
      Various GH 210 and GV 220 conductors may be programmably connected together to create a signal path from a LAB 200 at one location on PLD 121 to another LAB 200 at another location on PLD 121.
      <br/>
      Furthermore, an output signal from one LAB 200 can be directed into the inputs of one or more LABs 200.
      <br/>
      Also, using the global interconnect, signals from a LAB 200 can be fed back into the same LAB 200.
      <br/>
      In other embodiments of the present invention, only selected GH 210 conductors are programmably connectable to a selection of GV 220 conductors.
      <br/>
      Furthermore, in still further embodiments, GH 210 and GV 220 conductors may be specifically used for passing signals in a specific direction, such as input or output, but not both.
    </p>
    <p num="28">
      The PLD architecture in FIG. 2 further shows at the peripheries of the chip, input-output drivers 230.
      <br/>
      Input-output drivers 230 are for interfacing the PLD to external, off-chip circuitry.
      <br/>
      FIG. 2 shows thirty-two input-output drivers 230; however, a PLD may contain any number of input-output drivers, more or less than the number depicted.
      <br/>
      Each input-output driver 230 is configurable for use as an input driver, output driver, or bidirectional driver.
      <br/>
      An input driver takes signals from outside the chip and interfaces them to on-chip circuitry.
      <br/>
      An output drive takes internal signals and interfaces them to the outside world.
      <br/>
      A bidirectional driver performs the functions of both a input driver and an output driver.
      <br/>
      In addition, a bidirectional drive has a high-impedance mode which allows the driver to interface with a bidirectional bus.
      <br/>
      In other embodiments of the present invention, a PLD may have dedicated input drivers and dedicated output driver, as well as special "fast" input drivers and the like.
    </p>
    <p num="29">
      Like LABs 200, input-output drivers 230 are programmably connectable to adjacent GH 210 and GV 220 conductors.
      <br/>
      Using GH 210 and GV 220 conductors, input-output drivers 230 are programmably connectable to any LAB 200.
      <br/>
      Input-output drivers 230 facilitate the transfer of data between LABs 200 and external, off-chip circuitry.
      <br/>
      For example, off-chip logic signals from other chips may be coupled through input-output drivers 230 to drive one or more LABs 200.
      <br/>
      Based on these off-chip inputs and the logical functions programmed into LABs 200, LABs 200 will generate output signals that are coupled through the global interconnect to input-output drivers 230 for interfacing with off-chip circuitry.
    </p>
    <p num="30">
      FIG. 3 shows a simplified block diagram of LAB 200 of FIG. 2.
      <br/>
      LAB 200 is comprised of a varying number of logic elements (LEs) 300, sometimes referred to as "logic cells," and a local (or internal) interconnect structure 310.
      <br/>
      LAB 200 has eight LEs 300, but LAB 200 may have any number of LEs, more or less than eight.
      <br/>
      In a further embodiment of the present invention, LAB 200 has two "banks" of eight LEs for a total of sixteen LEs, where each bank has separate inputs, outputs, control signals, and carry chains.
    </p>
    <p num="31">
      A more detailed description of LE 300 of the present invention is given below in connection with FIG. 4.
      <br/>
      A general overview is presented here, sufficient to provide a basic understanding of LAB 200.
      <br/>
      LE 300 is the smallest logical building block of a PLD.
      <br/>
      Signals external to the LAB, such as from GHs 210 and GVs 220, are programmably connected to LE 300 through local interconnect structure 310, although LE 300 may be implemented in many architectures other than those shown in FIGS. 1-3. In one embodiment, LE 300 of the present invention incorporates a function generator that is configurable to provide a logical function of a number of variables, such a four-variable boolean operation.
      <br/>
      As well as combinatorial functions, LE 300 also provides support for sequential and registered functions using, for example, D flip-flops.
    </p>
    <p num="32">
      LE 300 provides combinatorial and registered outputs that are connectable to the GHs 210 and GVs 220, outside LAB 200.
      <br/>
      Furthermore, the outputs from LE 300 may be internally fed back into local interconnect structure 310; through local interconnect structure 310, an output from one LE 300 may be programmably connected to the inputs of other LEs 300, without using the global interconnect structure's GHs 210 and GVs 220.
      <br/>
      Local interconnect structure 310 allows short-distance interconnection of LEs, without utilizing the limited global resources, GHs 210 and GVs 220.
      <br/>
      Through local interconnect structure 310 and local feedback, LEs 300 are programmably connectable to form larger, more complex logical functions than can be realized using a single LE 300.
      <br/>
      Furthermore, because of its reduced size and shorter length, local interconnect structure 310 has reduced parasitics compared to the global interconnection structure.
      <br/>
      Consequently, local interconnect structure 310 generally allows signals to propagate faster than through the global interconnect structure.
    </p>
    <p num="33">
      FIG. 4 is a diagram of a three-stage Clos network.
      <br/>
      Only a brief overview of Clos network theory is presented here, sufficient for an understanding of the present invention.
      <br/>
      A detailed discussion of a Clos network theory is presented in chapter 3 of V. E. Benes, Mathematical Theory of Connecting Networks and Telephone Traffic (1965), and is incorporated herein by reference.
    </p>
    <p num="34">
      In FIG. 4, the Clos network is comprised of crossbar switches 402.
      <br/>
      A crossbar switch 402 has a plurality of inputs and a plurality of outputs.
      <br/>
      A crossbar switch 402 routes its inputs to any of its outputs.
      <br/>
      A first stage 404 of crossbar switches 402 is coupled through a second (or middle) stage 408 of crossbar switches 402 to a third stage 412 of crossbar switches 402.
      <br/>
      There are r crossbar switches in the first stage 404 and third stage 412.
      <br/>
      Each crossbar switch 402 in the first stage has n inputs.
      <br/>
      Each crossbar switch 402 in the third stage 412 has n outputs.
      <br/>
      There are m crossbar switches 402 in second stage 408.
      <br/>
      An input to a crossbar switch 402 may be routed to or control multiple outputs of that crossbar; this is referred to as "fan-out."
    </p>
    <p num="35">
      In a three-stage Clos network, the Clos network provides "provable routability" when there is no fan-out in the middle stage.
      <br/>
      This condition is expressed mathematically as m &gt;= 2n-1.
      <br/>
      Provable routability refers to a condition where it has been mathematically shown that a signal at any input at the first stage 404 may be routed to any output at the third stage 412.
      <br/>
      Every output will be coupleable to every input, and vice versa.
      <br/>
      More specifically, signals coupled to first-stage crossbar switches 404 will be coupleable to outputs of third-stage crossbar switches 412 if there is no fan-out in the middle stage.
    </p>
    <p num="36">
      Essentially, Clos network theory enables the design of switching networks with provable routability, with a minimum of crossbar switches 402.
      <br/>
      As applied to programmable logic, Clos network theory provides a technique for minimizing the interconnect and other resources, but still permitting substantial routability and utilization of those resources.
      <br/>
      Therefore, Clos network theory enables the design of architectures with substantially a minimum of interconnect resources and other resources, but still allowing substantial routability.
      <br/>
      Furthermore, taking into consideration Clos network theory, the programming of programmable logic integrated circuits is made simpler since signals are provably routable.
    </p>
    <p num="37">Although for provable routability, there should be no fan-out in the middle stage, this can still be useful for PLDs because the first and third stages may be used for the fan-out of signals.</p>
    <p num="38">
      FIG. 5 is a diagram of LAB 200 of the present invention.
      <br/>
      This embodiment of LAB 200 uses a Clos network as a basic routing structure.
      <br/>
      Many details of PLD architecture, organization, and circuit design are not necessary for an understanding of the present invention and such details are not shown in FIG. 5.
      <br/>
      In order to implement a Clos network, LAB 200 has an input multiplexer region (IMR) 504 and an output multiplexer region (OMR) 508. A Clos network is implemented for LABs 200 in the GH 210 direction (a row direction) and the GV 220 direction (a column direction).
      <br/>
      In the row direction, OMR 508 is a first stage of a Clos network; GH 210 is a middle stage; and IMR 504 is a third stage.
      <br/>
      In the column direction, IMR 504 is a first stage of a Clos network; GV 220 is a middle stage; and OMR 508 is a third stage.
    </p>
    <p num="39">
      IMR 504 and OMR 508 are programmable interconnect regions.
      <br/>
      IMR 504 programmably routes and couples signals from the outputs of LEs 300 (via conductors 524) and from GHs 210 (via conductors 528).
      <br/>
      IMR 504 programmably couples these signals to the inputs of LEs 300 (via conductors 512), input-output pins 516, and GVs 220 (via conductors 520).
      <br/>
      For example, a signal from other LABs 200 may be coupled through GH 210 and IMR 504 to LEs 300 of this LAB.
      <br/>
      In this fashion, a plurality of LABs and LEs may be combined to form more complex logical functions.
      <br/>
      Furthermore, via IMR 504, signals from GH 210 and the outputs of LEs 300 may be programmably coupled to GV 220.
      <br/>
      Also, outputs from LEs 300 may be fed back into IMR 504 to programmably couple to the inputs of other LEs 300 within the same LAB 200.
      <br/>
      In this respect, IMR 504 is similar to local interconnect structure 310 of FIG. 3.
      <br/>
      IMR 504 allows short-distance interconnection of LEs 300 within a LAB 200, without utilizing the limited global resources, such as GHs 210 and GVs 220.
    </p>
    <p num="40">
      Moreover, IMR 504 also permits driving input-output pins 516 directly.
      <br/>
      Input-output pins 516 are used to communicate signals to and from sources external to the PLD.
      <br/>
      To drive circuits external to the integrated circuit, the LAB 200 of the present invention does not require using global interconnection resources to programmably couple signals to input-output drivers 230 (as shown in FIG. 2).
      <br/>
      Outputs of LEs 300 may be programmably coupled through IMR 504 to input-output pins 516 directly without utilizing the global resources.
    </p>
    <p num="41">
      GHs 210 may be coupled to IMR 504 via fully, half-, or partially populated multiplexing.
      <br/>
      In a fully populated multiplexing scheme, all GHs 210 may be programmably coupled to IMR 504.
      <br/>
      In a half-populated multiplexing scheme, a selected half of the GHs 210 may be programmably coupled to IMR 504.
      <br/>
      Partially populated multiplexing allows selected GHs 210 to be programmably coupled to IMR 504.
      <br/>
      For example, in one embodiment, only a selected three GHs 210 out of five may be programmably coupled to IMR 504.
      <br/>
      Half- and partially populated multiplexing require fewer programmable connections than fully populated multiplexing.
      <br/>
      Therefore, half- and partially populated multiplexing result in reduced integrated circuit die sizes.
      <br/>
      In a specific embodiment, GHs 210 are coupled to IMR 504 through fully populated multiplexing.
    </p>
    <p num="42">
      OMR 508 programmably routes and couples signals from the outputs of LEs 300 (via conductors 524), input-output pins 516, and GVs 220 (via conductors 532).
      <br/>
      OMR 508 programmably couples these signals to GHs 210 (via conductors 536).
      <br/>
      For example, via OMR 508, the outputs of LEs 300 may be programmably coupled to GHs 210.
      <br/>
      Via OMR 508 and GHs 210, one LAB may be programmably coupled to other LABs to create more complex logic functions.
      <br/>
      Also, input-output pins 516 may be programmably coupled through OMR 508 to GHs 210 for routing elsewhere on the integrated circuit.
      <br/>
      Consequently, input-output pins 516 may drive LABs 200 directly without utilizing input-output drivers 230 (shown in FIG. 2).
    </p>
    <p num="43">
      Signals from GVs 220 may be programmably coupled through OMR 508 to GHs 210.
      <br/>
      GVs 220 may be coupled to OMR 508 via fully, half-, or partially populated multiplexing.
      <br/>
      In a fully populated multiplexing scheme, all GVs 220 may be programmably coupled to OMR 508.
      <br/>
      In a half-populated multiplexing scheme, a selected half of the GVs 220 may be programmably coupled to OMR 508.
      <br/>
      Partially populated multiplexing allows selected GVs 220 to be programmably coupled to OMR 508.
      <br/>
      For example, in one embodiment, only a selected three GVs 220 out of five may be programmably coupled to OMR 508.
      <br/>
      Half- and partially populated multiplexing require fewer programmable connections than fully populated multiplexing.
      <br/>
      Therefore, the use of half- and partially populated multiplexing result in reduced integrated circuit die sizes.
      <br/>
      In a specific embodiment, GVs 220 are coupled to OMR 508 through fully populated multiplexing.
    </p>
    <p num="44">
      FIG. 6 is a diagram of a pair of LABs 200 of the present invention.
      <br/>
      A LAB 200 of FIG. 6 is similar to LAB 200 of FIG. 5.
      <br/>
      However, in a LAB pair of FIG. 6, one OMR 508 is shared between two LABs 200.
      <br/>
      LABs 200 of FIG. 6 share many similarities with FIG. 5.
      <br/>
      Furthermore, many of the connections between GHs 210, GVs 220, IMRs 504, OMR 508, and other components are similar to that described in FIG. 5 above.
      <br/>
      This discussion will primarily focus on the differences in FIG. 6 from what has already been described for FIG. 5.
    </p>
    <p num="45">
      In FIG. 6, a single OMR 508 is shared between two LABs 200.
      <br/>
      These two LABs 200 form a LAB pair 604.
      <br/>
      More specifically, from a first LAB 200, outputs of LE 300, GVs 220, and input-output pins 516 may be programmably coupled through OMR 508 to GHs 210.
      <br/>
      Similarly, from a second LAB 200, outputs of LE 300, GVs 220, and input-output pins 516 may be programmably coupled through the same OMR 508 to GHs 210.
      <br/>
      Furthermore, GVs 220 from LABs 200 may be coupled to OMR 508 via fully, half-, or partially populated multiplexing (also described above).
      <br/>
      After OMR 508 programmably couples signals to GHs 210, these signals may be, in turn, programmably coupled to other LABs 200.
    </p>
    <p num="46">
      The LABs in FIGS. 5 and 6 implement a three-stage Clos network.
      <br/>
      Moreover, the present invention implements a three-stage Clos network in two dimensions, in the direction of GHs 210 (row direction) and in the direction of GVs 220 (column direction).
      <br/>
      In the row direction, OMRs 508 (from a plurality of LABs 200 associated with this row) are the first stage of the Clos network.
      <br/>
      The middle stage of the Clos network is implemented by this row which are used to programmably couple these signals to IMRs 504.
      <br/>
      The third stage of the Clos network is implemented by the IMRs 504 (from a plurality of LABs associated with this GH 210).
      <br/>
      A Clos network is also implemented in the column direction.
      <br/>
      IMRs 504 are the first stage.
      <br/>
      GV multiplexers are the second stage.
      <br/>
      And, OMRs 508 are the third stage of the Clos network.
    </p>
    <p num="47">
      The implementation of a Clos network as shown in FIGS. 5 and 6 may be considered a superset of a Clos network.
      <br/>
      In a Clos network, as shown in FIG. 4, the number of inputs into a crossbar switch 402 is equal to the number of outputs.
      <br/>
      In FIGS. 5 and 6, this is also the case.
      <br/>
      However, these implementations also have additional inputs and outputs for LEs 300 and input-output pins 516.
      <br/>
      These provide additional resources providing additional functionality, which is routable using Clos network resources.
      <br/>
      The implementation in FIGS. 5 and 6 provide programmable resources and Clos network routability in a compact structure.
      <br/>
      This structure facilitates a compact layout for an integrated circuit.
    </p>
    <p num="48">
      The sources and destinations, which are the inputs and outputs, of the Clos network are the same.
      <br/>
      In FIGS. 5 and 6, the sources of signals are LEs, GVs, and pins and the destinations are also LEs, GVs, and pins.
      <br/>
      The implementation in FIG. 6 is useful for easily organizing a structure so that the number of inputs into GH 210 from OMR 508 equals the numbers of outputs from GH 210 into IMRs 504.
      <br/>
      GH 210 in this case represents a second stage of the Clos network.
      <br/>
      The middle crossbar switch in a Clos network should have equal numbers of inputs and outputs.
      <br/>
      The structure in FIG. 6 provides this feature of a Clos network in a flexible, feature-rich form, without unnecessary complexity or resources.
    </p>
    <p num="49">
      In a specific embodiment of a PLD architecture implementing a Clos network, there are ten rows and thirty-six columns.
      <br/>
      A LAB 200 (one of a LAB pair) contains eight LEs 300, two input-output pins 516, three IMR 504 connections to GVs 220, three connections from GVs 220 to OMR 508.
      <br/>
      In a row, there are 36 LABs and consequently, 432 programmable conductors.
      <br/>
      IMR 504 of LAB 200 is programmably coupled to twenty-four GH conductors.
      <br/>
      In a column, there are ten LABs 200.
      <br/>
      GV 220 has thirty programmable conductors for programmably coupling to LAB 200.
    </p>
    <p num="50">
      FIG. 7 is a more detailed diagram of the GH 210 interconnection resources of the present invention.
      <br/>
      FIG. 7 illustrates how LAB pairs 604 are programmably coupled to GH 210.
      <br/>
      FIG. 7 also shows how a LAB 200 the present invention implements a Clos network along GHs 210.
      <br/>
      Many details of PLD architecture, organization, and circuit design are not necessary for an understanding of the present invention and such details are not shown in FIG. 7.
    </p>
    <p num="51">
      Three LAB pairs 604 are shown in FIG. 7, but in other embodiments, there may be any number of LAB pairs 604 along a GH 210.
      <br/>
      OMR 508 is directly coupled to three conductors (704) in GH 210.
      <br/>
      Since there are three OMRs 508, FIG. 7 shows nine GH 210 conductors.
      <br/>
      In other embodiments, as the number of LABS 604 increases, the number of GH 210 increases accordingly.
      <br/>
      These three conductors may be programmably coupled through programmable connections 708 to IMRs 504.
      <br/>
      For example, a particular OMR 508 may be coupled to one or more IMRs 504 via programmable connections 708.
      <br/>
      More specifically, the GH 210 conductors to which an OMR 508 is coupled (via connections 704) may be programmably coupled via programmable connections 708 to the desired IMRs 504.
    </p>
    <p num="52">
      Programmable connections 708 may be implemented using memory cells such as DRAM, SRAM, EPROM, EEPROM, Flash, and antifuses.
      <br/>
      In a preferred embodiment of the present invention, programmable connections 708 use SRAM memory.
      <br/>
      Furthermore, programmable connections 708 may be implemented by way of programmable multiplexers.
    </p>
    <p num="53">
      Further, a first output 712 of OMR 508 may be programmably coupled via a GH 210 conductor and programmable connections 708 to first inputs 716 of IMRs 504.
      <br/>
      Similarly, a second output 720 of OMR 508 may be programmably coupled via a GH 210 conductor and programmable connections 708 to second inputs 724 of IMRs 504.
      <br/>
      And, a third output 728 of OMR 508 may be programmably coupled via a GH 210 conductor and programmable connections 708 to third inputs 732 of IMRs 504.
      <br/>
      This is similarly the case for other OMRs 508 and sets of GHs 210 along the same GH 210.
    </p>
    <p num="54">
      In effect, the first input 716 to IMR 504 forms a multiplexer which programmably selects from among the OMR 508 outputs which may be programmably coupled to first input 716.
      <br/>
      The second input 724 to IMR 504 also forms a multiplexer which programmably selects from among the OMR 508 outputs which may be programmably coupled to second input 724.
      <br/>
      And, the third input 732 to an IMR 504 also forms a multiplexer which programmably selects from among the OMR 508 outputs which may be programmably coupled to third input 732.
      <br/>
      Consequently, GHs 210 forms GH multiplexers.
      <br/>
      Outputs from OMR 508 may be viewed as inputs to these GH multiplexers (or GH multiplexer drivers).
      <br/>
      Inputs to IMR 504 may be viewed as outputs from these GH multiplexers.
    </p>
    <p num="55">
      The present invention implements a Clos network along GH 210.
      <br/>
      More specifically, GH 210 forms a three-stage Clos network.
      <br/>
      OMRs 508 are the first stage; the GH multiplexers are the second stage; and IMRs 504 are the third stage of the Clos network.
    </p>
    <p num="56">
      FIG. 8 is a more detailed diagram of the GV 220 interconnection resources of the present invention.
      <br/>
      FIG. 8 illustrates how LABs 200 are programmably coupled to GV 220.
      <br/>
      FIG. 8 also shows how a the present invention implements a Clos network along GV 220.
      <br/>
      Many details of PLD architecture, organization, and circuit design are not necessary for an understanding of the present invention and such details are not shown in FIG. 8.
    </p>
    <p num="57">
      Three LABs 200 are shown in FIG. 8, but in other embodiments, there may be any number of LABs 200 along a GV 210.
      <br/>
      In a specific embodiment, there are ten LABs 200 along a GV 210 of the PLD.
      <br/>
      IMR 504 is directly coupled to three conductors via connections 804 in GV 210.
      <br/>
      Since there are three IMRs 504, FIG. 8 shows nine GV 220 conductors.
      <br/>
      In other embodiments, as the number of LABs 200 increases, the number of GVs 220 increases accordingly.
      <br/>
      These three conductors may be programmably coupled through programmable connections 808 to IMRs 504.
      <br/>
      For example, a particular OMR 508 may be coupled to one or more OMRs 508 via programmable connections 808.
      <br/>
      More specifically, the GV 220 conductors to which an IMR 504 is coupled (via connections 804) may be programmably coupled via programmable connections 808 to the desired OMRs 508.
    </p>
    <p num="58">
      Programmable connections 808 may be implemented using memory cells such as DRAM, SRAM, EPROM, EEPROM, Flash, and antifuses.
      <br/>
      In a preferred embodiment of the present invention, programmable connections 808 use SRAM memory.
      <br/>
      Furthermore, programmable connections 808 may be implemented by way of programmable multiplexers.
      <br/>
      Via GVs 220 and the programmable resources described, LABs 200 may be programmably combined with other LABs 200 to form more complex logic functions.
    </p>
    <p num="59">
      Further, a first output 812 of IMR 504 may be programmably coupled via a GV 220 conductor and programmable connections 808 to first inputs 816 of OMRs 508.
      <br/>
      Similarly, a second output 820 of IMR 504 may be programmably coupled via a GV 220 conductor and programmable connections 808 to second inputs 824 of OMRs 508.
      <br/>
      And, a third output 828 of IMR 504 may be programmably coupled via a GV 220 conductor and programmable connections 808 to third inputs 832 of OMRs 508.
      <br/>
      This is similarly the case for other IMRs 504 along the same GV 220.
    </p>
    <p num="60">
      In effect, the first input 816 to OMR 508 forms a multiplexer which programmably selects from among the IMR 504 outputs which may be programmably coupled to first input 816.
      <br/>
      The second input 824 to OMR 508 also forms a multiplexer which programmably selects from among the IMR 504 outputs which may be programmably coupled to second input 824.
      <br/>
      And, the third input 832 to an OMR 504 also forms a multiplexer which programmably selects from among the IMR 504 outputs which may be programmably coupled to third input 832.
      <br/>
      Consequently, outputs from IMR 504 may be viewed as inputs to GV multiplexers (or GV multiplexer drivers).
      <br/>
      Inputs to OMR 508 may be viewed as outputs from these GV multiplexers.
    </p>
    <p num="61">
      The present invention implements a Clos network along GVs 220.
      <br/>
      More specifically, GVs 220 forms a three-stage Clos network.
      <br/>
      IMRs 504 are the first stage; the GV multiplexers are the second stage; and OMRs 508 are the third stage of the Clos network.
    </p>
    <p num="62">
      A PLD of the present invention may be programmed according to the procedure shown in the flow diagram in FIG. 9.
      <br/>
      The procedure in FIG. 9 may be performed on a general purpose computer, programmed digital computer, other computing machine specially adapted for programming design characteristics into a programmable logic device.
      <br/>
      For example, the flow diagram shown in FIG. 9 may be performed by the system described in FIG. 1.
    </p>
    <p num="63">
      A "read design specification" step 910 reads the specification of the design to be implemented into a programmable logic device.
      <br/>
      A design specification defines the boolean equations, logical functions, and other operations to be implemented into LEs 300 of PLD 121.
      <br/>
      This specification may have been previously defined by a user and may in part, be generated by a computer or other machine.
      <br/>
      This specification also includes the assignments for input-output pins 516.
      <br/>
      For example, a user may request a particular signal or signals to input or output from designated input-output pins 516.
      <br/>
      These requests are referred to as input-output pins 516 assignments.
      <br/>
      When programming PLD 121, these input-output pin 516 assignments will be taken into consideration.
    </p>
    <p num="64">
      A "partition specification into rows" step 920 partitions (divides) the boolean equations, logical functions, and other operations of the design specification among the rows of LABs 200 of PLD 121.
      <br/>
      Partition step 920 considers the numbers of signals routing into and out of this row.
      <br/>
      This process will introduce and utilize GV multiplexers and GV drivers when required.
    </p>
    <p num="65">
      Partition step 920 ensures provable routability of the column interconnect by dividing functions and operations so that the signals going between rows of LABs satisfies Clos theory constraints.
      <br/>
      More specifically, the row fan-in must be less than or equal to the total number of inputs of that row and the row fan-out must be less than or equal to the total number of outputs of that row.
      <br/>
      Fan-out is measured as the total number of rows that are driven by a given row.
      <br/>
      For example, if a row has 100 output signals, but 2 outputs from that row drive two different rows, then the total fan-out for that row is 102.
    </p>
    <p num="66">As a further example, in the case where a row has thirty-six LABs, each LAB having eight LEs 300, two input-output pins 516, three Gv drivers, and three GV multiplexers, the row fan-in must be less to or equal to 108 and the row fan-out must be less than or equal to 108.</p>
    <p num="67">
      A "Clos route the row-to-row interconnect" step 930 routes the interconnect and signals among the rows in PLD 121.
      <br/>
      Clos route step 930 will assign GV multiplexers and GV drivers into specific LABs, when necessary.
      <br/>
      If Clos theory constraints are satisfied during the partition step 920, Clos route step 930 is guaranteed to succeed; this means that all signals into and out of a row will be routable.
    </p>
    <p num="68">
      A "partition the specification into LABs" step 940 partitions the design specification and LEs 300 into LABs 200 for a row.
      <br/>
      Partition step 940 divides the boolean equations, logical functions, and other operations, which were previously allocated into rows, among LABs 200 of that particular row.
      <br/>
      Partition step 940 takes into consideration the input-output pin 516, GV driver, and GV multiplexer assignments made previously.
    </p>
    <p num="69">
      Partition step 940 ensures Clos routability of the row interconnect by dividing functions and operations so that the signals traversing between LABs 200 satisfies Clos theory constraints.
      <br/>
      More specifically, the LAB fan-in must be less than or equal to the total number of inputs of that LAB 200, and the LAB fan-out must be less than or equal to the total number of inputs of that LAB 200.
      <br/>
      Fan-out is measured by the total number of LABs 200 that are driven by OMR 508 of this LAB 200.
      <br/>
      For example, if an OMR 508 has twenty output signals, but two of them need to drive two different LABs, then the total fan out for this OMR is twenty-two.
    </p>
    <p num="70">
      As a further example, in the case where a row has thirty-six LABs, each LAB having eight LEs 300, two input-output pins 516, three GV drivers, and three GV multiplexers, the LAB fan-in must be less to or equal to twenty-four and the row fan-out must be less than or equal to twenty-four.
      <br/>
      Furthermore, in the case where LABs 200 share a common OMR 508 (e.g., a LAB pair 604), partition step 940 counts LAB 200 inputs independently while the LAB outputs are counted in a pair.
    </p>
    <p num="71">
      A "Clos route the row-level interconnect" step 950 routes the signals among LABs 200 in a row.
      <br/>
      If Clos theory constraints were satisfied in partition step 940, Clos route step 950 is guaranteed to succeed; this means that all signals into and out of a LAB of that row will be routable.
    </p>
    <p num="72">
      The foregoing description of preferred embodiments of the invention has been presented for the purposes of illustration and description.
      <br/>
      It is not intended to be exhaustive or to limit the invention to the precise form described, and many modifications and variations are possible in light of the teaching above.
      <br/>
      The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention in various embodiments and with various modifications as are suited to the particular use contemplated.
      <br/>
      It is intended that the scope of the invention be defined by the claims appended hereto.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A programmable integrated circuit comprising:</claim-text>
      <claim-text>a first plurality of conductors, each of which extends along a first dimension of an array; a second plurality of conductors, each of which extends along a second dimension of said array, said second plurality of conductors programmably coupled to said first plurality of conductors;</claim-text>
      <claim-text>and a plurality of logic array blocks, wherein each logic array block comprises:</claim-text>
      <claim-text>- a plurality of programmable logic elements, wherein a programmable logic element comprises at least one programmable logic element input and at least one programmable logic element output; - an input multiplexer region for programmably coupling said first plurality of conductors to said programmable logic element inputs and said second plurality of conductors;</claim-text>
      <claim-text>and - an output multiplexer region for programmably coupling said programmable logic element outputs and said second plurality of conductors to said first plurality of conductors, wherein a number of programmable connections between said input multiplexer region and said first plurality of conductors is about equal to a number of programmable connections between said output multiplexer region and said first plurality of conductors.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The programmable integrated circuit of claim 1 wherein said output multiplexer region programmably couples a pin of an integrated circuit to said first plurality of conductors.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The programmable integrated circuit of claim 1 wherein said input multiplexer region programmably couples said first plurality of conductors to a pin of an integrated circuit.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The programmable integrated circuit of claim 1 wherein said input multiplexer region programmably couples said programmable logic element outputs to each of said programmable logic element inputs and said second plurality of conductors.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The programmable integrated circuit of claim 1 wherein said input multiplexer region programmably couples said programmable logic element outputs, to a pin of an integrated circuit.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The programmable integrated circuit of claim 1 wherein said output multiplexer region programmably couples a pin of an integrated circuit to said second plurality of conductors through said input multiplexer region.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The programmable integrated circuit of claim 1 wherein said first input multiplexer region programmably couples said first plurality of conductors to a pin of an integrated circuit or one of said plurality of programmable logic elements.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The programmable integrated circuit of claim 1 wherein said input multiplexer region programmably couples each of said programmable logic elements outputs to each of said programmable logic element inputs and said second plurality of conductors.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The programmable integrated circuit of claim 1 wherein said programmable logic elements are substantially identical.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A programmable integrated circuit comprising: a first plurality of conductors, each of which extends along a first dimension of said two-dimensional array; a second plurality of conductors, each of which extends along a second dimension of said two-dimensional array, said second plurality of conductors programmably coupled to said first plurality of conductors;</claim-text>
      <claim-text>and a plurality of logic array block pairs, wherein each logic array block pair comprises: - a first plurality of programmable logic elements, each programmable logic element having at least one programmable logic element input and at least one programmable logic element output; - a second plurality of programmable logic elements, each programmable logic element having at least one programmable logic element input and at least one programmable logic element output; - a first input multiplexer region for programmably coupling said first plurality of conductors to each of said first plurality of programmable logic element inputs and said second plurality of conductors; - a second input multiplexer region for programmably coupling said first plurality of conductors to each of said second plurality of programmable logic element inputs and said second plurality of conductors;</claim-text>
      <claim-text>and - an output multiplexer region for programmably coupling each of said first and second plurality of programmable logic element outputs and said second plurality of conductors to said first plurality of conductors, wherein a number of programmable connections between said second input multiplexer region and said first plurality of conductors is about equal to a number of programmable connections between said output multiplexer region and said first plurality of conductors.</claim-text>
    </claim>
  </claims>
</questel-patent-document>