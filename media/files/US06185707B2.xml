<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185707B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185707</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185707</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="22708519" extended-family-id="680480">
      <document-id>
        <country>US</country>
        <doc-number>09192164</doc-number>
        <kind>A</kind>
        <date>19981113</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09192164</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>697268</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>19216498</doc-number>
        <kind>A</kind>
        <date>19981113</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09192164</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G01R  31/28        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>28</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G01R  31/317       20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>317</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G01R  31/3183      20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>3183</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>H01L  21/66        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>01</class>
        <subclass>L</subclass>
        <main-group>21</main-group>
        <subgroup>66</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714724000</text>
        <class>714</class>
        <subclass>724000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>382145000</text>
        <class>382</class>
        <subclass>145000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>438010000</text>
        <class>438</class>
        <subclass>010000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>714733000</text>
        <class>714</class>
        <subclass>733000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G01R-031/3183A</text>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>031</main-group>
        <subgroup>3183A</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G01R-031/318307</classification-symbol>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>318307</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G01R-031/2834</classification-symbol>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>2834</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S01R-031/28F3</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>9</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>9</number-of-drawing-sheets>
      <number-of-figures>12</number-of-figures>
      <image-key data-format="questel">US6185707</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">IC test software system for mapping logical functional test data of logic integrated circuits to physical representation</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BRENSKI EDWIN F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>3906163</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3906163</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>BASS DAVID S</text>
          <document-id>
            <country>US</country>
            <doc-number>4222514</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4222514</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>HAAS RENE M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4242751</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4242751</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>FAZEKAS PETER</text>
          <document-id>
            <country>US</country>
            <doc-number>4477775</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4477775</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>FEUERBAUM HANS-PETER</text>
          <document-id>
            <country>US</country>
            <doc-number>4733176</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4733176</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>SPROGIS EDMUND J</text>
          <document-id>
            <country>US</country>
            <doc-number>4801869</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4801869</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>ENGLISH ROE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4967337</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4967337</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>YOSHIDA TORU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5219765</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5219765</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>SAXENA NIRMAL</text>
          <document-id>
            <country>US</country>
            <doc-number>5469443</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5469443</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>IVANOV ANDRE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5475694</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5475694</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>SAXENA NIRMAL</text>
          <document-id>
            <country>US</country>
            <doc-number>5528553</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5528553</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>DOUGLAS RAYMOND W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5596587</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5596587</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="13">
          <text>LINDSAY BRENT</text>
          <document-id>
            <country>US</country>
            <doc-number>5720031</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5720031</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="14">
          <text>KAHN RANDOLPH W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5963881</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963881</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="15">
          <text>LIN YOULING, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6091846</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6091846</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Burdick, W.; Duam, W., "High yield multichip modules based on minimal IC pretest", Test Conference, 1994. Proceedings, International, pp. 30-40.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Yue, J.; Liu, S.T.; Fechner, P.; Gardner, G.; Witcraft, W.; Finn, C., "An effective method to screen SOI wafers for mass production", SOI Conference, 1994 Proceedings., 1994 IEEE International, pp. 113-114.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="3">
          <text>Mullenix, P.; Zalnoski, J.; Kasten, A.J.; "Limited yield estimation for visual defect sources", Semiconductor Manufacturing, IEEE Transactions on Volume, pp. 17-23, Oct. 1997.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="4">
          <text>Chen-Pin Kung; Chun-Jieh Huang; Chen-Shang Lin, "Fast fault simulation for BIST applications", Test Symposium, 1995., Proceddings of the Fourth Asian, pp. 93-99.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="5">
          <text>Wieler, R.W.; Zhang, Z.; McLeod, R.D., "Using an FPGA based computer as a hardware emulator for built-in self-test structures", Rapid System Prototyping, 1994. Shortening the Path from Specification to Prototype. Proceedings., Fifth International Workshop.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="6">
          <text>McLeod, G.R., "Built-in system test and fault location", Proceedings of the 1994 IEEE International test Conference, pp. 291-299.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="7">
          <text>Hussain, A.; Hayes, J.P., "Design Verification via simulation an automatic test pattern generation", IEEE, pp. 174-180, 1995.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="8">
          <text>Flint, A., "A comparison of test requirements, methods, and results for seven MCM products", test Conference, 1995. Proceedings, International, pp. 202-207.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Knights Technology, Inc.</orgname>
            <address>
              <address-1>Sunnyvale, CA, US</address-1>
              <city>Sunnyvale</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>KNIGHTS TECHNOLOGY</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Smith, Shawn</name>
            <address>
              <address-1>Austin, TX, US</address-1>
              <city>Austin</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Balachandran, Hari</name>
            <address>
              <address-1>Dallas, TX, US</address-1>
              <city>Dallas</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Parker, Jason</name>
            <address>
              <address-1>Coppell, TX, US</address-1>
              <city>Coppell</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Burns Doane Swecker &amp; Mathis L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>De Cady, Albert</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      The present invention, generally speaking, takes advantage of the foregoing capability to determine and display the X,Y location corresponding to a net name, by translating functional test data of a digital logic chip passed through a simulation model which identifies one or more defective nets of the chip.
      <br/>
      The defective nets are processed against a database of the foregoing type to obtain X,Y coordinate data for these nets, allowing them to be data logged as physical traces on the chip layout.
      <br/>
      In accordance with an exemplary embodiment, this mapping is performed by taking the output from a functional tester and translating it from a list of failed scan chains into a list of suspected netlist nodes.
      <br/>
      The X,Y coordinates of suspected netlist nodes are then identified and stored in a database, providing failure analysis and yield enhancement engineers a starting point for performing failure analysis and for immediately understanding whether "in-line" inspection data can account for a given failure.
      <br/>
      These nodes may then be crossmapped from the circuit design onto the chip's layout for each of multiple photomask layers within the design.
      <br/>
      Detailed failure data is gathered and stored at the wafer stage as part of a comprehensive program rather than on an as-needed basis at the packaged part stage.
      <br/>
      A voluminous amount of high-quality data is therefore obtained in an entirely automated fashion, as opposed to obtaining a comparatively minuscule amount of lesser-quality data in an exceedingly laborious fashion.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention relates to integrated circuit (IC) chip test software systems.</p>
    <p num="3">2. State of the Art</p>
    <p num="4">
      Digital semiconductor chips may be divided into two main categories, memory chips and logic chips.
      <br/>
      A microprocessor is one example of a logic chip.
      <br/>
      Digital semiconductor chips are designed by skilled chip designers using sophisticated software tools.
      <br/>
      Because of the difficulty of testing such chips, a field known as Design For Test (DFT) has emerged.
      <br/>
      One DFT technique involves designing into the chip one or more "scan chains" that may be used to write and read portions of the chip that would otherwise be inaccessible.
      <br/>
      Layout tools are used to lay out a chip design onto silicon.
      <br/>
      The resulting chip layout may be represented in the form of a netlist, i.e., a list of low-level design cells and the interconnections between them.
      <br/>
      The chip layout may also be represented in the form of a physical design file representing multiple layers of polygons.
      <br/>
      Once the design is completed, the part is "taped out" (i.e., files representing the chip are written to tape or disk).
      <br/>
      One format used for such files is the GDSII format.
      <br/>
      A mask house then makes photomasks used to manufacture the chip.
    </p>
    <p num="5">
      Both memory chips and logic chips require production monitoring and testing.
      <br/>
      Production monitoring is performed using "in-line" inspection equipment, and production testing is performed using "end-of-line" test equipment.
      <br/>
      In-line inspection equipment inspects entire semiconductor wafers, each of which may have formed thereon hundreds of chips.
      <br/>
      End-of-line test equipment performs "binsort functional test" on semiconductor wafers in which the pads of chips are contacted and the chips "exercised." At the conclusion of functional test, parts are "binned" (typically, placed in different categories within an electronic record) according to the test results.
    </p>
    <p num="6">
      Apart from production testing is failure analysis.
      <br/>
      Failure analysis attempts to identify the cause of failures of chips of a particular chip design after those failures have been detected during production (or prototype) testing.
      <br/>
      Failure analysis may typically require more detailed failure information than just a bin code.
      <br/>
      Detailed failure information is typically obtained by retesting a limited number of packaged parts.
    </p>
    <p num="7">
      Memory chips, because of their structure as regular arrays of memory cells, readily lend themselves to failure analysis.
      <br/>
      A memory chip may be tested by performing a series of read and write operations to the memory chip.
      <br/>
      Errors in read/write testing may be pin-pointed as likely physical defects at readily-identifiable locations on the chip.
      <br/>
      Alternatively, the memory chip design may contain built-in self-test (BIST) capabilities.
      <br/>
      In either case, functional test results can be "bitmapped" to failure locations on the memory chip.
      <br/>
      In memory bitmapping, electrical failures are localized within a relatively small physical "trace" on the die.
    </p>
    <p num="8">
      Process flow in accordance with conventional memory bitmap testing is illustrated in FIG. 1.
      <br/>
      A wafer is subjected to both in-line inspection (right-hand column) and end-of-line testing (left-hand column).
      <br/>
      In-line inspection may be performed, for example, using optical inspection equipment such as the KLA21xx series available from KLA Tencor.
      <br/>
      In-line inspections produce defect files containing X,Y location optical defect information.
      <br/>
      This information may then be output in any convenient format, an example of which is a format used by the Yield Manager tool of, Knights Technology.
      <br/>
      End-of-line testing is performed using a tester, sometimes referred to as ATE (Automatic Test Equipment).
      <br/>
      The tester identifies failed memory locations.
      <br/>
      This information is processed to identify X,Y defect locations.
      <br/>
      The X,Y defect information may also be output to the Yield Manager tool.
      <br/>
      Because in-line and end-of-line defect information is in the same format within the Yield Manager tool, a combined defect overlay may be obtained, enabling "killer defects" (defects that render a part non-functional) to be identified.
      <br/>
      In particular, if the locations of a defect and a failure coincide, the defect may be presumed to a be a killer defect, i.e., a direct cause of the failure, in which case trouble-shooting would then focus on the production process rather than the underlying design of the part.
    </p>
    <p num="9">
      As a result of the greater testability of memory chips, yield enhancement organizations within semiconductor manufacturing plants, or fabs, have long relied on memory chips to de-bug a given generation of technology.
      <br/>
      Yield enhancement engineers have typically used a memory production line to monitor the production process and ensure yield on other production lines of logic products using the same technology.
      <br/>
      For yield enhancement of memory chips, in-line defect inspection tools have been used, together with end-of-line functional test bitmap results.
      <br/>
      Memory bitmap failure data may be further summarized into failure categories (e.g., single-bit failure, column failure, row failure, etc.).
    </p>
    <p num="10">
      Given coordinates of memory failures, failure analysis engineers can use a variety of "physical deprocessing" methods to identify the root cause of the failure.
      <br/>
      Based on the failure category, engineers can estimate where in the production process the failure occurred (e.g., the polysilicon layer deposition step, the metal 1 layer deposition step, etc.).
    </p>
    <p num="11">
      However, in recent years, the market share of logic products within the semiconductor industry has greatly increased, resulting in many new "logic-only" fabs being brought on-line.
      <br/>
      Unfortunately, without the benefit of a "memory line monitor," logic-only fabs cannot take full advantage of yield enhancement techniques developed within the industry over many years.
      <br/>
      The logic-only yield enhancement engineer today is severely handicapped when compared to counterparts in fabs that run memory products.
      <br/>
      Heretofore, there has been no way to "bitmap" area of logic within a chip.
      <br/>
      Furthermore, logic chip functional test results do not provide a starting point for the physical coordinates of failures within a failed die.
    </p>
    <p num="12">
      The most advanced logic chip designs contain scan testing.
      <br/>
      Scan testing breaks the logic real estate of a chip into many discrete chains of logic which can be tested individually for basic functionality.
      <br/>
      Scan testing enables a list of failing signals to be identified.
      <br/>
      However, even after a list of failing signals is produced for a given die, it is still not possible to find the physical location of the failure because each failing signal may contain hundreds of transistors within its "cone of logic," and there are usually multiple failing signals.
      <br/>
      Traditional logic chip yield enhancement techniques therefore rely heavily on correlation of binsort functional test results to anticipate and correct semiconductor process issues.
      <br/>
      This approach suffers from several drawbacks, including: the inability to relate a particular bin's fallout to a suspect process level; the inability to distinguish pre-packaging yield issue from packaging yield issues; and the inability to establish a clear link between large populations of failed die.
    </p>
    <p num="13">
      Failure analysis may make use of a known electrical diagnosis process whereby a diagnostic list of suspected failing nets may be obtained as shown in FIG. 2.
      <br/>
      Packaged devices having BIST (scan) capabilities are tested using a tester.
      <br/>
      Scan failure data is translated into format that can be used by an ATPG (Automatic Test Pattern Generation) tool, e.g., an ATPG tool used previously to generate test pattern files used by the tester.
      <br/>
      The ATPG tools uses the translated test data, together with the test pattern files, setup files, one or more ATPG diagnostic models, and design information from a design database in order to identify suspected failing nodes, output in the form of a diagnostic list (FIG. 3).
    </p>
    <p num="14">
      CAD navigation tools have been developed to aid in failure analysis.
      <br/>
      CAD navigation refers to the ability to point and click within a circuit layout display and by so doing automatically drive a piece of equipment such as FIB (Focused Ion Beam) equipment to that location on the chip.
      <br/>
      CAD navigation also allows a user to specify the name of a net, causing the corresponding layout to be displayed.
      <br/>
      One such CAD navigation tool is the Merlin Framework CAD navigation tool of Knights Technology.
      <br/>
      This tool takes netlist information, layout information, and cross-reference files relating the two and produces a unified database in a Knights-proprietary format having an efficient indexing structure.
      <br/>
      Referring more particularly to FIG. 4, the process of creating such a Knights database is illustrated in greater detail.
      <br/>
      A SPICE-formatted netlist is converted (if required) to a suitable netlist format.
      <br/>
      Data from a Schematic Verification database is converted (if required) to obtain cross-reference files cross-referencing net names and numerical net identifiers.
      <br/>
      Layout data is converted (if required) to a suitable polygon layout format.
      <br/>
      An MMapper routine uses the netlist, cross-reference files and polygon layout files in the following manner to produce a database suitable for CAD navigation.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="15">
      The present invention, generally speaking, takes advantage of the foregoing capability to determine and display the X,Y location corresponding to a net name, by translating functional test data of a digital logic chip passed through a simulation model which identifies one or more defective nets of the chip.
      <br/>
      The defective nets are processed against a database of the foregoing type to obtain X,Y coordinate data for these nets, allowing them to be data logged as physical traces on the chip layout.
      <br/>
      In accordance with an exemplary embodiment, this mapping is performed by taking the output from a functional tester and translating it from a list of failed scan chains into a list of suspected netlist nodes.
      <br/>
      The X,Y coordinates of suspected netlist nodes are then identified and stored in a database, providing failure analysis and yield enhancement engineers a starting point for performing failure analysis and for immediately understanding whether "in-line" inspection data can account for a given failure.
      <br/>
      These nodes may then be crossmapped from the circuit design onto the chip's layout for each of multiple photomask layers within the design.
      <br/>
      Detailed failure data is gathered and stored at the wafer stage as part of a comprehensive program rather than on an as-needed basis at the packaged part stage.
      <br/>
      A voluminous amount of high-quality data is therefore obtained in an entirely automated fashion, as opposed to obtaining a comparatively minuscule amount of lesser-quality data in an exceedingly laborious fashion.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWING</heading>
    <p num="16">
      The present invention may be further understood from the following description in conjunction with the appended drawing. In the drawing:
      <br/>
      FIG. 1 is a block diagram of a known memory bitmap process flow;
      <br/>
      FIG. 2 is a block diagram of a known electrical diagnosis process flow;
      <br/>
      FIG. 3 is an example net/node list obtained from a circuit analysis tool;
      <br/>
      FIG. 4 is a more detailed flow diagram illustrating the manner in which a known database suitable for CAD navigation is produced;
      <br/>
      FIG. 5 is a block diagram of a Logic Map process flow in accordance with the present invention;
      <br/>
      FIG. 6 is a generalized representation of Logic Map process flow;
      <br/>
      FIG. 7 is a magnified view of an overlay of defect data and logic-mapped failure data;
      <br/>
      FIG. 8 is an example of a killer ratio chart;
      <br/>
      FIG. 9 is an example of a defect intensity stackmap;
      <br/>
      FIG. 10 is an alternative representation of Logic Map process flow;
      <br/>
      FIG. 11 is a diagram of a Logic Map system in accordance with one embodiment of the invention; and
      <br/>
      FIG. 12 is a more detailed flow diagram helpful in understanding an example of one specific implementation of the Logic Map process.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="17">
      Referring now to FIG. 5, process flow in accordance with a Logic Map process is shown.
      <br/>
      The wafer is assumed to have scan test capabilities.
      <br/>
      In-line inspection is performed as described previously in relation to FIG. 1.
      <br/>
      End-of-line testing, because the wafer is a logic product and not a memory product, is substantially different.
      <br/>
      As described in greater detail hereinafter, end-of-line testing produces an "ATE datalog".
      <br/>
      Using the ATE datalog and other information, a diagnosis step then follows using an ATPG tool.
      <br/>
      The diagnosis step produces a diagnostic list of suspected failing nets.
      <br/>
      This information is processed together with design information to identify X,Y defect locations.
      <br/>
      The X,Y defect information may also be output in any desired format, e.g., the Yield Manager format.
      <br/>
      Because in-line and end-of-line defect information is in the same format, a combined defect overlay may be obtained, allowing killer defects to be readily identified.
    </p>
    <p num="18">
      The logical-to-physical translation of failure data is accomplished by a process referred to herein as Logic Map.
      <br/>
      Logic Map allows the X,Y coordinates of failing netlist nodes to be generated.
      <br/>
      A generalized representation of the flow of data in the Logic Map system is shown in FIG. 6.
      <br/>
      Logic Map begins with wafer-level functional testing, which produces a functional test output file (e.g., an ASCII file).
      <br/>
      Once a functional test output file has been obtained, known methods may be used to post-process the functional test results and convert them into a list of failed signals suitable for input into a design diagnostic model.
      <br/>
      Various commercial circuit analysis tools provide for design diagnostic modeling.
      <br/>
      One such tool is the FastScan circuit analysis tool of Mentor Graphics.
    </p>
    <p num="19">
      The converted functional test output file is input to a circuit analysis tool.
      <br/>
      The function of the circuit analysis tool is to produce a list of suspected failing nets.
      <br/>
      An example of such a list is shown in FIG. 3.
    </p>
    <p num="20">
      The precision with which the suspected netlist vectors identify failure locations depend on the adequacy of the design diagnostic model, or simulation model.
      <br/>
      The circuit designer's input is needed to establish an accurate and efficient model of a design.
    </p>
    <p num="21">
      In the design role, simulation models are intended to use as much computing time as necessary to find the minimum number of suspected failed netlist nodes.
      <br/>
      For example, for a circuit designer to run a simulation model of one failed die make take several minutes to one hour to produce one or two suspected failure vectors.
      <br/>
      This manner of operation is consistent with the role the circuit analysis tool usually plays in circuit design and verification.
      <br/>
      To adapt the simulation model to translate functional test data within a production wafer fab, the output datastream of suspected netlist nodes is caused to be much higher than in the circuit design and verification role.
      <br/>
      In order to provide real-time failure information via logic mapping, the simulation model running in a production fab should be able to diagnose a failed die within one minute, even if that means that the list of suspected failing nodes will be larger (e.g., 3 to 10 nodes).
    </p>
    <p num="22">
      Furthermore, to allow for production use, the simulation model is adapted to run in batch mode, or background mode.
      <br/>
      Hands-off, continuous processing of test data and enterprise-wide, real-time distribution of results is thereby achieved.
    </p>
    <p num="23">
      When operating in batch mode, the output of the simulation model is continuously directed to a translator for conversion to a standard defect file format.
      <br/>
      A suitable translator is provided by the Merlin CAD navigation framework software of Knights Technology.
      <br/>
      The framework software converts the output datastream of suspected failing nodes to a physical bitmap file using layout data for the wafer.
      <br/>
      The framework software also allows the physical bitmap may be overlaid onto the device layout as a layout trace, as shown in FIG. 7.
      <br/>
      The layout trace may be displayed in as many dimensions as there are photomasks.
      <br/>
      Preferably, each photomask level's trace of the suspect failing netlist nodes is output into a separate file so that precise correlations with in-line defect data can be made (i.e., metal defects can be compared to a suspected node's fail trace at the metal photomask).
    </p>
    <p num="24">
      The physical bitmap file may be exported to various yield management tools such as the Yield Manager tool of Knights Technology.
      <br/>
      Yield management tools provide various visualization options, e.g., defect wafermaps, bitmaps, and charts.
      <br/>
      Kill ratio charts, an example of which is shown in FIG. 8, are available to evaluate the degree of defect matches to logic bitmap failures.
      <br/>
      Bitmap failure intensity stackmaps, an example of which is shown in FIG. 9, can suggest areas of the layout susceptible to failure If desired, bitmap data may be output into any of various standard output formats for detect data, e.g., KLA format, ESDA format, etc.
      <br/>
      In this manner, logic mapping data and in-line test data may be collected in a common format for further processing.
    </p>
    <p num="25">
      An alternative representation of the Logic Map process is shown in FIG. 10. Datalogs for each die tested are sent to a server (e.g., a Unix server running an ATPG software package such as Fastscan, Sunrise, etc.).
      <br/>
      If a chip experiences a fundamental failure, then the datalog obtained for that chip is not usable.
      <br/>
      Typically, however, a large fraction of the datalogs are usable.
      <br/>
      The server translates these datalogs into an appropriate simulation format.
      <br/>
      Logic Map uses the translated datalogs and design data to generate the X,Y coordinates of failing netlist nodes.
      <br/>
      As described more fully hereinafter, the design data used by the logic mapper may include, for example, input from GDSII layout files, netlist data, and LVS (Layout Versus Schematic) data.
      <br/>
      After X,Y coordinate data has been obtained, the X,Y coordinate data may then be used for both failure analysis and yield analysis.
      <br/>
      Whereas failure analysis is usually a rather prolonged process, yield analysis has real-time data requirements.
      <br/>
      The Logic Map process satisfies these real-time data requirements as described hereinafter.
    </p>
    <p num="26">
      Referring to FIG. 11, a diagram is shown of a Logic Map system in accordance with one embodiment of the invention.
      <br/>
      As previously described in relation to FIG. 10, datalogs for each die tested are sent to a server (e.g., a Unix server running an ATPG software package such as Fastscan, Sunrise, etc.) where a fraction of the datalogs are translated into an appropriate simulation format.
      <br/>
      Logic Map uses the translated datalogs and design data to generate the X,Y coordinates of failing netlist nodes.
      <br/>
      This information may be stored in a database of a yield management tool such as the Yield Manager tool of Knights Technology.
    </p>
    <p num="27">
      The Logic Map translator converts incoming diagnostic lists into a standard defect data format.
      <br/>
      The resulting diagnostic data is combined with in-line inspection data within the Yield Manager database.
      <br/>
      In an exemplary embodiment, the Yield Manager database is used to overlay in-line defect data and Logic Map data.
      <br/>
      Once the in-line defect data and the Logic Map data reside in a common format on a common database, client software such as the Yield Manager client, running on high-end (e.g., Windows NT) PCs, may be used to enable visualization of the data in various ways, e.g., wafermaps, charts, layout, etc.
      <br/>
      In addition, data may be exported in various file formats to facilitate data sharing.
    </p>
    <p num="28">
      As previously described, many overlay and visual aids are available once the failing netlist trace is translated to a standard defect file format.
      <br/>
      Defect matching may be performed based on a user-defined proximity radius from defects (inline) to any point on a Logic Mapper trace.
      <br/>
      Yield management tools can be used to pre-filter defect data to eliminate "nuisance" defects prior to matching.
      <br/>
      Defects with product-correlated hits can be exported back to the CAD navigation framework, e.g., for FIB (Focussed Ion Beam) navigation and de-processing.
      <br/>
      The defects which are hits can be selectively analyzed as a group to determine what defect types are most likely to be fatal and to determine other important distinctions such as defect size or intensity distribution.
      <br/>
      There results a new paradigm of how to use test data.
    </p>
    <heading>EXAMPLE</heading>
    <p num="29">
      Logic Map was implemented on a Texas Instruments production line.
      <br/>
      Details of the particular implementation are shown in FIG. 12. The layout of Figure 12 is such that operations performed are represented in the center column and data (or program) inputs are represented in the left-hand and right-hand flanking columns.
      <br/>
      The upper portion of the figure relates to electrical diagnostic flow.
      <br/>
      Note that, as compared to conventional electrical diagnostic flow (FIG. 2), in FIG. 12, wafers are tested rather than packaged devices.
      <br/>
      A test program is modified in order to obtain detailed failure data rather than simple "go/no-go" data as in a conventional production line.
      <br/>
      A die decode table and a decode translator are developed for each device type to ensure that test data associated with a particular die on a wafer is mapped to the correct die coordinates within the Yield Manager database.
    </p>
    <p num="30">
      The lower portion of the figure relates to the Logic Map process flow.
      <br/>
      Diagnostic data is translated into a format readable by a polygon file generator.
      <br/>
      The polygon file generator reads the translated diagnostic data and processes it against the database previously obtained (FIG. 4) in order to generate polygon files.
      <br/>
      These polygon files may in turn be translated to obtain standard defect files of a desired format.
    </p>
    <p num="31">
      It will be appreciated by those of ordinary skill in the art that the invention can be embodied in other specific forms without departing from the spirit or essential character thereof.
      <br/>
      The presently disclosed embodiments are therefore considered in all respects to be illustrative and not restrictive.
      <br/>
      The scope of the invention is indicated by the appended claims rather than the foregoing description, and all changes which come within the meaning and range of equivalents thereof are intended to be embraced therein.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of automated defect localization in the testing of semiconductor integrated circuits, comprising the steps of:</claim-text>
      <claim-text>testing the logic integrated circuits to obtain generalized failure data; inputting the generalized failure data and circuit models describing logical operations of the integrated circuits to a circuit analysis tool; obtaining from the circuit analysis tool first localized probable defect data; performing in-line inspection of the integrated circuits to obtain second localized probable defect data;</claim-text>
      <claim-text>and correlating the first and second localized probable defect data.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein the steps of inputting the generalized failure data to a circuit analysis tool and obtaining from the circuit analysis tool first localized probable defect data are performed continuously using at least one programmed computer.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1, wherein correlating the first and second localized probable defect data comprises producing a visual overlay of the first and second localized probable defect data.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, wherein the integrated circuits are logic circuits having built-in self-test capabilities.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein the generalized failure data is obtained using end-of-line testing of the integrated circuits.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5, wherein the integrated circuits are tested in wafer form.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, wherein obtaining from the circuit analysis tool first localized probable defect data comprises: creating a database against which the logic defect data is processed to obtain physical defect data;</claim-text>
      <claim-text>and processing the logical defect data against the database to obtain physical defect data.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7, wherein creating the database comprises translating design information from a first format to a second format.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A system for testing logic semiconductor integrated circuits, comprising: a circuit analysis tool;</claim-text>
      <claim-text>and means for automatically:</claim-text>
      <claim-text>- applying to the circuit analysis tool generalized failure data; - obtaining from the circuit analysis tool localized probable defect data and circuit models describing logical operations of the integrated circuits; representing the localized probable defect data in a standard format;</claim-text>
      <claim-text>and storing the localized probable defect data on a database server accessible to multiple client machines.</claim-text>
    </claim>
  </claims>
</questel-patent-document>