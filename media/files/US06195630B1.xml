<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06195630B1.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as first publication">
      <document-id>
        <country>US</country>
        <doc-number>06195630</doc-number>
        <kind>B1</kind>
        <date>20010227</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6195630</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B1</original-publication-kind>
    <application-reference family-id="24971326" extended-family-id="42035958">
      <document-id>
        <country>US</country>
        <doc-number>09309485</doc-number>
        <kind>A</kind>
        <date>19990510</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09309485</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43064490</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>30948599</doc-number>
        <kind>A</kind>
        <date>19990510</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09309485</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>73921996</doc-number>
        <kind>A</kind>
        <date>19961029</date>
        <priority-linkage-type>1</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1996US-08739219</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010227</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <term-of-grant>
      <disclaimer/>
    </term-of-grant>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/50        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>50</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>703018000</text>
        <class>703</class>
        <subclass>018000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>702060000</text>
        <class>702</class>
        <subclass>060000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707999101</text>
        <class>707</class>
        <subclass>999101</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>716109000</text>
        <class>716</class>
        <subclass>109000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/5022</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>5022</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2217/78</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2217</main-group>
        <subgroup>78</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99942</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99942</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>5</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>19</number-of-drawing-sheets>
      <number-of-figures>24</number-of-figures>
      <image-key data-format="questel">US6195630</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Three-dimensional power modeling table having dual output capacitance indices</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HUANG XIAOLI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5553008</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5553008</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>HAMID ADNAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5655109</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5655109</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>KHOUJA ADEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5682320</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5682320</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>SARIN HARISH K</text>
          <document-id>
            <country>US</country>
            <doc-number>5692160</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5692160</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>KHOUJA ADEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5696694</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5696694</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>GIRAMMA DAVID J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5726918</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5726918</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>ROETHIG WOLFGANG</text>
          <document-id>
            <country>US</country>
            <doc-number>5835380</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5835380</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>OLSON JANET, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5838579</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5838579</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>MAUSKAR ASHUTOSH S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5903476</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5903476</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>73921996</doc-number>
              <kind>A</kind>
              <date>19961029</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5903476</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Synopsys, Inc.</orgname>
            <address>
              <address-1>Mountain View, CA, US</address-1>
              <city>Mountain View</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SYNOPSYS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Mauskar, Ashutosh S.</name>
            <address>
              <address-1>Sunnyvale, CA, US</address-1>
              <city>Sunnyvale</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Olson, Janet</name>
            <address>
              <address-1>Saratoga, CA, US</address-1>
              <city>Saratoga</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Sproch, James</name>
            <address>
              <address-1>Saratoga, CA, US</address-1>
              <city>Saratoga</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Lin, Yueqin</name>
            <address>
              <address-1>Sunnyvale, CA, US</address-1>
              <city>Sunnyvale</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Nedelchev, Ivailo</name>
            <address>
              <address-1>Santa Clara, CA, US</address-1>
              <city>Santa Clara</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Wagner, Murabito &amp; Hao LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Teska, Kevin J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system and method for modeling power consumed by a logic cell in a estimation process over an integrated circuit, represented by logic cells and connections between cells, using a three dimensional power modeling table (3-D power table).
      <br/>
      The 3-D power table utilizes dual output capacitance indices and a single input transition time (which can be a weighted average input transition time) index.
      <br/>
      Each 3-D power table of the present invention includes a set of index reference points for the first output capacitance index, a set of index reference points for the second output capacitance index, a set of index reference points for the input transition time, and a set of power reference points that correspond to the above index reference points.
      <br/>
      For a given set of values input for: (1) the first output capacitance index; (2) the second output capacitance index; and (3) the input transition time index, linear interpolation is performed across the three indices to arrive at the given output power consumption value.
      <br/>
      The 3-D power tables are used to accurately model the power consumed by a cell having two outputs which are functionally equal or opposite, for instance, a flip-flop with Q and Q' outputs.
      <br/>
      A library developer can specify a 3-D power table having three indices, input transition time, output1 capacitance (e.g., for Q), and output2 capacitance (e.g., for Q').
      <br/>
      The power value output is then an accurate measure of the total power consumed by the dual output cell during the output transition.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This is a continuation of application Ser.
      <br/>
      No. 08/739,219 file on Oct. 29, 1996, now U.S. Pat. No. 5,903,476.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="3">
      The present invention relates to the field of electronic design automation (EDA).
      <br/>
      More specifically, the present invention relates to the field of power modeling for logic cells used in EDA applications.
    </p>
    <p num="4">2. Prior Art</p>
    <p num="5">
      In the field of EDA, in one level of abstraction in the design process, integrated circuit (IC) designs are represented by cells (e.g., logic cells) and interconnections between the cells.
      <br/>
      Often the IC design has associated with it a number of constraints that the EDA system needs to satisfy during logic synthesis and/or optimization.
      <br/>
      These constraints include timing constraints, area constraints, and power consumption constraints.
      <br/>
      There are well known EDA processes that determine if a synthesized IC design meets the given constraints and that perform certain steps if the constraints are not met.
      <br/>
      If a design does not meet one or more constraints after optimization, it is often redesigned by a designer in order to fall within the prescribed constraints.
      <br/>
      Therefore, it is important for an EDA system to accurately determine the amount of power consumed by the individual cells of the IC design so that the EDA system can accurately report whether or not the IC design, as an aggregation of individual cells, meets the prescribed power constraints.
    </p>
    <p num="6">
      Circuits or logic elements are represented in EDA by logic cells whose electrical, timing, logic, and power characteristics and behavior are represented in an entry in a library as a library cell.
      <br/>
      The libraries are stored in a computer readable format within a computer readable memory for use by appropriate EDA processes.
      <br/>
      The libraries are typically technology dependent, e.g., CMOS, FPGA, etc., and vary by technology manufacturer (e.g., LSI, Xilinx, etc.).
      <br/>
      The developer of the library of logic cells needs to characterize each individual logic cell and report, in the library, the above logic cell characteristics, including the power consumed by the logic cell.
      <br/>
      The more accurate are the individual logic cell characterizations found in the logic cell library, the more accurate is the EDA aggregate report regarding all the cells of a given integrated circuit design.
    </p>
    <p num="7">
      Currently, prior art library developers can only specify one internal power lookup table at each output pin or input pin of a library cell and one leakage power value per library cell.
      <br/>
      The internal power table associated with an output pin is then referenced when the output pin switches (transitions), regardless of the state of any signals at the time of transition or regardless of which input pin path caused the output transition.
      <br/>
      An example is shown with reference to FIG. 1A. A logic cell 10 is shown having four gates 11, 13, 15, 17, and 19 and seven inputs, A-G, and one output, O, taken from gate 19.
      <br/>
      The prior art library representation for cell 10 includes a power consumption model that indicates a certain amount of estimated power consumption for a transition at the output pin 19a, regardless of what signal state or input pin caused the transition.
      <br/>
      The power consumed by the cell within this prior art power consumption model for a particular output transition is basically an average of all power consumed by the cell as a result of each possible input state that could cause output O to transition.
    </p>
    <p num="8">
      This prior art modeling technique leads to inaccuracies during power estimation because the actual power consumed by logic cell 10 varies depending on which input caused the output transition or the state (condition) of any signals existing at the time of the transition.
      <br/>
      For instance, if input G (FIG. 1A) caused the output transition, only gate 19 is used to cause output O to transition.
      <br/>
      However, if inputs A and B caused the output transition, gates 11, 13 and 19 are used, thereby creating a longer path from the inputs (A/B) to the output (O) and thereby consuming more power over the former case.
      <br/>
      Although the prior art library model gives an average power consumption estimation by averaging the output transition power consumption over each input transition, for any particular use of logic cell 10 (e.g., for any particular application of logic signals to the inputs A-G) the prior art model can and does often give inaccurate power consumption results.
      <br/>
      What is needed is a power modeling system and method that advantageously allows power modeling of a library cell to include information regarding the logic cell's power consumption given an input transition over a particular input pin of the logic cell.
      <br/>
      One aspect of the present invention provides such advantageous functionality.
    </p>
    <p num="9">
      Furthermore, the prior art power consumption model gives a library cell's power consumption for an output transition regardless of the state of the input signals that caused the transition.
      <br/>
      In many instances, a logic cell consumes different amounts of power depending on the condition of the input signals that caused the transition.
      <br/>
      For instance, FIG. 1B illustrates a random access memory cell 21 (RAM) having an address bus input (ADDR), a data bus input/output (DATA), a read signal, a write signal, and an enable signal (EN).
      <br/>
      Depending on whether the RAM cell 21 is in read or write mode (as indicated by the state of input signals), the internal and leakage power used by the RAM cell 21 can be quite different.
      <br/>
      Also, depending on whether or not RAM cell 21 is enabled also impacts the power consumption of RAM cell 21.
      <br/>
      The prior art power model assigns one "averaged" power consumption amount for RAM cell 21 regardless of the state of the input signals.
      <br/>
      Therefore, the prior art model either reports too much power consumption or too little power consumption for an application of the RAM cell 21 that performs mostly reads or that performs mostly writes (or vice-versa).
      <br/>
      What is needed is a power modeling system and method that advantageously allows a library cell to include information regarding the logic cell's particular power consumption given a particular condition (e.g., signal state) that exists contemporaneously with a transition causing the power consumption.
      <br/>
      One aspect of the present invention provides such advantageous functionality.
    </p>
    <p num="10">
      Another aspect of EDA power estimation is common power.
      <br/>
      Common power is the power consumed in the common logic among multiple outputs.
      <br/>
      It is also the power consumed in the logic which may transition without the output changing.
      <br/>
      FIG. 1C illustrates a logic cell 50 for a case of common logic shared between two outputs Y and Z. In this case, input A can cause both outputs Y and Z to change.
      <br/>
      However, the library developer needs to ensure that the power of gate 51 is not counted twice in the power model.
      <br/>
      This is difficult to perform in prior art library power modeling because the power consumed for a transition of output Y and Z is reported irrespective of the input lines or the conditions of the input signals that caused the transition.
      <br/>
      What is also needed is a system to provide accurate power modeling for the common logic case shown in FIG. 1C.
    </p>
    <p num="11">
      Internal power is any power dissipated within the boundary of a cell.
      <br/>
      This includes short circuit power, as well as the power dissipated due to the charging and discharging of any other existing capacitances internal to the cell.
      <br/>
      This definition does not distinguish between a cell's short circuit power and other power dissipated internally due to the charging and discharging of internal capacitances during switching.
      <br/>
      Short circuit power is the power consumed by the cell during a signal transition when both the P and N type transistors can be ON simultaneously.
      <br/>
      During this short time, current flows from Vdd to ground causing short circuit power dissipation.
      <br/>
      A cell's internal power is the sum of the internal power of all of the cell's inputs and outputs as modeled in the library.
    </p>
    <p num="12">
      Internal power of a cell is determined by prior art libraries based on: (1) a single value representing the output load capacitance of an output pin of the cell; and (2) a value representing the input transition time of a signal of an input pin of the cell.
      <br/>
      Generally, the longer the transition time, the more power is consumed and the more the load capacitance, the more power is consumed.
      <br/>
      The exact function of power consumption based on input transition time and output load capacitance is determined based on linear interpolation within a model of reference index and reference power points.
      <br/>
      FIG. 2A illustrates a sample two dimensional power lookup table 30 of the prior art.
      <br/>
      The prior art table 30 is two dimensional because two input reference indices are used, one along the y dimension which represents output load capacitance (pf) of the cell, and one along the x-dimension which represents weighted average input transition time (ns).
      <br/>
      The power value output is then modeled along the vertical (z-axis).
      <br/>
      The library cell's power model includes a group of reference power points 32a-32d that corresponds to reference index points along the x-dimension and y-dimension.
      <br/>
      The reference index and power points are included in the power model for the representative library cell.
      <br/>
      A particular power consumption value at point 32 representing a particular input transition time and a particular output load capacitance (e.g., x'=0.34, y'=110.1) is determined by linear interpolation with respect to the reference index and power points.
      <br/>
      The above library models are formulated on an output pin-by-output pin basis for each cell.
    </p>
    <p num="13">
      FIG. 2B illustrates an example cell 40 (e.g., a flip-flop) having a first output 42 (e.g., O) and a second output 44 (e.g., O') whereby the first output 42 and the second output 44 switch contemporaneously.
      <br/>
      Using the power model 30 of FIG. 2A, each output of cell 40 has its own power consumption model since only one output load capacitance value is allowed in the model 30.
      <br/>
      However, it is often difficult for library developers to apportion the output power between the output 42 and output 44 for cell 40.
      <br/>
      This is the case for one reason because power consumption is measured by input current to cell 40, and since both outputs switch contemporaneously, only one current is measured for both outputs.
      <br/>
      Further, since many library developers do not want to analyze the specific internal circuitry 41 causing the second output 44 to switch, it is difficult to apportion the power consumption of cell 40 between the first output 42 and the second output 44 on a gate level.
      <br/>
      What results in prior art power modeling for cell 40 is often a doubling of the power consumption for cell 40 whereby the same power consumption value is placed on both output 42 and output 44 in the library.
      <br/>
      This causes an over estimation of the power consumed by cell 40 during power estimation processes.
      <br/>
      Alternatively, in the prior art model, only one power consumption value is placed on output 42 and nothing on output 44 (or vice-versa), causing an under estimation of the power consumed by cell 40.
      <br/>
      What is needed is a method and system for providing increased accuracy in power estimation for a cell having two outputs which switch contemporaneously.
      <br/>
      The present invention provides these advantages.
    </p>
    <p num="14">
      Accordingly, the present invention provides a system and method that advantageously allows power modeling of a library cell to include information regarding the logic cell's power consumption given an input transition over a particular input of the logic cell.
      <br/>
      Further, the present invention provides power modeling of a library cell which includes information regarding the logic cell's power consumption given a particular condition (e.g., signal state) that exists contemporaneously with a pin transition causing the power consumption.
      <br/>
      The present invention also provides the above system including an accurate power modeling for the common logic case described above.
      <br/>
      The present invention yet provides a system, as above, offering increased accuracy in power estimation for a cell having two outputs which switch contemporaneously.
      <br/>
      By allowing a gate-level power estimation process to be more accurate, the present invention advantageously avoids the need to perform a lengthy and design-size limited transistor-level cost estimation process.
      <br/>
      These and other advantages not specifically discussed above will become clear within discussions of the present invention herein.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="15">
      A system and method are described for modeling power consumed by a logic cell in a computer controlled power estimation process estimating the power consumed for an integrated circuit represented by logic cells and connections between cells using a three dimensional power modeling table.
      <br/>
      The three dimensional power modeling table (3-D power table) utilizes dual output capacitance indices and a single input transition time (which can be a weighted average input transition time).
      <br/>
      Each 3-D power table of the present invention includes a set of index reference points for the first output capacitance index, a set of index reference points for the second output capacitance index, a set of index reference points for the input transition time, and a set of power reference points that correspond to the above index reference points.
      <br/>
      For a given set of values input for: (1) the first output capacitance index; (2) the second output capacitance index; and (3) the input transition time index, linear interpolation is performed across the three indices to arrive at the given output power consumption value.
      <br/>
      The 3-D power tables are used to accurately model the power consumed by a cell having two outputs which are functionally equal or opposite, for instance, a flip-flop with Q and Q' outputs.
      <br/>
      A library developer can specify a 3-D power table having three indices, input transition time, output1 capacitance (e.g., for Q), and output2 capacitance (e.g., for Q').
      <br/>
      The power value output is then an accurate measure of the total power consumed by the dual output cell during the output transition.
      <br/>
      Because there are many complementary outputs in many IC designs, the present invention adds accuracy in the overall power estimation process.
    </p>
    <p num="16">
      Specifically, an embodiment of the present invention includes a computer readable memory having stored therein a power consumption lookup table used for estimating power consumed by a physical circuit of an integrated circuit device, the power consumption lookup table comprising: a first reference index comprising a plurality of first reference index values representing output load capacitances for a first output of a library cell, the library cell representing the physical circuit; a second reference index comprising a plurality of second reference index values representing output load capacitances for a second output of the library cell; a third reference index comprising a plurality of third reference index values representing input transition times of an input signal received at an input of the library cell, wherein each distinct combination of a first reference index value, a second reference index value, and a third reference index value forms a distinct coordinate position within the power consumption lookup table; and a plurality of reference power values wherein each distinct coordinate position contains one reference power value associated therewith and wherein the plurality of reference power values represent amounts of power physically dissipated by the physical circuit based on a transition of the first output.
      <br/>
      Embodiments of the present invention include the above and wherein the first output and the second output transition contemporaneously.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      FIG. 1A illustrates an exemplary cell wherein power consumption varies depending on which input transition path caused the output transition.
      <br/>
      FIG. 1B illustrates an exemplary cell wherein power consumption varies depending on the state of the input signals at the time of the power measurement.
      <br/>
      FIG. 1C illustrates an exemplary cell exhibiting the need for common logic power modeling.
      <br/>
      FIG. 2A illustrates a prior art two dimensional library model for power consumption of a logic cell.
      <br/>
      FIG. 2B illustrates an exemplary logic cell having a first and a second output that transition contemporaneously.
      <br/>
      FIG. 3 is a logical block diagram of a computer system utilized in accordance with the present invention power modeling embodiments.
      <br/>
      FIG. 4 illustrates a generic state dependent power modeling structure in accordance with one embodiment of the present invention.
      <br/>
      FIG. 5 illustrates an exemplary library cell having different power consumption functions depending on the state of its input signals.
      <br/>
      FIG. 6A illustrates a first exemplary synchronous RAM cell having different power consumption functions depending on the state of its input signals.
      <br/>
      FIG. 6B illustrates a second exemplary asynchronous RAM cell having different power consumption functions depending on the state of its input signals.
      <br/>
      FIG. 7 illustrates an exemplary library cell having different power consumption functions depending on which input pin path transitioned to cause the power event.
      <br/>
      FIG. 8 illustrates a generic path dependent power modeling structure in accordance with one embodiment of the present invention.
      <br/>
      FIG. 9A is a schematic diagram of an exemplary library cell having two output signals that switch contemporaneously and are opposite.
      <br/>
      FIG. 9B is a schematic diagram of an exemplary library cell having output signals that may transition independently of each other.
      <br/>
      FIG. 10 illustrates an exemplary library cell having two outputs that switch contemporaneously.
      <br/>
      FIG. 11 illustrates a three dimensional power lookup table (3-D power LUT) having dual output load capacitance indices used in accordance with the present invention.
      <br/>
      FIG. 12A is a generic data structure for an internal power group using a 3-D LUT of the present invention.
      <br/>
      FIG. 12B is a generic data structure for an internal power group using both a 3-D LUT and state dependent modeling in accordance with the present invention.
      <br/>
      FIG. 12C is a generic data structure for an internal power group using both a 3-D LUT and path dependent modeling in accordance with the present invention.
      <br/>
      FIG. 12D is a generic data structure for an internal power group using a 3-D LUT and both state and path dependent modeling in accordance with the present invention.
      <br/>
      FIG. 13 is an exemplary flip flop library cell.
      <br/>
      FIG. 14 is an overall flow chart of steps and data used within an exemplary embodiment of the power analysis processes of the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="18">
      In the following detailed description of the present invention, a three dimensional power modeling table having dual output capacitance indices, numerous specific details are set forth in order to provide a thorough understanding of the present invention.
      <br/>
      However, it will be obvious to one skilled in the art that the present invention may be practiced without these specific details.
      <br/>
      In other instances well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.
    </p>
    <p num="19">I. NOTATION AND NOMENCLATURE</p>
    <p num="20">
      Some portions of the detailed descriptions which follow are presented in terms of steps, procedures, logic blocks, processing, and other symbolic representations of operations on data bits within a computer memory.
      <br/>
      These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art.
      <br/>
      A procedure, logic block, process, step, etc., is here, and generally, conceived to be a self-consistent sequence of steps or instructions leading to a desired result.
      <br/>
      The steps are those requiring physical manipulations of physical quantities.
      <br/>
      Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a computer system.
      <br/>
      It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.
    </p>
    <p num="21">
      It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities.
      <br/>
      Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the present invention, discussions utilizing terms such as "processing" or "computing" or "calculating" or "determining" or "displaying" or the like, refer to the action and processes of a computer system (e.g., 112 of FIG. 3), or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.
    </p>
    <heading>COMPUTER SYSTEM ENVIRONMENT</heading>
    <p num="22">
      Refer to FIG. 3 which illustrates an exemplary computer system 112.
      <br/>
      Within the following discussions of the present invention, certain processes, steps, structures, models, tables, and libraries are discussed that are realized, in one implementation, as a series of instructions (e.g., software program) and/or data that reside within computer readable memory units of system 112 and executed and/or read by processors of system 112.
      <br/>
      When executed, the instructions cause the computer system 112 to perform specific actions and exhibit specific behavior which are described in detail to follow where appropriate.
      <br/>
      Further, the models, libraries, and data structures discussed herein are stored in computer readable memory units of system 112 and represent physical characteristics and behaviors (e.g., power consumption) of physical integrated circuits (e.g., gates, connections between gates, etc.).
    </p>
    <p num="23">
      In general, computer system 112 of FIG. 3 used in accordance with the present invention comprises an address/data bus 100 for communicating information, one or more central processors 101 coupled with the bus 100 for processing information and instructions, a computer readable volatile memory unit 102 (e.g., random access memory, static RAM, dynamic, RAM, etc.) coupled with the bus 100 for storing information and instructions for the central processor(s) 101, a computer readable non-volatile memory unit (e.g., read only memory, programmable ROM, flash memory, EPROM, EEPROM, etc.) coupled with the bus 100 for storing static information and instructions for the processor(s) 101. System 112 also includes a mass storage computer readable data storage device 104 (hard drive or floppy) such as a magnetic or optical disk and disk drive coupled with the bus 100 for storing information and instructions.
      <br/>
      Optionally, system 112 can include a display device 105 coupled to the bus 100 for displaying information to the computer user, an optional alphanumeric input device 106 including alphanumeric and function keys coupled to the bus 100 for communicating information and command selections to the central processor(s) 101, an optional cursor control device 107 coupled to the bus for communicating user input information and command selections to the central processor(s) 101, and an optional signal generating device 108 coupled to the bus 100 for communicating command selections to the processor(s) 101.
    </p>
    <p num="24">II. STATE DEPENDENT POWER MODELING</p>
    <p num="25">
      The present invention provides a library cell model (state dependent model) for the power consumption of a particular pin of a library cell wherein the power model depends on the condition or state of specific signals, e.g., the state of specific input, output, internal and/or bidirectional signals that are present contemporaneously with a transition over a pin causing the power consumption.
      <br/>
      The state dependent model of the present invention is particularly advantageous for library cells whose actual power consumption varies depending on the state of certain signals (e.g., input, output, internal, bidirectional) pertinent to the library cell.
      <br/>
      One example given above is the random access memory cell (or RAM) which consumes different amounts of power depending on whether it is in the read state or in the write state, as indicated by the state of certain signals (e.g., input signals) of the library cell.
      <br/>
      Further, the RAM cell consumes different power amounts whether or not it is enabled.
      <br/>
      Each of these conditions can be represented by functions of the state of certain signals (e.g., input signals, in this case) including the read signal, the write signal, and the enable signal, etc.
      <br/>
      The present invention provides a power model stored within computer readable memory that allows a library developer to indicate particular power consumption amounts for a library cell, for a transition over a designated pin, depending on the state of certain signals of the library cell that exist contemporaneously with the transition over the designated pin.
    </p>
    <p num="26">Within the present invention, the library cell and its power model (e.g., whether state dependent, power dependent, or three dimensional power table) represent the physical power consumption of a particular, physical, integrated circuit element.</p>
    <p num="27">
      With respect to state dependent modeling, a state that exists "contemporaneously" with the transition of a designated pin is defined herein.
      <br/>
      A signal transition over an input pin can cause a transition of a designated pin of a state dependent power model.
      <br/>
      In addition, the state of any other pins (e.g., input, output, internal, bidirectional) of the library cell are important in defining the power consumption of the library cell at the time of the dedicated pin's transition.
      <br/>
      The state of "any other" signal pins can also include the static and/or transitional state of the above referenced input pin.
      <br/>
      The state of these "any other" pins is evaluated contemporaneously with a signal transition over the designated pin within the state dependent power model of the present invention.
      <br/>
      The term contemporaneously with a signal transition on the designated pin means: (1) at or near the time of this transition of the designated pin; and/or (2) at or near the time of a signal transition over the above referenced input pin that causes the designated pin to transition.
      <br/>
      Typically these two events occur closely in time, but need not within the scope of the present invention.
    </p>
    <p num="28">
      FIG. 4 illustrates a generic data structure 250 utilized in accordance with the present invention state dependent model to represent power consumption within a logic cell.
      <br/>
      Data structure 250 resides within computer readable memory units of system 112 (FIG. 3) and is accessed by processor 101 during power estimation (see FIG. 14).
      <br/>
      The particular logic cell modeled by structure 250 is identified by a cell name designation (data field) 252.
      <br/>
      A cell library includes many logic cell power models 250, one for each distinct cell supported by the technology specific library.
      <br/>
      For each pin of the logic cell whose transition causes a power consumption event, the present invention state dependent data structure 250 allows a library cell developer to specify: (1) certain conditions, e.g., signal states; and (2) the specific power consumed by the logic cell during those conditions with respect to a transition over a designated pin.
      <br/>
      For instance, FIG. 4 illustrates power consumption information for one pin of the designated cell; this designated pin is identified by the pin designation field 254.
      <br/>
      It is appreciated that one pin is shown for clarity only and that structure 250 can contain analogous definitions for multiple designated pins of the designated cell.
      <br/>
      This aspect is shown in an example discussed further below.
    </p>
    <p num="29">
      For each pin designation 254, the structure 250 contains an identification of whether the designated pin is an input pin, output pin, internal pin, or bidirectional pin.
      <br/>
      This information is contained in the input/output/internal/bidirectional designation 256.
      <br/>
      It is appreciated that in many logic cells, the transition of an input pin causes a power event within the logic cell irrespective of whether or not an output signal transitions.
      <br/>
      For example, the clock pulse on a flip-flop cell causes a power event within the flip-flop cell although the output (Q) may not change.
      <br/>
      Further, in many combinational logic circuits, an input transition can cause many intermediate circuits to alter state while the final output of the cell does not transition in response to the input transition.
    </p>
    <p num="30">
      For each pin designation 254, the structure 250 of FIG. 4 contains one or more internal power headers 258 indicating that power modeling information is to follow (within an internal power group 265) regarding the designated pin of the designated cell.
      <br/>
      Within each internal power group 265 associated with an internal power header 258, the present invention contains an identification designation 260 of a power look-up table used in determining the power consumption for the designated pin/cell.
      <br/>
      Also within each internal power group 265 associated with an internal power header 258, the present invention contains a list of power reference values 262 for use in conjunction with the designated power look-up table 260 for determining the power consumption for the designated pin/cell.
    </p>
    <p num="31">
      Also included within each internal power group 265 of FIG. 4 is a "when" clause 264 indicating the state of specific signals of the logic cell for which the particular internal power group 265 applies.
      <br/>
      The when clause 264 typically contains a function of selected signals to represent the identified or designated static state.
      <br/>
      Although shown as at the end of an internal power group 265, the when clause 264 can be positioned at any place within the internal power group 265 within the scope of the present invention.
      <br/>
      The particular internal group 265 is used to evaluate the power consumption of the library cell provided the state of the selected signals 264 exists contemporaneously with a transition over the designated pin 254.
    </p>
    <p num="32">During power analysis, if the state of the identified signals at 264 is present contemporaneously with a transition at the pin identified by designation 254, then the power information designated within 260 and 262 is used to determine the power consumed by the logic cell designated by 252 based on a given input signal transition time and/or one or more output capacitance values associated with the power event.</p>
    <p num="33">
      As shown in FIG. 4, a particular pin can have more than one internal power group.
      <br/>
      Structure 250 contains a second internal power group 266 for the designated pin/cell which contains a different "when" clause for the designated pin.
      <br/>
      It is appreciated that the functions of each "when" clause for a designated pin are mutually exclusive within the preferred embodiment the present invention.
      <br/>
      At the completion of a pin designation, the present invention data structure 250 includes a default power consumption group (270, 272, 273) for the designated pin.
      <br/>
      This default internal power group contains the default power consumption values when none of the when conditions are true for the designated pin 254.
      <br/>
      Designation 270 indicates an internal power header while designation 272 indicates a power look-up table for the default condition.
      <br/>
      Designation 273 indicates the default power values used for the designated power look-up table 272.
      <br/>
      It is appreciated that the absence of a "when" clause within an internal power group of structure 250 indicates the default cause for the designated pin.
      <br/>
      State dependent power model structures based on designated input pins do not need default internal power groups.
      <br/>
      State dependent power model structures based on designated output pins generally require a default internal power group unless their associated internal power groups exhaustively define each possible input state.
    </p>
    <p num="34">
      It is appreciated that within the state dependent power model of the present invention, when statements are allowed to be Boolean expressions of the library cell signals (e.g., input, output, internal, bidirectional).
      <br/>
      This allows library developers to specify state dependent power which is related to both input and output pins for a given library cell.
      <br/>
      Therefore, under the present invention there is no restriction that there can only be one internal power table per output or input pin (as in the prior art).
      <br/>
      In accordance with the present invention, there can be multiple internal power tables defined per designated output or input pin.
      <br/>
      Each power table of the multiple power tables is represented by one internal power group of the state dependent model data structure 250 (FIG. 4).
      <br/>
      This is advantageous because a designated pin/cell can have multiple different power consumption functions based on different input states.
    </p>
    <p num="35">
      Although a number of different programming and data structure languages can be used to implement the specifics of the generic outline of FIG. 4, one exemplary structure of the state dependent power modeling of the present invention is described below.
      <br/>
      The exemplary power model is representative of an exemplary cell 210 shown in FIG. 5.
      <br/>
      The cell 210 contains two logic gates 212 and 216, three inputs A, B and C, and one output Z. The look-up tables (LUTs), input_by_trans and output_by_cap, are one dimensional LUTs because they contain only one input index, however, two or three dimensional LUTs are equally well suited for application with the state dependent structure shown below.
      <br/>
      These LUTs contain reference index values and their structures are shown following the exemplary power model structure.
    </p>
    <p num="36">Exemplary State Dependent Power Model Structure</p>
    <p num="37">
      --
      <br/>
      -- cell(mycell) +
      <br/>
      --      pin(A) +
      <br/>
      --         direction : input;
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(input_by_trans) +
      <br/>
      --                values("1.5, 2.5, 4.7");
      <br/>
      --             }
      <br/>
      --             when : "B";
      <br/>
      --         }
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(B) +
      <br/>
      --         direction : input;
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(input_by_trans) +
      <br/>
      --                values("1.5, 2.5, 4.7");
      <br/>
      --             }
      <br/>
      --             when : "A";
      <br/>
      --         }
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(C) +
      <br/>
      --         direction : input;
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(Z) +                           **default**
      <br/>
      --         direction : output;
      <br/>
      --         internal_power(output_by_cap) +
      <br/>
      --             power(output_by_cap) +
      <br/>
      --                values("2.0, 5.0, 9.0");
      <br/>
      --             }
      <br/>
      --         }
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      -- }
      <br/>
      --             Output_by_Cap and Input_by_Trans LUTs
      <br/>
      --      library(internal_power_example) +
      <br/>
      --         power_lut_template(output_by_cap) +
      <br/>
      --             variable_1 : total_output_net_capacitance;
      <br/>
      --             index_1("0.0, 5.0, 20.0");
      <br/>
      --         }
      <br/>
      --         power_lut_template(input_by_trans) +
      <br/>
      --             variable_1 : input_transition_time;
      <br/>
      --             index_1("0.0, 1.0, 2.0");
      <br/>
      --         }
      <br/>
      -- }
    </p>
    <p num="38">
      As described above, the above reference index values associated with the structure of the LUTs are used in conjunction with the reference power values given within the internal power groups of a power model of the present invention during linear interpolation.
      <br/>
      During power analysis, particular input transition times or particular output capacitance values are linearly interpolated with the above reference values, using well known processes, to obtain the actual power consumed by the library cell for a given power event.
    </p>
    <p num="39">
      As seen above and with reference to FIG. 5, pin A has one internal power group as does pin B; pin C has no internal power group and pin Z has one internal power group.
      <br/>
      Library cell 210 exhibits a particular power usage function ("1.5, 2.5, 4.7") for a transition on pin A contemporaneously when function B is true (e.g., state B exists).
      <br/>
      Otherwise, for all other power events causing a transition on A, the power consumed by cell 210 is 0.
      <br/>
      If state B exists, then a transition on A causes gate 212 to propagate the transition, otherwise gate 212 is not active and therefore consumes no power.
      <br/>
      A similar case exists for a transition on B if A is present, as shown by the above exemplary power model structure.
    </p>
    <p num="40">
      The following are examples of the state dependent power modeling structure of the present invention for synchronous RAM library cells.
      <br/>
      FIG. 6A illustrates a logical block diagram of the exemplary synchronous RAM library cell 240, RAM1, having a data input bus (DATA_IN), a data output bus (DATA_OUT), a single read/write signal (R/W), a RAM enable signal (RAM_EN), and address bus (ADDR), and a clock input (CLK).
    </p>
    <p num="41">
      --
      <br/>
      -- Synchronous RAM-State Dependent Power Model
      <br/>
      -- Example One
      <br/>
      -- library(internal_power_example) +
      <br/>
      --      power_lut_template(input_by_trans) +
      <br/>
      --         variable_1 : input_transition_time;
      <br/>
      --         index_1("0.0, 1.0, 2.0");
      <br/>
      --      }
      <br/>
      --      type (bus16) +
      <br/>
      --         base_type : array;
      <br/>
      --         data_type : bit;
      <br/>
      --         bit_width : 16;
      <br/>
      --         bit_from : 0;
      <br/>
      --         bit_to : 15;
      <br/>
      --      }
      <br/>
      --      type (bus8) +
      <br/>
      --         base_type : array;
      <br/>
      --         data_type : bit;
      <br/>
      --         bit_width : 8;
      <br/>
      --         bit_from : 0;
      <br/>
      --         bit_to: 7;
      <br/>
      --      }
      <br/>
      --      . . .
      <br/>
      --      cell(RAM1) +
      <br/>
      --         bus(DATA_OUT)+
      <br/>
      --             bus_type: bus16;
      <br/>
      --             direction : output;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         bus(DATA_IN) +
      <br/>
      --             bus_type: bus16;
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         bus(ADDR) +
      <br/>
      --             bus_type: bus8;
      <br/>
      --             direction : input;
      <br/>
      --         }
      <br/>
      --         pin(R_W) +
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(RAM_EN) +
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(CLK) +
      <br/>
      --             direction : input;
      <br/>
      --             internal_power( ) +
      <br/>
      --                when: "R_W * RAM_EN'";
      <br/>
      --                power(input_by_trans) +
      <br/>
      --                    values("1.5, 2.5, 4.7");
      <br/>
      --                }
      <br/>
      --             }
      <br/>
      --             internal_power( ) +
      <br/>
      --                when: R_W' &amp; RAM_EN'"
      <br/>
      --                power(input_by_trans) +
      <br/>
      --                    values("1.8, 2.8, 5.1");
      <br/>
      --                }
      <br/>
      --             }
      <br/>
      --             internal_power( ) +
      <br/>
      --                when : "RAM_EN"
      <br/>
      --                power(input_by_trans) +
      <br/>
      --                    values("0.5, 0.8, 1.6");
      <br/>
      --                }
      <br/>
      --             }
      <br/>
      --         }
      <br/>
      --      }
      <br/>
      -- }
    </p>
    <p num="42">
      In the above first exemplary power model structure of the synchronous RAM cell, three internal power groups are defined for a clock transition (designated signal CLK).
      <br/>
      These three internal power groups provide three when clauses.
      <br/>
      As shown by the second internal power group, RAM cell 240 consumes the most power during a write state when RAM_EN (asserted low) is enabled.
      <br/>
      This state is represented by the when clause function, (R_W'* RAM_EN'), where (') represents the inverse.
      <br/>
      During the read cycle, less power is consumed, as represented by the when clause, (R_W * RAM_EN') of the first internal power group.
      <br/>
      RAM cell 240 consumes the least power when it is not enabled, as shown by the when clause (RAM_EN) of the third internal power group.
      <br/>
      It is appreciated that no default internal power group is included in the above example because (1) the designated signal, CLK, is an input signal and also because (2) all input states are exhaustively included for the R_W, and RAM_EN signals.
      <br/>
      It is appreciated that the LUT, input_by_trans, is also defined in the above exemplary power model structure.
    </p>
    <p num="43">
      In the following second RAM example, an asynchronous RAM cell is used.
      <br/>
      The RAM cell 240 of FIG. 6A is modeled except for the following modifications: (1) the single R_W line used in FIG. 6B is replaced by two individual signals, a read (R) signal and a separate write (W) signal; and (2) the clock signal, CLK, is removed.
      <br/>
      The resultant RAM cell 244, RAM2, is shown in FIG. 6B.
    </p>
    <p num="44">
      --
      <br/>
      -- Asynchronous RAM - State Dependent Power Model
      <br/>
      -- Example Two
      <br/>
      --             library(internal_power_example) +
      <br/>
      --                power_lut_template(input_by_trans) +
      <br/>
      --                    variable_1 : input_transition_time;
      <br/>
      --                    index_1("0.0, 1.0, 2.0");
      <br/>
      --                }
      <br/>
      --                type (bus16) +
      <br/>
      --                    base_type : array;
      <br/>
      --                    data_type : bit;
      <br/>
      --                    bit_width : 16;
      <br/>
      --                    bit_from : 0;
      <br/>
      --                    bit_to : 15;
      <br/>
      --                }
      <br/>
      --                type (bus8) +
      <br/>
      --                    base_type : array;
      <br/>
      --                    data_type : bit;
      <br/>
      --                    bit_width : 8;
      <br/>
      --                    bit_from : 0;
      <br/>
      --                    bit_to : 7;
      <br/>
      --                }
      <br/>
      --                . . .
      <br/>
      --                cell(RAM1) +
      <br/>
      --                    bus(DATA_OUT) +
      <br/>
      --                       bus_type : bus16;
      <br/>
      --                       direction : output;
      <br/>
      --                       . . .
      <br/>
      --                    }
      <br/>
      --                    bus(DATA_IN) +
      <br/>
      --                       bus_type : bus16;
      <br/>
      --                       direction : input;
      <br/>
      --                       . . .
      <br/>
      --                    }
      <br/>
      --                    bus(ADDR) +
      <br/>
      --                       bus_type : bus8;
      <br/>
      --                       direction : input;
      <br/>
      --                    }
      <br/>
      --                    pin(R) +
      <br/>
      --                       direction : input;
      <br/>
      --                       internal_power() +
      <br/>
      --                           when : "RAM_EN"";
      <br/>
      --                           power(input_by_trans) +
      <br/>
      --                              values("1.51, 2.5, 4.7");
      <br/>
      --                           }
      <br/>
      --                       }
      <br/>
      --                         internal_power() +
      <br/>
      --                           when : "RAM_EN";
      <br/>
      --                           power(input_by_trans) +
      <br/>
      --                              values("0.5, 0.8, 1.6");
      <br/>
      --                           }
      <br/>
      --                       }
      <br/>
      --                       . . .
      <br/>
      --                    }
      <br/>
      --                    pin(W) +
      <br/>
      --                       direction : input:
      <br/>
      --                       internal_power() +
      <br/>
      --                           when : "RAM_EN"";
      <br/>
      --                           power(input_by_trans) +
      <br/>
      --                              values("1.8, 2.8, 5.1");
      <br/>
      --                           }
      <br/>
      --                       }
      <br/>
      --                         internal_power() +
      <br/>
      --                           when : "RAM_EN";
      <br/>
      --                           power(input_by_trans) +
      <br/>
      --                              values("0.5, 0.8, 1.6");
      <br/>
      --                           }
      <br/>
      --                       }
      <br/>
      --                       . . .
      <br/>
      --                    }
      <br/>
      --                    pin(RAM_EN) +
      <br/>
      --                       direction : Input;
      <br/>
      --                       . . .
      <br/>
      --                    }
      <br/>
      --                }
      <br/>
      --             }
    </p>
    <p num="45">
      In the above second exemplary asynchronous power model structure of RAM cell, two internal power groups are defined for a read signal transition (signal R), including two when clauses, one for the RAM cell 244 enabled and for when disabled.
      <br/>
      As shown, RAM cell 244 of FIG. 6B consumes most power during a read state when RAM_EN (asserted low) is enabled.
      <br/>
      This state, for the R pin transition, is represented by the when clause function, (RAM_EN') of the first internal power group for designated pin, R. Two internal power groups are also defined for a write signal transition (signal W), including two when clauses, one for RAM cell 244 being enabled and one for RAM cell 244 being disabled.
      <br/>
      As shown, RAM cell 244 of FIG. 6B consumes the most power during a write state when RAM_EN (asserted low) is enabled.
      <br/>
      This state, for the W pin transition, is represented by the when clause function, (RAM_EN') of the first internal power group of the signal, W. As between the power models for the read and write cycles, the most power is consumed by RAM cell 244 during the enabled write cycle.
      <br/>
      The power function for this case is (1.8, 2.8, 5.1).
      <br/>
      The least power dissipated during a read or write cycle is when RAM cell 244 is not enabled, as represented by the second internal power groups of signals R and W. Again, no default internal power groups are included in the above exemplary power model because the states are exhaustively listed by the when clauses.
      <br/>
      It is appreciated that the LUT, input_by_trans, is also defined in the above exemplary power model structure.
    </p>
    <p num="46">State-Dependent Leakage Power</p>
    <p num="47">
      The present invention allows the definition of leakage power values which are dependent upon the state of the library cell.
      <br/>
      The present invention includes an additional state-dependent leakage power group to represent the above leakage power.
      <br/>
      For cells with state-dependent leakage power, the designation "leakage_power ( )" is used.
      <br/>
      As is the case with state dependent internal power, the present invention requires a default which will be the cell_leakage_power designation.
      <br/>
      In one embodiment, library compilers require that the name of the leakage variable and state dependent leakage power group be different.
      <br/>
      An exemplary format for the state-dependent leakage power group is:
    </p>
    <p num="48">
      --
      <br/>
      --                    leakage_power() +
      <br/>
      --                       when : &lt;logical condition&gt;;
      <br/>
      --                       value: &lt;value&gt;;
      <br/>
      --                    }
    </p>
    <p num="49">
      This format is consistent with the state dependent internal power format shown above.
      <br/>
      Both use the when clause to specify state dependency and require that the when conditions are mutually exclusive.
      <br/>
      An example of the use of state dependent leakage power is as follows:
    </p>
    <p num="50">
      --
      <br/>
      --                    cell(mycell) +
      <br/>
      --                       . . .
      <br/>
      --                       leakage_power() +
      <br/>
      --                           when : "IA";
      <br/>
      --                           value : 2.0;
      <br/>
      --                       }
      <br/>
      --                       cell_leakage_power : 3.0;
      <br/>
      --                    }
    </p>
    <p num="51">
      III.
      <br/>
      PATH DEPENDENT POWER MODELING
    </p>
    <p num="52">
      The present invention provides a path dependent library cell model for the power consumption of a particular pin of a library cell that depends on the path taken of an input pin signal causing the transition, e.g., power consumption is determined for a power event based on which library cell's pin transitioned (e.g., source pin) to cause another library cell's pin to transition (e.g., destination pin).
      <br/>
      This path dependent model of the present invention is particularly advantageous for library cells whose actual power consumption varies depending on which input signal transitioned to cause the power event.
      <br/>
      The source pins can be either an input, output, internal or bidirectional pin while the destination pin can be an output, internal, or bidirectional pin within the path dependent power model of the present invention.
    </p>
    <p num="53">
      For instance, with reference to the exemplary library cell 300 of FIG. 7 having gates 302 to 308, a transition in input A causing the output Z to transition involves only gate 308.
      <br/>
      However, a transition in signals D and E causing output Z to transition involves gates 302 through 308, consuming much more power than the former event.
      <br/>
      The present invention path dependent power modeling allows a library developer to specify a power consumption model for a library cell, e.g., cell 300, based on transition of particular input signal pins.
    </p>
    <p num="54">
      FIG. 8 illustrates a generic data structure 350 utilized within the context of the present invention path dependent model to represent power consumption within a logic cell.
      <br/>
      The structure 350 of the power model for path dependent power modeling is similar to the structure 250 (FIG. 4) of state dependent power modeling except that the when clause is replaced by a "related_pins" clause used for path dependent power modeling of the present invention.
      <br/>
      Data structure 350 resides within computer readable memory units of system 112 (FIG. 3) and is accessed by processor 101 during power analysis.
      <br/>
      The particular logic cell is identified by a cell name designation (data field) 352.
      <br/>
      A cell library includes many logic cell power models 350, one for each distinct cell supported by the technology specific library.
      <br/>
      For each pin of the designated cell whose transition causes a power consumption event, the present invention data structure 350 allows a library cell developer to specify (1) a set of certain library pins and (2) the power consumed by the logic cell when any pin of those set of certain library pins transitions causing a transition over the designated pin.
      <br/>
      FIG. 8 illustrates power consumption information for one pin of the designated cell; this designated pin is identified by the pin designation field 354.
      <br/>
      It is appreciated that one pin is shown for clarity only and that structure 350 can contain analogous definitions for multiple pins of the designated cell.
    </p>
    <p num="55">
      The designated pin can be either an output, bi-directional, or internal pin of the designated cell.
      <br/>
      For each pin designation, structure 350 contains an identification of whether that pin is an output pin, an internal pin, or a bidirectional pin.
      <br/>
      Within the context of the path dependent power model of the present invention, the terms "input pin" and "output pin" each can encompass the definition of an "internal pin" and/or a "bidirectional pin" when used, respectively, to input a signal to a cell's element or used to output a signal from a cell's element.
      <br/>
      An element is any sub-partition of a library cell.
      <br/>
      This designation is shown as the output/internal/bidirectional designation 356.
      <br/>
      Typically with respect to path dependent power modeling, this designation 356 is "output" as output pins are generally path dependent modeled.
      <br/>
      For each pin designation 354, structure 350 contains one or more internal power headers indicating that power modeling information is to follow regarding the designated pin.
      <br/>
      The power modeling information for an internal power header is contained within an internal power group 365.
    </p>
    <p num="56">
      Within each internal power group 365 of the structure 350 of FIG. 8, the present invention contains an identification designation 360 of a power look-up table used in determining the power consumption for the designated cell.
      <br/>
      Also within each internal power group 365 of structure 350, the present invention contains a list of power reference values 362 for use in conjunction with the designated power look-up table 360 for determining the power consumption for the designated cell.
      <br/>
      Also included within each internal power header 358 is a "related_pins" clause 364 indicating the set of pins relevant to this internal power group 365.
      <br/>
      The related pins clause 364 can contain input, output, bidirectional and internal pins.
      <br/>
      Within one embodiment of the present invention, the related_pins clause 364 typically contains a list of selected input pins.
      <br/>
      If a transition, regardless of its state, over one or more of the set of pins listed in 364 causes a transition over the designated pin 354 of this library cell 352, then the power consumed by the library cell is determined by the designated power reference values 362 of the relevant internal power group 365.
      <br/>
      Although shown as at the end of an internal power group, the related_pins clause 364 can be positioned at any place within the internal power group after the power header within the scope of the present invention.
      <br/>
      Within one embodiment of the path dependent power modeling, for a particular designated pin, each input of the designated library cell is required to be exhaustively specified within its internal power groups.
    </p>
    <p num="57">During power analysis, if a transition is recorded over any of the pins identified at 364 causing a transition over the designated pin 354, then the power information designed within 360 and 362 is used to determine the power consumed by the logic cell designed by 352 based on a given input signal transition time and/or an input output capacitance value associated with the power event and the designated cell.</p>
    <p num="58">
      As shown in FIG. 8, a particular pin can have more than one internal power group.
      <br/>
      The designated pin of FIG. 8 contains two internal power groups 365 and 366.
      <br/>
      The internal power group 366 contains a different "related_pins" clause for the designated pin.
      <br/>
      It is appreciated that the pin listings of each "related_pins" clause for a designated pin are typically mutually exclusive within the preferred embodiment the present invention.
      <br/>
      The present invention path dependent data structure 350 does not need to include a default internal power group for the designated pin because, for a given designated pin, a default condition can readily be represented by an additional related_pins clause including all pins not otherwise listed in a prior internal power group.
      <br/>
      Alternatively, the present invention can also include a specific default power consumption function (and power LUT) of an explicit default internal power group, as done in the state dependent power modeling.
      <br/>
      This default internal power group of this alternative embodiment would not include a related_pins designation and its reference power values would apply for all input pins not already defined for a particular pin designation.
    </p>
    <p num="59">
      Although a number of different programming and data structure languages can be used to implement the specifics of the generic outline of FIG. 8, one exemplary power model structure of the path dependent power modeling of the present invention is described below.
      <br/>
      The exemplary power model is representative of the exemplary cell 300 shown in FIG. 7.
      <br/>
      The LUT, output_by_cap_and_trans is a two dimensional LUT because it contains two input indices, however, one or three dimensional LUTs are equally well suited for application with the path dependent structure shown below.
      <br/>
      The LUT contains reference index values and its structures are shown following the exemplary power model structure.
    </p>
    <p num="60">
      --
      <br/>
      -- Exemplary Path Dependent Power Model Structure
      <br/>
      -- cell(mycell) +
      <br/>
      --      pin(A) +
      <br/>
      --         direction : input;
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(B) +
      <br/>
      --         direction : input:
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(C) +
      <br/>
      --         direction : input;
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(D) +
      <br/>
      --         direction : input:
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(E) +
      <br/>
      --         direction : input:
      <br/>
      --         . . .
      <br/>
      --      }
      <br/>
      --      pin(Z) +
      <br/>
      --         direction : output;
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(output_by_cap_and_trans) +
      <br/>
      --                values("2.2, 3.7, 4.3", "1.7, 2.1, 3.5", "1.0, 1.5, 2.8");
      <br/>
      --             }
      <br/>
      --             related_pin : "D E";
      <br/>
      --         }
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(output_by_cap_and_trans) +
      <br/>
      --                values("2.0, 3.5, 4.1", "1.5, 1.9, 3.3", "0.8, 1.3, 2.6");
      <br/>
      --             }
      <br/>
      --             related_pin : "C";
      <br/>
      --         }
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(output_by_cap_and_trans) +
      <br/>
      --                values("1.8, 3.3, 3.9", "1.3, 1.7, 3.1", "0.6, 1.1, 2.4");
      <br/>
      --             }
      <br/>
      --             related_pin: "B";
      <br/>
      --         }
      <br/>
      --         internal_power( ) +
      <br/>
      --             power(output_by_cap_and_trans) +
      <br/>
      --                values("1.6, 3.1, 3.7", "1.1, 1.5, 2.9", "0.4, 0.9, 2.2");
      <br/>
      --             }
      <br/>
      --             related_pin : "A";
      <br/>
      --         }
      <br/>
      --      }
      <br/>
      -- }
      <br/>
      --                Output_by_Cap_and_Trans LUT
      <br/>
      -- library(internal_power_example) +
      <br/>
      --      power_lut_template(output_by_cap_and_trans) +
      <br/>
      --         variable_1 : total_output_net_capacitance;
      <br/>
      --         variable_2 : input_transition_time;
      <br/>
      --         index_1("0.0, 5.0, 20.0");
      <br/>
      --         index_2("0.0, 1.0, 2.0");
      <br/>
      --      }
      <br/>
      -- }
    </p>
    <p num="61">
      With reference to the above example and to FIG. 7, the designated pin, Z, contains four separate internal power groups.
      <br/>
      A transition over output pin Z can cause cell 300 to exhibit four different power consumption functions, represented by four internal power groups, depending on which input signal pin group caused the signal transition over pin Z. If a transition over pin D or E caused the power event, then the largest power consumption function, ("2.2, 3.7, 4.3", "1.7, 2.1, 3.5", "1.0, 1.5, 2.8"), is used by the first internal power group to compute the estimated power for cell 300.
      <br/>
      This represents the longest path between the input pins and pin Z, the output pin.
      <br/>
      If a transition over pin C caused the power event, then the second largest power consumption function, ("2.0, 3.5, 4.1", "1.5, 1.9, 3.3", "0.8, 1.3, 2.6"), is used by the second internal power group to compute the estimated power for cell 300.
      <br/>
      If a transition over pin B caused the power event, then the second smallest power consumption function, ("1.8, 3.3, 3.9", "1.3, 1.7, 3.1", "0.6, 1.1, 2.4"), is used by third internal power group to compute the estimated power for cell 300.
      <br/>
      Lastly, if a transition over pin A caused the power event, then the smallest power consumption function, ("1.6, 3.1, 3.7", "1.1, 1.5, 2.9", "0.4, 0.9, 2.2"), is used by the fourth internal power group to compute the estimated power for cell 300.
      <br/>
      This last function represents the shortest path between the input pin and the output, Z. It is appreciated since LUT, output_by_cap_and_trans, is a two dimensional LUT indexed by both input signal transition time and output pin capacitance and further that three reference values are given for each index, this LUT requires 3X3 or 9 reference power values to fill its power function.
    </p>
    <p num="62">
      Path dependent power modeling definitions do not affect the other possible types of tables in an internal power group.
      <br/>
      Further, one, two, or three dimensional power tables can be used within path dependent power modeling.
      <br/>
      In one embodiment, when specifying path dependent power models, the library developer specifies a path between the output and each non-synchronous input to which it is functionally related.
      <br/>
      A library compiler checks this condition and the present invention issues an error if all paths are not specified.
      <br/>
      For a black box, the library compiler cannot determine which inputs are functionally related to a particular output, so it does not check that all paths are enumerated.
    </p>
    <p num="63">State and Path Dependent Modeling</p>
    <p num="64">
      Library models can be made within the present invention that include both a when clause and a related_pins clause to incorporate both path and state dependent modeling.
      <br/>
      The resulting structure is the same as shown in FIG. 8, but the related_pins clause 364 includes an associated when clause.
      <br/>
      In this case, the resulting internal power group's power reference values 362 and power lookup table 360 defines the designated cell's power consumption only: (1) provided the state defined in the when clause exists contemporaneously with a transition over the designated pin and; provided further (2) a pin of the set of particular pins defined in the related_pins clause transitions causing the designated pin to transition.
    </p>
    <p num="65">Output-to-Output Path Dependent Power Modeling</p>
    <p num="66">
      In the present invention path dependent power modeling, the related_pins field can also refer to output pins on which a particular output is dependent.
      <br/>
      This advantageously allows the specification of multiple output cells to be easier using the present invention.
      <br/>
      For example, with reference to FIG. 9A, the specification of multiple outputs Z and Y is made easier with reference to cell 370 by allowing output Z to be dependent on output Y. In this embodiment, the present invention can be used by a library developer to create a path dependent internal power table for the path from A and B to output Y. The developer can also use the present invention path dependent power model to create a path-dependent internal power table for the path from Y to Z. This procedure is typically more intuitive to the library developer and is consistent with path dependent timing.
      <br/>
      Within this aspect of the present invention, the library developer should specify output-to-output power using path dependent power tables only if both outputs are functionally equal or opposite.- In this case, a library compiler typically checks that the functions on the output pins are either functionally equivalent or have an inverse relationship.
      <br/>
      An error is issued if this is not the case.
      <br/>
      For this path dependent use, the present invention requires that both outputs of the path be functionally equal or opposite to reduce the complexity for simulators and power analysis.
      <br/>
      In FIG. 9A, Y and Z are functionally equal or opposite, so output-to-output path dependent power tables of the present invention can be used.
      <br/>
      However, for the circuit 380 of FIG. 9B it is not appropriate to use output-to-output path dependent power tables because O1 and O2 are independent, e.g., they are not functionally equal or opposite.
    </p>
    <p num="67">In one embodiment of the present invention, output-to-output paths are not allowed for "black-box" library cells because the present invention cannot readily verify that the outputs are functionally equal or opposite.</p>
    <p num="68">IV. THREE DIMENSIONAL POWER TABLE FOR POWER MODELING</p>
    <p num="69">
      The present invention provides a power table having three indices for representing the power consumed within a library cell having two outputs that switch contemporaneously.
      <br/>
      Often this situation is seen in a library cell wherein the outputs are equal or opposite, e.g., Q and Q' (inverse) of a flip-flop circuit.
      <br/>
      FIG. 10 illustrates an exemplary library cell 410 having two outputs 412a and 412b that switch contemporaneously.
      <br/>
      Within the context of the three dimensional power table of the present invention, "contemporaneously" means simultaneously or as the result of a common signal or set of signals causing the transitions to occur close in time.
      <br/>
      The cell 410 receives input signal(s), I, 420 and also receives a clock signal, C, 430.
      <br/>
      General circuitry of cell 410 controls output 412a and other circuitry 440 controls the state of the other output 412b.
      <br/>
      It is often the case that library developers are not knowledgeable of the specific circuitry components within circuit 440, or the circuitry that controls output 412a, because in certain characterization procedures, the developers characterize their cells as "black boxes." This practice, in conjunction with the fact that the outputs 412a and 412b switch contemporaneously, make estimating the power consumption of cell 410 difficult within a prior art power model that requires: (1) power consumption characterization be related to an output pin; and (2) that only one power table is allowed for each output pin so characterized.
    </p>
    <p num="70">
      For defining the power consumption of the library cell 410 as a whole, the present invention solves the above problem by allowing a library developer to define two output capacitance load values, one for each output 412a and 412b, in addition to the input transition time.
      <br/>
      By taking into consideration both of the output load capacitance values 420a and 420b, the present invention power table provides a very accurate and efficient method by which to estimate the power consumption for library cell 410 based on an output signal transition without requiring the library developer to be knowledgeable regarding the specific circuitry controlling each output.
    </p>
    <p num="71">
      In order to represent both output load transitions, the present invention provides a three dimensional power table 510, as shown in FIG. 11. The power table 510 includes a three dimensional matrix of cells (one example cell is 520a).
      <br/>
      Although the matrix can be of a number of different sizes within the present invention, a matrix exemplary size of 4 * 4 * 5 or 100 entries is shown in FIG. 11.
    </p>
    <p num="72">
      Multiple reference values for the first output load capacitance (e.g., 420a) associated with output 412a are placed along axis 512.
      <br/>
      Multiple reference values for the second output load capacitance (e.g., 420b) associated with output 412b are placed along axis 514.
      <br/>
      Lastly, multiple reference values for the input signal transition time of input 420 are placed along the third axis 518.
      <br/>
      Values within each of the matrix cells then represent reference power values associated with their respective coordinate position defined by the three indices, e.g., output1 load capacitance, output2 load capacitance, and input transition time.
      <br/>
      It is appreciated that the above three axis definitions can be re-arranged without departing from the scope of the present invention.
    </p>
    <p num="73">
      In one embodiment, the present invention provides the matrix 510 in the form of a power look-up table having three indices and one output value.
      <br/>
      For a matrix power table size of N * M * P, there are N*M*P reference power values required to fill the three dimensional look-up table (3-D LUT).
      <br/>
      It is appreciated that the 3-D LUT of the present invention resides within computer readable memory of system 112 (FIG. 3) and is accessed by processor 101 in during power analysis.
      <br/>
      The reference power values placed within the cells of the matrix 510 represent amounts of physical power consumed by library cells which represent physical circuitry within an integrated circuit device.
      <br/>
      The present invention 3-D LUT is advantageous because library developers can readily supply the required reference power values since combinations of input transition times and first and second output capacitance values are straightforward to measure.
    </p>
    <p num="74">
      In operation, the cells of the 3-D LUT 510 (FIG. 11) of the present invention are filled with N*M*P reference power values by a particular power model for a library cell, e.g. from the values of designation 262 (FIG. 4) or designation 362 (FIG. 8).
      <br/>
      Then, during power analysis, the 3-D LUT is presented with a particular input coordinate having: (1) a particular input transition time; (2) a particular output load capacitance value for output1; and (3) a particular output load capacitance value for output2.
      <br/>
      The input coordinate is supplied when both outputs switch contemporaneously.
      <br/>
      Using well known three dimensional linear (or non-linear) interpolation mechanisms, the present invention uses the above input coordinate and the reference index and power values to arrive at an output power value corresponding to the input coordinate.
    </p>
    <p num="75">
      It is appreciated that the 3-D LUT of the present invention having dual reference indices, representing two different output load capacitance values, can be used in conjunction with the above state dependent power models and path dependent power models.
      <br/>
      An example of the above is presented herein.
    </p>
    <p num="76">
      It is further appreciated that the present invention 3-D LUT is valid when two outputs are functionally equal or opposite.
      <br/>
      Within the present invention, if either of the outputs of a library cell can switch independently, library developers can also specify other power tables for the cases that the output switch independently (e.g., a 2-dimensional power table only based on input transition time and that output's load capacitance).
      <br/>
      In this case, the present invention allows a library developer to specify a when clause in the internal power group with the 3-D LUT if these outputs are not always functionally equal or opposite.
      <br/>
      The when clause is the Boolean expression for the condition that these outputs are functionally equal or opposite.
      <br/>
      If a user specifies only a 3-D LUT for outputs which are not equal or opposite, a library compiler issues an error.
      <br/>
      However, within the present invention, the library developer does not need to specify a when clause if both outputs are always functionally equal or opposite.
    </p>
    <p num="77">
      The internal power group which holds the 3-D LUT is differentiated from other internal power groups by the field "equal_or_opposite_output," although other names can be used without departing from the present invention.
      <br/>
      An example of this data structure 540 (stored in computer readable memory units of system 112) for a single internal power group 542 is shown in FIG. 12A having an "equal_or_opposite_output" designation 543 and a 3-D power LUT designation 544.
    </p>
    <p num="78">
      The internal power group 542 represents the total power consumption for the represented library cell for both modeled outputs.
      <br/>
      FIG. 12B illustrates an exemplary data structure 546 having an internal power group 548 including both a 3-D power LUT and a when clause for state dependent power modeling.
      <br/>
      FIG. 12C illustrates an exemplary data structure 550 having an internal power group 552 including both a 3-D power LUT and a related pins clause for path dependent power modeling.
      <br/>
      Lastly, FIG. 12D illustrates an exemplary data structure 560 having an internal power group 562 including a 3-D power LUT, a related pins clause for path dependent power modeling, and a when clause for state dependent power modeling.
    </p>
    <p num="79">
      The present invention also checks that the equal_or_opposite_output designation contains an output, bidirectional, or internal pin.
      <br/>
      An error is issued if a 3-D LUT is specified without a when clause and the two outputs have neither a functionally equivalent nor a inverse relationship.
      <br/>
      The error indicates to the user that these outputs do not always switch contemporaneously, so the user needs to add a when clause in that internal power group and specify additional power lookup tables for each output for cases when these outputs switch independently.
    </p>
    <p num="80">
      Although different syntax can be used without departing from the present invention, the names of the input values passed to the 3-D power table for the outputs' capacitive loads are total_output_net_capacitance and total_other_output_net_capacitance.
      <br/>
      An example of a library with 3-dimensional power lookup tables is given below.
      <br/>
      This example relates to a flip-flop library cell 530 shown in FIG. 13 having a set input (S), a reset input (R), a D input, a clock (CP) input and a Q output and a Q' or (ON) inverse output.
      <br/>
      The 3-D LUT 510 of this example is a N * N * N LUT wherein N=3.
      <br/>
      Therefore, 27 reference power cells are required to fill the 3-D power LUT.
    </p>
    <p num="81">
      --
      <br/>
      -- Example of 3-D Power Table
      <br/>
      -- library(internal_power_example) +
      <br/>
      --      power_lut_template(output_by_cap1_cap2_and_trans) +
      <br/>
      --         variable_1 : total_output_net_capacitance; *** inputs ***
      <br/>
      --         variable_2 : total_other_output_net_capacitance;
      <br/>
      --         variable_3 : input_transition_time;
      <br/>
      --         index_1("0.0, 5.0, 20.0"); *** index
      <br/>
      --         index_2("0.0, 5.0, 20.0"); reference
      <br/>
      --         index_3("0.0, 1.0, 2.0"); values ***
      <br/>
      --      }
      <br/>
      --      power_lut_template(output_by_cap_and_trans) +
      <br/>
      --         variable_1 : total output_net_capacitance;
      <br/>
      --         variable_2 : input_transition_time;
      <br/>
      --         index_1("0.0, 5.0, 20.0");
      <br/>
      --         index_2("0.0, 1.0, 2.0");
      <br/>
      --      }
      <br/>
      --      power_lut_template(input_by_trans) +
      <br/>
      --         variable_1 : input_transition_time;
      <br/>
      --         index_1("0.0, 1.0, 2.0");
      <br/>
      --      }
      <br/>
      --      . . .
      <br/>
      --      cell(FLOP1) +
      <br/>
      --         pin(CP) +
      <br/>
      --             direction : input;
      <br/>
      --             internal_power(input_y_trans) +
      <br/>
      --                power(input_by_trans) +
      <br/>
      --                    values("1.5, 2.5, 4.7");
      <br/>
      --                }
      <br/>
      --             }
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(D) +
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(S) +
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(R) +
      <br/>
      --             direction : input;
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         pin(Q) +
      <br/>
      --             direction : output;
      <br/>
      --             internal_power( ) +
      <br/>
      --                power(output_by_cap1_cap2_and_trans) +
      <br/>
      --                values("2.2, 3.7, 4.3", "1.7, 2.1, 3.5", "1.0, 1.5,
      <br/>
      --  2.8",.backslash.
      <br/>
      --                    "2.1, 3.6, 4.2", "1.6, 2.0, 3.4", "0.9, 1.5,
      <br/>
      --  2.7",.backslash.
      <br/>
      --                    "2.0, 3.5, 4.1", "1.5, 1.9, 3.3", "0.8, 1.4, 2.6");
      <br/>
      --                }
      <br/>
      --                when : "S' or R'";
      <br/>
      --                equal_or_opposite_output : "QN"
      <br/>
      --                related_pin : "CP";
      <br/>
      --             }
      <br/>
      --             internal_power( ) }
      <br/>
      --                power(output_by_cap_and_trans) +
      <br/>
      --                values("1.8, 3.4, 4.0", "1.5, 1.9, 3.3", "0.8, 1.3, 2.5");
      <br/>
      --                }
      <br/>
      --                related_pin : "S R";
      <br/>
      --             }
      <br/>
      --         . . .
      <br/>
      --         pin(QN) +
      <br/>
      --             direction : output;
      <br/>
      --             internal_power( ) +
      <br/>
      --                power(output_by_cap_and_trans) +
      <br/>
      --                values("0.5, 0.9, 1.3", "0.3, 0.7, 1.1", "0.2, 0.5, 0.9");
      <br/>
      --                }
      <br/>
      --                related_pin : "S R";
      <br/>
      --             }
      <br/>
      --             . . .
      <br/>
      --         }
      <br/>
      --         . . .
      <br/>
      -- }
    </p>
    <p num="82">
      The above example specifies a 3-dimensional power table 510 in accordance with the present invention for the outputs Q and QN of FIG. 13, which switch contemporaneously, as well as a 2-dimensional power table for each output when the outputs switch independently.
      <br/>
      This is necessary for accuracy because output Q and output QN can switch contemporaneously or independently.
      <br/>
      This example uses the 3-dimensional power table 510 of the present invention in conjunction with both state and path dependent power modeling.
      <br/>
      If this example did not have set (S) and reset (R) input pins, only a 3-dimensional table would be required.
      <br/>
      In the example, two internal power groups are defined for the Q output pin and one internal power group is defined for the QN output pin.
    </p>
    <p num="83">
      If a library developer creates an internal power group with the field equal_or_opposite_output, that internal power group is required to contain a 3-dimensional power table in accordance with one embodiment of the present invention.
      <br/>
      A 2-dimensional power table which has as indices both outputs' capacitive loads should be avoided.
      <br/>
      Any definition of a LUT with only the indices total_output_net_capacitance and total_other_output_net_capacitance defined causes an error within the present invention.
    </p>
    <p num="84">Library Separate Rise and Fall Power Modeling</p>
    <p num="85">
      The present invention also allows rise and fall power to be separately modeled with reference to a library cell.
      <br/>
      The present invention uses rise_power and fall_power designations within internal power groups to represent this information.
      <br/>
      The present invention checks if a rising_power group is specified, then a falling_power group should also be specified in the same internal power group.
      <br/>
      An example of internal power groups where rise and fall power is specified separately is shown below.
    </p>
    <p num="86">
      --
      <br/>
      -- internal_power( )
      <br/>
      --      rise_power(output_by_cap_and_trans) +
      <br/>
      --         values("2.2, 3.7, 4.3", "1.7, 2.1, 3.5", "1.0, 1.5, 2.8");
      <br/>
      --      }
      <br/>
      --      fall_power(output_by_cap_and_trans) +
      <br/>
      --         values("2.0, 3.5, 4.1", "1.5, 2.3, 3.3", "1.2, 1.3, 2.6");
      <br/>
      --      }
      <br/>
      --      related_pin : "A";
      <br/>
      -- }
    </p>
    <p num="87">
      V.
      <br/>
      POWER ESTIMATION PROCESS
    </p>
    <p num="88">
      FIG. 14 illustrates an overall flow diagram 600 of steps and data files involved in a power estimation process in accordance with the present invention power modeling for an integrated circuit device.
      <br/>
      The steps of diagram 600 are implemented as program code stored in computer readable memory units of system 112 (FIG. 3) which are executed over processor 101.
      <br/>
      The data files used by process 600 are similarly stored in memory units of system 112.
      <br/>
      A library file 610 contains the power modeling structures of the present invention described above for various different library cells for the integrated circuit design.
      <br/>
      In the library file 610 are contained the state and path dependent power structures and any 3-D power tables (as described above) for specific library cells.
      <br/>
      This file 610 is read by a generate directive file process 615 which generates a directive file 620.
    </p>
    <p num="89">
      The simulator process 625 needs to be informed of which library cells have state and/or path dependent modeling so it can output the necessary information used to perform power estimation for these library cells.
      <br/>
      The simulator process 625 uses the directive file 620 to obtain this information.
      <br/>
      The directive file 620 contains a listing of specific signal states and transition paths that the simulator 625 is to watch out for, during simulation, that have an impact on power estimation.
      <br/>
      These states and transitions are defined within the power modeling structures used in the library file 610 for state and/or path dependent modeling.
      <br/>
      The directive file 620 is needed in part because the number of possible conditions encountered by the simulator 625 is too great to monitor without information used to direct or focus the simulator's recording activity.
    </p>
    <p num="90">
      For example, assuming a state dependent power model for library cell, mycell, has a particular power function defined when output O transitions and inputs A, B, and C are all 1 (e.g., state condition A AND B AND C).
      <br/>
      In this case, the directive file 620 contains information informing the simulation process 625 to record a count value each time mycell has an output O that transitions and A, B and C are 1.
      <br/>
      During simulation, this case is watched for and a record is made each time it happens.
    </p>
    <p num="91">
      During simulation 625, a separate record or tally is made of each occurrence of each condition outlined in the directive file 620 and the totals are aggregated over the simulation interval.
      <br/>
      Simulation process 625 maintains this record in computer readable memory units of system 112 in a switching activity interchange format (SAIF) file 630 which indicates the number of times each event in the directive file 620 occurred over the time interval of the simulation for each library cell.
      <br/>
      This information includes input transition times for certain input signals.
    </p>
    <p num="92">
      The power analysis process 635 inputs the SAIF file 630 and applies the recorded conditions to the power models of the library file 610 to obtain power estimates based on any state dependent power modeling, any path dependent power modeling and any 3-D power tables used within the library 610.
      <br/>
      For each library cell, the relevant counts recorded within the SAIF file 630 are applied to its power model to obtain an estimated power consumption for the library cell.
      <br/>
      An aggregation of all estimated power consumption amounts is reported in a power report 640.
      <br/>
      This power report 640 can then be used to determine if the integrated circuit design represented by the power models of the library file 610 meets prescribed power constraints.
    </p>
    <heading>CONCLUSION</heading>
    <p num="93">
      The preferred embodiment of the present invention, a three dimensional power modeling table having dual output capacitance indices, is thus described.
      <br/>
      While the present invention has been described in particular embodiments, it should be appreciated that the present invention should not be construed as limited by such embodiments, but rather construed according to the below claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A computer-readable medium having stored therein computer-readable program codes that when executed cause a computer system to perform a computer implemented method of representing physical power consumption of a physical circuit within an integrated circuit, said method comprising the steps of:</claim-text>
      <claim-text>a) storing into a computer memory a plurality of first reference index values within a first reference index of a three dimensional lookup table, said plurality of first reference index values representing output load capacitances for a first output of a library cell representing said physical circuit; b) storing into said computer memory a plurality of second reference index values within a second reference index of said lookup table, said plurality of second reference index values representing output load capacitances for a second output of said library cell; c) storing into said computer memory a plurality of third reference index values in a third reference index of said lookup table, said plurality of third reference index values representing input transition times of an input signal received at an input of said library cell, wherein each distinct combination of a first reference index value, a second reference index value, and a third reference index value forms a distinct coordinate position within said lookup table;</claim-text>
      <claim-text>and d) storing into said computer memory a first plurality of reference power values computed based on a first power model of said physical circuit, wherein each distinct coordinate position of said lookup table receives a power reference value and wherein power reference values represent amounts of power physically dissipated by said physical circuit based on a transition of said first output under said first power model.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A computer-readable medium as recited in claim 1 wherein said method further comprises the step of e) storing into said computer memory a second plurality of reference power values corresponding to a second power model, wherein each distinct coordinate position of said lookup table receives a power reference value and wherein power reference values represent amounts of power physically dissipated by said physical circuit based on a transition of said first output under said second power model.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A computer-readable medium as recited in claim 1 wherein said first output and said second output transition contemporaneously.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A computer-readable medium as recited in claim 3 wherein said method further comprises the steps of: determining three input values pertinent to a power consumption event of said library cell, said three input values comprising: an output load capacitance value for said first output;</claim-text>
      <claim-text>an output load capacitance value for said second output, and an input signal transition time for said input;</claim-text>
      <claim-text>and generating an output power value for said power consumption event of said library cell based on said three input values by using said three dimensional lookup table and linear interpolation.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A computer-readable medium as recited in claim 1 wherein said first reference index contains N first reference index values, said second reference index contains N second reference index values, said third reference index contains N third reference index values, and said power consumption lookup table comprises N3 reference power values.</claim-text>
    </claim>
  </claims>
</questel-patent-document>