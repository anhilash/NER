<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182231B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182231</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182231</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="21980234" extended-family-id="42109089">
      <document-id>
        <country>US</country>
        <doc-number>09052839</doc-number>
        <kind>A</kind>
        <date>19980331</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09052839</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165748</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>5283998</doc-number>
        <kind>A</kind>
        <date>19980331</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09052839</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F   1/32        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>1</main-group>
        <subgroup>32</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>713324000</text>
        <class>713</class>
        <subclass>324000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>710059000</text>
        <class>710</class>
        <subclass>059000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-001/32P5N</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>001</main-group>
        <subgroup>32P5N</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-001/32P</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>001</main-group>
        <subgroup>32P</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-001/3246</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>1</main-group>
        <subgroup>3246</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-001/3203</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>1</main-group>
        <subgroup>3203</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>45</number-of-claims>
    <exemplary-claim>10</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>2</number-of-figures>
      <image-key data-format="questel">US6182231</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Dynamic program suspension</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>JUZSWIK DAVID L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4698748</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4698748</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>WATANABE MINORU</text>
          <document-id>
            <country>US</country>
            <doc-number>5083266</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5083266</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>NGUYEN AU H</text>
          <document-id>
            <country>US</country>
            <doc-number>5349688</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5349688</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>GUMKOWSKI GREGORY T</text>
          <document-id>
            <country>US</country>
            <doc-number>5485625</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5485625</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>STILES IAN J</text>
          <document-id>
            <country>US</country>
            <doc-number>5594863</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5594863</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>MARRON ASSAF, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5613163</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5613163</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>PERIWAL DAMODAR DAS, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5644768</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5644768</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>BURKETT JR GROVER CHARLES, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5867060</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5867060</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>BOLLELLA GREGORY</text>
          <document-id>
            <country>US</country>
            <doc-number>5974439</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5974439</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>ASANO NOBUO</text>
          <document-id>
            <country>US</country>
            <doc-number>5987339</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5987339</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>FREUND GREGOR</text>
          <document-id>
            <country>US</country>
            <doc-number>5987611</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5987611</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>NAKAMURA NOBUTAKA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6016548</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6016548</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Software Patent Institute Database of Software Technology, Record Display, Record 1, Serial No. TDB1293.0108, Dec. 30, 1997, 3 pgs.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Software Patent Institute Database of Software Technology, Record Display, Record 2, Serial No. TDB1293.0109, Dec. 30, 1997, 3 pgs.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Software Patent Institute Database of Software Technology, Record Display, Record 3, Serial NO. TDB1293.0110, Dec. 30, 1997, 3 pgs.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Gilgen, David Blair</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Myers Bigel Sibley &amp; Sajovec, P.A.</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Ray-Yarletts, Jeanine S.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Grant, William</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Methods, systems and computer program products are provided which control execution of an application executing on a data processing system by receiving a first request for entry of sleep mode and determining a location in an application requesting entry of sleep mode.
      <br/>
      Execution of the application is suspended for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode.
      <br/>
      A sleep history associated with the location in the application may also be generated based on previous durations of sleep associated with the location in the application and the first predetermined time adjusted based upon the sleep history associated with the location in the application so as to control the number of requests for entry of sleep mode associated with the location in the application.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">The present invention relates to the control of applications executing on data processing systems, and more particularly to the control of the suspension of execution of applications executing on data processing systems.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      One aspect of interaction between applications and operating systems which has the potential for inefficiency is in the execution of a "sleep" function.
      <br/>
      A sleep function is typically utilized by applications to suspend execution of the application while the application waits for an event to occur.
      <br/>
      For example, in communicating between applications an application may call the sleep function while it waits for a response from another application.
    </p>
    <p num="3">
      Conventional sleep functions, such as SLEEP in Microsoft's Windows.RTM. and DOSSLEEP in International Business Machines OS/2.RTM., typically use a single duration for the time the application is suspended.
      <br/>
      This approach, however, can cause too much time to be spent sleeping if the duration is too large or too much time spent entering and exiting sleep mode if the duration is set too large.
      <br/>
      Furthermore, as applications may run on different platforms with different characteristics, it may be impossible to determine in advance a single sleep duration which provides the correct balance between too long a duration and too short a duration.
    </p>
    <p num="4">
      Even if a single platform could be anticipated, variations in session specific characteristics such as the number and nature of other applications executing on the system can also affect the needed sleep duration.
      <br/>
      Thus, if an application uses a single sleep duration for all situations, it is likely that this duration will not provide efficient use of system resources as either too many sleep calls will be made, thus utilizing processor resources for entering and leaving sleep mode, or too few sleep calls will be made, thus causing too long a suspension of the application to occur.
    </p>
    <p num="5">In light of these limitations of existing sleep mode functions, a need exists for improved methods of suspending execution of an application to wait for the occurrence of an event.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="6">In view of the above discussion, it is an object of the present invention to provide an improved sleep mode which reduces the number of sleep calls performed, while also reducing the amount of time an application remains suspended.</p>
    <p num="7">A further object of the present invention is to provide a sleep mode which may replace sleep functions provided by existing operating systems.</p>
    <p num="8">Still another object of the present invention is to provide a sleep mode which may be utilized by applications with minimal or no modification to the applications.</p>
    <p num="9">Another object of the present invention is to provide a sleep mode which may be utilized by differing types of applications with differing sleep mode requirements without requiring modification to the sleep mode function.</p>
    <p num="10">
      These and other objects of the present invention are provided by methods, systems and computer program products which control execution of an application executing on a data processing system by receiving a first request for entry of sleep mode and determining a location in an application requesting entry of sleep mode.
      <br/>
      Execution of the application is suspended for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode.
      <br/>
      A sleep history associated with the location in the application may also be generated based on previous durations of sleep associated with the location in the application and the first predetermined time adjusted based upon the sleep history associated with the location in the application so as to control the number of requests for entry of sleep mode associated with the location in the application.
    </p>
    <p num="11">
      By basing the duration of suspension of the application on the location in the application, a location specific sleep duration may be provided which controls the number of sleep calls required without increasing the duration of sleep.
      <br/>
      Furthermore, by basing this duration on a sleep history associated with the location, a dynamic sleep duration may be developed for each requesting location which may be fine tuned to that locations requirements.
      <br/>
      Thus, a location specific dynamic sleep duration may be obtained for different locations in an application requesting entry of sleep mode with minimal impact on the application.
    </p>
    <p num="12">
      In further embodiments of the present invention, a request for entry of sleep mode specifies the application and location in the application requesting entry of sleep mode.
      <br/>
      The location in the application requesting entry of sleep mode is then determined by inspecting the request for entry of sleep mode to determine the application and location in the application requesting entry of sleep mode.
      <br/>
      The request for entry of sleep mode may further specify a first predetermined time period which may be utilized if a sleep history is not available for the location in the application.
    </p>
    <p num="13">
      In another embodiment of the present invention, a second request for entry of sleep mode is received.
      <br/>
      It is determined if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode and execution of the application is suspended for a second predetermined time period.
      <br/>
      The first predetermined time may also be updated to reflect a time based upon the first predetermined time period and the second predetermined time period associated with the application and location in the application requesting entry of sleep mode so as to provide a revised first predetermined time period.
      <br/>
      Furthermore, the second predetermined time period may be determined based on the first predetermined time period.
    </p>
    <p num="14">
      In particular embodiments where at least one first request and more than one continuation requests associated with the first request are received, then the first predetermined time may be updated by summing the first predetermined time associated with the first request and the second predetermined times associated with the continuation requests to provide a total time.
      <br/>
      The first predetermined time may then be set to the total time.
    </p>
    <p num="15">
      In another embodiment of the present invention, where a plurality of first requests for entry of sleep mode associated with the location in the application have been received and where at least one continuation request for entry of sleep mode was associated with a first request for entry of sleep mode immediately prior to a current first request for entry of sleep mode, the first predetermined time may be increased to a sum of the first predetermined time associated with the current first request and the second predetermined times associated with any continuation requests associated with the current first request if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is above a predefined threshold value.
      <br/>
      Furthermore, the first predetermined time may be increased by a first incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below the predefined threshold value.
      <br/>
      The incremental amount may be adjusted based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.
      <br/>
      Furthermore, the first incremental amount may be determined based on the first predetermined time.
    </p>
    <p num="16">
      In another embodiment of the present invention, where a plurality of first requests for entry of sleep mode associated with the location in the application have been received and where no continuation requests for entry of sleep mode associated with a first request for entry of sleep mode immediately prior to a current first request for entry of sleep mode were received the first predetermined time may be decreased by a second incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below a predefined threshold value.
      <br/>
      The second incremental amount may be adjusted based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.
      <br/>
      Furthermore, the second incremental amount may be determined based on the first predetermined time.
    </p>
    <p num="17">
      By incrementally increasing and decreasing the duration of sleep based on past requests for sleep mode, the present invention may adjust the sleep duration for the specific location in the application requesting sleep mode.
      <br/>
      Furthermore, this adjusted sleep duration may be utilized for subsequent requests for sleep mode from the location in the application, thus further refining the duration of sleep associated with the location in the application.
    </p>
    <p num="18">As will further be appreciated by those of skill in the art, the present invention may be embodied as a method, apparatus or computer program product.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="19">
      FIG. 1 is block diagram of a processing systems suitable for use with the present invention;
      <br/>
      FIG. 2 is a flow chart illustrating operation of the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="20">
      The present invention now will be described more fully hereinafter with reference to the accompanying drawings, in which preferred embodiments of the invention are shown.
      <br/>
      This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art.
      <br/>
      Like numbers refer to like elements throughout.
      <br/>
      As will be appreciated by one of skill in the art, the present invention may be embodied as methods or devices.
      <br/>
      Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment combining software and hardware aspects.
    </p>
    <p num="21">
      FIG. 1 illustrates data processing systems which may utilize the present invention.
      <br/>
      As seen in FIG. 1, a data processing system 10 includes an operating system 12 and application programs 14 and 16.
      <br/>
      Application programs 14 and 16 may communicate with each other or with other application programs executing on other data processing systems such as data processing system 20 illustrated in FIG. 1.
      <br/>
      Data processing system 20 may also include an operating system 22 and application programs such as application programs 24 and 26.
    </p>
    <p num="22">
      The present invention provides an enhanced sleep mode.
      <br/>
      As will be appreciated by those of skill in the art, sleep mode typically suspends execution of an application.
      <br/>
      Thus, for example, the smart sleep mode of the present invention may be incorporated in data processing system 10 or data processing system 20 for suspension of execution of an application program such as applications 14, 16, 24 or 26.
      <br/>
      Such a suspension of execution of an application may be utilized, for example, while an application waits for a response to a communication.
      <br/>
      Thus, if application 14 is communicating with application 16, application 14 may request entry of sleep mode to suspend execution of the application 14 until a response is received from application 16.
      <br/>
      Similarly, application 14 may request entry of sleep mode if it is communicating with application 24 to suspend execution of application 14 until a response is received from application 24.
      <br/>
      As will be appreciated by those of skill in the art, the time which application 14 may need to wait for a response from application 16 will typically be different than the time which application 14 may need to wait for a response from application 24.
      <br/>
      Furthermore, the location in application 14 calling for communication from application 16 may be different from the location in application 14 calling for communication with application 24.
      <br/>
      The present invention provides for such a difference through the smart sleep mode described herein.
      <br/>
      While the present invention is illustrated as used with regard to communications between applications, the present invention may be utilized any time suspension of execution of an application is desired.
    </p>
    <p num="23">
      As is described with respect to the flow chart illustration of FIG. 2, the present invention provides for a dynamic determination of sleep mode durations so as to control the number of sleep mode requests by an application by reducing the number of sleep mode requests while also reducing the amount of time execution of an application is suspended unnecessarily.
      <br/>
      The present invention utilizes information about the application and location in the application requesting sleep mode (e.g. the loop in the application) and a history of sleep durations for the location in the application to dynamically establish the sleep mode duration.
    </p>
    <p num="24">
      The present invention may be implemented as a component of an operating system or as an intermediate routine which intercepts requests for sleep mode to the operating system.
      <br/>
      Alternatively, the smart sleep mode of the present invention could be incorporated into an application.
    </p>
    <p num="25">
      The present invention will now be described with respect to FIG. 2 which is a flowchart illustrating the operation of a processing system, for example, as depicted in FIG. 1, utilizing the present invention.
      <br/>
      It will be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by computer program instructions.
      <br/>
      These program instructions may be provided to a processor to produce a machine, such that the instructions which execute on the processor create means for implementing the functions specified in the flowchart block or blocks.
      <br/>
      The computer program instructions may be executed by a processor to cause a series of operational steps to be performed by the processor to produce a computer implemented process such that the instructions which execute on the processor provide steps for implementing the functions specified in the flowchart block or blocks.
    </p>
    <p num="26">
      Accordingly, blocks of the flowchart illustration support combinations of means for performing the specified functions, combinations of steps for performing the specified functions and program instruction means for performing the specified functions.
      <br/>
      It will also be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by special purpose hardware-based systems which perform the specified functions or steps, or combinations of special purpose hardware and computer instructions.
    </p>
    <p num="27">
      As is seen in FIG. 2, when smart sleep mode is invoked, the sleep function determines the application and location in the application requesting entry of sleep mode (block 52).
      <br/>
      This determination may be made by, for example, an application and loop identifier provided to the sleep function by the application requesting entry of sleep mode.
      <br/>
      Alternatively, the sleep function may determine the application and location in the application from the calling location in memory of the data processing system.
    </p>
    <p num="28">
      After the application and location in the application requesting sleep mode are determined, it is then determined if this is the first time that sleep mode has been requested for that application and location in the application (block 54).
      <br/>
      If it is the first time, then memory is set up to create a sleep history for the location in the application and the duration of sleep is set to the default sleep duration (block 56).
      <br/>
      Sleep mode is then entered and execution of the requesting application is suspended for the sleep duration (block 68).
    </p>
    <p num="29">
      In setting up the sleep history for the location in the application, a table entry may be created corresponding to the location in the application.
      <br/>
      The table entry may include information such as the duration required for previous sleep mode requests, whether continuation sleep mode requests were required and the predetermined time to which the sleep duration should be set when a request for entry of sleep mode is received.
    </p>
    <p num="30">
      Returning to block 54, if the request for entry of sleep mode is not the first request for entry of sleep mode made by the location in the application, then a table entry already exists for that location in the application and so it is determined if this is an initial request for entry of sleep mode or a continuation of a previous request for entry of sleep mode (block 58).
      <br/>
      According to the present invention, requests for entry of sleep mode may take two forms; initial requests for entry of sleep mode and continuation requests for entry of sleep mode.
      <br/>
      An initial request for entry of sleep mode is made by an application the first time it requests entry of sleep mode.
      <br/>
      A continuation request for entry of sleep mode is made by an application when execution of the application was continued after the initial request for entry of sleep mode was completed but the event which was waited for by the application has not occurred (i.e. the duration of the initial sleep mode was not long enough).
    </p>
    <p num="31">
      If the request is an initial request then the sleep duration is set to the predetermined time in the table entry corresponding to the location in the application (block 62).
      <br/>
      It is then determined if the previous request for entry of sleep mode associated with the location in the application was successful (i.e. no continuation requests were required) (block 64).
      <br/>
      If the previous request for entry of sleep mode was successful, then it is determined if a sufficient number of previous initial requests for entry of sleep mode were successful such that the predetermined time associated with initial requests from the location in the application could be reduced (block 66).
      <br/>
      Such a determination may be made by, for example, establishing a threshold value and then determining if the number of successful previous requests is above or below the threshold value.
      <br/>
      The threshold value may be a percentage of the total number of previous requests.
    </p>
    <p num="32">
      If a sufficient number of the previous requests were not successful, then the existing predetermined time is used as the duration of sleep mode and sleep mode is entered by suspension of execution of the application requesting sleep mode (block 68).
      <br/>
      However, if a sufficient number of the previous requests were successful, then the predetermined time associated with the location in the application requesting sleep mode which specifies the duration of initial sleep mode is decreased (block 66).
      <br/>
      Sleep mode is then entered using the decreased duration by suspending execution of the application requesting sleep mode for the specified predetermined time (block 68).
      <br/>
      The decreased sleep time is also set as the predetermined time associated with the location from the application requesting entry of sleep mode.
    </p>
    <p num="33">
      Returning to block 64, if the previous request for sleep mode from the location in the application was not successful(i.e. a continuation request was required), then it is determined if a sufficient number of previous requests were successful to increase the duration of sleep incrementally, rather than utilizing the total sleep time associated with the previous initial request and any subsequent continuation requests (block 70).
      <br/>
      Such a determination may be made by, for example, establishing a second threshold value and then determining if the number of successful previous requests is above or below the second threshold value.
      <br/>
      The second threshold value may be a percentage of the total number of previous requests.
    </p>
    <p num="34">
      If a sufficient number of the previous requests were not successful (block 70), then the sleep duration for the present request is set to the total time the application was suspended during the previous initial request for entry of sleep mode from the location in the application and the time that the application was suspended during any continuation requests associated with the previous initial request(block 74).
      <br/>
      Thus, if the previous initial request for entry of sleep mode was not successful and the sleep history for the location in the application indicates that a sufficient number of requests were unsuccessful, then the predetermined time is set to the total sleep time associated with the previous initial sleep mode request and all of its associated continuation requests.
      <br/>
      The total sleep time is also set as the predetermined time associated with the location from the application requesting entry of sleep mode.
    </p>
    <p num="35">
      If a sufficient number of the previous requests were successful (block 70), then the sleep duration for the present request is increased from the previous sleep duration by an incremental amount (block 72).
      <br/>
      Sleep mode is then entered using the increased duration by suspending execution of the application requesting sleep mode for the specified predetermined time (block 68).
      <br/>
      The increased sleep time is also set as the predetermined time associated with the location from the application requesting entry of sleep mode.
    </p>
    <p num="36">
      According to the present invention, the incremental increase or decrease of the sleep duration may be made utilizing the same incremental values or different incremental values.
      <br/>
      Thus, for example, the amount of increase and decrease may be the same amount of time or they may be different.
      <br/>
      Preferably the incremental times are less than the default time so that a finer resolution of adjustment may be made of the sleep duration.
      <br/>
      Furthermore, the value of the incremental increase or decrease may be adjusted based on the number of successes reflected in the sleep history.
      <br/>
      Thus, for example, if a large number of successes were achieved, the incremental value could be decreased to further fine tune the sleep duration associated with the location in the application.
    </p>
    <p num="37">
      Typical default durations according to the present invention may be about 100 milliseconds, however, as will be appreciated by those of skill in the art, any number of durations may be utilized while still benefitting from the teachings of the present invention.
      <br/>
      Furthermore, the default duration may be specified by the application requesting the entry of sleep mode such that, if no history is associated with the location requesting entry of sleep mode, the default is utilized.
      <br/>
      Thus, the present invention may provide for application specific variations in the default duration.
    </p>
    <p num="38">
      With respect to the incremental values and the time associated with a continuation sleep request, these values may be about 10 or 25 milliseconds, however, any suitable incremental value or continuation value may be utilized.
      <br/>
      Furthermore, the incremental values as well as the predetermined time associated with a continuation may be established based on the default time periods.
      <br/>
      For example, 10% of the initial time may be used as the incremental value.
      <br/>
      Thus, the present invention may adjust the incremental values based on the default values to provide application specific refinement of the sleep duration.
    </p>
    <p num="39">
      With regard to the determinations of previous successes or failures, the threshold value associated with decreasing the sleep mode duration may be set to about 75%.
      <br/>
      However, threshold values of from about 50% to about 100% or other threshold values may be utilized as well as other forms of measuring success.
      <br/>
      With respect to the threshold value for determining if the duration should be set to the total time or incrementally increased, threshold values of about 75% may be suitable.
      <br/>
      However, threshold values of from about 50% to about 100% may also be used as well as other percentages or forms of success measurement.
      <br/>
      Furthermore, these threshold values may be rolling averages such that only a subset of all requests are used in determining the threshold comparison.
      <br/>
      Thus, for example, only the immediately previous 10 requests could be utilized in the threshold comparison so as to filter out anomalous conditions or changes in operating environment.
    </p>
    <p num="40">
      The present invention has been primarily described above with respect to an embodiment in which information about the application, location and type of request is provided to the sleep function as part of the request.
      <br/>
      However, as will be appreciated by those of skill in the art, the present invention may alternatively determine such information without the information being provided by the requesting application.
      <br/>
      For example, the application and location may be determined from the requesting memory location.
      <br/>
      Furthermore, whether the request is an initial request or a continuation may be determined by the time between requests, for example, a short duration between requests would indicate a continuation request and a longer duration would indicate an initial request.
      <br/>
      Thus, the present invention may take the form of a replacement routine for a conventional sleep function of the operating system such that requesting applications need not be modified to take advantage of the present invention.
      <br/>
      Alternatively, the present invention may work cooperatively with requesting applications as described above.
    </p>
    <p num="41">In the drawings and specification, there have been disclosed typical preferred embodiments of the invention and, although specific terms are employed, they are used in a generic and descriptive sense only and not for purposes of limitation, the scope of the invention being set forth in the following claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>That which is claimed is:</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10.</claim-text>
      <claim-text>A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for a second predetermined time period; wherein a plurality of first requests for entry of sleep mode associated with the location in the application have been received and wherein at least one continuation request for entry of sleep mode was associated with a first request for entry of sleep mode immediately prior to a current first request for entry of sleep mode, the method further comprising the steps of: increasing the first predetermined time to a sum of the first predetermined time associated with the current first request and the second predetermined times associated with any continuation requests associated with the current first request if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is above a predefined threshold value;</claim-text>
      <claim-text>and increasing the first predetermined time by a first incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below the predefined threshold value.</claim-text>
      <claim-text>1. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of:</claim-text>
      <claim-text>receiving a first request for entry of sleep mode;</claim-text>
      <claim-text>then determining a location in an application requesting entry of sleep mode in response to the first request for entry of sleep mode; determining a duration of a first predetermined time period based on the application requesting sleep mode and the determined location in the application requesting entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for the determined duration of the first predetermined time period.</claim-text>
      <claim-text>2. A method according to claim 1, wherein the first request for entry of sleep mode specifies the application and location in the application requesting entry of sleep mode and wherein said step of determining the location in the application requesting entry of sleep mode comprises the step of inspecting the first request for entry of sleep mode to determine the application and location in the application requesting entry of sleep mode.</claim-text>
      <claim-text>3. A method according to claim 1, further comprising the steps of: receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for a second predetermined time period.</claim-text>
      <claim-text>4. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; generating a sleep history associated with the location in the application based on previous durations of sleep associated with the location in the application;</claim-text>
      <claim-text>and adjusting the first predetermined time based upon the sleep history associated with the location in the application so as to control the number of requests for entry of sleep mode associated with the location in the application.</claim-text>
      <claim-text>5. A method according to claim 4 wherein the first request for entry of sleep mode further specifies a first predetermined time period if a sleep history is not available for the location in the application.</claim-text>
      <claim-text>6. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and updating the first predetermined time to reflect a time based upon the first predetermined time period and the second predetermined time period so as to provide a revised first predetermined time period for the application and location in the application requesting entry of sleep mode.</claim-text>
      <claim-text>7. A method according to claim 6 the second request is a continuation request and at least one additional continuation request associated with the first request and having an additional second predetermined time is received, and wherein the step of updating the first predetermined time comprises the steps of: summing the first predetermined time associated with the first request and the second predetermined time and additional second predetermined times associated with the continuation requests to provide a total time;</claim-text>
      <claim-text>and setting the first predetermined time to the total time.</claim-text>
      <claim-text>8. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for a second predetermined time period wherein the second predetermined time period is determined based on the first predetermined time period.</claim-text>
      <claim-text>9. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and wherein the request for entry of sleep mode specifies whether the request is a request for continuation of sleep mode and wherein said step of determining if the request for entry of sleep mode is a continuation of a previous sleep mode request comprises the step of inspecting the sleep mode request to determine if the request is a request for continuation of sleep mode.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A method according to claim 10 further comprising the step of adjusting the first incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method according to claim 10, wherein the first incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A method of controlling execution of an application executing on a data processing system, the method comprising the steps of: receiving a first request for entry of sleep mode; determining a location in an application requesting entry of sleep mode; suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; receiving a second request for entry of sleep mode; determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and suspending execution of the application for a second predetermined time period; wherein a plurality of first requests for entry of sleep mode associated with the location in the application have been received and wherein no continuation requests for entry of sleep mode associated with a first request for entry of sleep mode immediately prior to a current first request for entry of sleep mode were received, the method further comprising the step of:</claim-text>
      <claim-text>- decreasing the first predetermined time by a second incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below a predefined threshold value.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A method according to claim 13, further comprising the step of adjusting the second incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A method according to claim 13, wherein the second incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode responsive to the means for receiving a first request for entry of sleep mode; means for determining a duration of a first predetermined time period based on the application requesting sleep mode and the determined location in the application requesting entry of sleep mode;</claim-text>
      <claim-text>and means for suspending execution of the application for the first predetermined time period.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. A system according to claim 16, wherein the first request for entry of sleep mode specifies the application and location in the application requesting entry of sleep mode and wherein said means for determining the location in the application requesting entry of sleep mode comprises means for inspecting the first request for entry of sleep mode to determine the application and location in the application requesting entry of sleep mode.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. A system according to claim 16, further comprising: means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and means for suspending execution of the application for a second predetermined time period.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for generating a sleep history associated with the location in the application based on previous durations of sleep associated with the location in the application;</claim-text>
      <claim-text>and means for adjusting the first predetermined time based upon the sleep history associated with the location in the application so as to control the number of requests for entry of sleep mode associated with the location in the application.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. A system according to claim 19, wherein the first request for entry of sleep mode further specifies a first predetermined time period if a sleep history is not available for the location in the application.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; computer-readable program code means for determining a location in an application requesting entry of sleep mode responsive to the computer-readable program code means for receiving a first request for entry of sleep mode; computer-readable program code means for determining a duration of a first predetermined time period based on the application requesting sleep mode and the determined location in the application requesting entry of sleep mode;</claim-text>
      <claim-text>and computer-readable program code means for suspending execution of the application for the first predetermined time period.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A computer program product according to claim 21, wherein the first request for entry of sleep mode specifies the application and location in the application requesting entry of sleep mode and wherein said computer-readable program code means for determining the location in the application requesting entry of sleep mode comprises computer-readable program code means for inspecting the first request for entry of sleep mode to determine the application and location in the application requesting entry of sleep mode.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. A computer program product according to claim 21, further comprising: computer-readable program code means for receiving a second request for entry of sleep mode; computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and computer-readable program code means for suspending execution of the application for a second predetermined time period.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for generating a sleep history associated with the location in the application based on previous durations of sleep associated with the location in the application;</claim-text>
      <claim-text>and - computer-readable program code means for adjusting the first predetermined time based upon the sleep history associated with the location in the application so as to control the number of requests for entry of sleep mode associated with the location in the application.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. A computer program product according to claim 24, wherein the first request for entry of sleep mode further specifies a first predetermined time period if a sleep history is not available for the location in the application.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; means for suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and means for updating the first predetermined time to reflect a time based upon the first predetermined time period and the second predetermined time period so as to provide a revised first predetermined time period for the application and location in the application requesting entry of sleep mode.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; means for suspending execution of the application for a second predetermined time period, wherein the second predetermined time period is determined based on the first predetermined time period.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. A system according to claim 27 wherein the second request is a continuation request and at least one additional continuation request associated with the first request and having an additional second predetermined time is received, and wherein the means for updating the first predetermined time comprises: means for summing the first predetermined time associated with the first request and the second predetermined time and additional second predetermined times associated with the continuation requests to provide a total time;</claim-text>
      <claim-text>and means for setting the first predetermined time to the total time.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and means for suspending execution of the application for a second predetermined time period; wherein the request for entry of sleep mode specifies whether the request is a request for continuation of sleep mode and wherein said means for determining if the request for entry of sleep mode is a continuation of a previous sleep mode request comprises means for inspecting the sleep mode request to determine if the request is a request for continuation of sleep mode.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; means for suspending execution of the application for a second predetermined time period; means for increasing the first predetermined time to a sum of the first predetermined time associated with the current first request and the second predetermined times associated with any continuation requests associated with the current first request if a number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is above a predefined threshold value;</claim-text>
      <claim-text>and means for increasing the first predetermined time by a first incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below the predefined threshold value.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. A system according to claim 30 further comprising means for adjusting the first incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. A system according to claim 30, wherein the first incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. A system for controlling execution of an application executing on a data processing system, comprising: means for receiving a first request for entry of sleep mode; means for determining a location in an application requesting entry of sleep mode; means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; means for receiving a second request for entry of sleep mode; means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; means for suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and means for decreasing the first predetermined time by a second incremental amount if a number of previous first requests for entry of sleep mode from the location in the application of a plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below a predefined threshold value.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. A system according to claim 33, further comprising means for adjusting the second incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. A system according to claim 33, wherein the second incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for receiving a second request for entry of sleep mode; - computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; - computer-readable program code means for suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and - computer-readable program code means for updating the first predetermined time to reflect a time based upon the first predetermined time period and the second predetermined time period so as to provide a revised first predetermined time period for the application and location in the application requesting entry of sleep mode.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for receiving a second request for entry of sleep mode; - computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and - computer-readable program code means for suspending execution of the application for a second predetermined time period, wherein the second predetermined time period is determined based on the first predetermined time period.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. A computer program product according to claim 37 wherein the second request is a continuation request and at least one additional continuation request associated with the first request and having an additional second predetermined time is received, and wherein the computer-readable program code means for updating the first predetermined time comprises: computer-readable program code means for summing the first predetermined time associated with the first request and the second predetermined time and additional second predetermined times associated with the continuation requests to provide a total time;</claim-text>
      <claim-text>and computer-readable program code means for setting the first predetermined time to the total time.</claim-text>
    </claim>
    <claim num="39">
      <claim-text>39. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for receiving a second request for entry of sleep mode; - computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode;</claim-text>
      <claim-text>and - computer-readable program code means for suspending execution of the application for a second predetermined time period; - wherein the request for entry of sleep mode specifies whether the request is a request for continuation of sleep mode and wherein said computer-readable program code means for determining if the request for entry of sleep mode is a continuation of a previous sleep mode request comprises computer-readable program code means for inspecting the sleep mode request to determine if the request is a request for continuation of sleep mode.</claim-text>
    </claim>
    <claim num="40">
      <claim-text>40. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for receiving a second request for entry of sleep mode; - computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; - computer-readable program code means for suspending execution of the application for a second predetermined time period; - computer-readable program code means for increasing the first predetermined time to a sum of the first predetermined time associated with the current first request and the second predetermined times associated with any continuation requests associated with the current first request if a number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is above a predefined threshold value;</claim-text>
      <claim-text>and - computer-readable program code means for increasing the first predetermined time by a first incremental amount if the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below the predefined threshold value.</claim-text>
    </claim>
    <claim num="41">
      <claim-text>41. A computer program product according to claim 40 further comprising computer-readable program code means for adjusting the first incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="42">
      <claim-text>42. A computer program product according to claim 40, wherein the first incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
    <claim num="43">
      <claim-text>43. A computer program product for controlling execution of an application executing on a data processing system, comprising: a computer readable storage medium having computer-readable program code means embodied in said medium, said computer-readable program code means comprising: - computer-readable program code means for receiving a first request for entry of sleep mode; - computer-readable program code means for determining a location in an application requesting entry of sleep mode; - computer-readable program code means for suspending execution of the application for a first predetermined time period based upon the application and location in the application requesting entry of sleep mode; - computer-readable program code means for receiving a second request for entry of sleep mode; - computer-readable program code means for determining if the second request for entry of sleep mode is a continuation of the first request for entry of sleep mode; - computer-readable program code means for suspending execution of the application for a second predetermined time period;</claim-text>
      <claim-text>and - computer-readable program code means for decreasing the first predetermined time by a second incremental amount if a number of previous first requests for entry of sleep mode from the location in the application of a plurality of first requests having a continuation request for entry of sleep mode associated with the first request is below a predefined threshold value.</claim-text>
    </claim>
    <claim num="44">
      <claim-text>44. A computer program product according to claim 43, further comprising computer-readable program code means for adjusting the second incremental amount based on the number of previous first requests for entry of sleep mode from the location in the application of the plurality of first requests having a continuation request for entry of sleep mode associated with the first request.</claim-text>
    </claim>
    <claim num="45">
      <claim-text>45. A computer program product according to claim 43, wherein the second incremental amount is determined based on the first predetermined time.</claim-text>
    </claim>
  </claims>
</questel-patent-document>