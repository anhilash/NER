<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185563B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185563</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185563</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="17157040" extended-family-id="23920181">
      <document-id>
        <country>US</country>
        <doc-number>09119630</doc-number>
        <kind>A</kind>
        <date>19980721</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09119630</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>24539045</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>JP</country>
        <doc-number>24700997</doc-number>
        <kind>A</kind>
        <date>19970911</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997JP-0247009</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  12/00        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>12</main-group>
        <subgroup>00</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F  12/14        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>12</main-group>
        <subgroup>14</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06F  13/00        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>G06F  21/10        20130101ALI20130301RHJP</text>
        <ipc-version-indicator>
          <date>20130101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>21</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130301</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>G06F  21/62        20130101ALI20130301RHJP</text>
        <ipc-version-indicator>
          <date>20130101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>21</main-group>
        <subgroup>62</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130301</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <further-classification sequence="1">
        <text>707999008</text>
        <class>707</class>
        <subclass>999008</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707999010</text>
        <class>707</class>
        <subclass>999010</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>707E17007</text>
        <class>707</class>
        <subclass>E17007</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>709203000</text>
        <class>709</class>
        <subclass>203000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>709210000</text>
        <class>709</class>
        <subclass>210000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>709225000</text>
        <class>709</class>
        <subclass>225000</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>709229000</text>
        <class>709</class>
        <subclass>229000</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>715234000</text>
        <class>715</class>
        <subclass>234000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06Q-010/10</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>10</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30371</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30371</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130627</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99938</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99938</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>2</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>11</number-of-drawing-sheets>
      <number-of-figures>19</number-of-figures>
      <image-key data-format="questel">US6185563</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Document management method and apparatus for ensuring consistency of document contents</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BRIDGES JR LOUIS E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4141078</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4141078</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>GREEN WENDEL C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4153931</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4153931</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>BLY SARA A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5008853</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5008853</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>PATEL NEIL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5288980</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5288980</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>STEFIK MARK J</text>
          <document-id>
            <country>US</country>
            <doc-number>5715403</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5715403</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>SAIGH MICHAEL M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5734823</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5734823</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>MONTULLI LOU</text>
          <document-id>
            <country>US</country>
            <doc-number>5774670</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5774670</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>SMITH II ROBERT H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5884298</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5884298</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>VAN HUBEN GARY ALAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5966707</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5966707</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>GILL TIMOTHY EARL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6052514</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6052514</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>NAKAO YOSHIO</text>
          <document-id>
            <country>US</country>
            <doc-number>6061697</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6061697</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>WANG DIANA S</text>
          <document-id>
            <country>US</country>
            <doc-number>5251315</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5251315</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>WANG DIANA SHU-FAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5333312</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5333312</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>SHI SHAW-BEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5623659</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5623659</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>MATSUSHITA ELECTRIC IND CO LTD</text>
          <document-id>
            <country>JP</country>
            <doc-number>H06243014</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP06243014</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>IBM</text>
          <document-id>
            <country>JP</country>
            <doc-number>H06314227</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP06314227</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>CANON KK</text>
          <document-id>
            <country>JP</country>
            <doc-number>H09185540</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP09185540</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Kabushiki Kaisha Toshiba</orgname>
            <address>
              <address-1>Kawasaki, JP</address-1>
              <city>Kawasaki</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>TOSHIBA</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Hino, Yosuke</name>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Finnegan, Henderson, Farabow, Garrett &amp; Dunner, L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Homere, Jean R.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      In an client-server electronic filing system, the server performs check-in check-out management on documents that two or more clients share and restrains the check-out of the same document by two or more clients.
      <br/>
      Through the use of a check-in check-out table for check-in check-out management of documents that the clients share, the server prohibits the check-out of a document requested by a client until the document is checked in or until the check-out of the document is canceled, thereby preventing concurrent multiple updating of the same document by two or more clients.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">The present invention relates to a client-server electronic filing system, a document filing method and storage medium for use in the filing system, and more particularly to a client-server electronic filing system having a check-in check-out facility for document management, a document management method and storage medium for use in the filing system.</p>
    <p num="2">
      The client-server electronic filing system allows two or more clients to share documents and has a feature that, when a change is made to a document by a client, the resulting document can be immediately referenced by the other clients.
      <br/>
      For this reason, this type of filing system has an exclusive control function among two or more clients to ensure the consistency of information two or more clients share.
      <br/>
      In addition, the system has such a security function as to specify clients who are allowed to make references and changes to documents or document folders.
    </p>
    <p num="3">
      With this type of filing system, however, the following problem arises when two or more clients update the same document.
      <br/>
      That is, a client A retrieves a document for updating purpose and updates it on the client side.
      <br/>
      Before the result of the updating is reflected in the server, another client B may also reference the same document for updating purpose.
      <br/>
      At this point, the updating by the client A is not yet reflected in the document that the client B is referencing.
      <br/>
      After that, the result of updating by the client A will be reflected in the original document in the server.
      <br/>
      At a still later time, the result of updating by the client B will be reflected in the document in the server.
    </p>
    <p num="4">As a result, in the server the document updated by the client A will be overwritten by the document updated by the client B, so that the updating by the client A is not reflected in the document in the server, but only the updating by the client B is reflected.</p>
    <p num="5">Thus, the problem with the conventional system is that changes made by clients are not reflected correctly.</p>
    <p num="6">
      Conventionally there is also a method to allow only one client to update a document through the control of update rights.
      <br/>
      This method imposes operation restrictions which are too stringent to solve the above-described problem and is not suitable for the essential technical concept of document sharing by two or more clients.
    </p>
    <heading>BRIEF SUMMARY OF THE INVENTION</heading>
    <p num="7">Accordingly, it is an object of the present invention to provide a client-server electronic filing system which ensures consistency of document contents and permits an update by each client to be reflected correctly in the original document, and a document management method and a storage medium for use in the electronic filing system.</p>
    <p num="8">It is another object of the present invention to provide a client-server electronic filing system which permits the concurrent double updating of a document by two or more clients to be prevented, and a document management method and a storage medium for use in the electronic filing system.</p>
    <p num="9">According to one aspect of the present invention, there is provided an electronic filing system comprising: a plurality of client units each capable of making a check-in/check-out request for a document; and a server unit having means for directing check-in check-out management of documents that the plurality of client units share, the check-in check-out management means restraining the check-out of the same document by the plurality of client units.</p>
    <p num="10">In the system, the check-in check-out management means may include means for prohibiting the check-out of a document until the document is checked in or its check-out is canceled.</p>
    <p num="11">In the system, the check-in check-out management means may include means for performing the check-out of the document after the document has been checked in or after its check-out has been canceled.</p>
    <p num="12">In the system, the check-in check-out management means may include means for, at the time of check-in, performing requested update processes in sequence.</p>
    <p num="13">In the system, the check-in check-out management means may include means for, at the time of check-in, deleting the original document in its entirety, creating a new document, and performing requested update processes on the new document in sequence.</p>
    <p num="14">In the system, the check-in check-out management means may include means for, at the time of check-in, automatically creating a new document with the original document left as the old version and performing requested update processes on the new document in sequence.</p>
    <p num="15">In the system, the check-in check-out management means may include means for, after the document has been checked out, canceling the check-out of the document without performing any update process.</p>
    <p num="16">In the system, the check-in check-out management means may include means for, at the time of check-out of a document, setting a time limit of the check-out, means for monitoring the check-out time limit, and means responsive to the monitoring means for automatically canceling the check-out when the time limit for the document has expired.</p>
    <p num="17">In the system, the check-in check-out management means may include means for enabling a specific client to cancel the check-out.</p>
    <p num="18">In the system, the check-in check-out management means may include means for, when the document is being checked out, notifying the clients that the document is being checked out.</p>
    <p num="19">In the system, the check-in check-out management means may include a check-in check-out table used for the document check-in check-out management, status recording entries being created in the table on a document by document basis with each occurrence of document check-out.</p>
    <p num="20">In the system, the status recording entries in the table may include a document management number entry, a check-out client name entry, a check-out date entry, a check-out time limit entry, and a check-in status entry.</p>
    <p num="21">In the system, the check-in status entry may be recorded with one of current document statuses of check-out, addition request, replacement, and revision.</p>
    <p num="22">According to another aspect of the present invention there is provided a document management method for use in an electronic filing system having a plurality of client units and a server unit, comprising the steps of: installing a facility for performing check-in check-out management of documents that the plurality of client units share; and restraining check-out of the same document by the plurality of client units using the check-in check-out management facility.</p>
    <p num="23">In the method, the step of restraining check-out of the same document may include the step of prohibiting check-out of a document until the document is checked in or until the check-out is canceled using the check-in check-out management facility.</p>
    <p num="24">In the method, the step of restraining check-out of the same document may include the step of performing the check-out of the document after the document has been checked in or after the check-out has been canceled.</p>
    <p num="25">The method may further comprise the step of, at the time of check-in, performing requested update processes in sequence.</p>
    <p num="26">The method may further comprise the step of, at the time of check-in, deleting the original document in its entirety, creating a new document, and performing requested update processes on the new document in sequence.</p>
    <p num="27">The method may further comprise the step of, at the time of check-in, automatically creating a new document with the original document left as the old version and performing requested update processes on the new document in sequence.</p>
    <p num="28">The method may further comprises the step of, after the document has been checked out, canceling the check-out of the document without performing any update process.</p>
    <p num="29">The method may further comprise the steps of, at the time of check-out of a document, setting a time limit of the check-out, monitoring the check-out time limit, and automatically canceling the check-out when the time limit for the document has expired.</p>
    <p num="30">The method may further comprise the step of enabling a specific client unit to cancel the check-out.</p>
    <p num="31">The method may further comprise the step of, when the document is being checked out, notifying the clients that the document is being checked out.</p>
    <p num="32">The method may further comprise the steps of providing the check-in check-out management facility with a check-in check-out table used for the document check-in check-out management, and creating status recording entries in the table on a document by document basis with each occurrence of document check-out.</p>
    <p num="33">In the method, the status recording entries in the table may include a document management number entry, a check-out client name entry, a check-out date entry, a check-out time limit entry, and a check-in status entry.</p>
    <p num="34">In the method, the check-in status entry may be recorded with one of current document statuses of check-out, addition request, replacement, and revision.</p>
    <p num="35">According to still another aspect of the present invention, there is provided a storage medium having program code instructions stored thereon which perform document management in an electronic filing system having a plurality of client units and a server unit when executed by a computer, the instructions comprising: means for installing a facility for performing check-in check-out management of documents that the plurality of client units share; and means for restraining check-out of the same document by the plurality of client units using the check-in check-out management facility.</p>
    <p num="36">
      Additional objects and advantages of the invention will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention.
      <br/>
      The objects and advantages of the invention may be realized and obtained by means of the instrumentalities and combinations particularly pointed out hereinafter.
    </p>
    <heading>BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING</heading>
    <p num="37">
      The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate presently preferred embodiments of the invention, and together with the general description given above and the detailed description of the preferred embodiments give below, serve to explain the principles of the invention.
      <br/>
      FIG. 1 is a schematic representation of a client-server electronic filing system according to an embodiment of the present invention;
      <br/>
      FIG. 2 shows an organization of the check-in check-out table (TBL-A) in the document management database of FIG. 1;
      <br/>
      FIG. 3 shows the contents of the check-in check-out table (TBL-A) in the document management database of FIG. 1;
      <br/>
      FIG. 4 shows the contents of the document link table (TBL-B) in the document management database of FIG. 1;
      <br/>
      FIG. 5 shows the contents of the user table (TBL-C) in the document management database of FIG. 1;
      <br/>
      FIG. 6 is a flowchart illustrating a check-out request acceptance procedure of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 7 is a flowchart illustrating a check-in request acceptance procedure in the addition request mode of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 8 is a flowchart illustrating a check-in request acceptance procedure in the document replacement mode of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 9 is a flowchart illustrating a check-in request acceptance procedure in the document revision mode of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 10 is a flowchart illustrating a check-out cancel procedure of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 11 illustrates restrictions on operations from a client that is checking in or checking out in the form of comparison among a check-out user, a user having check-out cancel permission, and other users;
      <br/>
      FIG. 12 is a flowchart illustrating the flow of the overall processing of the check-in check-out-based document management facility in the embodiment;
      <br/>
      FIG. 13 is a flowchart for the check-out procedure in step F2 in FIG. 12;
      <br/>
      FIG. 14 is a flowchart for the check-out cancel procedure in step F11 in FIG. 12;
      <br/>
      FIG. 15 is a flowchart for the check-in procedure in step F3 in FIG. 12;
      <br/>
      FIG. 16 is a flowchart for part of the update request acceptance procedure in step F4 in FIG. 12;
      <br/>
      FIGS. 17A and 17B form a flowchart for part of the update request acceptance procedure in step F4 in FIG. 12; and
      <br/>
      FIG. 18 is a flowchart for the check-in termination (check-out termination) procedure in step F5 in FIG. 12.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="38">A preferred embodiment of the present invention will now be described with reference to the accompanying drawings.</p>
    <p num="39">
      Referring now to FIG. 1 there is illustrated in block diagram a client-server electronic filing system according to an embodiment of the present invention.
      <br/>
      In the following description, the term "client" may be replaced with "user".
    </p>
    <p num="40">
      In FIG. 1, reference numerals 10, 20, 21, 22, 23 and 30 denote components on the server side.
      <br/>
      Specifically, 10 denotes a server body (herein referred to simply as the server) which has a function of storing and managing documents two or more clients share and has its internal storage (not shown) stored with a check-in check-out processing program for implementing a check-in check-out-based document management facility to be described later.
    </p>
    <p num="41">Here, "check-out" refers to that the server lends out a document to a client, and "check-in" refers to that the client returns the document to the server.</p>
    <p num="42">
      Reference numeral 20 denotes a document management database (management DB) that implements the document management facility on a check-in check-out management basis.
      <br/>
      The document management database has a check-in check-out table (TBL-A) 21 as shown in FIGS. 2 and 3, a document link table (TBL-B) 22 as shown in FIG. 4, and a user table (TBL-C) 23 as shown in FIG. 5.
      <br/>
      The document management database 20 is a relational database.
    </p>
    <p num="43">
      Reference numeral 30 denotes a document storage unit that stores documents that two or more clients share and takes in and takes out documents under the document management control of the server 10.
      <br/>
      In general, this storage unit needs a large storage capacity and hence consists of a large-volume storage unit such as a hard disk drive (HDD), a magneto-optical (MO) disk drive, or the like.
    </p>
    <p num="44">
      Reference numeral 40 denotes clients that are line connected to the server 10 through a communications path 50 such as a local area network (LAN).
      <br/>
      Each client has a function of referencing (retrieving, printing, etc.) any document in the database freely and a function of updating the document borrowed through the check-out processing and checking in (i.e., returning) it under the check-in check-out management of the server 10.
    </p>
    <p num="45">
      FIGS. 2 and 3 show an example of an organization of the check-in check-out table (TBL-A) 21 in the document management database 20.
      <br/>
      Here, with each occurrence of a check-out event, one row of status recording entries is created on a document-by-document basis as shown in FIG. 6.
    </p>
    <p num="46">The status recording entries of the check-in check-out table 21 include, as shown in FIG. 3, items of document management number (DOCUMENT No.), check-out user (CHKOUT_USER), check-out date (CHKOUT_DATE), check-out time limit (CHKOUT_LIMIT), and check-in status (CHKIN_STATUS).</p>
    <p num="47">
      The document management number (DOCUMENT_No.) is information that forms an identifier (primary key) for uniquely identifying a document on the system.
      <br/>
      The check-out user (CHKOUT_USER) is information indicating the user name of a user who has checked out (i.e., borrowed).
      <br/>
      The check-out date (CHKOUT_DATE) is information concerning the date (year, month, and day) and time when the user checked out, and the check-out time limit (CHKOUT_LIMIT) is information indicating a user-set period during which time the user has the loan of the document.
    </p>
    <p num="48">
      The check-in status (CHKIN_STATUS) is information representing one of various statuses at the time of check-in.
      <br/>
      Here, the status is one of check-out status ("0"), addition request status ("1"), document replacement status ("2"), and document revision status ("3").
    </p>
    <p num="49">
      FIG. 4 shows an organization of the document link table (TBL-B) 22 provided in the document management database 20.
      <br/>
      The table includes items of document management number (DOCUMENT_NO.), new document management number (NEW_DOCUMENT_NO.), and old document management number (OLD_DOCUMENT_NO.).
      <br/>
      The revised versions of a document are related to one another by referencing the document link table (TBL-B) 22.
    </p>
    <p num="50">
      To relate revised versions of a document with one another, information indicating versions of each document is also added.
      <br/>
      For example, if a certain document is the first one of version 1, then a new document which is a revised version of that document is represented as "2".
      <br/>
      The old document before revision is represented as "0" because it is not present.
      <br/>
      Also, if a certain document is the last document of version "3", a new document which is a revised version of that document is represented as "0" because it is not yet present.
      <br/>
      The old document before revision is represented as "2".
    </p>
    <p num="51">
      FIG. 5 shows an organization of the user table (TBL-C) 23 provided in the document management database 20.
      <br/>
      Here, there are provided for each user an item of user ID (USER) that identifies a user and an item of permission (PERMISSION) granted to the user.
      <br/>
      By making reference to the table, a user who has check-out cancel permission is set or it is determined whether or not a user has check-out cancel permission.
      <br/>
      As for the permission, for example, "0" indicates that the user has no check-out cancel permission, while "1" indicates that the user has check-out cancel permission.
    </p>
    <p num="52">Hereinafter, the operation of the embodiments of the present invention will be described with reference to the accompanying drawings.</p>
    <p num="53">
      FIGS. 6 to 10 are flowcharts illustrating the procedures of the server 10 according to a check-in check-out processing program for implementing the above-described check-in check-out-based document management facility.
      <br/>
      More specifically, FIG. 6 is a flowchart illustrating the check-out request acceptance procedure of the server 10, FIG. 7 a flowchart illustrating the check-in request acceptance procedure in the addition request mode, FIG. 8 a flowchart illustrating the check-in request acceptance procedure in the document replacement mode, FIG. 9 a flowchart illustrating the check-in request acceptance procedure in the document revision mode, and FIG. 10 a flowchart illustrating the check-out cancel procedure.
    </p>
    <p num="54">
      First, reference will be made to the flowchart of FIG. 6 to describe the request acceptance procedure of the server when a client 40 makes a check-out request.
      <br/>
      The processing described here forms a part of check-out processing (step F2) in FIG. 12 which will be described later in detail.
    </p>
    <p num="55">
      Upon accepting a check-out request from a client 40 (step A1 in FIG. 6), the server 10 determines whether or not the check-out of a specified document is possible on the basis of a document management number specified in the request.
      <br/>
      When the determination is that it is possible, the server creates one row of status recording entries including data items of document management number (DOCUMENT_NO.), check-out user (CHKOUT_USER), check-out date (CHKOUT_DATE), check-out time limit (CHKOUT_LIMIT), and check-in status (CHKOUT_STATUS) as shown in FIGS. 2 and 3 in the check-in check-out table (TBL-A) 21 in accordance with the specified document management number and then writes into each entry as specified at the time of the request (step A2).
      <br/>
      At this point, the check-out time limit can be set freely by the user.
    </p>
    <p num="56">
      Here, the document management number specified at request time is written into the document management number entry.
      <br/>
      The log-in user's user identification (ID) is written into the check-out user entry.
      <br/>
      The system time in the server 10 is written into the check-out date entry.
      <br/>
      Unless specified by the user, a predetermined date, for example, the date after one month, is written into the check-out time limit entry.
      <br/>
      A "0" is written into the check-in status entry to indicate that the document is being checked out.
      <br/>
      In this manner, the specified document is checked out (i.e., the document is lent out to the user).
    </p>
    <p num="57">
      Next, the request acceptance processing operation of the server when the client 40 makes a check-in request accompanied by updates after the document has been checked out will be described with reference to the flowcharts of FIGS. 8, 9 and 10.
      <br/>
      This processing forms a part of check-in processing (step F3) in FIG. 12 which will be described later in detail.
    </p>
    <p num="58">
      First, the request acceptance processing operation of the server when the client 40 makes a check-in request in the addition request mode will be described with reference to the flowchart of FIG. 7.
      <br/>
      In the addition request mode, the updates requested by the client 40 are reflected in the document.
    </p>
    <p num="59">Upon accepting the check-in request in the addition request mode from the client 40 (step B1 in FIG. 7), the server updates the check-in status in the check-in check-out table (TBL-A) 21 to "1" to indicate that requests are being made for additions (step B2) and services each of the requests by the client 40, such as page addition, insertion, deletion, revision, revised version deletion, title revision, etc., in sequence (step B3).</p>
    <p num="60">Upon accepting a check-out termination request from the client 40 (step B4), the server deletes the status recording entries in the record created on the check-in check-out table (TBL-A) 21 for the check-out document (step B5) and terminates the processing.</p>
    <p num="61">
      Next, reference will be made to the flowchart of FIG. 8 to describe the request acceptance processing operation of the server when the client 40 makes a check-in request in the document replacement mode.
      <br/>
      In this mode, the original document is entirely deleted and a new document is created automatically.
      <br/>
      The contents of updates requested by the client 40 are reflected in the new document.
    </p>
    <p num="62">Upon accepting a check-in request in the document replacement mode from the client 40 (step C1 in FIG. 8), the server 10 updates the check-in status in the check-in check-out table (TBL-A) 21 to "2" (the document is under replacement)(step C2), deletes all the pages of the document (step C3), and services requests by the client 40 for page addition/insertion/revision, title revision, and so on in sequence (step C4).</p>
    <p num="63">Upon accepting a check-out termination request by the client (step C5), the server deletes the status recording entries in the record associated with the check-out document in the check-in check-out table (TBL-A) 21 (step C6) and then terminates the processing.</p>
    <p num="64">
      Next, reference will be made to the flowchart of FIG. 9 to describe the request acceptance processing operation of the server when the client 40 makes a check-in request in the document revision mode.
      <br/>
      In this mode, the original document is left as the old version and a new document is created automatically.
      <br/>
      The contents of updates requested by the client 40 are reflected in the new document.
    </p>
    <p num="65">Upon accepting a check-in request in the document revision mode from the client 40 (step D1 in FIG. 9), the server 10 updates the check-in status in the check-in check-out table (TBL-A) 21 to "3" (the document is under revision)(step C2), enters a new document and associates with the original document by the document link table (TBL-B) 22 (step D3), and services requests by the client 40 for page addition/insertion/revision, title revision, and so on in sequence (step D4).</p>
    <p num="66">Upon accepting a check-out termination request by the client (step D5), the server deletes the status recording entries in the record associated with the check-out document in the check-in check-out table (TBL-A) 21 (step D6) and then terminates the processing.</p>
    <p num="67">
      Next, reference will be made to the flowchart of FIG. 10 to describe the request acceptance processing operation of the server 10 at the time when the client 40 makes a check-out cancel request.
      <br/>
      The processing described here forms a part of check-out cancel processing (step F11) which will be described later in detail.
    </p>
    <p num="68">Upon accepting a check-out cancel request from the client 40 (step E1 in FIG. 10), the server deletes one row of status recording entries corresponding to the document management number specified at the time of request (step E2) and then terminates the processing.</p>
    <p num="69">In this manner, the check-in check-out-based document management is implemented using the check-in check-out table (TBL-A) 21.</p>
    <p num="70">
      Restrictions on operations by the client 40 during check-in/check-out (whether to permit operations during check-in/check-out or not) are illustrated in FIG. 11 in the form of comparison among the check-out user, the user having check-out cancel right, and other users.
      <br/>
      Here, permissible operations (processing that can be carried out as requested) are indicated with circles.
    </p>
    <p num="71">For a reference (retrieval, printing or the like) with no update to a document entered into the document storage unit 30 managed by the server 10, any user can read any document at any time with a document specifying operation on the client side as is the case with the conventional system.</p>
    <p num="72">When a request is made to update a document the time limit of which has expired during check-out, the server performs check-out cancel processing and then accepts the update request.</p>
    <p num="73">If, when the client 40 retrieves a document, it is being checked out, the status information on that document is displayed on the document list display screen, thereby allowing the user to recognize documents that are under check-out with ease.</p>
    <p num="74">As a modification of the embodiment, instead of setting the check-out cancel right on the user table (TBL-C) 23, a predetermined user in charge of system management may manage the check-out cancel right.</p>
    <p num="75">Next, reference will be made to FIGS. 12 to 18 to describe the operation of the check-in check-out-based document management system of the embodiment in more detail.</p>
    <p num="76">FIG. 12 is a flowchart illustrating the entire process flow.</p>
    <p num="77">First, retrieval of a document entered into the document storage unit 30 managed by the server 10 is performed by a user operation on the client side (step F1 in FIG. 12).</p>
    <p num="78">
      When the document is being checked out, information to the effect that it is being checked out is displayed on the document list display screen on the client 40.
      <br/>
      When the client issues a check-out request with a document management number specified, the server receives the check-out request and carries out document check-out processing in accordance with the contents of the request (step F2).
    </p>
    <p num="79">
      When receiving a check-out cancel request from the client, the server carries out check-out cancel processing as will be described later (step F11).
      <br/>
      When the time limit of the specified document is up, the server performs predetermined processing on the check-in check-out table (TBL-A) 21 as will be described later (step F12).
    </p>
    <p num="80">
      When the client issues a check-in request with a document management number specified after the check-out processing, the server receives the check-in request and carries out check-in processing with document updates in accordance with the contents of the request (steps F3 and F4).
      <br/>
      The server then receives a check-out termination request from the client to thereby terminate the check-in processing (step F5).
    </p>
    <p num="81">The details of the check-out processing in step F2 shown in FIG. 12 will be described with reference to the flowchart shown in FIG. 13.</p>
    <p num="82">Upon receipt of a check-out request from the client 40 (step G1 in FIG. 13), the server 10 refers to the check-in check-out table (TBL-A) 21 to determine whether or not the document specified by the document management number in that request is being checked out (step G2).</p>
    <p num="83">
      If the specified document is not being checked out in other words, it has been checked in, one row of the document management number entry, the check-out user entry, the check-out date entry, the check-out time limit entry and the check-in status entry as shown in FIGS. 2 and 3 is created in the check-in check-out table (TBL-A) 21 as described in conjunction with FIG. 6.
      <br/>
      The contents specified at the time of the request are written into these entries (step G3).
    </p>
    <p num="84">At this point, any desired time limit of the check-out can be set by the user.</p>
    <p num="85">
      If, on the other hand, the specified document is being checked out, reference is made to the check-out time limit entry in the check-in check-out table 21 to determine whether or not that document is within the time limit (step G4).
      <br/>
      As described previously, the time limit is set to, for example, one month after check-out unless specified by the user.
    </p>
    <p num="86">When the time limit is expired, the status recording entries in the corresponding row are deleted from the check-in check-out table 21 (step G5) and one row of status recording entries is created anew to update the status recording entries for the specified document.</p>
    <p num="87">
      When the specified document is within the time limit, the check-out processing is stopped because the document is being checked out to another user.
      <br/>
      A message to the effect that the document is being checked out is sent to the client 40 to thereby prevent the concurrent double updating of the same document by two or more users (step G6).
    </p>
    <p num="88">Next, reference will be made to the flowchart of FIG. 14 to describe the detail of the check-out cancel processing indicated in step F11 of FIG. 12.</p>
    <p num="89">The server receives a check-out cancel request from the client (step H1 of FIG. 14) and then determines whether or not the specified document for which the request has been made is being checked out (step H2).</p>
    <p num="90">
      If the specified document is not checked out, the check-out cannot be canceled.
      <br/>
      In this case, a warning message is sent to the check-out cancel requesting client (step H3) and the process comes to an end.
      <br/>
      If, on the other hand, the specified document is being checked out, it is determined whether or not the document is now checked in (step H4).
    </p>
    <p num="91">
      When the document is checked in, an error procedure is carried out to prevent check-out cancel (step H5) and the process is then terminated.
      <br/>
      If the document is not checked in, a reference is made to the user table (TBL-C) 23 to determine whether or not the check-out cancel requesting user has the check-out cancel right (step H6).
    </p>
    <p num="92">
      If the check-out cancel requesting user has the check-out cancel right, then the status recording entries in the corresponding row in the check-in check-out table 21 are deleted (step H9) and the process is then terminated.
      <br/>
      If, on the other hand, the user has not the check-out cancel right, a reference is made to the check-in check-out table 21 to determine whether or not the user is the check-out user who has checked out the document (step H7).
    </p>
    <p num="93">
      If the user is the check-out user, then the status recording entries in the corresponding row are deleted from the check-in check-out table 21 (step H9) and the process is then terminated.
      <br/>
      If, on the other hand, the user has not the check-out cancel right nor is it the check-out user, an error message describing that the check-out cannot be canceled is sent to the check-out cancel requesting client 40 (step H8) and the process is then terminated.
    </p>
    <p num="94">Next, reference will be made to the flowchart of FIG. 15 to describe the detail of the check-in processing indicated in step F3 of FIG. 12.</p>
    <p num="95">The server 10 receives a check-in request from the client 40 (step I1 in FIG. 15) and determines whether or not the specified document is now checked out (step 12).</p>
    <p num="96">
      When the document is not checked in, an error procedure is carried (step I3) and the process is then terminated.
      <br/>
      If, on the other hand, the document is checked out, then the server makes a reference to the status recording entries in the check-in check-out table 21 to determine whether or not the user is the check-out user (step 14).
    </p>
    <p num="97">
      If the requesting user is not the check-out user, then an error procedure is carried out (step I5) and the process is terminated.
      <br/>
      If, on the other hand, the user is the check-out user, then it is determined what the check-in mode is (step I6).
    </p>
    <p num="98">If the check-in mode is the addition request mode, then the check-in status in the check-in check-out table 21 is updated to "1" (addition is being requested) (step I7) and the process is terminated.</p>
    <p num="99">
      If, on the other hand, the check-in mode is the document replacement mode, then the check-in status in the check-in check-out table 21 is updated to "2" (document is being replaced) (step I8) and all the pages of the document are deleted (step I9).
      <br/>
      The process is then terminated.
    </p>
    <p num="100">
      If, on the other hand, the check-in mode is the document revision mode, the check-in status in the check-in check-out table (TBL-A) 21 is updated to "3" to indicate that the document is under revision (step I10).
      <br/>
      A new document is then entered and associated with the original document by the document link table (TBL-B) 22 (step I11).
      <br/>
      Then, the process comes to an end.
    </p>
    <p num="101">Next, the detail of the update request acceptance processing (step F4) shown in FIG. 12 will be described with reference to the flowcharts of FIGS. 17A and 17B.</p>
    <p num="102">Upon receipt of any request (page addition, page insertion, page deletion, page revision, revised version deletion, title revision, or the like) from the client 40 (step J1), the server 10 determines whether or not the specified document is being checked in (step J2).</p>
    <p num="103">
      When the document is not checked in, an error procedure is carried out (step J3) and then the processing comes to an end.
      <br/>
      When the document is checked in, a reference is made to the status recording entries in the check-in check-out table 21 to determine whether or not the user is the check-in user who has checked in the document (step J4).
    </p>
    <p num="104">
      If the user is not the check-in user, an error procedure is carried out (step J5) and the processing then comes to an end.
      <br/>
      If, on the other hand, the user is the check-in user, then it is determined what the check-in mode is (step J6).
    </p>
    <p num="105">If the check-in mode is the addition request mode, the requested process is carried out (step J7) and the process then comes to an end.</p>
    <p num="106">
      If, on the other hand, the check-in mode is the document replacement mode, then it is determined whether or not the request by the client 40 is compatible with that mode (step J8).
      <br/>
      If it is not, an error procedure is carried out (step J9) and the process then comes to an end.
      <br/>
      If it is, the requested processing (page addition, insertion, title revision or the like) is carried out (step J10) and the process then comes to an end.
    </p>
    <p num="107">
      If the check-in mode is the document revision mode, then it is determined whether or not the request by the client 40 is compatible with that mode (step J11).
      <br/>
      If it is not, the error procedure is carried out (step J12) and the process comes to an end.
      <br/>
      If it is, the requested processing (page addition, insertion, title revision or the like) is carried out (step J13) and the processing comes to an end.
    </p>
    <p num="108">Next, the detail of the check-in termination processing (step F5) will be described with reference to the flowchart of FIG. 18.</p>
    <p num="109">The server 10 receives a check-in termination (check-out termination) request from the client 40 (step K1).</p>
    <p num="110">Upon receipt of this request, the server deletes one row of status recording entries associated with the check-out document created in the check-in check-out table 21 (step K2), thus completing the check-in termination processing.</p>
    <p num="111">The provision of the check-in check-out-based document management facility as described so far permits the following document management function to be implemented.</p>
    <p num="112">That is, the concurrent multiple updating of the same document by two or more clients can be prevented by allowing the server, which directs the check-in check-out management of a document that two or more clients share, to have a function of prohibiting the check-out of that document until the document is checked in, or the check-out of the document is canceled.</p>
    <p num="113">
      In addition, two or more clients can update the same document individually by allowing the server to have a function of implementing the check-out of a document as requested by a client after that document has been checked in or the check-out thereof has been canceled.
      <br/>
      Also, the check-out function can indicate the termination of updating by a certain client, permitting subsequent updating by another client to be performed correctly.
    </p>
    <p num="114">Further, the server can have a function of performing updating processes requested at the time of check-in in sequence, allowing check-in requests in various modes to be serviced.</p>
    <p num="115">Moreover, the server can have a function of deleting, at the time of check-in of a document, the original document in its entirety, automatically creating a new document, and performing requested updating processes on the new document in sequence, allowing the check-in request in the document replacement mode to be serviced.</p>
    <p num="116">Furthermore, the server can have a function of, after a document has been checked out, canceling the check-out without updating, allowing the check-out to be canceled with ease without updating the check-out itself.</p>
    <p num="117">In addition, the server can have a function of setting a time limit of the check-out, monitoring it, and automatically canceling the check-out when the time limit of the check-out document has expired, thus avoiding a situation in which a certain client continues the check-out of a document and another client is kept unable to update the document over a long period.</p>
    <p num="118">
      Also, the server can have a function of enabling a specific client 40 to cancel the check-out.
      <br/>
      That is, by allowing a specific client 40 to have permission to cancel the check-out even if it is not the check-out client, a situation in which a certain client continues the check-out of a document and another client is kept unable to update the document over a long period can be avoided under the management of the specific client 40.
    </p>
    <p num="119">Further, the server can have a function of notifying clients 40 that a document is being checked out, allowing clients other than the check-out user to recognize that the document is being checked out at the stage of displaying a list of documents.</p>
    <p num="120">As described in detail, according to the present invention, the server, which directs the check-in check-out management of a document that two or more clients share, is arranged to have a function of prohibiting the check-out of that document until the document is checked in, or the check-out of the document is canceled.</p>
    <p num="121">By such an arrangement, there are provided a client-server electronic filing system which permits the contents of changes made by each client to a document to be reflected correctly in the original document with the consistency of the document contents maintained and a document management method and a storage medium for use in the electronic filing system.</p>
    <p num="122">In addition, there are provided a client-server electronic filing system which prevents the concurrent multiple updating of the same document by two or more clients and a document management method and a storage medium for use in the electronic filing system.</p>
    <p num="123">
      Additional advantages and modifications will readily occurs to those skilled in the art.
      <br/>
      Therefore, the invention in its broader aspects is not limited to the specific details and representative embodiments shown and described herein.
      <br/>
      Accordingly, various modifications may be made without departing from the spirit or scope of the general inventive concept as defined by the appended claims and their equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A document management method for use in an electronic filing system having means for storing documents, a plurality of client units, each capable of issuing a check-out request to read out a document from said storing means so as to change the document and issuing a check-in request to write a document, which has been checked out and changed, to said storing means, and means for inhibiting a document, which has been checked out by a first client unit, from being checked out by a second client unit, comprising the steps of:</claim-text>
      <claim-text>issuing, from said first client unit, a first check-out request for a document to read out the document from said storing means so as to change the document; setting a time limit of check-out for a document which has been stored in said storing means, when the document is read out from said storing means in accordance with said first check-out request; issuing, from a second client unit, a second check-out request for the document which has been checked out by said first client unit; checking, in response to said second check-out request, the time limit which has been set for the document and in a case where the time limit has not expired, inhibiting the document from being checked out by said second client unit;</claim-text>
      <claim-text>and checking, in response to said second check-out request, the time limit which has been set for the document and in a case where the time limit has expired, canceling the check-out of the checked out by said second client unit.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A document management method for use in an electronic filing system having means for storing documents, a plurality of client units, each capable of issuing a check-out request to read out a document from said storing means so as to change the document and issuing a check-in request to write a document, which has been checked out and changed, to said storing means, and means for inhibiting a document, which has been checked out by a first client unit, from being checked out by a second client unit, comprising the steps of: issuing, from said first client unit, a first check-out request for a document to read out the document from said storing means so as to change the document; providing a specific client unit with an authority of canceling check-out of a document which has been checked out by another client unit;</claim-text>
      <claim-text>and canceling the check-out of the document which has been checked out by said another client unit, in accordance with an instruction from said specific client unit.</claim-text>
    </claim>
  </claims>
</questel-patent-document>