<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185722B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185722</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185722</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="26714158" extended-family-id="42113840">
      <document-id>
        <country>US</country>
        <doc-number>09037469</doc-number>
        <kind>A</kind>
        <date>19980310</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09037469</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43172218</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>3746998</doc-number>
        <kind>A</kind>
        <date>19980310</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09037469</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>4082997</doc-number>
        <kind>P</kind>
        <date>19970320</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1997US-60040829</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/50        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>50</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>716115000</text>
        <class>716</class>
        <subclass>115000</subclass>
      </main-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-017/50C2</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>50C2</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-017/50C4</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>50C4</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/5036</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>5036</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/5018</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>5018</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2217/36</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2217</main-group>
        <subgroup>36</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S06F-217/36</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>28</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>12</number-of-drawing-sheets>
      <number-of-figures>13</number-of-figures>
      <image-key data-format="questel">US6185722</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Three dimensional track-based parasitic extraction</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>KIKUCHI HIDEO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4412240</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4412240</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>MISHELOFF MICHAEL N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5461579</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5461579</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>LEE VEN L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5510999</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5510999</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>HAMMER MARK E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5706206</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5706206</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>DECAMP WILLIAM F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5761080</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5761080</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>HO WILLIAM WAI YAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5828580</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5828580</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>MEHROTRA SHARAD, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5838582</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5838582</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>RAGHAVAN VIVEK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5896300</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5896300</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>CHANG KEH-JENG, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5901063</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5901063</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>OH SOO-YOUNG, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5923568</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5923568</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>HO WILLIAM WAI YAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5999726</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5999726</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Belkhale and Banerjee "Parallel Algorithms for VLSI Circuit Extraction," IEEE Transactions on Computer-Aided Design, vol. 10, No. 5, May, 1991, p. 604-618.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Schaper et al. "Modeling and Experimental Verification of the Interconnected Mesh Power System (IMPS) MCM Topology," IEEE Transactions on Components, Packaging, and Manufacturing Technology-Part B, vol. 20, No. 1, Feb., 1997, p. 42-49.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="3">
          <text>Wehn and Glesner "A New Approach to Timing Driven Partitioning of Combinational Logic," IEEE, 1991, p. 106-111.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="4">
          <text>Lin and Kompa "FET Model Parameter Extraction Based on Optimization with Multiplane Data-Fitting and Bidirectional Search-A New Concept," IEEE Transactions on Microwave Theory and Techniques, vol. 42, No. 7, Jul., 1994, p. 1114-1121.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/040,829</doc-number>
          <date>19970320</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/040829</doc-number>
          <date>19970320</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Darden, Laura Rohwedder</name>
            <address>
              <address-1>Essex, VT, US</address-1>
              <city>Essex</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Engel, James John</name>
            <address>
              <address-1>Cambridge, VT, US</address-1>
              <city>Cambridge</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Habitz, Peter Anton</name>
            <address>
              <address-1>Hinesburg, VT, US</address-1>
              <city>Hinesburg</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Livingstone, William John</name>
            <address>
              <address-1>Cambridge, VT, US</address-1>
              <city>Cambridge</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Mainiero, Daniel Joseph</name>
            <address>
              <address-1>Austin, TX, US</address-1>
              <city>Austin</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="6">
          <addressbook lang="en">
            <name>Panner, Jeannie Harrigan</name>
            <address>
              <address-1>Underhill, VT, US</address-1>
              <city>Underhill</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="7">
          <addressbook lang="en">
            <name>Trick, Michael Timothy</name>
            <address>
              <address-1>Essex, VT, US</address-1>
              <city>Essex</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="8">
          <addressbook lang="en">
            <name>Zuchowski, Paul Steven</name>
            <address>
              <address-1>Cambridge, VT, US</address-1>
              <city>Cambridge</city>
              <state>VT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Kotulak, Richard M.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Lintz, Paul R.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A computerized tool or method that calculates the capacitance and resistance of each global wire on the chip, one wire at a time.
      <br/>
      The invention steps along a track containing a wire segment, grid point by grid point, calculating the resistance and capacitance at that point.
      <br/>
      At each grid point it searches the neighboring tracks within the surrounding cube for adjacent elements that could cause capacitive effects or affect the resistance of the wire.
      <br/>
      The method delivers capacitance and resistance values for each process condition for a grid unit length of wire, given the wire type and 3 dimensional environment of the wire segment.
      <br/>
      The capacitance and resistance at a grid point along the wire are generally determined by one table lookup for wire types based on the surrounding environment.
      <br/>
      These values are added along wire segments to deliver accurate 3 dimensional capacitances and resistances.
      <br/>
      The invention can also provide for wires and spaces of various types and widths not provided for in the tables and for calculation of net to net coupling capacitances.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS REFERENCE TO RELATED APPLICATION</heading>
    <p num="1">This application claims the benefit of U.S. Provisional Application No. 60/040,829 filed Mar. 20, 1997.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      In deep sub-micron designs, the effect of wire capacitance on system performance is as important as, if not more so than, the gate delay.
      <br/>
      To accurately predict system performance, accurate extraction of resistance and capacitance parasitics is required.
      <br/>
      The capacitance of a wire is dependent not only on its length, width, and thickness, but also on the environment around the wire.
      <br/>
      The environment includes any adjacent or near wires and the substrate itself.
      <br/>
      As wire pitches become smaller, the effects on capacitance of adjacent lines can be as much as two times as compared to an isolated wire.
      <br/>
      It is therefore very important to take into account the environment of a wire when predicting its capacitance.
    </p>
    <p num="3">Historically, most chip-level capacitance extractors have used one of two methods to derive wire capacitance:</p>
    <p num="4">
      1) High level analysis based on gross assumptions about the amount of capacitance per length of wire.
      <br/>
      This method relies on an educated guess as to the amount of adjacent wire that might be present.
      <br/>
      This is sufficient when the environment of a conductor does not change significantly or when the capacitance of the interconnects is only a small contributor to the overall output load.
      <br/>
      2) Detailed shapes based analysis of the design environment surrounding the wire under consideration.
      <br/>
      This method is very computer intensive.
      <br/>
      Accurate total capacitance extraction of large chips is presently not feasible with this approach due to data volume and computer execution time.
    </p>
    <p num="5">
      Previous solutions in the second category are design shape based.
      <br/>
      They have to calculate and store a large number of geometric interacting shapes, creating a large computational burden and an immense amount of output.
      <br/>
      An example is Avant�'s LPE extraction.
      <br/>
      The Avant� extractor uses design shapes to calculate the capacitances based on overlap areas distances and perimeters.
      <br/>
      This requires a large amount of data to be stored and processed.
    </p>
    <p num="6">
      Another solution in the second category, pattern recognition, can also take advantage of the regular structure of global wires.
      <br/>
      But the recognition mechanism on design shapes is not as efficient and the intermediate storage requirements are much more severe.
      <br/>
      The tables are huge; the search and the generation is very time consuming.
      <br/>
      Pattern recognition solutions are accurate but cannot handle wire extraction for a complete chip.
      <br/>
      ARCADIA from EPIC takes this approach.
    </p>
    <p num="7">
      Now, with narrowly spaced five and six levels of metal, the overall wire capacitance is larger and varies by a factor of two depending upon neighboring wires.
      <br/>
      Effects of neighboring conductors have become the dominant contribution to the load in many critical nets and the hold time needed on many paths.
      <br/>
      Resolution of adjacencies becomes a critical part of accurate chip timing.
    </p>
    <p num="8">
      Therefore, method 1 is not a viable solution for these deep sub-micron technology designs because it doesn't take neighboring wires into account.
      <br/>
      Method 2 is not practical for large designs due to the data volume and computer execution time.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="9">
      The invention takes advantage of the repetitive structure of the wiring and therefore does not need to calculate all these shapes present in a design.
      <br/>
      It also adds the capacitances along a net while they are generated, and so it does not need to store all this data, thus creating a huge advantage in efficiency.
    </p>
    <p num="10">
      This invention reduces the complexity of conductor environment, takes full advantage of the repetitive structure of automatic wiring, produces accurate results within ten percent of a full three dimensional finite element analysis and within ten percent as measured in hardware.
      <br/>
      It obtains, with its unique data structures and approximations, large improvements in runtime and data volume capacity over existing tools.
    </p>
    <p num="11">One object of this invention is to determine which wiring patterns are significant through a detailed analysis of the various topologies and to generate entirely inclusive, capacitance data tables based on this knowledge.</p>
    <p num="12">Another object of this invention is to provide an extraction tool which applies a searching technique to discover the environment around a section of wire and then does only one memory reference to obtain the entire capacitance for a one unit length section of the wire.</p>
    <p num="13">It is a further objective of this invention to provide a tool which models its environment based on a three dimensional yes/no boolean grid to accomplish full chip capacitance extraction without limiting the flexibility of handling any wire width as long as the wire spine is on the grid.</p>
    <p num="14">Yet another objective of this invention is a capacitance extraction tool that establishes a priority to the searches allowing the tool to stop searching when the first neighbors are encountered.</p>
    <p num="15">Yet another objective is to provide a capacitance extraction tool which partitions the capacitance data to ensure additivity of capacitance of one unit length wire pieces and avoid double counting of three dimensional effects.</p>
    <p num="16">Yet another objective is to provide resistance data tables based on the environment and a resistance extraction tool with the same capabilities as the capacitance extraction tool, but with respect to resistance.</p>
    <p num="17">Yet another objective of this invention is to produce RC data output from the extraction process, eliminating the need for elaborate post-processing steps.</p>
    <p num="18">A final objective of this invention is to calculate net to net coupling capacitance for use in various tools such as static timing analysis tools, simulation tools, and noise analysis tools.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="19">
      FIG. 1 shows a gridded wiring system.
      <br/>
      FIG. 2 shows capacitance calculation one grid point at a time, walking down a wire.
      <br/>
      FIG. 3 shows the environments inspected in Search 1 and Search 3.
      <br/>
      FIG. 4 shows the environment inspected in Search 2.
      <br/>
      FIG. 5 and FIG. 6 are 3 dimensional pictures of the environments inspected in Searches 1, 2, and 3.
      <br/>
      FIG. 7 shows how the capacitance tables for Search 2 are generated.
      <br/>
      FIGS. 8, 9, and 10 are flow charts describing the chip-level extraction algorithm, ignoring net to net coupling.
      <br/>
      FIGS. 11 and 12 are flow charts describing the chip-level net to net coupling extraction algorithm.
      <br/>
      FIG. 13 shows a typical computer system environment for running a computer-based parasitic extraction tool.
    </p>
    <heading>PREFERRED EMBODIMENT OF THIS INVENTION</heading>
    <p num="20">Overview</p>
    <p num="21">
      The invention uses a 3D grid-based model to represent the Application Specific Integrated Circuit (ASIC) or any other type of integrated circuit which has complex wiring patterns.
      <br/>
      The ASIC is described as design wires connecting circuit abstracts, rather than the mask level design data.
      <br/>
      The design space (400 in FIG. 1) is divided into horizontal and vertical wiring tracks on each wiring plane.
      <br/>
      Wire 402 in FIG. 1 represents a single vertical track.
      <br/>
      The spacing between tracks is defined by the distance required for a minimum width line and a minimum width space.
      <br/>
      A grid point is defined as the intersection of a horizontal and a vertical wiring track (404 in FIG. 1).
      <br/>
      A gridded wiring system is a system that only allows wires to change direction or wiring plane at a grid point.
      <br/>
      The invention is based on the knowledge that the environment of a wire can change only at a grid point in a gridded wiring system.
      <br/>
      A grid unit is the distance between two adjacent vertical or horizontal grid points.
      <br/>
      The environment of a wire is defined as the set of other wires that are "close" to the wire of interest.
      <br/>
      Using the assumption of a gridded system allows simplification of the calculations involved in determining a wire's environment.
      <br/>
      In addition, it is necessary to recalculate a wire's environment only once per grid point.
      <br/>
      Although the grid system is defined in terms of the smallest width and space that can be used on a given wiring plane, the system can be defined to support wider wires with varying spaces using the same grid definitions.
      <br/>
      The "spine" of a wire is defined as a stick figure representation of a wire which lies upon a track in the x or y direction.
      <br/>
      The spine of a wire is usually the center line of the wire.
    </p>
    <p num="22">
      This invention is a tool that calculates the capacitance of each global wire on the chip, one wire at a time.
      <br/>
      The invention steps along the wire, grid point by grid point (FIG. 2), summing the capacitance as it goes.
      <br/>
      At each grid point 404 associated with a grid unit (the distance between tracks) 406, it searches the neighboring tracks within the surrounding cube for adjacent elements that could cause capacitive effects.
      <br/>
      The method delivers capacitance and resistance values for each process condition for a grid unit of wire, given the wire type and 3 dimensional environment of the wire segment.
      <br/>
      The capacitance and resistance at a grid point along the wire are generally determined by one table lookup each, based on the surrounding environment.
      <br/>
      These values are added along wire segments to deliver accurate 3 dimensional capacitances and resistances.
    </p>
    <p num="23">
      In the implementation for IBM CMOS5 and CMOS6 technologies, the tool performs an ordered search consisting of the 3 unique search patterns, ordered according to the distance of neighboring wires from the grid point under evaluation.
      <br/>
      The tool performs Search 1 first and stops if it finds any of the Search 1 configurations.
      <br/>
      If it doesn't, it goes on to Search 2, and stops if it finds any Search 2 configuration.
      <br/>
      If it doesn't, it goes on to Search 3 and stops if it finds any Search 3 configuration.
      <br/>
      A background value is provided if no wires are found.
      <br/>
      The ordered search allows quick calculation of capacitances for dense parts where searches are successful in Search 1.
      <br/>
      When a neighboring wire is found, the value of capacitance assigned to that particular one-track section of wire is calculated assuming the entire set of wires in the next search is populated.
      <br/>
      Because "nearest-neighbor" wires capture most of the capacitance field lines, the error involved in making this assumption is minimal.
    </p>
    <p num="24">
      The invention requires that the silicon technology be pre-analyzed using conventional 2-D and 3-D field solvers.
      <br/>
      The results of this analysis are then converted to a small set of tables which are used by the chip-level global extraction tool.
      <br/>
      In the current implementation, the possible environments for a wire are broken into three buckets called searches.
      <br/>
      Each search consists of a set of environments related by their relative impacts on the capacitance of the line under evaluation.
      <br/>
      Search 1 contains those environments which result in the largest impact on capacitance of the wire under analysis (FIG. 3, points 304, 306, 310 and 314).
      <br/>
      Search 2 contains those environments which result in lower impact on the capacitance of the wire under analysis (FIG. 4, points 318, 320, 322, and 324).
      <br/>
      Search 3 contains those environments with the lowest impact on capacitance (FIG. 3, points 302, 308, 312, 316).
      <br/>
      Table values for all 3 searches are provided for best case, nominal, and worst case process conditions.
      <br/>
      The number and order of searches may vary by silicon process technology.
    </p>
    <p num="25">Assumptions and Approximations</p>
    <p num="26">The following assumptions and approximations were made in the implementation of the invention described herein:</p>
    <p num="27">
      The metal shapes making up the circuits of each ASIC library element are abstracted into grid-based representations.
      <br/>
      These circuit abstractions closely represent the actual metal shapes.
      <br/>
      These wiring obstruction or "blockage" shapes are treated as if they were wires.
      <br/>
      If these blockage shapes are too conservative, the calculated capacitance will be high.
      <br/>
      It is assumed that the blockage shapes can be made as accurate as needed.
    </p>
    <p num="28">
      It is assumed that other wires in the environment are spaced like the highest density wires: The wire width of a neighboring wire is ignored.
      <br/>
      Most wires use minimum space.
    </p>
    <p num="29">
      The environment of a wire can change only at each grid point.
      <br/>
      In a gridded system, this assumption is valid except when a global wire is near an off-grid wire from a circuit.
      <br/>
      The error introduced by this assumption is minimal.
    </p>
    <p num="30">
      Wires run with the preferred direction of metal on each plane--either north-south or east-west.
      <br/>
      Alternate wiring planes run in orthogonal directions.
      <br/>
      Crossing lines cannot accumulate large capacitances.
      <br/>
      This assumption allows a search to be done without having to store detailed information about adjacent wires.
      <br/>
      This assumption is true most of the time.
    </p>
    <p num="31">
      The capacitance of a wire can be broken down into a sum of capacitances originating from wire pieces one grid unit long.
      <br/>
      The capacitance tables represent the total capacitance for the defined environment of a one grid unit wire segment.
    </p>
    <p num="32">
      Searches are ordered.
      <br/>
      When a wire has close neighbors, the variations in the environment further away do not change the capacitance anymore. (When a configuration in a particular search is found, the value of capacitance assigned to the particular grid-unit section of wire is calculated assuming that the entire set of wires in the next search is populated.)
    </p>
    <p num="33">
      Wires are infinitely long.
      <br/>
      Global wires are so long that the specific change of the capacitance at the end of a wire does not count in the total.
      <br/>
      This assumption allows minimization of the number of table entries by neglecting "end-of-line" effects.
      <br/>
      The error introduced with this assumption can be minimized by setting the capacitance value of a via to statistically offset the effects of line ends.
    </p>
    <p num="34">
      Wires are modeled as bars.
      <br/>
      This allows simplification of the creation of the data tables.
      <br/>
      A 3-D field solver would be required for all cases if this assumption were not made.
    </p>
    <p num="35">
      Vias don't contribute to capacitance.
      <br/>
      Statistically they do not need to be considered relative to the bulk of the wire segment.
    </p>
    <p num="36">
      A metal layer with all tracks occupied behaves like a parallel plate capacitor.
      <br/>
      This approximation is very good and is needed to calibrate the tables and ensure consistency with other extraction methods.
      <br/>
      In deep sub-micron technology, the fringe effect makes each wire effectively larger; this effect makes the assumption reasonable.
    </p>
    <p num="37">
      Silicon (the layers below the bottom-most metal layer) behaves like a single conductor plane: the program ignores transistors and junctions.
      <br/>
      Due to the relatively small variation in thickness on this level, the whole device area can be approximated with one metal plate.
    </p>
    <p num="38">The dielectrics separating the various wiring planes are isotropic (defects or other changes to the dielectric that are position-dependent are ignored.) The error introduced by this assumption is minimal, and can't be predicted ahead of time.</p>
    <p num="39">
      As a wire gets wider, the perimeter and line-to-line components of the total capacitance of that wire do not change.
      <br/>
      Only the area term of the capacitance changes.
      <br/>
      This allows adjustment of the table to any wire width and is a close approximation.
    </p>
    <p num="40">
      The capacitance reduces as 1/d where d is the distance between adjacent lines on the same wiring level.
      <br/>
      This allows adjustment to any wire spacing.
      <br/>
      This assumption uses the fact that the parallel plate capacitance is a function of 1/d.
      <br/>
      In deep-submicron technology, at small spaces, two adjacent lines "look like" parallel plates.
    </p>
    <p num="41">Net to net coupling capacitance can be assumed to be from wires on the same plane only, due to orthogonality of alternating planes.</p>
    <p num="42">Technology Data Generation</p>
    <p num="43">
      Knowledge of the technology under analysis allows one to develop a simplified search technique which eliminates some configurations from consideration.
      <br/>
      For example, for IBM's CMOS5 and CMOS6 technologies, the algorithm considers neighbors in the following categories:
    </p>
    <p num="44">Category 1--One track left and right of the wire's lengthwise edge and one track above or below the wire's spine.</p>
    <p num="45">Category 2--One track diagonally up and forward, one track diagonally up and backward, one track diagonally down and forward and one track diagonally down and backward along the wire's spine.</p>
    <p num="46">Category 3--Two tracks left and right of the wire's lengthwise edge and two tracks above or below the wire's spine.</p>
    <p num="47">
      An exhaustive approach of examining these neighboring grid points would require 4096 (212) table values for a given grid point.
      <br/>
      Category 1, 2 and 3 each require 24 combinations, collectively yielding 212 combinations.
      <br/>
      The approach of this invention condenses these cases into a manageable member of table values for a given grid point.
      <br/>
      For IBM CMOS5 and CMOS6 technologies, categories 1, 2, and 3 require 8, 6, and 9 table values, respectively.
      <br/>
      Each table value represents a set of topologies having similar capacitances.
      <br/>
      For example, a wire to the left (in an otherwise empty configuration) is equivalent to a wire to the right (in an otherwise empty configuration).
    </p>
    <p num="48">
      In the preferred embodiment for IBM CMOS5 and CMOS6, process technology table values are not summed to produce the total capacitance at a given grid point.
      <br/>
      For example, the table value representing one item left of the wire is not added to the table value representing one item above the wire to compute the table value representing both one item left and one item above the wire.
      <br/>
      Only one of the 23 table entries is selected as the capacitance contribution at a given grid point for a given process condition for a given wire type (width &amp; space) and metal level.
    </p>
    <p num="49">
      The key to condense 4096 table entries to only 23 lies in the generation of the data.
      <br/>
      Rather than just limiting the search, an intelligent method was used to identify significant sets of topologies, calculate their capacitive effects and adjust the data to ensure that additivity along a wire will not accumulate error.
      <br/>
      The 23 topological configurations are listed below and are illustrated in FIGS. 3 and 4.
    </p>
    <p num="50">
      FIGS. 3 and 4 are 2 dimensional drawings representing the wiring layer environments inspected in Searches 1, 2, and 3.
      <br/>
      Wires 300, 302, 304, 306, 308, 312, and 316 run east-west.
      <br/>
      Wires 310, 314, 318, 320, 322, and 324 run north-south.
      <br/>
      Section 406 of the wire in FIG. 3 represents a grid unit.
      <br/>
      Search 1 involves only closest neighbors (304, 306, 310, and 314) to the one-track-long wire section or grid unit (300) under inspection.
      <br/>
      Search 2 involves only the diagonals 318, 322, 320, and 324 in FIG. 4.
      <br/>
      Search 3 involves only the environment 2 tracks and 2 layers away (2nd order environment), wires 302, 308, 312, and 316.
    </p>
    <p num="51">
      Search 1 contains 8 topological configurations:
      <br/>
      1.
      <br/>
      FIG. 3 wires: 304 and 306 and 310 and 314 (this is worst case environment)
      <br/>
      2.
      <br/>
      FIG. 3 wires: 304 and 306 and (310 or 314)
      <br/>
      3.
      <br/>
      FIG. 3 wires: (304 or 306) and 310 and 314
      <br/>
      4.
      <br/>
      FIG. 3 wires: 310 and 314
      <br/>
      5.
      <br/>
      FIG. 3 wires: 304 and 306
      <br/>
      6.
      <br/>
      FIG. 3 wires: (304 or 306) and (310 or 314)
      <br/>
      7.
      <br/>
      FIG. 3 wires: 310 or 314
      <br/>
      8.
      <br/>
      FIG. 3 wires: 304 or 306
    </p>
    <p num="52">
      If none of the configurations of Search 1 is met, Search 2 is invoked.
      <br/>
      Search 2 contains 6 topological configurations:
      <br/>
      1.
      <br/>
      FIG. 4 wires: 318 and 320 and 322 and 324
      <br/>
      2.
      <br/>
      FIG. 4 wires: (318 or 320) and 322 and 324
      <br/>
      3.
      <br/>
      FIG. 4 wires: (318 and 322) or (320 and 324)
      <br/>
      4.
      <br/>
      FIG. 4 wires: (318 and 324) or (320 and 322)
      <br/>
      5.
      <br/>
      FIG. 4 wires: (318 and 320) or (322 and 324)
      <br/>
      6.
      <br/>
      FIG. 4 wires: 318 or 320 or 322 or 324
    </p>
    <p num="53">
      If none of the configurations of Search 2 are met, Search 3 is invoked.
      <br/>
      Search 3 contains 9 topological configurations:
      <br/>
      1.
      <br/>
      FIG. 3 wires: 302 and 308 and 312 and 316
      <br/>
      2.
      <br/>
      FIG. 3 wires: 302 and 308 and (312 or 316)
      <br/>
      3.
      <br/>
      FIG. 3 wires: (302 or 308) and 312 and 316
      <br/>
      4.
      <br/>
      FIG. 3 wires: 312 and 316
      <br/>
      5.
      <br/>
      FIG. 3 wires: 302 and 308
      <br/>
      6.
      <br/>
      FIG. 3 wires: (302 or 308) and (312 or 316)
      <br/>
      7.
      <br/>
      FIG. 3 wires: (312 or 316)
      <br/>
      8.
      <br/>
      FIG. 3 wires: (302 or 308)
      <br/>
      9.
      <br/>
      None of the wires in FIGS. 3 or 4 is present (best case environment).
    </p>
    <p num="54">FIGS. 5 and 6 illustrate a three-dimensional view of the searches.</p>
    <p num="55">
      Search 1 looks from the piece of wire to the next track right and left and vertically up and down (See FIG. 5).
      <br/>
      The program assumes during this search, that there always is a conductor in the next further place.
      <br/>
      If nothing has been found to the right, (cases 3,4,6,7, in Table 1) the program assumes a wire two tracks off to the right, symbolized by rr in Table 1 and 22 in FIG. 6.
      <br/>
      If nothing is found directly over the wire piece, (cases 2,5,8, in Table 1) the program assumes a plate two levels above (symbolized by oo or 26 in FIG. 6), and wires 1 and 3 in FIG. 5 directly above the wire segment but before and after the one-track-piece under consideration.
      <br/>
      These are symbolized with over-after and over-before or as in Table 1 oa+ob.
      <br/>
      The situations to the left and underneath are treated in the same way.
      <br/>
      If no conductor is found in the direct environment the program goes to the next search.
      <br/>
      This first search consists of the following cases (or equivalent geometry).
      <br/>
      Any conductor found in the first sphere is represented with the first letter of the search direction.
    </p>
    <p num="56">
      -- TABLE 1
      <br/>
      -- -       right  left        above       beneath
      <br/>
      -- 1           r      l           o           u
      <br/>
      -- 2           r      l           oo + oa + ob u
      <br/>
      -- 3           rr     l           o           u
      <br/>
      -- 4           rr     ll          o           u
      <br/>
      -- 5           r      l           oo + oa + ob uu + ua + ub
      <br/>
      -- 6           rr     l           o           uu + ua + ub
      <br/>
      -- 7           rr     ll          o           uu + ua + ub
      <br/>
      -- 8           r      ll          oo + oa + ob uu + ua + ub
    </p>
    <p num="57">
      Search 2 analyzes the environment with the wires in the diagonal over and under, one track before or after the wire piece under consideration in direction of the extraction.
      <br/>
      These wires are illustrated as 1, 3, 5, and 7 in FIG. 5.
      <br/>
      For all of these cases it is assumed, that there are wires two tracks off right and left and a plate two layers above or underneath.
      <br/>
      This is symbolized by rr in the first column of Table 2 and ll in the second column.
      <br/>
      If there is no wire found in the diagonals over and under the program will go to the third search.
      <br/>
      The following situations are analyzed in the second search:
    </p>
    <p num="58">
      -- TABLE 2
      <br/>
      -- -       right  left        above       beneath
      <br/>
      -- 1           rr     ll          oo + oa + ob uu + ua + ub
      <br/>
      -- 2           rr     ll          oo + oa uu + ua + ub
      <br/>
      -- 3           rr     ll          oo + ob uu + ub
      <br/>
      -- 4           rr     ll          oo + ob uu + ua
      <br/>
      -- 5           rr     ll          oo + ob + oa uu
      <br/>
      -- 6           rr     ll          oo + ob uu
    </p>
    <p num="59">
      Search 3 analyzes the situation two tracks right and left and 2 layers up and down.
      <br/>
      These cases are analogous to the first search.
      <br/>
      The environment 2 tracks right and left is analyzed assuming a wire three tracks away is always present.
      <br/>
      In up and down direction there is at least a three track large hole over and under the wire because the first and second search did not find anything.
      <br/>
      The next further layer over and under has wires running in parallel to the wire under consideration because of the orthogonal wire patterns.
      <br/>
      Finding conductors on this level means, that at least one of the three wires, vertically above and on the next track right and left, has been found.
      <br/>
      Otherwise a plate on the next layer now three layers away, symbolized with ooo, is assumed.
      <br/>
      If no conductor is found in this third search, the default, a plate three layers above and under and three tracks right and left, is used.
      <br/>
      The cases for the third search are:
    </p>
    <p num="60">
      -- TABLE 3
      <br/>
      -- -          right  left          above  beneath
      <br/>
      -- 1              rr     ll            oo     uu
      <br/>
      -- 2              rr     ll            ooo    uu
      <br/>
      -- 3              rrr    ll            oo     uu
      <br/>
      -- 4              rrr    lll           oo     uu
      <br/>
      -- 5              rr     ll            ooo    uuu
      <br/>
      -- 6              rrr    ll            oo     uuu
      <br/>
      -- 7              rrr    lll           oo     uuu
      <br/>
      -- 8              rr     lll           ooo    uuu
      <br/>
      -- 9              rrr    lll           ooo    uuu
    </p>
    <p num="61">
      In this table the search direction abbreviations are doubled to symbolize that the conductors are 2 tracks or layers away and trebled for the default conditions.
      <br/>
      Case 9 is the background with conductors 3 layers and tracks away.
    </p>
    <p num="62">
      To generate the values for the tables one first establishes best case (BC) nominal (NOM), and worst case (WC) process conditions for the physical geometry of the metalization.
      <br/>
      The technology information for the metal thickness t, the dielectric thickness above, and beneath for every level of global wires is determined.
      <br/>
      For the most dense wire type used by the global wire connections on a given metal level the physical width (w), and space (dr) right, and (dl) left is determined.
      <br/>
      The analogous values are needed for all environments, 1,2, 3 layers over and under and 1,2,3 tracks distant right and left.
      <br/>
      The BC and WC geometries include process bias tracking and statistical mixing of independent geometry variations.
      <br/>
      It also includes the approximation of the floating metal fill shapes (inserted to meet manufacturing metal density requirements) by means of an effective dielectric thickness included in WC conditions.
      <br/>
      This only plays a role if no designed metal is directly above or underneath nor in the diagonal positions, (that means only for the WC conditions in the third search).
      <br/>
      Using the average device density a medium dielectric thickness to silicon is used.
      <br/>
      Similarly, for the top layers an effective distance to the package conductor is established.
    </p>
    <p num="63">
      The calculations are done in several stages:
      <br/>
      1A) Calculate all capacitances for the first and third search conditions in BC,NOM,WC with a two dimensional field solver.
      <br/>
      An IBM tool C2D2, can be used.
      <br/>
      A similar tool is available from Technology Modeling Associates ("TMA") to perform this function.
      <br/>
      2A) Calculate all capacitances for the second search condition.
      <br/>
      Run three dimensional calculations using C3D*, IBM's three dimensional tool, for the "shutter" type geometry to establish the three dimensional fringe of a wire before or behind the piece considered. (The fringe component of capacitance is converted to an equivalent area-based term.) The three dimensional solver called Rafael from TMA could also be used.
    </p>
    <p num="64">
      The capacitance from "wire" to the conductor environment u+ll+rr+ob+oa+oo is calculated for varying distance between the plates oa and ob as shown in FIG. 6 by sliding in and out 36 and 46 looking for edges 56 and 66.
      <br/>
      If this distance is very small the shutter is closed and the environment is the same as in the 2 dimensional situation u+ll+rr+o.
      <br/>
      If the opening is very large, the 2 dimensional environment u+ll+rr+oo is dominant.
      <br/>
      All medium values can be described as linear combination of the two 2 dimensional extremes.
      <br/>
      The coefficients determine the effective size of the opening.
      <br/>
      This method is used to determine how far the conductors for the second search over-before and over-after effectively encroach into the area over the one track long wire piece under consideration.
      <br/>
      The capacitance value for an opening equal to one missing wire is expressed by a linear combination of 2 dimensional capacitances from the first and third search, the case of a plate directly above and 2 layers above.
      <br/>
      The advantage of this method is to ensure additivity of the capacitance table values along a wire segment and consistency with the other table values together with a proper treatment of the three dimensional capacitance.
      <br/>
      A more detailed explanation with a 2 dimensional figure follows.
    </p>
    <p num="65">
      FIG. 7 is a 2 dimensional illustration of a wire segment (300) for which capacitance is being calculated and a wire one plane above and behind that wire segment grid.
      <br/>
      Wire 318 contributes capacitance to both the current segment 300 and the previous segment 326 (assuming the capacitance calculation is being done from left to right).
      <br/>
      Wire 318 also shields segments 300 and 326 from part of the capacitance due to wire 312.
      <br/>
      First the capacitance (both fringe and area) associated with wire 318 on segment 326 is calculated using a 3D field solver.
      <br/>
      Then wire 318 is artificially extended (328) and it is assumed that all of the capacitance from 318 to 326 is due to the area component of the capacitance.
      <br/>
      The length of 328 is calculated by making multiple runs of a 2D field solver for various lengths of 328 and picking the value that matches the capacitance measured with the 3D field solver.
      <br/>
      To calculate the table entries, all subsequent runs use the calculated wire extension (328).
      <br/>
      To calculate the table values for Search 2, a linear combination of area terms is used:
      <br/>
      Ctable=(1-p)K1+pK2
    </p>
    <p num="66">
      `K1` represents the area capacitance of a wire 1 plane directly above.
      <br/>
      `K2` represents the area capacitance of a wire 2 planes above.
      <br/>
      `p` is the percent of the wiring grid that is "out from under" the wire with the calculated extensions (330 in FIG. 7).
    </p>
    <p num="67">This equation is solved for the 6 possible combinations of wires in Search 2.</p>
    <p num="68">
      The equation used to compute the total capacitance for a wire type of width and space not in the tables specified in steps 1 and 2 above for a wire track segment is:
      <br/>
      Ctable=C0+(C1 * Delta-- W)+(C2/Delta-- D)
      <br/>
      C0 represents the capacitance of a minimum wire width at minimum spacing (value in base tables).
    </p>
    <p num="69">C1 represents the capacitance contribution due to the width variation and Delta_W is that width.</p>
    <p num="70">C2 represents the capacitance contribution due to the spacing variation and Delta_D is that spacing.</p>
    <p num="71">
      The following calculations are done to handle this type of wire:
      <br/>
      1B) Create a set of table values for all geometries described above but without wires to the right and left.
      <br/>
      Assuming that the total capacitance changes are inversely proportional to the distance of wires, this table allows creation of tables for wire types which have a larger space to the edge of the track.
      <br/>
      This set of table values contains the values C2 for Search 1 (8 values), Search 2 (6 values) and Search 3 (9 values) for each process condition.
      <br/>
      These values represent the capacitance contribution for a wire with space which varies from the base set created in steps 1A and 2A above.
      <br/>
      2B) Create a set of table values containing only the area component up and down.
      <br/>
      This table applies to the parallel plate approximation using the distance to the layers above and under for any wire with unit width.
      <br/>
      For the second search it also uses the linear combination of 2 dimensional capacitance values as described above.
      <br/>
      This table allows one to create capacitance values for any wire type with varying width assuming constant fringe and lateral line to line components.
      <br/>
      This set of table values contains the values C1 for Search 1 (8 values), Search 2 (6 values) and Search 3 (9 values) for each process condition.
      <br/>
      These values represent the capacitance contribution for a wire whose width varies from the base tables created in steps 1A and 2A above.
      <br/>
      3B) Combine the values of step 1B, step 2B, and the values of the minimum wire type at highest density from Steps 1A &amp; 2A into a single table with 3 coefficients for each table entry.
      <br/>
      For purposes of the chip-level extraction discussion, these 3 coefficients can be thought of as a single capacitance entry (and an on-the-fly execution of the equation).
    </p>
    <p num="72">
      Note that if there are no fixed wire types, all wires in a design can be handled by the table created in steps 1B, 2B, and 3B.
      <br/>
      Alternatively, these steps could be used to create the table described in step 1A and 2A
    </p>
    <p num="73">
      The tables are collected into a complete set of capacitance table entries for every wire type, for best case, nominal, and worst case process conditions, for every metallization layer which is used in the extraction process.
      <br/>
      The table value calculation is done once per technology, and the data is entered into tables used by the extraction program itself.
    </p>
    <p num="74">Chip-Level Extraction</p>
    <p num="75">
      The software supporting the invention was developed as a function of IBM's graphical physical design editor ChipEdit.
      <br/>
      Other physical design extraction tools could be extended to use this method.
    </p>
    <p num="76">
      ChipEdit manages physical data utilizing several different data structure techniques.
      <br/>
      One such technique stores the data by organizing it into 2D buckets called grid cells.
      <br/>
      Each grid cell contains pointers to data items which intersect its area.
      <br/>
      These grid cells provide efficient data retrieval throughout ChipEdit for various graphical, editing and checking features of the tool.
    </p>
    <p num="77">
      ChipEdit uses these buckets to efficiently create its three dimensional grid developed for this invention.
      <br/>
      Furthermore, for large designs, ChipEdit's bucket approach to data storage makes it easy to process the design incrementally.
    </p>
    <p num="78">
      The three dimensional model is implemented using one byte of storage at every grid intersection.
      <br/>
      Although one bit is sufficient for the yes/no decision, the use of a byte allows the algorithm to encode as a mask the type of data present at a neighboring location (wire, blockage, power, pin (connection point), . . . ) which is needed for net to net coupling capacitance processing.
    </p>
    <p num="79">
      The steps of the invention illustrated in FIGS. 8 through 10 are as follows:
      <br/>
      1.
      <br/>
      Referring to FIG. 8, the tool starts at 500 by mapping (at 502) the blockage, segments, power buses, logic pins and power pins of the design into the three dimensional model.
      <br/>
      The resulting model is a three dimensional grid with a yes/no decision value at each track intersection in the model.
      <br/>
      For large designs, the model is partitioned into smaller regions and processed incrementally.
      <br/>
      2. The tool determines if there are any nets left to process in decision block 504, gets the next net in step 506 and proceeds to loop through each of its wire segments (decision block 508 and step 510) and each track intersection of each wire segment (decision block 512 and step 514).
      <br/>
      For each track intersection of each wire segment, the tool proceeds at 520 to FIG. 9.
      <br/>
      When each net is completed, the tool proceeds to step 516.
      <br/>
      When all nets in the design are processed, the tool proceeds to step 560.
      <br/>
      3. At 520 on FIG. 9, the tool begins the environment search for a track intersection of a particular wire segment.
      <br/>
      At decision block 522, Search 1 is performed; if successful, a capacitance value is retrieved from table 1 at step 524 and added to the sum for the segment at 536.
      <br/>
      If Search 1 is not successful, the tool performs Search 2 at decision block 526; if successful, a capacitance value is retrieved from table 2 at step 528 and added to the sum for the segment at 536.
      <br/>
      If Search 2 is not successful, the tool performs Search 3 at decision block 530; if successful, it retrieves a capacitance value from Table 3 at step 532; if not, it retrieves a default capacitance at step 534; it then adds the retrieved capacitance to the sum for the segment at 536.
      <br/>
      At the completion of step 536, the tool proceeds at 522 back to decision block 512.
      <br/>
      For each net, during the search procedure, the tool also accumulates the total length of metal of adjacent signal wires.
    </p>
    <p num="80">
      The actual tool processing for the search procedure is described below.
      <br/>
      The tool determines which table to use and computes the appropriate indices.
      <br/>
      For the IBM CMOS5 and CMOS6 semiconductor process technologies, this is accomplished as follows:
      <br/>
      a.
      <br/>
      Category 1 (up, down, left, right) uses a 3 * 3 array to store the 8 capacitances in this category.
      <br/>
      Table element (0,0) is unused.
      <br/>
      The first index is computed by counting the number of items one track up and one track down (either 0, 1, or 2).
      <br/>
      The second index is computed similarly for the left and right directions.
      <br/>
      If either index is greater than 0, category 1 tables are used and the algorithm skips to step 4.
    </p>
    <p num="81">
      Note: At a given track along the wire, data tables are not additive.
      <br/>
      Only one memory reference is done, and that data is the entire capacitance value used for this one track length section of the wire.
      <br/>
      This is much different than previous pattern matching techniques.
      <br/>
      b. Category 2 (diagonally forward and up, forward and down, backward and up, backward and down) uses a one dimensional array of size 16 to store the 6 capacitance values for this category (some data is duplicated).
      <br/>
      The various directions are encoded as bit masks (8, 4, 2, 1) and or'ed together to determine the index into the table array.
      <br/>
      If the resulting mask is greater than 0, category 2 data is used and the algorithm skips to step 4.
      <br/>
      c. Category 3 (up, down, left, right two tracks away) uses a 3 * 3 array similar to category 1 to store its 8 capacitance values.
      <br/>
      Additionally, table entry (0,0) contains the background default (9th) value to be applied if no conductors are located.
      <br/>
      Thus, if both indices compute to 0 (nothing was found in any of the directions), the background value will be used.
      <br/>
      4. At 560 the tool proceeds to decision block 561 and determines if net to net coupling analysis is to be done.
      <br/>
      If not, the tool proceeds to step 562.
      <br/>
      If so, it proceeds to 600 and step 604 in FIG. 11. (See following description in section "Net to Net Coupling Capacitance".
      <br/>
      The tool will return to step 562.)
      <br/>
      5. In step 562, for every net in the design, the tool uses the previously calculated capacitance of each wire segment to compute and output:
      <br/>
      a. the total capacitance of the net,
      <br/>
      b. the RC Delay to each of the sink pins on the net,
      <br/>
      c. alternatively, a reduced RC model for the net (ie. PI model with poles and residues) or
      <br/>
      d. a full RC SPICE network
    </p>
    <p num="82">The tool ends at 563.</p>
    <p num="83">Depending on the type of output item chosen, the data volume can be far less than that of the full RC model generated by other three dimensional extraction approaches.</p>
    <p num="84">
      The chip-level extraction tool is able to obtain capacitance and RC values that are accurate to within 10% of hardware.
      <br/>
      The technique has been used on large (16.3 mm * 16.3 mm) 0.18 micron designs using 6 levels of metal.
      <br/>
      The tool has demonstrated a 50 to 1 improved performance factor over an existing shape-based finite element analysis method.
    </p>
    <p num="85">Net to Net Coupling Capacitance</p>
    <p num="86">
      Capacitance induced by signal switching in neighboring wires is another parasitic mechanism that becomes more significant as feature sizes shrink.
      <br/>
      This form of capacitance, referred to as coupling capacitance, can only accumulate to significant levels when wires of different nets travel long distances in parallel and are in close proximity to each other.
      <br/>
      The invention described thus far provides a foundation for analyzing these effects on large-scale ASIC designs as well as other integrated circuits with complex wiring designs.
      <br/>
      An extension to the invention will extract the capacitance contributed by signal switching and make it available for use by a static timing analysis tool, a noise analysis tool, or a simulator.
      <br/>
      A static timing analyzer can add the coupling capacitance to the RC model for worst case analysis and subtract it from the model for best case analysis, assuming simultaneous switching all the time.
      <br/>
      The two pass process described (first doing capacitance extraction ignoring coupling, then doing extraction of the coupling capacitance) avoids the burden of carrying the identity of each adjacency during full chip extraction.
      <br/>
      The number of nets needed for coupling evaluation in the second pass is reduced by 2 orders of magnitude.
    </p>
    <p num="87">The steps involved in this extension are described below and are illustrated in FIGS. 11 and 12:</p>
    <p num="88">
      The tool starts at 600 by locating the nets for processing in step 604.
      <br/>
      The tool determines whether any nets remain to be processed at 606 in decision block 608.
      <br/>
      If not, the tool proceeds to 562.
      <br/>
      If any nets do remain to be processed, the tool goes to the next net (referred to as the subject net) in step 612 and retrieves the total amount of neighboring metal directly adjacent to a subject net.
      <br/>
      This was computed in pass 1.
    </p>
    <p num="89">
      In decision block 614, the tool determines if this total is less than either an absolute or a relative threshold.
      <br/>
      If so, the coupling capacitance of a subject net is considered insignificant.
      <br/>
      In this case the subject net can be excluded from the computationally intensive second pass analysis that follows and the tool proceeds to 606 and then to decision block 608.
    </p>
    <p num="90">If the coupling capacitance of the subject net is considered significant in decision block 614, the tool proceeds to 616 and step 618 to analyze the subject net to determine which other nets, if any, have portions of their wring directly adjacent to the subject net.</p>
    <p num="91">
      At 626 in decision block 620, the tool checks whether there are any more adjacent nets left.
      <br/>
      If not, it returns to 606.
      <br/>
      If there are, it inspects the next adjacent net in step 622 and determines the length of wire adjacent to the subject net.
      <br/>
      At decision block 624, the tool determines whether the length exceeds a relative threshold.
      <br/>
      If not, the tool proceeds to 626.
      <br/>
      If so, the net is considered to contribute significant coupling capacitance and at step 628 the coupling capacitance is inserted into the the tools data structures for the RC model at the appropriate locations.
      <br/>
      The tool then returns to 626 and decision block 620 to complete the analysis for the subject net.
    </p>
    <p num="92">
      The coupling capacitance extraction calculation is done using the same method as described above for capacitance extraction.
      <br/>
      However, the calculation is done only for those track intersections of the subject net and the adjacent net that are truly adjacent.
      <br/>
      Similarly, the coupling capacitive value for each pair of adjacent grid points can be determined by the lookup entry approach and any applicable extensions for various wire types and spaces.
    </p>
    <p num="93">When all nets are processed, the tool proceeds to step 562 in FIG. 8.</p>
    <p num="94">Resistance Extraction</p>
    <p num="95">
      In future deep-submicron technologies, the wire environment becomes important with respect to resistance extraction due to line width variation as a function of proximity of nearby lines during the etch process.
      <br/>
      The invention can easily extend to handle this requirement.
      <br/>
      The technology data for fixed wire types (as in steps 1A and 2A of the Technology Data Generation section above) is collected into a base table for 3 searches.
      <br/>
      For IBM CMOS7S technology, the topological configurations are listed below.
    </p>
    <p num="96">
      Search 1 contains 2 topological configurations:
      <br/>
      1. (Wire to the Left) and (Wire to the Right)
      <br/>
      2. (Wire to the Left) or (Wire to the Right)
    </p>
    <p num="97">
      If none of the configurations of Search 1 is met, Search 2 is invoked.
      <br/>
      Search 2 contains 1 topological configuration. (This is a default value which allows the extraction algorithm to do both resistance and capacitance extraction at the same time, assuming the same environment.
      <br/>
      The default value is a worst-case assumption of the Search 3 environment.)
      <br/>
      1. (Wire 2 tracks to the Left) and (Wire 2 tracks to the Right).
    </p>
    <p num="98">
      If none of the configurations of Search 2 are met, Search 3 is invoked.
      <br/>
      Search 3 contains 3 topological configurations:
      <br/>
      1. (Wire 2 tracks to the Left) and (Wire 2 tracks to the Right)
      <br/>
      2. (Wire 2 tracks to the Left) or (Wire 2 tracks to the Right)
      <br/>
      3.
      <br/>
      Neither of the wires 2 tracks away is present (best case environment)
    </p>
    <p num="99">
      The equation used to compute the total resistance for a wire type of width and space not in the tables specified above for a wire track segment is:
      <br/>
      Rtable=1/(((1/R0)+(1/(R1 * Delta-- W))+(1/(R2 * Delta-- D))) * Sheet-Rho(W))
      <br/>
      R0 represents the resistance of a minimum wire width at minimum spacing (value in base tables).
    </p>
    <p num="100">R1 represents the resistance variation due to the width variation and Delta_W is that width.</p>
    <p num="101">R2 represents the resistance variation due to the spacing variation and Delta' D is that spacing.</p>
    <p num="102">Sheet-Rho(W) is a function of thickness, which is a function of line width.</p>
    <p num="103">
      The following calculations are done to handle this type of wire:
      <br/>
      1C) Create a set of table values for all geometries described above containing the values R2 for Search 1 (2 values), Search 2 (1 value) and Search 3 (3 values) for each process condition.
      <br/>
      These values represent the resistance variation for a wire with space which varies from the base set created above.
      <br/>
      2C) Create a set of table values for all geometries described above containing the values R1 for Search 1 (2 values), Search 2 (1 values) and Search 3 (3 values) for each process condition.
      <br/>
      These values represent the resistance variation for a wire whose width varies from the base tables created above.
      <br/>
      3C) Create a set of table values representing Sheet-Rho, which is a function of wire width.
      <br/>
      4C) Combine the values of steps 1C, step 2C, step 3C, and the values R0 of the minimum wire type at highest density from base tables into a single table.
      <br/>
      For purposes of the chip-level extraction discussion, these table values and an on-the-fly calculation can be thought of as a single resistance entry for each unique condition.
      <br/>
      Note that if there are no fixed wire types, all wires in a design can be handled by this table.
      <br/>
      Alternatively, these steps could be used to create the base tables described above.
    </p>
    <p num="104">The tables are collected into a complete set of resistance table entries for every wire type, for best case, nominal, and worst case process conditions, for every metallization layer which is used in the extraction process. (Note that "slotting" of wide wires can be taken care of by adjusting the sheet-rho of the wide wires.) The table value calculation is done once per technology, and the data is entered into tables used by the extraction program itself.</p>
    <p num="105">The chip-level extraction algorithm can perform resistance extraction at the same time as it is doing capacitance extraction.</p>
    <p num="106">
      A representative hardware environment for practicing the present invention is depicted in FIG. 13, which illustrates a typical hardware configuration of an information handling/computer system in accordance with the subject invention, having at least one processor or central processing unit (CPU) 710. CPUs 710 are interconnected via system bus 712 to random access memory (RAM) 714, read-only memory (ROM) 716, an input/output (I/O) adapter 718 for connecting peripheral devices, such as disk units 711 and tape drives 713, to bus 712, user interface adapter 719 for connecting keyboard 715, mouse 717, speaker 703, microphone 704, and/or other user interface devices such as touch screen device (not shown) to bus 712, communication adapter 705 for connecting the information handling system to a data processing network, and display adapter 701 for connecting bus 712 to display device 702.
      <br/>
      A program storage device readable by the disk or tape units, is used to load the instructions which operate on a wiring interconnect design which is also loaded onto the computer system.
    </p>
    <p num="107">Although the invention has been described in terms of several exemplary embodiments, it is contemplated that it maybe practiced within the spirit and scope of the appended claims:</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of performing capacitance extraction of an integrated circuit comprising the steps of:</claim-text>
      <claim-text>mapping the integrated circuit's wiring design into a three dimensional track based model of the circuit; searching at track intersections around a grid unit wire segment for neighboring elements which cause capacitive effects;</claim-text>
      <claim-text>and selecting a capacitance value for the grid unit long wire segment based on the search of neighboring elements.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 also comprising the step of: cumulatively adding the capacitance values as each grid unit in a wiring net is analyzed.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1 wherein the distance between tracks in the three dimensional model is the minimum width line plus the minimum width space.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1 wherein the search is accomplished by using a plurality of search patterns.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 4 wherein the search patterns are ordered and the search is stopped as soon as neighboring elements which cause capacitive effects are found in a search.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5 wherein the search pattern order is established by the distance from the track being analyzed.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1 wherein the capacitance value is determined by a table lookup.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7 also comprising the step of generating capacitance values for a plurality of wiring types.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 8 wherein the capacitance values are acquired using conventional 2-D and 3-D field solvers.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 9 wherein the capacitance values provide for best case, nominal and worst case conditions.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 10 wherein the method provides for capacitance tables with entries for a plurality of wire types and spacing.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method of performing resistance extraction of an integrated circuit comprising the steps of: mapping the integrated circuit wiring design into a three dimensional track based model of the circuit; searching at track intersections around a grid unit long wire segment for neighboring elements which cause resistance variations;</claim-text>
      <claim-text>and selecting a resistance value for the grid unit long wire segment based on the search of neighboring elements.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 12 also comprising the steps of: cumulatively adding the resistance values as each grid unit in a wiring net is analyzed.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 12 wherein the distance between the tracks in the three dimensional model is the minimum width line plus the minimum width space.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 12 wherein searching is accomplished by using a plurality of search patterns.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 15 wherein the search patterns are ordered and the search is stopped as soon as neighboring elements are found in a search.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 12 wherein the selection of the resistance values is accomplished by looking up entries in a table and also comprising the step of generating resistance values for a plurality of wiring type.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 17 wherein the method provides for table entries for a plurality of wire types.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for extraction of parasitic effects on wire segments in an integrated circuit wiring design, said method steps Comprising: mapping the integrated circuit wiring design into a three dimensional track based model of the circuit; searching at track intersections around a grid unit long wire segment for neighboring elements which cause parasitic effects;</claim-text>
      <claim-text>and selecting the electrical characteristic for the grid unit long wire segment based on the search of neighboring tracks.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The program storage device of claim 19 wherein the search is accomplished by using a plurality of search patterns.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The program storage device of claim 20 wherein the search patterns are ordered and the search is stopped as soon as neighboring elements are found in a search.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The program storage device of claim 19 wherein the electrical characteristics are entered in the form of a table.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The program storage device of claim 19 wherein the distance between the tracks in the three dimensional model is the minimum width line plus the minimum width space.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The program storage device of claim 23 wherein the electrical characteristics for wire types and spaces are generated dynamically.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. A computerized design system for extracting the parasitic effects on wire segments in an integrated circuit wiring design which comprise: means for mapping the integrated circuit wiring design into a three dimensional track based model of the circuit; means for searching a track intersections around a grid unit long wire segment for neighboring elements which cause parasitic effects;</claim-text>
      <claim-text>and means for selecting the electrical characteristics for the grid unit long wire segment based on the search for neighboring elements.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The computerized design system of claim 25 which also comprises: means for cumulatively adding the electrical characteristics; means for storing the electrical characteristics for RC processing;</claim-text>
      <claim-text>and wherein the means for selecting electrical characteristics includes a means for storing the characteristics in a table and a means for generating electrical characteristics for wire types and spacing not provided for by the tables.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. A method for analyzing capacitance coupling in wiring nets in an integrated circuit comprising the steps of: mapping the integrated circuit wiring design into a three dimensional track based model of the circuit; determining which nets have wiring directly adjacent to the wiring net being processed; searching the adjacent nets and determining by stepping track intersection by track intersection the length of wire adjacent the wiring net being processed;</claim-text>
      <claim-text>and selecting a coupling capacitance value based on this search; inserting the additional capacitance into a model for the wiring net being processed.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. A method of claim 27 also comprising the step of: selecting the wiring nets for processing by calculating the amount of metal in the neighboring wiring adjacent to that net and determining if it exceeds a threshold amount.</claim-text>
    </claim>
  </claims>
</questel-patent-document>