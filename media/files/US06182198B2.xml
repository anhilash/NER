<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182198B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182198</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182198</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="22210009" extended-family-id="1358434">
      <document-id>
        <country>US</country>
        <doc-number>09326498</doc-number>
        <kind>A</kind>
        <date>19990604</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09326498</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>1410252</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>32649899</doc-number>
        <kind>A</kind>
        <date>19990604</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09326498</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>8820698</doc-number>
        <kind>P</kind>
        <date>19980605</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998US-60088206</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  11/20        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>20</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  11/14        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>14</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>711162000</text>
        <class>711</class>
        <subclass>162000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>707999202</text>
        <class>707</class>
        <subclass>999202</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707999204</text>
        <class>707</class>
        <subclass>999204</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>711112000</text>
        <class>711</class>
        <subclass>112000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>711113000</text>
        <class>711</class>
        <subclass>113000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>711114000</text>
        <class>711</class>
        <subclass>114000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>714006220</text>
        <class>714</class>
        <subclass>006220</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>714006300</text>
        <class>714</class>
        <subclass>006300</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>714E11080</text>
        <class>714</class>
        <subclass>E11080</subclass>
      </further-classification>
      <further-classification sequence="9">
        <text>714E11092</text>
        <class>714</class>
        <subclass>E11092</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/1662</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>1662</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/1466</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>1466</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/2094</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>2094</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2201/84</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2201</main-group>
        <subgroup>84</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99953</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99953</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99955</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99955</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>27</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6182198</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus for providing a disc drive snapshot backup while allowing normal drive read, write, and buffering operations</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>SHIBATA YUJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5123099</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5123099</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>WALLS KEITH</text>
          <document-id>
            <country>US</country>
            <doc-number>5163148</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5163148</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>EASTRIDGE LAWRENCE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5263154</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5263154</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>YANAI MOSHE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5544347</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5544347</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>DUYANOVICH LINDA MARIE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5555371</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5555371</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>ISKIYAN JAMES LINCOLN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5692155</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5692155</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>WATANABE NAOKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5754756</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5754756</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>DEKONING RODNEY A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5761705</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5761705</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>OHRAN RICHARD</text>
          <document-id>
            <country>US</country>
            <doc-number>5835953</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5835953</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>RAZ YOAV, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5852715</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5852715</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>DATA GENERAL CORP</text>
          <document-id>
            <country>WO</country>
            <doc-number>9853400</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9853400</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0566966</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-566966</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>User's Guide Novell Perfect Office for Windows, Word Perfect, The Best-Selling Word Processor for all Time v 6.1, pp 152-154, 159, &amp; 753-754, 1994.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/088,206</doc-number>
          <date>19980605</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/088206</doc-number>
          <date>19980605</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Hubis, Walter A.</name>
            <address>
              <address-1>Louisville, CO, US</address-1>
              <city>Louisville</city>
              <state>CO</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Otterness, Noel S.</name>
            <address>
              <address-1>Boulder, CO, US</address-1>
              <city>Boulder</city>
              <state>CO</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Flehr Hohbach Test Albritton &amp; Herbert LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Chan, Eddie P.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      The present invention is a method and system of performing a snapshot backup of a storage unit of a host system.
      <br/>
      The host system includes at least one primary system drive, a primary logic unit, a log system drive and at least one backup logic unit.
      <br/>
      A particular method is designed to perform the snapshot backup while allowing normal read operations and write operations to occur.
      <br/>
      After initializing the snapshot backup, the method processes a write operation of new data submitted to the primary logic unit to be written to the primary system drive during the snapshot backup by reading the old data that is on the primary system drive, buffering the old data, overwriting the old data and writing the old data to the log system drive if the write operation is the first write operation to a specific sector in the primary system drive for the snapshot backup.
      <br/>
      The method executes a read operation during the snapshot backup by processing the read operation submitted to the backup logic unit by accessing the requested data from the log system drive if the requested data is available from the log system drive, if not, accessing the requested data from the primary system drive.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">This application claims the benefit of U.S. Provisional No. 60/088,206 filed Jun. 5, 1998.</p>
    <p num="2">The present invention relates generally to various method for implementing improved backup procedures for disk arrays, and particularly for implementation on the DAC9060SX and DAC9060SF disk array controllers.</p>
    <heading>TECHNICAL FIELD</heading>
    <p num="3">Background of the Invention</p>
    <p num="4">
      The problem of data backup continues to grow with the storage capacity of disk drive arrays.
      <br/>
      Disk drives continue to grow in speed and capacity, while cost per unit storage continues to decline.
      <br/>
      This explosion of capacity has placed severe demands on data backup techniques.
      <br/>
      RAID mechanisms have the potential to minimize the frequency of backups.
    </p>
    <p num="5">
      As servers become increasingly fault tolerant, RAID storage systems are expected to remain available at all times.
      <br/>
      Backup procedures can be performed directly by the host system, but this results in lowered system performance.
      <br/>
      In addition, there are issues with on-line data base systems where a consistent copy of the database is required not only for backup, but for data mining operations.
      <br/>
      In these cases, the backup copy of the array can be made while normal read and write operations continue to the storage system.
      <br/>
      This is referred to as a snapshot.
    </p>
    <p num="6">
      In the prior art, a snapshot backup is accomplished using RAID 1 or mirrored disk drives in a storage system, as shown in FIG. 1.
      <br/>
      The database is first synchronized to the storage system 21 to flush any data or meta-data out of the server's internal cache (not shown).
      <br/>
      The mirrored RAID set 22b is then removed, and placed into a second system 23 for backup or analysis.
      <br/>
      When complete, the mirrored set 22b is returned to the original storage system 21 where mirror set 22b is synchronized to a master set 24.
      <br/>
      These systems usually use two mirrored drives 22a, 22b to allow redundancy while one of the mirror sets 22b is used for backup.
    </p>
    <p num="7">There are several problems with this process:</p>
    <p num="8">
      The backup is a manual process.
      <br/>
      Human intervention is required to move the disks from one system to the next.
      <br/>
      This requires scheduling for the backup or checkpoint operation, as well as the cost of the operator.
      <br/>
      Physically moving the drives can also result in accidental damage to the drives through rough handling, and wear and tear on the connectors.
    </p>
    <p num="9">
      For a fully redundant system as shown in FIG. 1, a 200% storage overhead is required.
      <br/>
      These costs can include the disk drives, cooling fans, power supplies, UPS systems, cabinets, and floor space.
    </p>
    <p num="10">Performance degradation occurs on RAID subsystem 26 as replaced drives 22a, 22b are rebuilt and made coherent with the master set 24.</p>
    <p num="11">
      A restriction that applies to RAID subsystem 26 is that no knowledge of the file system can be assumed, and there is no a priori knowledge of read or write patterns.
      <br/>
      For any backup strategy other than host backup, there is no way to guarantee that the information on the drive is synchronized with the host system.
      <br/>
      A method for synchronizing the host cache to the storage system is always be required.
    </p>
    <p num="12">Therefore it would be desirable to provide a new and improved method and apparatus for generating a snapshot backup that is capable of dealing with arbitrarily large disk arrays, and utilizes a smaller storage overhead.</p>
    <p num="13">It would also be desirable to provide a new and improved method and apparatus for generating a snapshot backup that can allow read and write operations to occur while a snapshot backup is in progress.</p>
    <p num="14">It would also be desirable to provide a new and improved method and apparatus for generating a snapshot backup that can implement the use of dual-active controllers.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="15">
      The present invention is a method and system of performing a snapshot backup of a storage unit of a host system.
      <br/>
      The host system includes at least one primary system drive, a primary logic unit, a log system drive and at least one backup logic unit.
      <br/>
      A particular method is designed to perform the snapshot backup while allowing normal read operations and write operations to occur.
      <br/>
      After initializing the snapshot backup, the method processes a write operation of new data submitted to the primary logic unit to be written to a sector of the primary system drive during the snapshot backup by reading the old data that is on the primary system drive which is to be overwritten by the new data in response to the write operation, buffering the old data, overwriting the old data with the new data and writing the old data to the log system drive if the write operation is the first write operation to that specific sector in the primary system drive for the snapshot backup.
      <br/>
      The method executes a read operation during the snapshot backup by processing the read operation submitted to the backup logic unit by accessing the requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data to a requester, if not, accessing the requested data from the primary system drive and returning the requested data to the requester.
    </p>
    <p num="16">
      A particular system embodiment implemented in a host system performs a snapshot backup of the drive system of the host system.
      <br/>
      The system includes at least one controller which initializes and terminates the snapshot backup.
      <br/>
      The system further includes at least one backup logic unit which is electronically coupled to a log system drive such that the requested data is accessed from the log system drive if the requested data is available from the log system drive during a read operation and is returned to the requester.
      <br/>
      If the data is not available from the log system drive then the backup logic unit, which is also electronically coupled to at least one primary system drive, accesses the requested data from the primary system drive during the read operation and returns the data to the requester.
      <br/>
      The system further includes at least one primary logic unit which is electronically coupled to the primary system drive such that new data submitted to the primary logic unit during a write operation is written to a sector of the primary system drive.
      <br/>
      A buffer is electronically coupled to the primary system drive such that the old data that is to be overwritten by the new data submitted to the primary logic unit is buffered prior to being overwritten.
      <br/>
      The buffer is further electronically coupled to the log system drive such that the old data is written to the log system drive if the new data written to the primary system drive is the first data to be written to the sector during the snapshot backup.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      Additional objects and features of the invention will be more readily apparent from the following detailed description and appended claims when taken in conjunction with the drawings, in which:
      <br/>
      FIG. 1 is a block diagram of a prior art snapshot process that employs mirrored disk drives that are physically removed form a RAID subsystem;
      <br/>
      FIG. 2 is a block diagram of a single controller system that controls the snapshot backup of the drive system;
      <br/>
      FIG. 3 is a block diagram of a controller with a buffer and NV memory that provides control for the snapshot backup;
      <br/>
      FIG. 4 is a block diagram of a controller memory including the command and configuration structure of the snapshot backup;
      <br/>
      FIG. 5 is a block diagram of a system drive of a host system that provides for normal read and write operations;
      <br/>
      FIG. 6 is a block diagram of a system drive during a snapshot backup procedure including read access from the backup LUN;
      <br/>
      FIG. 7 is a block diagram of a dual active controller system that controls the snapshot backup of the drive system;
      <br/>
      FIG. 8 is a block diagram of a system drive during a snapshot backup procedure including a backup system drive.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="18">
      The snapshot backup method and system were initially disclosed in the provisional application, Ser.
      <br/>
      No. 60/088,206, which is incorporated herein by reference.
    </p>
    <p num="19">
      The backup method of the present invention is capable of dealing with arbitrarily large disk arrays.
      <br/>
      It also allows normal read and write operations to occur while a snapshot backup process proceeds.
      <br/>
      It is fully automatic, and there is a much smaller storage overhead.
      <br/>
      In addition, this backup method is ideally suited to the dual-active nature of the DAC960SX and DAC960SF controllers.
    </p>
    <p num="20">The general features for the snapshot backup are:</p>
    <p num="21">
      1.
      <br/>
      The mechanism allows a snapshot backup of an array at an arbitrary point in time.
      <br/>
      Normal read and write operations to the array can continue.
      <br/>
      This feature implies two logical access paths to the array.
    </p>
    <p num="22">2. The mechanism has minimal storage overhead.</p>
    <p num="23">
      3. The method does not inherently degrade performance.
      <br/>
      There is minimal performance loss to normal I/O operations while the backup process proceeds.
      <br/>
      Given unlimited processor and system resources, the method would not reduce performance.
      <br/>
      In a real system, this is not possible, since the backup procedure uses system resources such as processor instruction cycles and memory, but that should be the only loss of performance.
    </p>
    <p num="24">
      4. The method works at the block level.
      <br/>
      There are no file system dependencies or a priori knowledge of read and write patterns.
    </p>
    <p num="25">
      5. The method is fully automatic.
      <br/>
      No operator intervention is required.
    </p>
    <p num="26">
      6. The method is robust.
      <br/>
      Data written and read can be redundancy protected at all times.
      <br/>
      This implies that the normal single point of failure requirements can apply.
    </p>
    <p num="27">
      FIG. 2 shows a block diagram of a controller system 100 in which the present invention can be implemented that includes a controller 104A and a system drive 106 with a plurality of storage disk drives 108.
      <br/>
      The controller is coupled via a host bus 103 to a server 102 A. The controller 104 includes a logic unit (LUN) 109 which receives and outputs data to the server 104A and allows the controller to map from the LUN to the system drive 106.
      <br/>
      The LUN 109 includes a physical interface 110 and a SCSI LUN Number 111.
      <br/>
      The controller 104A is coupled to the system drive 106 through one or more buses 105.
      <br/>
      The buses 105 directly connect through a variety of means know in the art to one or more disk drives 108 of the system drive 106.
    </p>
    <p num="28">
      FIG. 3 shows a block diagram of the controller 104.
      <br/>
      The controller 104 includes a CPU 120, an I/O processor 122, a buffer 123 and control firmware 134.
      <br/>
      The buffer 123 is used to store information during a snapshot backup.
      <br/>
      The non-volatile memory or NV memory 133 includes commands used to control the snapshot backup.
    </p>
    <p num="29">
      FIG. 4 shows a block diagram of the NV memory 133 that includes the firmware 134 and a configuration structure 135.
      <br/>
      Included within the firmware are stored commands 142 including: snapshot initiate direct command 144, snapshot terminate direct command 145, start long operation command 146, and get long operation status command 147.
      <br/>
      Command error condition 144A is associated with the initiate snapshot 144 command and error condition 145A is associated with terminate snapshot 145 command.
      <br/>
      The error conditions 144A, 145A are reported to the controller during the snapshot backup.
      <br/>
      Return data 146A is also sent to the controller during the start long operation 146, and return data 147A is sent to controller during the get long operation status 147.
      <br/>
      The configuration structure 135 is also included within the NV memory 133.
      <br/>
      The configuration structure can be configured as a RAID field 148 which can be defined as a log system drive or LOG 149.
    </p>
    <p num="30">
      Referring to FIG. 2, the basic storage unit that snapshot backup deals with is the system drive 106.
      <br/>
      A system drive 106 can consist of any number of physical disk drives 108, or can be composed of portions of physical disk drives.
      <br/>
      These physical storage units are organized into the system drive through various RAID levels, and can be any size.
      <br/>
      Operations of the components are well know in the art apart from any additional changes introduced by the present invention.
    </p>
    <p num="31">
      There can be any number of system drives 106 in an array system, and these can be mapped to the world outside the array through LUNs 211, 213 as shown in FIGS. 5, 6 and 8.
      <br/>
      A LUN includes:
    </p>
    <p num="32">
      A physical interface 110, shown in FIG. 2.
      <br/>
      This may be a SCSI port, as in the case of a DAC960SX configuration, or it may consists of a Fibre channel port in the DAC960SF.
      <br/>
      These controllers have two host ports, and each port may take on any SCSI or Fibre target address.
      <br/>
      An attribute of the port is the port number, either zero or one.
    </p>
    <p num="33">
      A logical interface 111, shown in FIG. 2.
      <br/>
      The host interface also defines a LUN 109 number that allows data paths through the same physical interface.
      <br/>
      This is the SCSI LUN number 111.
    </p>
    <p num="34">
      For the purposes of this description, the Array system will be simplex, or a single controller system.
      <br/>
      The dual-active system is an extension of the simplex case, and will be discussed later in this document.
    </p>
    <p num="35">
      Note that the concept of a SCSI LUN is expanded in this context to include both the port number and the SCSI LUN number.
      <br/>
      A system drive can have a one to many mapping, where a system drive can be accessed through more than one LUN.
      <br/>
      LUNs can connect to exactly one system drive.
    </p>
    <p num="36">The snapshot backup process includes two system drives as shown in FIGS. 5 and 6:</p>
    <p num="37">
      The Primary System Drive 210.
      <br/>
      This is the primary storage area where data is written 216 and read 217 for normal operation of the system.
      <br/>
      The primary system drive 210 can be any size, and can be any RAID level.
      <br/>
      The primary system drive 210 is accessed through one or more primary LUNs 211.
    </p>
    <p num="38">
      A Log System Drive 212.
      <br/>
      This log system drive 212 can be any size or RAID level, although it is usually smaller than primary system drive 210.
      <br/>
      The log system drive 212 is accessed through one or more backup LUNs 213.
    </p>
    <p num="39">
      Taken together, drives 210 and 212 form a backup pair.
      <br/>
      Backup pairs are not necessarily static.
      <br/>
      Log system drive 212 can be shared among the other primary system drives (not shown) in the system, if one snapshot backup process is allowed to be active at any time.
    </p>
    <p num="40">
      In normal operation, shown in FIG. 5, read 217 and write 216 requests are issued to the primary system drive 210.
      <br/>
      During a write request 216, the log system drive 212 remains idle and the backup LUN 213 is not active.
      <br/>
      The backup LUN 213 responds with a SCSI check condition, drive not ready, because the system in not actively performing a snapshot backup.
    </p>
    <p num="41">
      In backup operation, shown in FIG. 6, the backup LUN 213 is now available, accepts only read operations, and can access data from both primary system drive 210 and log system drive 212.
      <br/>
      In response to a read request 217 on backup LUN 213, the controller (not shown) first checks to see if the data to fulfill the request is available on log system drive 212.
      <br/>
      If so, the information is read 221 from log system drive 212 and returned to the requester (not shown).
      <br/>
      If not, the data is read 220 from primary system drive 210 and returned to the requestor.
      <br/>
      Any write operations to backup LUN 213 are rejected.
    </p>
    <p num="42">
      In backup operation, read requests 217 from primary LUN 211 are serviced solely from primary system drive 210.
      <br/>
      Write requests 216 are also serviced by primary system drive 210, but the data that is about to be overwritten is read and buffered, as buffered data 221 .
      <br/>
      This allows the old data, necessary for the snapshot backup, to be preserved and written to log system drive 212 for storage.
      <br/>
      If this is the first write 216 to the sector (not shown) in primary system drive 210 after the snapshot was initiated, the buffered data 221 is written to log system drive 212.
      <br/>
      Otherwise, buffered data 221 is discarded.
    </p>
    <p num="43">
      The additional search and write operations have a small performance impact on primary system drive 210, since they can be scheduled after write request 216 to primary system drive 210 has completed.
      <br/>
      Note that buffered data 221 is already available in RAID 5 systems (not shown) where a read-modify-write operation can be scheduled for any write operation.
    </p>
    <p num="44">
      Since the log system drive 212 has a finite capacity, it eventually fills with write data.
      <br/>
      This can include a method for starting and ending the backup operation.
      <br/>
      In addition, a consistent file system backup can include the host system to flush any data from the system's internal cache (not shown).
      <br/>
      Consequently, some host intervention is needed to flush the host's buffers (not shown) and initiate the snapshot backup process.
      <br/>
      Likewise, the host system needs to inform the controller when to terminate the snapshot backup process.
    </p>
    <p num="45">
      The size and RAID level of the log system drive 212 depend on the write/read ratio of the application and the size of the primary system drive 210.
      <br/>
      Since the log system drive 212 is simply a system drive, it can be reconfigured any time the backup process is not active to either increase or decrease in size or RAID level.
      <br/>
      The configuration of the log system drive 212 can be easily tuned for the particular application.
    </p>
    <p num="46">
      In the event that log system drive 212 becomes full, read 217 and write 216 requests to primary LUN 211 continues normally.
      <br/>
      The backup LUN 213 first responds with a vendor unique error code, specifying log system drive 212 has overflowed.
      <br/>
      Backup LUN 213 then goes into a drive not ready state until the next snapshot backup is initiated.
    </p>
    <p num="47">
      As a result of this method, the performance of the system in servicing write 216 and read 217 requests through primary LUN 211 is unaffected.
      <br/>
      The performance of backup LUN 213 is lower than read requests 217 through primary LUN 211 to do the lookup operation required for each read 221 .
      <br/>
      The magnitude of this degradation depends on the lookup method used, and on the availability of system resources.
    </p>
    <p num="48">
      In a duplex controller configuration (dual active controllers), as shown in FIG. 7, information about the status of a snapshot backup and the current state of log system drive 212 requires communication between the two controllers (not shown).
      <br/>
      This is routinely handled by the cache mirroring techniques that use the SCSI back-end channels (not shown); snapshot backup uses these mechanisms.
    </p>
    <p num="49">Information about the state of log system drive 212 is communicated between controllers to accommodate two operations:</p>
    <p num="50">
      1.
      <br/>
      Accessing the backup LUN 213 from more than one controller or accessing backup LUN 213 from a different controller than the primary LUN 211.
      <br/>
      Since the backup LUN 213 is read only, there is no requirement for write locking parity stripes on the disks, and several initiators can easily access the same snapshot backup.
      <br/>
      By allowing the backup LUN 213 to reside on a different controller than the primary LUN 211, performance loss is also minimized.
    </p>
    <p num="51">
      2. In the event a failure occurs, the surviving controller can preserve the snapshot backup operations.
      <br/>
      Any hash tables or search trees (not shown) used for the log system drive 212 can be synchronized across controllers.
    </p>
    <p num="52">
      When a snapshot backup is initiated, the second controller is notified that the process has started through the back-end SCSI channels (not shown).
      <br/>
      This allows the second controller to initialize any information regarding log system drive 212.
      <br/>
      Ongoing changes to log system drive 212 are maintained by monitoring the normal write cache mirroring employed in dual active controller configurations.
    </p>
    <p num="53">
      Referring to FIG. 8, an alternate method of accessing the snapshot backup can be implemented by initiating the snapshot and copying the read-only data to a second system drive.
      <br/>
      This backup system drive 231 becomes a duplicate of primary system drive 232 at the time the snapshot was initiated, as shown in FIG. 8.
      <br/>
      This feature allows the array controller (not shown) to actually perform the backup, with little intervention from the host system (not shown), and no loss in any of the data transfer channels to the host computer system(s).
    </p>
    <p num="54">
      Backup system drive 231 should be of at least the same size (same number of logical blocks) as primary system drive 232.
      <br/>
      Backup system drive 231 can be larger, and it can be any RAID level or number of drives.
      <br/>
      Finally, backup system drive 231 can be mapped into LUNs in the same way as any system drive, although the drive does not become available until the snapshot copy has completed.
    </p>
    <p num="55">The process for initiating a snapshot backup to a backup system drive 231 is:</p>
    <p num="56">
      1.
      <br/>
      A log system drive 233 and a backup system drive 231 can be configured on the controller (not shown).
      <br/>
      The log system drive 233 can be any size or RAID level, but should be defined as a log system drive 233.
      <br/>
      Backup system drive 231 is simply a system drive with size equal to or larger than primary system drive 232.
    </p>
    <p num="57">2. An Initiate Snapshot command is issued to start the snapshot backup process.</p>
    <p num="58">3. A System Drive Copy command is issued to the controller, with the source drive set to be in log system drive 233, and the destination drive set to backup system drive 231.</p>
    <p num="59">
      4. The copy process 236 can be monitored by a System Drive Copy Status command.
      <br/>
      While the copy is being performed, the backup LUNs 234 associated with backup system drive 231 responds with busy status.
      <br/>
      Any LUNs (not shown) associated with log system drive 233 operates as a normal snapshot backup LUN, with read-only capability.
    </p>
    <p num="60">5. When the copy is complete, backup system drive 231 responds normally to all read and write commands, and the snapshot backup process terminates.</p>
    <p num="61">
      This process allows a snapshot to be copied to a new system drive that can be accessed separately from primary system drive 232.
      <br/>
      Backup system drive 231 can consist of disks or removable media devices (not shown) that can be removed from the controller and set aside, or placed into another array.
    </p>
    <p num="62">
      The time to copy the primary system drive snapshot to backup system drive 231 can be significantly reduced by allowing incremental updates of backup drive 231.
      <br/>
      Once backup system drive 231 is established, any changes to primary system drive 232 can be tracked.
      <br/>
      These can then be migrated into backup system drive 231 copying only those sectors (not shown) that have changed.
      <br/>
      This process significantly reduces backup time at the cost of some additional system memory.
    </p>
    <p num="63">
      There are two parts to the snapshot backup interface: the configuration structures 135, where information about backup pairs is stored, and the direct SCSI commands that initiate 144 and terminate 145 the snapshot backup process.
      <br/>
      Preferred embodiments of these two parts for the DAC960SX and DAC960SF controllers are now described.
    </p>
    <p num="64">
      The single change to the conventional configuration structure identifies the system drive as a log system drive.
      <br/>
      AU of the remaining attributes for a system drive apply to a log system drive.
      <br/>
      This includes LUN affinty, so that it may be possible to access a snapshot backup through more than one LUN.
      <br/>
      One system drive can be set to a log system drive.
    </p>
    <p num="65">The existing configuration structure 135 for a system drive is:</p>
    <p num="66">
      --
      <br/>
      -- typedef struct _S_D_E
      <br/>
      -- +
      <br/>
      --      u_char status;               /* system drive status         */
      <br/>
      --                                   /* ONLINE, OFFLINE, CRITICAL   */
      <br/>
      --      u_char raid;                 /* RAID Level                  */
      <br/>
      --      u_char n_drvs;               /* Used only for RAID 0,5,6    */
      <br/>
      --      u_char affinity;             /* Target ID owns this LUN     */
      <br/>
      --      VDRIVE vdrive�MAX_VDRIVES�; /* Virtual Drive Definition    */
      <br/>
      -- } S_D_E;
    </p>
    <p num="67">The raid field 148 can take on the following values:</p>
    <p num="68">
      --
      <br/>
      -- /* defines for S_D_E-&gt;raid */
      <br/>
      -- -define NORAID 7      /* JBOD, Single virtual drive */
      <br/>
      -- -define RAID0  0      /* Striping, No of vdrives &gt;=2. */
      <br/>
      --                           /* Does not include single drive case */
      <br/>
      -- -define RAID1  1      /* Mirrored drives, no of vdrives = 2 */
      <br/>
      -- -define RAID3  3      /* RAID-3                    */
      <br/>
      -- -define RAID5  5      /* Raid-5, no or vdrives &gt;=3 */
      <br/>
      -- -define RAID6  6      /* RAID 0+1, mirror striped */
      <br/>
      -- -define WB_MSK 0x80   /* configured Write Policy   */
      <br/>
      --                           /* set for write-back caching */
      <br/>
      -- -define RAID_MASK 0x0F   /* low nibble is RAID level  */
    </p>
    <p num="69">
      A system drive is defined to be a log system drive by adding in the LOG define.
      <br/>
      The new values for the raid field 148 are:
    </p>
    <p num="70">
      --
      <br/>
      -- /* defines for S_D_E-&gt;raid */
      <br/>
      -- -define NORAID 7      /* JBOD, Single virtual drive */
      <br/>
      -- -define RAID0  0      /* Striping, No of vdrives &gt;=2. */
      <br/>
      --                           /* Does not include single drive case */
      <br/>
      -- -define RAID1  1      /* Mirrored drives, no of vdrives = 2 */
      <br/>
      -- -define RAID3  3      /* RAID-3                    */
      <br/>
      -- -define RAID5  5      /* Raid-5, no or vdrives &gt;=3 */
      <br/>
      -- -define RAID6  6      /* RAID 0+1, mirror striped */
      <br/>
      -- -define WB_MSK 0x80   /* configured Write Policy   */
      <br/>
      --                           /* set for write-back caching */
      <br/>
      -- -define LOG    0x40   /* Set for log system drive  */
      <br/>
      -- -define RAID_MASK 0x0F   /* low nibble is RAID level  */
    </p>
    <p num="71">
      There are two direct commands that implement the snapshot backup.
      <br/>
      One command 144 to start the snapshot, and another 145 to terminate the snapshot.
    </p>
    <p num="72">
      The initiate Snapshot command 144, depicted in FIG. 4, can be issued to the LUN that is being backed up (the primary LUN).
      <br/>
      This allows the host system to flush any cache buffers and initiate the snapshot area.
      <br/>
      The Command description Block (CDB) of this command is shown in Table 1. (Note: the CDB is part of the SCSI protocol.)
    </p>
    <p num="73">
      -- TABLE 1
      <br/>
      -- Initiate Snapshot Direct Command CDB (144)
      <br/>
      -- Bit/
      <br/>
      -- Byte   7       6      5       4      3       2      1       0
      <br/>
      -- 0      Operation Code (20h)
      <br/>
      -- 1      LUN                   Reserved
      <br/>
      -- 2      DCMD OP CODE - SNAPSHOT INITIATE (0xXX)
      <br/>
      -- 3      Reserved
      <br/>
      -- 4      Reserved
      <br/>
      -- 5      Reserved
      <br/>
      -- 6      Reserved
      <br/>
      -- 7      Reserved
      <br/>
      -- 8      Reserved
      <br/>
      -- 9      Control Byte
    </p>
    <p num="74">The possible error conditions (Table 2) are returned by a check condition status, and the following sense data:</p>
    <p num="75">
      -- TABLE 2
      <br/>
      -- Initiate Snapshot Direct Command Error Conditions (144A)
      <br/>
      -- Status  SK     ASC    ASCQ    Description
      <br/>
      -- 0x00    0x00   0x00   0x00    Good Completion, snapshot ready.
      <br/>
      -- 0x02    0x05   0x24   0x00    Illegal CDB
      <br/>
      -- 0x02    0x09   0x81   0x06    A rebuild operation is in progress
      <br/>
      -- 0x02    0x09   0x81   0x0C    An initialization operation is in progress
      <br/>
      -- 0x02    0x09   0x81   0x0D    A check consistency operation is in
      <br/>
      --                               progress
      <br/>
      -- 0x02    0x09   0x81   0x10    A snapshot backup is already in
      <br/>
      --                               progress
      <br/>
      -- 0x02    0x09   0x81   0x19    A log LUN has not been defined.
      <br/>
      -- 0x02    0x09   0x81   0x20    Command issued to a backup LUN.
      <br/>
      -- SK = Sense Key
      <br/>
      -- ASC = Additional Sense Code
      <br/>
      -- ASCQ = Additional Sense Code Qualifier
    </p>
    <p num="76">
      The terminate Snapshot command, 145, depicted in FIG. 4, and the CBD shown in Table 3, can be issued either to the LUN that was being backed up (the primary LUN), or to the backup LUN.
      <br/>
      This allows the backup process to terminate the snapshot as soon as it has completed.
      <br/>
      No notification is made to the primary LUN when the snapshot is terminated through the backup LUN.
    </p>
    <p num="77">
      -- TABLE 3
      <br/>
      -- Terminate Snapshot Direct Command CDB (145)
      <br/>
      -- Bit/
      <br/>
      -- Byte   7       6      5       4      3       2      1       0
      <br/>
      -- 0      Operation Code (20h)
      <br/>
      -- 1      LUN                   Reserved
      <br/>
      -- 2      DCMD OP CODE - SNAPSHOT TERMINATE (0xXX)
      <br/>
      -- 3      Reserved
      <br/>
      -- 4      Reserved
      <br/>
      -- 5      Reserved
      <br/>
      -- 6      Reserved
      <br/>
      -- 7      Reserved
      <br/>
      -- 8      Reserved
      <br/>
      -- 9      Control Byte
    </p>
    <p num="78">The possible error conditions (Table 4) are returned by a check condition status, and the following sense data:</p>
    <p num="79">
      -- TABLE 4
      <br/>
      -- Terminate Snapshot Direct Command Error Conditions (145A)
      <br/>
      -- Status  SK     ASC    ASCQ    Description
      <br/>
      -- 0x00    0x00   0x00   0x00    Good Completion, snapshot terminated.
      <br/>
      -- 0x02    0x05   0x24   0x00    Illegal CDB
      <br/>
      -- 0x02    0x09   0x81   0x0C    A snapshot backup was not in progress
      <br/>
      -- SK = Sense Key
      <br/>
      -- ASC = Additional Sense Code
      <br/>
      -- ASCQ = Additional Sense Code Qualifier
    </p>
    <p num="80">
      The Start Long Operation 146, as depicted in FIG. 4, and the CBD shown in Table 5, starts the system drive copy.
      <br/>
      The operation can be performed as an asynchronous (background) operation.
      <br/>
      The status of the operation is returned during the data in phase, which is 2 bytes long.
    </p>
    <p num="81">
      Note that the addressed logical unit is passed as a field in the command descriptor block.
      <br/>
      The values in the identify message or in byte 1 of the command descriptor block are ignored.
      <br/>
      Descriptions of the Start Long Operation CDB Fields are provided in Table 6.
    </p>
    <p num="82">
      -- TABLE 5
      <br/>
      -- Start Long Operation CDB (146)
      <br/>
      -- Bit/
      <br/>
      -- Byte   7       6      5       4      3       2      1       0
      <br/>
      -- 0      Operation Code (20h)
      <br/>
      -- 1      LUN                   Reserved
      <br/>
      -- 2      DCMD OP CODE - LOP Start (0x44)
      <br/>
      -- 3      Opcode
      <br/>
      -- 4      Source Device Address
      <br/>
      -- 5      Destination Drive Address
      <br/>
      -- 6      Reserved
      <br/>
      -- 7      Allocation Length (MSB)
      <br/>
      -- 8      Allocation Length (LSB)
      <br/>
      -- 9      Control Byte
    </p>
    <p num="83">
      -- TABLE 6
      <br/>
      -- Start Long Operation Field Descriptions
      <br/>
      -- Field       Description
      <br/>
      -- LUN         Logical Unit Number.
      <br/>
      This field is ignored and should be
      <br/>
      --             set to zero.
      <br/>
      -- Opcode      The operation to be executed;
      <br/>
      --             0xXX copy system drive
      <br/>
      --             Note that other opcodes can be used with this operation.
      <br/>
      --             Refer to the SCSI Command Reference Manual for full
      <br/>
      --             details.
      <br/>
      -- Source      The system drive to be copied, from 0x00 to 0x07.
      <br/>
      -- Device
      <br/>
      -- Address
      <br/>
      -- Destination The destination system drive of the copy, from 0x00 to
      <br/>
      -- Device      0x07.
      <br/>
      -- Address
      <br/>
      -- Allocation  Specifies the number of bytes the initiator has allocated for
      <br/>
      -- Length      the returned data.
      <br/>
      A value of zero if not considered an error
      <br/>
      --             and the command completes successfully with no data
      <br/>
      --             returned to the initiator.
      <br/>
      The controller terminates the data
      <br/>
      --             transfer when the requested number of bytes has been
      <br/>
      --             transferred or when all available data has been transferred,
      <br/>
      --             whichever is less.
      <br/>
      The maximum data transferred is 2 bytes.
      <br/>
      -- Control Byte Must be set to zero.
      <br/>
      -- Reserved    Must be set to zero.
    </p>
    <p num="84">This command returns good status.</p>
    <p num="85">
      This command returns the following data (Table 7).
      <br/>
      Note that the LOP Start command supports other operations, and these operations may return data that is different from that described in this document.
      <br/>
      Please refer to the SCSI Command Reference Manual for full details.
    </p>
    <p num="86">
      -- TABLE 7
      <br/>
      -- Start Long Operation Return Data (146A)
      <br/>
      -- Data                 Description
      <br/>
      -- 0x0000               Copy Started Successfully.
      <br/>
      -- 0x0002               One of the system drives is not ready.
      <br/>
      -- 0x0105               An invalid system drive was specified.
      <br/>
      -- 0x0106               A copy is already in progress.
    </p>
    <p num="87">
      Get Long Operation Status command 147, as shown in FIG. 4, (Table 8) returns information on the status of a long operation, in this case, the system drive copy.
      <br/>
      The status of the operation is returned during the data in phase.
    </p>
    <p num="88">
      Note that the addressed logical unit is passed as a field in the command descriptor block.
      <br/>
      The values in the identify message or in byte 1 of the command descriptor block are ignored.
      <br/>
      Descriptions of the Get Long Operation Status CDB fields are provided in Table 9.
    </p>
    <p num="89">
      -- TABLE 8
      <br/>
      -- Get Long Operation Status CDB (147)
      <br/>
      -- Bit/
      <br/>
      -- Byte   7       6      5       4      3       2      1       0
      <br/>
      -- 0      Operation Code (0x20)
      <br/>
      -- 1      LUN                   Reserved
      <br/>
      -- 2      DCMD OP CODE - LOP Status (0x43)
      <br/>
      -- 3      Opcode
      <br/>
      -- 4      Reserved
      <br/>
      -- 5      Reserved
      <br/>
      -- 6      Reserved
      <br/>
      -- 7      Allocation Length (MSB)
      <br/>
      -- 8      Allocation Length (LSB)
      <br/>
      -- 9      Control Byte
    </p>
    <p num="90">
      -- TABLE 9
      <br/>
      -- Get Long Operation Status Field Descriptions
      <br/>
      -- Field       Description
      <br/>
      -- LUN         Logical Unit Number.
      <br/>
      This field is ignored and should be
      <br/>
      --             set to zero.
      <br/>
      -- Opcode      The operation to be executed:
      <br/>
      --             0xXX copy system drive
      <br/>
      --             Note that other opcodes can be used with this operation.
      <br/>
      --             Refer to the SCSI CommandReference Manual for full
      <br/>
      --             details.
      <br/>
      -- Allocation  Specifies the number of bytes the initiator has allocated for
      <br/>
      -- Length      the returned data.
      <br/>
      A value of zero if not considered an error
      <br/>
      --             and the command completes successfully with no data
      <br/>
      --             returned to the initiator.
      <br/>
      The controller terminates the data
      <br/>
      --             transfer when the requested number of bytes has been
      <br/>
      --             transferred or when all available data has been transferred,
      <br/>
      --             whichever is less.
      <br/>
      The maximum data transferred is 2 bytes.
      <br/>
      -- Control Byte Must be set to zero.
      <br/>
      -- Reserved    Must be set to zero.
    </p>
    <p num="91">This command returns good status.</p>
    <p num="92">
      This command returns the following data (Table 10).
      <br/>
      Note that the LOP Status command supports other operations, and these operations may return data that is different from that described in this document.
      <br/>
      Please refer to the SCSI Command Reference Manual for full details.
    </p>
    <p num="93">
      -- TABLE 10
      <br/>
      -- Get Long Operation Status Return Data (147A)
      <br/>
      -- Data                 Description
      <br/>
      -- 0x0000               Copy is in progress.
      <br/>
      -- 0x0100               Copy completed successfully.
      <br/>
      -- 0x0002               One of the system drives is not ready.
      <br/>
      -- 0x0105               No copy in progress.
      <br/>
      -- 0x0001               Irrecoverable data errors.
      <br/>
      -- 0x0107               Copy terminated by command.
    </p>
    <p num="94">
      Along with the direct SCSI commands, the front panel/LCD display and the VT-100 interface supports manual operation of snapshot backup.
      <br/>
      The LUN can be set to LOG as a part of the LUN configuration utilities, and the snapshot can be started/ended through the administration menu.
    </p>
    <p num="95">
      Error conditions can arise in normal operation of the snapshot backup.
      <br/>
      These are associated with the backup LUN, since the primary LUN appears "normal" to the host system, and any errors are reported only through the backup LUN.
    </p>
    <p num="96">In the event that I/O is attempted to a backup LUN without an active snapshot (an initiate snapshot command has not been issued), the LUN returns with a check condition status, and sense key of 0x02, not ready.</p>
    <p num="97">
      In the event that the LOG system drive overflows, the backup LUN returns a check condition status, and sense key of 0x09; vendor unique, and an additional sense code of 0xXX, Log Overflow.
      <br/>
      Subsequent accesses return a check condition status, and sense key of 0x02, not ready.
      <br/>
      Once a backup LUN overflows, the snapshot is terminated in the same way as issuing a terminate snapshot direct command.
    </p>
    <p num="98">
      While the present invention has been described with reference to a few specific embodiments, the description is illustrative of the invention and is not to be construed as limiting the invention.
      <br/>
      Various modifications may occur to those skilled in the art without departing from the true spirit and scope of the invention as defined by the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of performing a snapshot backup of a storage unit of a host system including at least one primary system drive, at least one log system drive and at least one backup logic unit while allowing normal read operations and write operations to occur, comprising:</claim-text>
      <claim-text>a) processing a write operation of new data submitted to a primary logic unit to be written to at least one sector of the primary system drive during the snapshot backup including:</claim-text>
      <claim-text>- i) reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; - ii) buffering the old data; - iii) overwriting the old data with the new data;</claim-text>
      <claim-text>and - iv) writing the old data to the log system drive if the write operation is a first write operation to the sector in the primary system drive for the snapshot backup: (b) processing a read operation submitted to the backup logic unit during the snapshot backup including: - i) accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data: - ii) accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of performing a snapshot backup of claim 1, further comprising the step of: flushing any data from an internal cache of the host system.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of performing a snapshot backup of claim 1, further comprising the step of: writing the old data to the log system drive after the overwriting of the old data with the new data has completed.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of performing a snapshot backup of claim 1 wherein: responding with an error code from the backup logic unit when the log drive becomes full and entering the backup logic unit into a drive not ready state.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of performing a snapshot backup of claim 1 wherein: accessing the backup logic unit from at least two controllers.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of performing a snapshot backup of claim 5 wherein: at least one of the two controllers is a RAID controller.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of performing a snapshot backup of claim 1 further comprising: preserving the snapshot backup through a second controller in the event a failure of a first controller occurs.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of performing a snapshot backup of claim 1 wherein: notifying a second controller through back-end SCSI channels when a first controller initiates a snapshot backup; initializing information regarding the log system drive by the second controller;</claim-text>
      <claim-text>and monitoring a normal write cache mirroring to maintain ongoing changes to the log system drive during the snapshot backup.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of performing a snapshot backup of claim 1 wherein: accessing the backup logic unit from at least one controller that is different than a controller accessing the primary logic unit.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of performing a snapshot backup of claim 1 wherein: structuring the primary system drive utilizing a RAID strategy.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of performing a snapshot backup of claim 1 wherein: utilizing the log system drive with more than one primary system drive and limiting the snapshot backup to a single primary system drive at any given time.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of performing a snapshot backup of claim 1 wherein: directing No an initializing of the snapshot backup to the primary logic unit coupled to the primary system drive.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of performing a snapshot backup of claim 1 wherein: directing a terminating of the snapshot backup to one of the primary logic unit coupled to the primary system drive and the backup logic unit.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A method of performing a snapshot backup of a storage unit of a host system including at least one controller, at least one primary system drive, a log system drive, at least one logic unit and a buffer while allowing normal read operations and write operations to occur comprising: a) initializing the snapshot backup; b) issuing a system drive copy command to the controller and copying the log system drive to at least one backup system drive; c) processing a read operation submitted to the logic unit coupled to the log system drive during the snapshot backup including: - i) accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data to a requester; - ii) accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data to the requester; d) processing a write operation of new data submitted to a primary logic unit to be written to a sector of the primary system drive during the snapshot backup including: - i) reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; - ii) buffering the old data in the buffer; - iii) overwriting the old data with the new data; - iv) writing the old data from the buffer to the log system drive if the write operation is a first write operation to the sector in the primary system drive for the snapshot backup;</claim-text>
      <claim-text>and e) terminating the snapshot backup.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of performing a snapshot backup of claim 14 wherein: designating the logic unit coupled to the backup drive system as a backup logic unit and responding with a busy status to the read operation or the write operation issued to the backup logic unit while the copying of the log system drive to the backup system drive is in progress.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of performing a snapshot backup of claim 14 wherein: the backup system drive is at least equal in size to the primary system drive.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of performing a snapshot backup of claim 14 wherein: configuring the log system drive and the backup system drive onto the same controller.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of performing a snapshot backup of claim 17 further comprising: monitoring the copying of the log system drive to the backup system drive through a system drive copy status command.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The method of performing a snapshot backup of claim 14 further comprising: monitoring changes to the sectors of the primary system drive following the termination of the snapshot backup and copying only those sectors that have changed since the termination of the snapshot into the backup system drive.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. A storage unit of a host system including at least one primary system drive, at least one log system drive and at least one backup logical unit adapted to create a snapshot backup comprising: a) means for initializing a snapshot backup coupled with a means for processing a read operation, and further coupled with a means for processing a write operation; b) the means for processing the read operation submitted to a backup logic unit during the snapshot backup including: - i) means for accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data; - ii) means for accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data;</claim-text>
      <claim-text>and c) the means for processing a write operation of new data submitted to a primary logic unit to be written to at least one sector of the primary system drive during the snapshot backup including: - i) means for reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; - ii) means for buffering the old data; - iii) means for overwriting the old data with the new data;</claim-text>
      <claim-text>and - iv) means for writing the old data to the log system drive if the write operation is a first write operation to the sector in the primary system drive for the snapshot backup.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The storage unit of a host system adapted to create a snapshot backup as claimed in claim 20, wherein: the means for processing the read operation comprising at least a controller;</claim-text>
      <claim-text>and the means for processing the write operation comprising at least the controller.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A storage unit of a host system adapted to create a snapshot backup, comprising: a) at least one controller which initializes and terminates the snapshot backup; b) at least one backup logic unit electronically coupled to a log system drive such that requested data is accessed from the log system drive if the requested data is available from the log system drive during a read operation and returned to a requester; c) the backup logic unit electronically coupled to at least one primary system drive such that the requested data is accessed from the primary system drive if the requested data is not available from the log system drive during the read operation and returned to the requester; d) at least one primary logic unit electronically coupled to the primary system drive such that new data submitted to the primary logic unit is written to a sector of the primary system drive; e) a buffer electronically coupled to the primary system drive such that old data that is to be overwritten by the new data submitted to the primary logic unit is buffered prior to being overwritten; f) the buffer further electronically coupled to the log system drive such that the old data is written to the log system drive if the new data written to the primary system drive is the first data to be written to the sector during the snapshot backup;</claim-text>
      <claim-text>and g) a backup system drive electronically coupled with the log system drive, and configured to store a copy of at least a portion of data stored within the log system drive.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. A computer program product for performing a snapshot backup of a storage unit of a host system including at least one primary system drive, at least one log system drive and at least one backup logic unit while allowing normal read operations and write operations to occur, the computer program product including a computer readable medium and a computer program mechanism stored thereon, the computer program mechanism comprising: a snapshot backup procedure configured to: - process a read operation submitted to the backup logic unit during the snapshot backup, including:</claim-text>
      <claim-text>-  accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data; -  accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data; - process a write operation of new data submitted to a primary logic unit to be written to the primary system drive during the snapshot backup including: -  reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; -  buffering the old data; -  overwriting the old data with the new data;</claim-text>
      <claim-text>and -  writing the old data to the log system drive if the write operation is a first write operation to a sector in the primary system drive for the snapshot backup.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A computer program product for performing a snapshot backup of a storage unit of a host system including at least one controller, at least one primary system drive, a log system drive, at least one logic unit and a buffer while allowing normal read operations and write operations to occur, the computer program product including a computer readable medium and a computer program mechanism stored thereon, the computer program mechanism comprising: a snapshot backup process configured to: - copy the log system drive to at least one backup system drive; - process a read operation submitted to the logic unit coupled to the log system drive during the snapshot backup including: -  accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data; -  accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data; - process a write operation of new data submitted to a primary logic unit to be written to at least one sector of the primary system drive during the snapshot backup including: -  reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; -  buffering the old data in the buffer; -  overwriting the old data with the new data;</claim-text>
      <claim-text>and -  writing the old data from the buffer to the log system drive if the write operation is a first write operation to the sector in the primary system drive for the snapshot backup.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. A snapshot backup system for use by a host computer, comprising: least one primary system drive where data is written and read during normal operation of the backup system; one or more primary logical units through which the primary system drive is accessed by the host, each of the primary logical units including a physical interface and a logical interface; at least one log system drive where data is written for backup purposes during backup operation of the backup system; one or more backup logical units through which the log system drive is accessed by the host, each of the backup logical units including a physical interface and a logical interface; wherein, during the backup operation: - the snapshot backup system is configured to respond to write requests targeting the primary system drive by: -  reading and buffering the data in at least one sector of the primary system drive that is to be overwritten by a write request; -  when the write request is the first request to write to the sector, writing the data to the log system drive;</claim-text>
      <claim-text>and -  completing the write request to the primary system drive;</claim-text>
      <claim-text>and - the snapshot backup system is configured to respond to read requests targeting the log system drive by: -  returning the data fulfilling a read request from the log system drive when possible;</claim-text>
      <claim-text>and -  otherwise returning the data to fulfill the read request from the primary system drive.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. A method of performing a snapshot backup of a storage unit of a host system including at least one primary system drive, at least one log system drive, at least one backup system drive, and at least one logic unit while allowing normal read operations and write operations to occur comprising: a) copying the log system drive to the backup system drive; b) processing a read operation submitted to the logic unit during the snapshot backup including: - i) accessing requested data of the read operation from the log system drive if the requested data is available from the log system drive and returning the requested data; - ii) accessing the requested data from the primary system drive if the requested data is not available from the log system drive and returning the requested data;</claim-text>
      <claim-text>and c) processing a write operation of new data submitted to a primary logic unit to be written to at least one sector of the primary system drive during the snapshot backup including: - i) reading old data on the primary system drive that is to be overwritten by the new data in response to the write operation; - ii) buffering the old data; - iii) overwriting the old data with the new data;</claim-text>
      <claim-text>and - iv) writing the old data to the log system drive if the write operation is a first write operation to the sector in the primary system drive for the snapshot backup.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The method of performing a snapshot backup as claimed in claim 26, wherein: preserving the snapshot backup through a second controller in the event a failure of a first controller occurs.</claim-text>
    </claim>
  </claims>
</questel-patent-document>