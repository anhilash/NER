<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06192488B1.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as first publication">
      <document-id>
        <country>US</country>
        <doc-number>06192488</doc-number>
        <kind>B1</kind>
        <date>20010220</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6192488</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B1</original-publication-kind>
    <application-reference is-representative="YES" family-id="21630668" extended-family-id="42111996">
      <document-id>
        <country>US</country>
        <doc-number>09145248</doc-number>
        <kind>A</kind>
        <date>19980902</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09145248</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43169618</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>TW</country>
        <doc-number>87111344</doc-number>
        <kind>A</kind>
        <date>19980713</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998TW-0111344</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010220</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  11/14        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>14</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714015000</text>
        <class>714</class>
        <subclass>015000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>714E11136</text>
        <class>714</class>
        <subclass>E11136</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>726013000</text>
        <class>726</class>
        <subclass>013000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-011/14A8F</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>011</main-group>
        <subgroup>14A8F</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/1435</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>1435</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>3</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>2</number-of-figures>
      <image-key data-format="questel">US6192488</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Restoring method for hard disk</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BEARDSLEY BRENT C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4916605</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4916605</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>MALCOLM PETER BRYAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5086502</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5086502</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>LIU FAAN-HOAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5446877</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5446877</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>KODAVALLA HANUMA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5717919</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5717919</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>BRADFORD TED KELLY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5956745</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5956745</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>OFEK YUVAL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6108748</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6108748</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Kawamoto, M, Restoring and updating records in disk cache system during disk drive idle time-restores record to disk drive from non-volatile memoryin response to receipt of start and end addresses of record from non-volatile memory, Derwent Week: 199714, Dec. 1996.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Kaise, Hiroshi, Data writing error preventing system to magnetic tape media, JPAB, JP363046660A, pp. 1 of 1, Feb. 1988.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant app-type="applicant" sequence="1">
          <addressbook lang="en">
            <name>LI CHUNG-PING</name>
          </addressbook>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Li, Chung-Ping</name>
            <address>
              <address-1>Taipei, TW</address-1>
              <city>Taipei</city>
              <country>TW</country>
            </address>
          </addressbook>
          <nationality>
            <country>TW</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Rosenberg, Klein &amp; Lee</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Iqbal, Nadeem</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Disclosed is a restoring method for hard disk comprising following steps: scanning the partition and file allocation table (FAT) of hard disk and recording above information in a plurality of flag regions on end portion of hard disk wherein each flag region contains flag for indicating the accessibility of sector in hard disk and pointer association to other flag; and replacing the INT 13 of BIOS with a modified MYINT 13 to handle the reading and writing operation of data; wherein the modified MYINT 13 can find a writable location by referring to the flag region and the privilege of user and invoke the original INT 13 to execute the real reading and writing operation.
      <br/>
      By above steps, the writing operation to a location containing data can be prevented, and the data accessed by other user in a multi-user mode can also be prevented.
      <br/>
      The data in hard disk can be restored by initializing the disk with the flag region located at end portion of the hard disk in case that the system is down or the partition of FAT of hard disk has been infringed.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">The present invention relates to a restoring method for hard disk, more particularly, to a real-time restoring method for hard disk.</p>
    <p num="2">
      The usage of computer is popular in modem life either for business or for household application However, the software becomes bulky and complicated such that the system is easy to breakdown for careless usage.
      <br/>
      Moreover, the risk of breakdown of hard disk is still high because there is still no perfect method for defense the attack of virus.
    </p>
    <p num="3">
      To minimize the cost of data lost, an approach is to use storage means to back-up the data, such as floppy disk, MO or CDROM.
      <br/>
      However, this approach becomes cumbersome as the size of data increases.
      <br/>
      Alternatively, hard disk protection means realized by hard ware solution has been proposed.
      <br/>
      However, the protection scheme is hard to update due to the hardware nature thereof.
    </p>
    <p num="4">It is an object of the present invention to provide a real-time restoring method for hard disk and execution of the inventive method will not occupy hard disk space, therefore the inventive method provide more convenient way to protect hard disk data for computer user, especially for novice user.</p>
    <p num="5">To accomplish the above object, the restoring method according to the present invention comprises following steps</p>
    <p num="6">
      (1) Scanning the partition and file allocation table (FAT) of hard disk and recording above information in a plurality of flag regions on end portion of hard disk wherein each flag region contains flag for indicating the accessibility of sector in hard disk and pointer association to other flag;
      <br/>
      (2) Replacing the INT 13 of BIOS with a modified MYINT 13 to handle the reading and writing operation of data; wherein the modified MYINT 13 can find a writable location by referring to the flag region and the privilege of user and invoke the original INT 13 to execute the real reading and writing operation.
      <br/>
      By above steps, the writing operation to a location containing data can be prevented, and the data accessed by other user in a multi-user mode can also be prevented.
      <br/>
      The data in hard disk can be restored by initializing the disk with the flag region located at end portion of the hard disk in case that the system is down or the partition of FAT of hard disk has been infringed.
    </p>
    <p num="7">
      The various objects and advantages of the present invention will be more readily understood from the following detailed description when read in conjunction with the appended drawing, in which:
      <br/>
      BRIEF DESCRIPTION OF DRAWING
      <br/>
      FIG. 1 Shows the flowchart of a preferred embodiment according to the invention method; and
      <br/>
      FIG. 2 Shows the steps of partition scanning process for the flowchart shown in FIG. 1
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="8">With reference to FIG. 1, the main flowchart of the inventive approach comprising following steps:</p>
    <p num="9">
      (1) Scanning the partition of hard disk and recording the information;
      <br/>
      (2) Setting up multi-boot procedure according to the boot driver of user
      <br/>
      (3) Calculating the amount of data required protection.
      <br/>
      (4) Determining the mode of operation
    </p>
    <p num="10">
      for manager mode, the hard disk can be accessed directly except for the boot sector
      <br/>
      for ordinary user mode, the ordinary-user procedure is invoked to protect the hard disk data.
    </p>
    <p num="11">
      FIG. 2 shows the steps of scanning partition of hard disk:
      <br/>
      1.
      <br/>
      Reading the location 0th cylinder, 0th header and fire sector of the boot sector (for sake of convenience, we will abbreviate the location mth cylinder nth header and pth sector as (m,n,p) in following description).
      <br/>
      2. Checking the primary partition
      <br/>
      3.
      <br/>
      Checking the extension partition
      <br/>
      4.
      <br/>
      Calculating the cylinder number of extension partition
      <br/>
      5.
      <br/>
      Reading extension partition;
      <br/>
      6.
      <br/>
      Repeating above procedures until no new partition can be found;
      <br/>
      7.
      <br/>
      Recording the total number of partition.
    </p>
    <p num="12">
      After finishing the recording of total number of partition, a partition flag 055AA55AAH can be set up as an indicator.
      <br/>
      When the system is restarted, the registered partition data can be used if the partition flag is not changed, or the above checking processed should be executed.
    </p>
    <p num="13">
      The flag region mentioned above locates at the end of the hard disk and the size thereof depends on the size of corresponding hard disk.
      <br/>
      The flag region is used to record the status of the hard disk after scanning.
      <br/>
      Each flag region contains 32 bit with higher 8 bit indicating the status of corresponding sector (1 indicating that the sector has been used; 0 indicating that the sector is free) and lower 24 bit as pointer pointing to other flag region.
    </p>
    <p num="14">
      The flag region contains following possibility.
      <br/>
      1. used by manager.
      <br/>
      2. used by other flag
      <br/>
      3. used by the present flag
      <br/>
      4. free to use
      <br/>
      5. pointing to other flag
    </p>
    <p num="15">The flag region can be employed to determined the right of accessing hard disk location according to the privilege of user</p>
    <p num="16">
      The above-mentioned ordinary-user procedure containing following steps:
      <br/>
      1 Calculating the location of accessing sector and the number thereof (Sector location is represented by logical number)
      <br/>
      2 Calculating the real location of the first sector to be accessed;
      <br/>
      3 Invoke the BIOS INT 13 to access the sector in the real location calculated by above steps.
      <br/>
      4 Repeating above steps 2, 3 until all the sectors have been accessed.
    </p>
    <p num="17">
      For example, if the user is to access the first three sector (0,0,1), (0,0,2), (0,0,3) beginning from the location (0,0,1), then the real locations determined by above second step are (5,3,2), (7,8,9) and (10,11,12).
      <br/>
      The data in those locations can be accessed by invoking BIOS INT 13 in above-mentioned third step.
    </p>
    <p num="18">
      More particularly, on the assumption that the number of sector to be accessed is denoted as Current Sector, the calculation of real location of a specific sector can be performed through following steps
      <br/>
      1.
      <br/>
      The real location is Current Sector+3+begin location of partition if Current Sector&lt;5
      <br/>
      2.
      <br/>
      The data in sector of Current Sector can only be read but not written if the number Current Sector exceeds a reserved region.
      <br/>
      3. The real location is Current Sector+begin location of partition if Current Sector is at the FAT or root of a partition
      <br/>
      4.
      <br/>
      The read operation is done by a DOREAD algorithm described below and the write operation is done by a DOWRITE algorithm described below if above conditions are not met.
      <br/>
      5. If the hard disk is full, the write operation will lead to a flag region showing error messages.
    </p>
    <p num="19">DOREAD Algorithm</p>
    <p num="20">
      Provided that the current sector is logsector, the corresponding flag region can be determined by logsector and the real location can accordingly be determined.
      <br/>
      The real location equal to logsector if the flag region is occupied by manager, other flag or is not used.
      <br/>
      If the flag region point to a new flag region, the real location is determined by the new flag region.
    </p>
    <p num="21">DOWRITE Algorithm</p>
    <p num="22">
      Provided that the current sector is logsector, the corresponding flag region can be determined by logsector and the real location can also be determined.
      <br/>
      (1) If the flag region is occupied by manager or other flag, then a new and empty flag region should be found; an error message is generated if no empty region can be found; the following steps are executed after new locations are found
      <br/>
      (a) changing the current flag such that the current flag points to a new flag responsible for really accessing operation.
      <br/>
      (b) Changing the status of current flag such that the location is dented information of occupation.
      <br/>
      (c) Calculating the real location by the new flag.
      <br/>
      (2) If the flag region shows the information of being free to use, then real location=logsector
      <br/>
      (3) If the flag region shows the information of being used by current flag, then real location=logsector
      <br/>
      (4) If the current flag is referred to a new flag, then the real location is calculated by the new flag
    </p>
    <p num="23">
      To sum up, the inventive method scan the hard disk and record the scanning information in a flag region.
      <br/>
      Moreover, the BIOS INT 13 is replaced by a new INT 13 (MYINT 13) which can find the real and accessible hard disk location with reference to the flag region and the privilege of user and invoke the BIOS INT 13 to execute the read/write operation.
      <br/>
      By this method, the over-writing of data can be prevented.
    </p>
    <p num="24">
      Although the present invention has been described with reference to the preferred embodiment thereof, it will be understood that the invention is not limited to the details thereof.
      <br/>
      Various substitutions and modifications have suggested in the foregoing description, and other will occur to those of ordinary skill in the art.
      <br/>
      Therefore, all such substitutions and modifications are intended to be embraced within the scope of the invention as defined in the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A restoring method for hard disk, comprising following steps:</claim-text>
      <claim-text>scanning the partition and file allocation table (FAT) of hard disk and recording above information in a plurality of flag regions on end portion of hard disk wherein each flag region contains flag for indicating the accessibility of said sector in hard disk and pointer associated to other flag; replacing the INT 13 of BIOS with a modified MYINT 13 to handle the reading and writing operation of data;</claim-text>
      <claim-text>wherein the modified MYINT 13 can find a writable location by referring to the information stored in the flag region and the privilege of user and invoke the original INT 13 to execute the reading and writing operation virtually; by above steps, the writing operation to a location containing data can be prevented, and the data accessed by other user in a multi-user mode can also be prevented.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method as in claim 1, wherein each said flag region contains 32 bit with higher 8 bit indicating the status of corresponding sector and lower 24 bit as pointer pointing to other flag region.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method as in claim 1, wherein said flag region contains following possibilities: a. used by manager; b. used by other flag; c. used by the present flag; d. free to use; e. pointing to other flag.</claim-text>
    </claim>
  </claims>
</questel-patent-document>