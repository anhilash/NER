<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185611B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185611</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185611</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="21935114" extended-family-id="1281087">
      <document-id>
        <country>US</country>
        <doc-number>09044931</doc-number>
        <kind>A</kind>
        <date>19980320</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09044931</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171980</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>4493198</doc-number>
        <kind>A</kind>
        <date>19980320</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09044931</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F   9/445       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>445</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F   9/46        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>46</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F   9/50        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>50</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06F  12/02        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>12</main-group>
        <subgroup>02</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>G06F  17/30        20060101A I20070721RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20070721</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>G06F  21/54        20130101A I20140531RMEP</text>
        <ipc-version-indicator>
          <date>20130101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>21</main-group>
        <subgroup>54</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20140531</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="7">
        <text>H04L  12/28        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>28</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="8">
        <text>H04L  12/417       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>417</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="9">
        <text>H04L  29/06        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="10">
        <text>H04L  29/08        20060101A I20070721RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>08</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20070721</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>709221000</text>
        <class>709</class>
        <subclass>221000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>709201000</text>
        <class>709</class>
        <subclass>201000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>709223000</text>
        <class>709</class>
        <subclass>223000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>709224000</text>
        <class>709</class>
        <subclass>224000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/16</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>16</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/465</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>465</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/505</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>505</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/5055</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>5055</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/52</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>52</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/542</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>542</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/547</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>547</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/548</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>548</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-012/0261</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>12</main-group>
        <subgroup>0261</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30607</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30607</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="11">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-021/54</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>21</main-group>
        <subgroup>54</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="12">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2209/462</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2209</main-group>
        <subgroup>462</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20140919</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="13">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2209/5015</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2209</main-group>
        <subgroup>5015</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141003</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="14">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2803</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2803</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="15">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2805</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2805</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="16">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2807</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2807</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="17">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2809</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2809</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="18">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/40032</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>40032</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="19">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/40169</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>40169</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="20">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/403</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>403</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="21">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/417</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>417</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="22">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/06</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="23">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/10</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="24">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/26</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>26</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="25">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/2804</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>2804</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="26">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/2842</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>2842</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="27">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/40</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>40</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="28">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/42</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>42</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="29">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/24</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>24</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="30">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/329</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>329</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>7</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>8</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6185611</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Dynamic lookup service in a distributed system</invention-title>
    <references-cited>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Birrell et al., Implementing Remote Procedure Calls, ACM Transactions on Computer Systems, vol. 2, No. 1, Feb. 1984, pp. 39-59.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sun Microsystem, Inc.</orgname>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUN MICROSYSTEMS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Waldo, James H.</name>
            <address>
              <address-1>Dracut, MA, US</address-1>
              <city>Dracut</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Wollrath, Ann M.</name>
            <address>
              <address-1>Groton, MA, US</address-1>
              <city>Groton</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Scheifler, Robert W.</name>
            <address>
              <address-1>Somerville, MA, US</address-1>
              <city>Somerville</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Arnold, Kenneth C. R. C.</name>
            <address>
              <address-1>Lexington, MA, US</address-1>
              <city>Lexington</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Finnegan, Henderson, Farabow, Garrett &amp; Dunner, L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Geckil, Mehmet B.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An improved lookup service is provided that allows for the dynamic addition and deletion of services.
      <br/>
      This lookup service allows for the addition and deletion of services automatically, without user intervention.
      <br/>
      As a result, clients of the lookup service may continue using the lookup service and its associated services while the updates occur.
      <br/>
      Additionally, the lookup service provides a notification mechanism that can be used by clients to receive a notification when the lookup service is updated.
      <br/>
      By receiving such a notification, clients can avoid attempting to access a service that is no longer available and can make use of new services as soon as they are added to the lookup service.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>RELATED APPLICATIONS</heading>
    <p num="1">The following identified U.S. patent applications are relied upon and are incorporated by reference in this application.</p>
    <p num="2">
      Provisional U.S. patent application Ser.
      <br/>
      No. 09/076,048, entitled "Distributed Computing System," filed on Feb. 26, 1998.
    </p>
    <p num="3">
      U.S. patent application Ser.
      <br/>
      No. 09/044,923, entitled "Method and System for Leasing Storage."
    </p>
    <p num="4">
      U.S. patent application Ser.
      <br/>
      No. 09/044,838, entitled "Method, Apparatus, and Product for Leasing of Delegation Certificates in a Distributed System."
    </p>
    <p num="5">
      U.S. patent application Ser.
      <br/>
      No. 09/044,834, entitled "Method, Apparatus and Product for Leasing of Group Membership in a Distributed System."
    </p>
    <p num="6">
      U.S. patent application Ser.
      <br/>
      No. 09/044,916, entitled "Leasing for Failure Detection," bearing attorney docket no. 06502.0011-04000, and filed on the same date herewith.
    </p>
    <p num="7">
      U.S. patent application Ser.
      <br/>
      No. 09/044,933, entitled "Method for Transporting Behavior in Event Based System."
    </p>
    <p num="8">
      U.S. patent application Ser.
      <br/>
      No. 09/044,919, entitled "Deferred Reconstruction of Objects and Remote Loading for Event Notification in a Distributed System."
    </p>
    <p num="9">
      U.S. patent application Ser.
      <br/>
      No. 09/044,938, entitled "Methods and Apparatus for Remote Method Invocation."
    </p>
    <p num="10">
      U.S. patent application Ser.
      <br/>
      No. 09/045,652, entitled "Method and System for Deterministiic Hashes to Identify Remote Methods."
    </p>
    <p num="11">
      U.S. patent application Ser.
      <br/>
      No. 09/044,790, entitled "Method and Apparatus for Determining Status of Remote Objects in a Distributed System."
    </p>
    <p num="12">
      U.S. patent application Ser.
      <br/>
      No. 09/044,930, entitled "Downloadable Smart Proxies for Performing Processing Associated with a Remote Procedure Call in a Distributed System."
    </p>
    <p num="13">
      U.S. patent application Ser.
      <br/>
      No. 09/044,917, entitled "Suspension and Continuation of Remote Methods."
    </p>
    <p num="14">
      U.S. patent application Ser.
      <br/>
      No. 09/044,835, entitled "Method and System for Multi-Entry and Multi-Template Matching in a Database."
    </p>
    <p num="15">
      U.S. patent application Ser.
      <br/>
      No. 09/044,839, entitled "Method and System for In-Place Modifications in a Database."
    </p>
    <p num="16">
      U.S. patent application Ser.
      <br/>
      No. 09/044,945, entitled "Method and System for Typesafe Attribute Matching in a Database."
    </p>
    <p num="17">
      U.S. patent application Ser.
      <br/>
      No. 09/044,939, entitled "Apparatus and Method for Providing Downloadable Code for Use in Communicating with a Device in a Distributed System."
    </p>
    <p num="18">
      U.S. patent application Ser.
      <br/>
      No. 09/044,826, entitled "Method and System for Facilitating Access to a Lookup Service."
    </p>
    <p num="19">
      U.S. patent application Ser.
      <br/>
      No. 09/044,932, entitled "Apparatus and Method for Dynamically Verifying Information in a Distributed System."
    </p>
    <p num="20">
      U.S. patent application Ser.
      <br/>
      No. 09/030,840, entitled "Method and Apparatus for Dynamic Distributed Computing Over a Network," and filed on Feb. 26, 1998.
    </p>
    <p num="21">
      U.S. patent application Ser.
      <br/>
      No. 09/044,936, entitled "An Interactive Design Tool for Persistent Shared Memory Spaces."
    </p>
    <p num="22">
      U.S. patent application Ser.
      <br/>
      No. 09/044,934, entitled "Polymorphic Token-Based Control."
    </p>
    <p num="23">
      U.S. patent application Ser.
      <br/>
      No. 09/044,915, entitled "Stack-Based Access Control."
    </p>
    <p num="24">
      U.S. patent application Ser.
      <br/>
      No. 09/044,944, entitled "Stack-Based Security Requirements."
    </p>
    <p num="25">
      U.S. patent application Ser.
      <br/>
      No. 09/044,837, entitled "Per-Method Designation of Security Requirements."
    </p>
    <heading>FIELD OF THE INVENTION</heading>
    <p num="26">The present invention relates generally to data processing systems and, more particularly, to a dynamic lookup service in a distributed system.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="27">
      A lookup service contains an indication of where network services are located within a distributed system comprised of multiple machines, such as computers and related peripheral devices, connected in a network (for example, a local area network, wide area network, or the Internet).
      <br/>
      A "network service" refers to a resource, data, or functionality that is accessible on the network.
      <br/>
      Typically, for each service, the lookup service contains an address used by a client (e.g., a program) to access the service (e.g., a printer).
    </p>
    <p num="28">
      Conventional lookup services are static: whenever updates to the lookup service are needed to either add a new service or delete an existing service, the lookup service is taken offline, rendering the lookup service inaccessible, and then, the lookup service is manually updated by the system administrator.
      <br/>
      During the time when the lookup service is offline, clients in the distributed system are unable to access the lookup service and any of its network services.
    </p>
    <p num="29">
      Another limitation of conventional lookup services is that, when updated, clients are not made aware of the updates to the lookup service until they explicitly perform a refresh operation, which downloads the latest service information to the clients.
      <br/>
      Before such a refresh, however, if a client requests a service that is no longer available, an error occurs which may cause the client to hang.
      <br/>
      Also, before a refresh, the client is not aware of any new services that have been recently added to the lookup service.
      <br/>
      It is therefore desirable to improve lookup services for distributed systems.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="30">
      Systems consistent with the present invention provide an improved lookup service that allows for the dynamic addition and deletion of services.
      <br/>
      This lookup service allows for the update, i.e., addition and deletion of available services automatically, without user intervention.
      <br/>
      As a result, clients of the lookup service may continue using the lookup service and its associated services while the updates occur.
      <br/>
      Additionally, the lookup service provides a notification mechanism that can be used by clients to receive a notification when the lookup service is updated.
      <br/>
      By receiving such a notification, clients can avoid attempting to access a service that is no longer available and can make use of new services as soon as they are added to the lookup service.
    </p>
    <p num="31">
      In accordance with methods consistent with the present invention, a method is provided in a data processing system having a lookup service with associated services.
      <br/>
      This method receives a request by the lookup service for notification when the lookup service is updated, determines when the lookup service is updated, and generates a notification when it is determined that the lookup service is updated.
    </p>
    <p num="32">
      In accordance with methods consistent with the present invention, a method is provided in a data processing system having a lookup service with associated services.
      <br/>
      This method sends a request to the lookup service to be notified when the lookup service is updated and receives an indication that the lookup service has been updated.
    </p>
    <p num="33">
      In accordance with systems consistent with the present invention, a data processing system comprising a memory and a processor is provided.
      <br/>
      The memory includes a lookup service containing indications of services that are available for use, a first client for updating the lookup service, and a second client for utilizing the lookup service while the first client is updating the lookup service.
      <br/>
      The processor runs the lookup service, the first client, and the second client.
    </p>
    <p num="34">
      In accordance with systems consistent with the present invention, a data processing system containing a memory and a processor is provided.
      <br/>
      The memory contains a lookup service with indications of services available for use and a client.
      <br/>
      The lookup service receives requests for notification of when the lookup service is updated, determines when the lookup service is updated, and generates notifications when the lookup service is updated.
      <br/>
      The client sends a request to the lookup service to be notified when the lookup service is updated.
      <br/>
      The processor runs the client and the lookup service.
    </p>
    <p num="35">
      In accordance with systems consistent with the present invention, a computer-readable memory device containing a data structure is provided.
      <br/>
      This data structure is for accessing a lookup service with associated network services available for use.
      <br/>
      The data structure contains a notify method for use by a client to register with the lookup service to receive a notification from the lookup service when the lookup service is updated.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="36">
      The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate an implementation of the invention and, together with the description, serve to explain the advantages and principles of the invention. In the drawings,
      <br/>
      FIG. 1 depicts a distributed system suitable for practicing methods and systems consistent with the present invention;
      <br/>
      FIG. 2 depicts a more detailed block diagram of a computer depicted in FIG. 1;
      <br/>
      FIGS. 3A and 3B depict a flow chart of the steps performed when a client utilizes the lookup service depicted in FIG. 1;
      <br/>
      FIG. 4 depicts a flow chart of the steps performed by the lookup service of FIG. 1 when performing event-related processing;
      <br/>
      FIG. 5 depicts a conference room containing a number of devices consistent with the present invention;
      <br/>
      FIG. 6 depicts a screen displaying icons representing services available in the conference room of FIG. 5; and
      <br/>
      FIG. 7 depicts a screen displaying the available services provided by a computer in the conference room of FIG. 5.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="37">
      Methods and systems consistent with the present invention provide an improved lookup service that allows for the dynamic addition and deletion of services.
      <br/>
      As such, the addition and deletion of services is performed automatically, without user intervention, and clients of the lookup service may continue using the services while the updates to the lookup service occur.
      <br/>
      Additionally, clients may register with the lookup service to receive notification of when the lookup service is updated.
      <br/>
      As a result, when an update occurs, all registered clients receive a notification of the update, enabling the clients to avoid attempting to access a service that is no longer available and to use a service recently added to the lookup service.
    </p>
    <p num="38">Overview of the Distributed System</p>
    <p num="39">
      Methods and systems consistent with the present invention operate in a distributed system ("the exemplary distributed system") with various components, including both hardware and software.
      <br/>
      The exemplary distributed system (1) allows users of the system to share services and resources over a network of many devices; (2) provides programmers with tools and programming patterns that allow development of robust, secured distributed systems; and (3) simplifies the task of administering the distributed system.
      <br/>
      To accomplish these goals, the exemplary distributed system utilizes the Java (tm)  programming environment to allow both code and data to be moved from device to device in a seamless manner.
      <br/>
      Accordingly, the exemplary distributed system is layered on top of the Java programming environment and exploits the characteristics of this environment, including the security offered by it and the strong typing provided by it.
      <br/>
      The Java programming environment is more clearly described in Jaworski, Java 1.1 Developer's Guide, Sams.net (1997), which is incorporated herein by reference.
    </p>
    <p num="40">
      In the exemplary distributed system, different computers and devices are federated into what appears to the user to be a single system.
      <br/>
      By appearing as a single system, the exemplary distributed system without giving up the flexibility and personalized response of a personal computer or workstation.
      <br/>
      The exemplary distributed system may contain thousands of devices operated by users who are geographically disperse, but who agree on basic notions of trust, administration, and policy.
    </p>
    <p num="41">
      Within the exemplary distributed system are various logical groupings of services provided by one or more devices, and each such logical grouping is known as a Djinn.
      <br/>
      A "service" refers to a resource, data, or functionality that can be accessed by a user, program, device, or another service and that can be computational, storage related, communication related, or related to providing access to another user.
      <br/>
      Examples of services provided as part of a Djinn include devices, such as printers, displays, and disks; software, such as applications or utilities; information, such as databases and files; and users of the system.
    </p>
    <p num="42">
      Both users and devices may join a Djinn.
      <br/>
      When joining a Djinn, the user or device adds zero or more services to the Djinn and may access, subject to security constraints, any one of the services it contains.
      <br/>
      Thus, devices and users federate into a Djinn to share access to its services.
      <br/>
      The services of the Djinn appear programmatically as objects of the Java programming environment, which may include other objects, software components written in different programming languages, or hardware devices.
      <br/>
      A service has an interface defining the operations that can be requested of that service, and the type of the service determines the interfaces that make up that service.
    </p>
    <p num="43">
      FIG. 1 depicts the exemplary distributed system 100 containing a computer 102, a computer 104, and a device 106 interconnected by a network 108.
      <br/>
      The device 106 may be any of a number of devices, such as a printer, fax machine, storage device, input device, computer, or other devices.
      <br/>
      The network 108 may be a local area network, wide area network, or the Internet.
      <br/>
      Although only two computers and one device are depicted as comprising the exemplary distributed system 100, one skilled in the art will appreciate that the exemplary distributed system 100 may include additional computers or devices.
    </p>
    <p num="44">
      FIG. 2 depicts the computer 102 in greater detail to show a number of the software components of the exemplary distributed system 100.
      <br/>
      One skilled in the art will appreciate that computer 104 or device 106 may be similarly configured.
      <br/>
      Computer 102 includes a memory 202, a secondary storage device 204, a central processing unit (CPU) 206, an input device 208, and a video display 210.
      <br/>
      The memory 202 includes a lookup service 212, a discovery server 214, and a Java (tm)  runtime system 216.
      <br/>
      The Java runtime system 216 includes the Java (tm)  remote method invocation system (RMI) 218 and a Java (tm)  virtual machine 220.
      <br/>
      The secondary storage device 204 includes a Java (tm)  space 222.
    </p>
    <p num="45">
      As mentioned above, the exemplary distributed system 100 is based on the Java programming environment and thus makes use of the Java runtime system 216.
      <br/>
      The Java runtime system 216 includes the Java (tm)  Application Programming Interface (API), allowing programs running on top of the Java runtime system to access, in a platform-independent manner, various system functions, including windowing capabilities and networking capabilities of the host operating system.
      <br/>
      Since the Java API provides a single common API across all operating systems to which the Java runtime system 216 is ported, the programs running on top of a Java runtime system run in a platform-independent manner, regardless of the operating system or hardware configuration of the host platform.
      <br/>
      The Java runtime system 216 is provided as part of the Java (tm)  software development kit available from Sun Microsystems of Mountain View, Calif.
    </p>
    <p num="46">
      The Java virtual machine 220 also facilitates platform independence.
      <br/>
      The Java virtual machine 220 acts like an abstract computing machine, receiving instructions from programs in the form of byte codes and interpreting these byte codes by dynamically converting them into a form for execution, such as object code, and executing them.
      <br/>
      RMI 218 facilitates remote method invocation by allowing objects executing on one computer or device to invoke methods of an object on another computer or device.
      <br/>
      Both RMI and the Java virtual machine are also provided as part of the Java software development kit.
    </p>
    <p num="47">
      The lookup service 212 defines the services that are available for a particular Djinn.
      <br/>
      That is, there may be more than one Djinn and, consequently, more than one lookup service within the exemplary distributed system 100.
      <br/>
      The lookup service 212 contains one object for each service within the Djinn, and each object contains various methods that facilitate access to the corresponding service.
      <br/>
      The lookup service 212 and its access are described in greater detail in co-pending U.S. patent application Ser.
      <br/>
      No. 09/044,826, entitled "Method and System for Facilitating Access to a Lookup Service," which has previously been incorporated by reference.
    </p>
    <p num="48">
      The discovery server 214 detects when a new device is added to the exemplary distributed system 100, during a process known as boot and join or discovery, and when such a new device is detected, the discovery server passes a reference to the lookup service 212 to the new device, so that the new device may register its services with the lookup service and become a member of the Djinn.
      <br/>
      After registration, the new device becomes a member of the Djinn, and as a result, it may access all the services contained in the lookup service 212 and its registered services may be accessed by other members of the Djinn.
      <br/>
      The process of boot and join is described in greater detail in co-pending U.S. patent application Ser.
      <br/>
      No. 09/044,939, entitled "Apparatus and Method for providing Downloadable Code for Use in Communicating with a Device in a Distributed System," which has previously been incorporated by reference.
    </p>
    <p num="49">
      The Java space 222 is an object repository used by programs within the exemplary distributed system 100 to store objects.
      <br/>
      Programs use the Java space 222 to store objects persistently as well as to make them accessible to other devices within the exemplary distributed system.
      <br/>
      Java spaces are described in greater detail in co-pending U.S. patent application Ser.
      <br/>
      No. 08/971,529, entitled "Database System Employing Polymorphic Entry and Entry Matching," assigned to a common assignee, filed on Nov. 17, 1997, which is incorporated herein by reference.
      <br/>
      One skilled in the art will appreciate that the exemplary distributed system 100 may contain many lookup services, discovery servers, and Java spaces.
    </p>
    <p num="50">
      Although systems and methods consistent with the present invention are described as operating in the exemplary distributed system and the Java programming environment, one skilled in the art will appreciate that the present invention can be practiced in other systems and other programming environments.
      <br/>
      Additionally, although aspects of the present invention are described as being stored in memory, one skilled in the art will appreciate that these aspects can also be stored on or read from other types of computer-readable media, such as secondary storage devices, like hard disks, floppy disks, or CD-ROM; a carrier wave from the Internet; or other forms of RAM or ROM.
      <br/>
      Sun, Sun Microsystems, the Sun Logo, Java, and Java-based trademarks are trademarks or registered trademarks of Sun Microsystems Inc. in the United States and other countries
    </p>
    <p num="51">The Lookup Service Definition</p>
    <p num="52">
      A lookup service provides a central registry of services available within a Djinn.
      <br/>
      This lookup service is the primary mechanism for programs to find services within the Djinn and is the foundation for providing user interfaces through which users and administrators can discover and interact with services of the Djinn.
    </p>
    <p num="53">
      The lookup service maintains a flat collection of service items.
      <br/>
      The collection is flat in that the service items do not form a hierarchy.
      <br/>
      Each service item represents an instance of a service available within the Djinn.
      <br/>
      The service item contains a stub (if the service is implemented as a remote object) or a serialized object (if the service is a local object stored in the lookup service) that programs use to access the service, and an extensible collection of attributes that describe the service or provide secondary interfaces to the service.
      <br/>
      A "stub" is code and data that facilitates access to a remote function, and a "serialized object" is an object placed in a serialized form.
    </p>
    <p num="54">
      Although the collection of service items is flat, a wide variety of hierarchical views can be imposed on the collection by aggregating items according to service types and attributes.
      <br/>
      The lookup service provides a set of methods to enable users and administrators to browse the collection and build a variety of user interfaces.
      <br/>
      Once an appropriate service is found, the user can interact with the service by loading a user interface applet, attached as another attribute on the item.
    </p>
    <p num="55">
      When a new service is created (e.g., when a new device is added to a Djinn), the service registers itself with the lookup service, providing an initial collection of attributes.
      <br/>
      For example, a printer may include attributes indicating speed (in pages per minute), resolution (in dots per inch), and whether duplex printing is supported.
      <br/>
      The attributes also contain an indicator that the service is new and needs to be configured.
      <br/>
      To configure a new service, the administrator locates an attribute that provides an applet for this purpose, and during configuration, the administrator may add new attributes, such as the physical location of the service and a common name for it.
    </p>
    <p num="56">
      The lookup service provides an event mechanism that generates notifications as new services are registered, existing services are deleted, or attributes of a service are modified.
      <br/>
      To use the event mechanism, a client registers to be notified upon the occurrence of a particular event, and when the event occurs, the lookup service notifies the client.
      <br/>
      The lookup service itself also uses the event mechanism to receive notifications when attributes are added, so that it can re-register with them in the future.
    </p>
    <p num="57">
      Programs (including other services) that need a particular type of service can use the lookup service to find an instance of the service.
      <br/>
      A match may be made based on the specific Java (tm)  programming language types implemented by the service as well as the specific attributes attached to the service.
    </p>
    <p num="58">
      If a service encounters a problem that needs administrative attention, like a printer running out of toner, the service can add an attribute that indicates the problem.
      <br/>
      Administrators (or programs) can then use the event mechanism to receive notification of such problems.
    </p>
    <p num="59">
      The attributes of a service item are represented as a set of attribute sets.
      <br/>
      An individual set of attributes may be represented as an instance of a cross in the Java programming language, each attribute being a public field of that class.
      <br/>
      The class provides strong typing of both the set and the individual attributes.
      <br/>
      A service item can contain multiple instances of the same class with different attribute values as well as multiple instances of different classes.
      <br/>
      For example, an item may have multiple instances of a Name class, each giving the common name of the service in a different language, plus an instance of a Location class, an Owner class, and various service-specific classes.
    </p>
    <p num="60">Service Items are stored in the lookup service as instances of the ServiceItem class, as described below:</p>
    <p num="61">public class Service Item +public static final long ASSIGN_SERVICE_ID=0;</p>
    <p num="62">public long serviceID;</p>
    <p num="63">public Object service;</p>
    <p num="64">public Entry �� attributeSets;</p>
    <p num="65">}</p>
    <p num="66">
      The "serviceID" element is a numerical identifier of the service.
      <br/>
      The "service" element is an object representing the service or a stub facilitating access to the service, and the "attributeSets" element contains the array of attributes for the service.
    </p>
    <p num="67">Items in the lookup service are matched using instances of the ServiceTemplate class, which is defined below:</p>
    <p num="68">public class Service Template +public static final long ANY_SERVICE_ID=0;</p>
    <p num="69">public long serviceID;</p>
    <p num="70">public Class�� serviceTypes;</p>
    <p num="71">public Entry�� attributeSetTemplates;</p>
    <p num="72">}</p>
    <p num="73">
      The "serviceTypes" element defines the types of the service.
      <br/>
      An item (item) matches a service template (tmp1) if item.serviceID equals tmp1.serviceID (or if tmp1.servicelD is zero) and item.service is an instance of every type in tmp1.serviceTypes, and item.attributeSets contains at least one matching entry for each entry template in tmp1.attributeSetTemplates.
      <br/>
      Entry matching uses the following rule: an entry matches an entry template if the class of the entry is the same as, or a superclass of, the class of the template and every non-null field in the template equals the corresponding field of the entry.
      <br/>
      Every entry can be used to match more than one template.
      <br/>
      Both serviceTypes and attributeSetTemplates can be null in a service template.
      <br/>
      The ServiceMatches class is used for the return value when looking up multiple items.
      <br/>
      The definition of this class follows:
    </p>
    <p num="74">public class ServiceMatches +public Serviceltem�� items;</p>
    <p num="75">public int totalMatches;</p>
    <p num="76">}</p>
    <p num="77">
      The interface to the lookup service is defined by a ServiceRegistrar interface data structure.
      <br/>
      This interface is not a remote interface.
      <br/>
      Instead, each implementation of the lookup service exports proxy objects that implement the ServiceRegistrar interface local to the client, using an implementation-specific protocol to communicate with the actual remote server. "Proxy objects" refer to objects that run in the client's address space and that facilitate access to the lookup service.
      <br/>
      Methods are provided to register service items, find items that match a template, modify attributes of existing items, receive notifications when items are modified, and incrementally explore the collection of items along the three major axes: entry class, attribute value, and service type.
      <br/>
      The definition of the interface follows:
    </p>
    <p num="78">public interface ServiceRegistrar +long REGISTRAR_SERVICE_ID=1;</p>
    <p num="79">ServiceLease register (Service Item item, long lease expiration) throws RemoteException;</p>
    <p num="80">Object lookup (ServiceTemplate tmp1) throws RemoteException</p>
    <p num="81">ServiceMatches lookup(ServiceTemplate tmp1, int maxMatches) throws RemoteException;</p>
    <p num="82">int addAttributes (ServiceTemplate tmp1, Entry �� attrSets) throws RemoteException;</p>
    <p num="83">int modifyAttributes(ServiceTemplate tmp1, Entry �� attrSets) throws RemoteException;</p>
    <p num="84">int TRANSITION_MATCH_NOMATCH=1;</p>
    <p num="85">int TRANSITION_NOMATCH_MATCH=2;</p>
    <p num="86">int TRANSITION_MATCH_MATCH=3;</p>
    <p num="87">EventRegID notify (Service Template tmp1, int transition, RemoteEventListener listener, MarshalledObject handback, long leaseExpiration) throws RemoteException;</p>
    <p num="88">Class �� getEntryClasses (ServiceTemplate tmp1) throws RemoteException;</p>
    <p num="89">Object �� getFieldValues (ServiceTemplate tmp1), int setlndex, String field) throws NoSuchFieldException, RemoteException;</p>
    <p num="90">Class �� getServiceTypes (Service Template tmp1, String packagePrefix throws RemoteException</p>
    <p num="91">
      This interface includes various methods, including the register method, the lookup method (single parameter form), the lookup method (two parameter form), the addAttributes method, the modifyAttributes method, the modify method, the getEntryClass method, the getFieldValues method, and the getServiceTypes method.
      <br/>
      The "register" method is used to register a new service and to re-register an existing service.
      <br/>
      This method is defined so that it can be used in an idempotent fashion.
      <br/>
      Specifically, if a call results in generation of an exception (in which case the item might or might not have been registered), the caller can simply repeat the call with the same parameters.
    </p>
    <p num="92">
      To register a new service using the register method, item.ServiceID should be zero; if item.ServicelD does not equal any existing item's service object, then a new unique service id will be assigned and returned.
      <br/>
      The service id is unique over time with respect to this lookup service.
      <br/>
      If item.ServiceID does equal an existing item's service object, the existing item is deleted from the lookup service (even if it has different attributes), but that item's service id is reused for the newly registered item.
    </p>
    <p num="93">
      To re-register an existing service using the register method, item.ServiceID should be set to the same unique service id that was returned by the initial registration.
      <br/>
      If an item is already registered under the same service id, the existing item is deleted (even if it has different attributes, or a different service instance).
      <br/>
      Note that service object equality is not checked in this case to allow for reasonable evolution of the service (e.g., the serialized form of the stub changes, or the services implements a new interface).
    </p>
    <p num="94">
      When an item is registered, duplicate attribute sets are eliminated in the stored representation of the item.
      <br/>
      Additionally, the registration is persistent across restarts of the lookup service.
    </p>
    <p num="95">
      The single-parameter form of the "lookup" method returns the service object (i.e., Serviceltem.service) from an item matching the template, or null if there is no match.
      <br/>
      If multiple items match the template, it is arbitrary as to which service object is returned.
      <br/>
      If the returned object cannot be deserialized, an exception is generated.
    </p>
    <p num="96">
      The two-parameter form of the "lookup" method returns at most maxMatches items matching the template, plus the total number of items that match the template.
      <br/>
      The return value is never null, and the returned items array is only null if maxMatches is zero.
      <br/>
      For each returned item, if the service object cannot be deserialized, the service field of the item is set to null and no exception is generated.
      <br/>
      Similarly, if an attribute set cannot be deserialized, that element of the attributeSets array is set to null and no exception is generated.
    </p>
    <p num="97">
      The "addAttributes" method adds the specified attribute sets (those that aren't duplicates of existing attribute sets) to all items matching the template.
      <br/>
      The number of items that were matched is returned.
      <br/>
      Note that this operation has no effect on existing attribute sets of the matching items, and the operation can be repeated in an idempotent manner.
    </p>
    <p num="98">
      The "modifyAttributes" method is used to modify existing attribute sets.
      <br/>
      The lengths of tmp1.attributeSetTemplates and attrSets must be equal or an exception is generated.
      <br/>
      For each item that matches the template, the item's attribute sets are modified as follows.
      <br/>
      For each array index I: if attrSets�i� is null, then every entry that matches tmp1.attributeSetTemplates�i� is deleted, otherwise, for every non-null field in attrSets �I�, the value of that field is stored into the corresponding field of every entry that matches tmp1.attributeSettemplates�i�. The class of attrSets�i� must be the same as, or a superclass of, the class of tmp1.attributeSetTemplates �I�, or an exception is generated.
      <br/>
      If the modification results in duplicate entries within an item, the duplicates are eliminated.
      <br/>
      The number of items that were matched is returned.
    </p>
    <p num="99">
      The "notify" method is used to register for event notification.
      <br/>
      The registration is leased, and the lease expiration request is exact.
      <br/>
      The concept of a lease is described in greater detail in U.S. patent application Ser.
      <br/>
      No. 09/044,923, entitled "Method and System for Leasing Storage," which has previously been incorporated by reference.
      <br/>
      The registration is persistent across restarts of the lookup service until the lease expires or is canceled.
      <br/>
      The event id in the returned EventRegId is unique at least with respect to all other active event registrations at this lookup service with different service templates of transitions.
    </p>
    <p num="100">
      While the event registration is in effect, a notification containing an indication of the event is sent to the specified listener whenever a register, lease cancellation or expiration, addAttributes, or modifyAttributes operation results in a service item changing state in a way that satisfied the template and transition combination.
      <br/>
      A list of the transitions follows, although other transitions may also be implemented within the scope of the present invention:
    </p>
    <p num="101">TRANSITION_MATCH_NOMATCH: an event is sent when the changed item matches the template before the operation, but doesn't match the template after the operation (this includes deletion of the item).</p>
    <p num="102">TRANSITION_NOMATCH_MATCH: an event is sent when the changed item doesn't match the template before the operation, (this includes not existing), but does match the template after the operation.</p>
    <p num="103">TRANSITION_MATCH_MATCH: an event is sent when the changed item matches the template both before and after the operation.</p>
    <p num="104">
      The "getEntryClasses" method looks at all items that match the specified template, finds every entry among those items that either doesn't match any entry templates or is a subclass of at least one match entry template, and returns the set of the (most specific) classes of those entries.
      <br/>
      Duplicate classes are eliminated, and the order of classes within the returned array is arbitrary.
      <br/>
      Null (not a empty array) is returned if there are no such entries or no matching items.
      <br/>
      If a returned class cannot be deserialized, that element of the returned array is set to null and no exception is thrown.
    </p>
    <p num="105">
      The "getFieldValue" method identifies all items that match the specified template.
      <br/>
      This method returns the values of the items that match the specified template.
    </p>
    <p num="106">
      The "getServiceTypes" method looks at all items that match the specified template, and for every service object, this method finds every type (class or interface) of which the service object is an instance that is neither equal to, nor a superclass of, any of the service types in the template, and returns the set of all such types that start with the specified package prefix.
      <br/>
      Duplicate types are eliminated, and the order of types within the returned array is arbitrary.
      <br/>
      Null (not an empty array) is returned if there are no such types.
      <br/>
      If a returned type cannot be deserialized, that element of the returned array is set to null and no exception is thrown.
    </p>
    <p num="107">The Lookup Service Processing</p>
    <p num="108">
      FIGS. 3A and 3B depict a flowchart of the steps performed when a client, a program running on a particular device, makes use of the lookup service 212.
      <br/>
      Initially, the device on which the client runs is connected to the Jini distributed system (step 302).
      <br/>
      Next, the client sends a multi-cast packet containing code for communication with the client (step 304).
      <br/>
      In this step, the client is performing the discovery protocol as described in further detail in co-pending U.S. patent application Ser.
      <br/>
      No. 09/044,939, entitled "Apparatus and Method for Providing Downloadable Code for Use in Communication With a Device in a Distributed System," which has previously been incorporated by reference.
    </p>
    <p num="109">
      After the client sends the multi-cast packet, the discovery server 214 receives the packet and uses the code contained in the packet to send a reference to the lookup service to the client (step 306).
      <br/>
      After the client receives the reference to the lookup service, the client is able to utilize the interface of the lookup service to either add a service, delete a service, access a service, or request notification when the lookup service is updated, as reflected by steps 308-326.
    </p>
    <p num="110">
      At some point during the processing of the client, it may decide to add a service to the lookup service (step 308).
      <br/>
      If it decides to add a service, the client adds a service to the lookup service by invoking the register method, which sends to the lookup service either an object representing the service or a stub containing code and data to facilitate access to the service (step 310).
      <br/>
      The addition of the stub to the lookup service is described in greater detail in co-pending U.S. patent application Ser.
      <br/>
      No. 09/044,826, "entitled Method and System for Facilitating Access to a Lookup Service," which has previously been incorporated by reference.
    </p>
    <p num="111">
      Next, the client may decide to delete one of its services from the lookup service (step 312).
      <br/>
      If a client decides to do so, the client deletes the service from the lookup service by invoking the register method on the interface of the lookup service to delete the entry for the particular service and delete the stub code associated with it (step 314).
      <br/>
      It should be noted that both the addition of a service and the deletion of a service are done dynamically and in a manner that does not prohibit other clients from using the lookup service while the update occurs.
    </p>
    <p num="112">
      At some point later in the processing of the client, the client may decide to access a service provided by the lookup service (step 316).
      <br/>
      If a client decides to access a service provided by the lookup service, the client accesses the service by invoking the lookup method, which retrieves from the lookup service either the object or the stub information for the service, and the client then either invokes methods on the object to use the service or uses the stub information to access the service (step 318).
      <br/>
      The step is described in greater detail in co-pending U.S. patent application Ser.
      <br/>
      No. 09/044,826, entitled "Method and System for Facilitating Access to a Lookup Service," which has previously been incorporated by reference.
    </p>
    <p num="113">
      The client may also request to be notified when an update occurs to the lookup service (step 320 in FIG. 3B).
      <br/>
      If a client wishes to be notified, the client invokes the notify method on the lookup service interface to register a callback routine with the lookup service (step 322).
      <br/>
      A "callback routine" is a function that is invoked when the lookup service is updated.
      <br/>
      Additionally, the notify method allows the client to register an object that will be passed back, via RMI, as a parameter to the callback function.
    </p>
    <p num="114">
      Next, if an event has occurred for which the client wants to be notified (step 324), the registered callback routine is invoked by the lookup service (step 326).
      <br/>
      In this step, the client is notified of the occurrence of the event and can take appropriate action.
      <br/>
      For example, if a service that the client was currently using has become unavailable, the client may store information so that it no longer uses it.
    </p>
    <p num="115">
      FIG. 4 depicts a flow chart of the steps performed by the lookup service when performing event-related processing.
      <br/>
      Initially, the lookup service receives registrations from a number of clients interested in receiving notifications when particular events occur (step 402).
      <br/>
      In this step, the lookup service receives the registrations via invocation of the notification method on the lookup service interface and stores into a table, known as the event table, all of the associated information, such as an indication of the client to be notified, a reference to the callback routine, an object to be passed as a parameter to the callback routine, and an indication of the event in which the client is interested.
      <br/>
      It should be noted that a client may register to be notified upon the occurrence of an event, or the client may register for a third party to be notified.
      <br/>
      After receiving the registrations, the lookup service determines whether an event occurred such that at least one client has registered an interest in the event (step 404).
      <br/>
      The lookup service makes this determination by identifying when, for example, a new service has been added to the lookup service, an existing service has been deleted from the lookup service, or the attributes of a service have been modified.
      <br/>
      If such an event has not occurred, the event notification process of the lookup service remains in a wait state.
    </p>
    <p num="116">
      However, if an event has occurred, the lookup service determines all clients registered for notification for this event (step 406).
      <br/>
      The lookup service makes this determination by accessing the event table.
      <br/>
      Next, the lookup service invokes the callback routines registered for each client identified in step 406 (step 408).
      <br/>
      In this step, the event table contains a reference to the callback routine registered by each client, and the lookup service invokes each callback routine, passing the registered objects as parameters, to notify the clients of the occurrence of the event.
    </p>
    <p num="117">The Conference Room Example</p>
    <p num="118">
      Described below is an example use of the lookup service 212 with respect to a conference room 500 as depicted in FIG. 5.
      <br/>
      The conference room 500 contains a printer 502, a fax machine 504, a computer 506, a projection screen 508, and a storage device 510, all interconnected by a network 512.
      <br/>
      The computer 506 contains a lookup service 518 that defines all services made available by the conference room Djinn.
      <br/>
      In this example, the user enters the conference room 500 with laptop 514.
      <br/>
      Such a situation occurs when a user with a laptop enters the conference room 500 for a meeting.
      <br/>
      If the user wishes to make use of the services provided by various devices in the conference room 500, the user must join the Djinn of the conference room.
      <br/>
      In order to do so, the user connects the laptop to the network 512 and runs a program, client 516, to perform the boot and join (or discovery) process, as described above.
      <br/>
      After the completion of the boot and join process, the client 516 (e.g., a browser) receives a reference to the lookup service 518 defining the services provided by the conference room Djinn.
      <br/>
      Using this reference, the client 516 downloads an applet from the lookup service 518 that displays a screen 600, as shown in FIG. 6.
    </p>
    <p num="119">
      FIG. 6 depicts screen 600 displaying the available services of the lookup service 518 represented as various icons, including a printer 602, a fax 604, a file system 606, and a projection screen 608.
      <br/>
      The screen 600 also displays an add service button 610.
      <br/>
      When the printer icon 602 is selected, the stub code (i.e., service item) for the printer is downloaded to the client so that the client may make use of the printer.
      <br/>
      Similarly, selection of the fax icon 604, the file system icon 606, or the projection screen icon 608 downloads the appropriate stub information so that the client can use those services.
      <br/>
      The file system icon 606 represents the file system of the computer 506.
    </p>
    <p num="120">
      The user, however, may want to add a service and thus selects the add service button 610.
      <br/>
      Upon selection of the add service button 610, a screen 700 is presented to the user as shown in FIG. 7.
      <br/>
      The screen 700 depicts the available services of the laptop 514 which the user may add to the Djinn.
      <br/>
      For example, the available services on the laptop 514 may include a Java space 702, the laptop file system 704, a database 706, and a dictionary 708.
      <br/>
      The user may select any of these services, which are then automatically added to the lookup service and made available to other users of the Djinn.
    </p>
    <p num="121">Although methods and systems consistent with the present invention have been described with reference to a preferred embodiment thereof, those skilled in the art will know of various changes in form and detail which may be made without departing from the spirit and scope of the present invention has defined in the appended claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method in a distributed system having a lookup service with associated network services available in the distributed system and having a client accessing the network services, the method comprising the steps of:</claim-text>
      <claim-text>adding a device to the distributed system, the device containing a new client having a new service; broadcasting an object by the new client, the object containing code for communicating with the new client; receiving the object by a discovery server, and using the code to send to the new client a reference to the lookup service by the discovery server; receiving the reference by the new client;</claim-text>
      <claim-text>and adding an indication of the new service to the lookup service by the new client such that the network services associated with the lookup service remain accessible during the adding of the new service.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein the adding step includes the step of: adding to the lookup service a stub containing code and data for facilitating access to the new service.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1, wherein the adding step includes the step of: adding a service object to the lookup service, the service object having a function for performing the new service.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, further including the step of: deleting the indication of the new service from the lookup service.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1 further including the steps of: registering the new client with the lookup service to receive a notification when the lookup service is updated; determining by the lookup service when it has been updated;</claim-text>
      <claim-text>and sending a notification to the new client when the lookup service determines that it has been updated.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5 wherein the registering step includes the step of: registering a callback routine with the lookup service, and wherein the sending step includes the step of: invoking the registered callback routine.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6 wherein the registering step includes the step of: registering a parameter object with the lookup service, and wherein the invoking step includes the step of: invoking the registered callback routine passing the parameter object as a parameter to the callback routine.</claim-text>
    </claim>
  </claims>
</questel-patent-document>