<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06184708B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06184708</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6184708</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="21947474" extended-family-id="42064627">
      <document-id>
        <country>US</country>
        <doc-number>09434415</doc-number>
        <kind>A</kind>
        <date>19991104</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09434415</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43104710</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>43441599</doc-number>
        <kind>A</kind>
        <date>19991104</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09434415</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>4717798</doc-number>
        <kind>A</kind>
        <date>19980324</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998US-09047177</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H03K  19/177       20060101A N20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>177</subgroup>
        <classification-value>N</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H03K  19/0185      20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>0185</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H03K  19/173       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>173</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>326039000</text>
        <class>326</class>
        <subclass>039000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>326016000</text>
        <class>326</class>
        <subclass>016000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>326037000</text>
        <class>326</class>
        <subclass>037000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>326082000</text>
        <class>326</class>
        <subclass>082000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>714726000</text>
        <class>714</class>
        <subclass>726000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H03K-019/177F4</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177F4</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H03K-019/0185P</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>0185P</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>H03K-019/173C1A</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>173C1A</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/17744</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>17744</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/018585</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>018585</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/1736</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>1736</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>9</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>5</number-of-figures>
      <image-key data-format="questel">US6184708</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method for selecting slew rate for a programmable device</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GALBRAITH DOUGLAS C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5017813</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5017813</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>CAMAROTA RAFAEL C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5144166</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5144166</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>AGRAWAL OM P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5644496</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5644496</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>MCDERMOTT MARK W</text>
          <document-id>
            <country>US</country>
            <doc-number>5740410</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5740410</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>PIERCE KERRY M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5331220</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5331220</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>"The Programmable Logic Data Book", 1996, available from Xilinx, Inc., 2100 Logic Drive, San Jose, California 95124, pp. 4-5 to 4-96.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>IEEE Computer Society, "IEEE Standard Test Access Port and Boundary-Scan Architecture" IEEE Std 1149.1-1990, by the Institute of Electrical and Electronics Engineers, Inc. 345 East 47th Street, New York, NY 10017, Copyright 1993.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>4717798</doc-number>
              <kind>A</kind>
              <date>19980324</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>6020757</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Xilinx, Inc.</orgname>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>XILINX</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Jenkins, IV, Jesse H.</name>
            <address>
              <address-1>Danville, CA, US</address-1>
              <city>Danville</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Hoffman, E. Eric</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Young, Edel M.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Tokar, Michael</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system including a programmable logic device (PLD) mounted on a populated printed circuit board, and a configuration processor.
      <br/>
      The PLD includes a plurality of input/output blocks (IOBs), each having an input buffer and an output buffer.
      <br/>
      Each output buffer is coupled to an associated adjustable slew rate control circuit and to an adjustable delay line of the PLD.
      <br/>
      The configuration processor controls each of the slew rate control circuits to provide a first slew rate.
      <br/>
      The configuration processor also controls the output buffers to be coupled to the adjustable delay line.
      <br/>
      The configuration processor then controls the adjustable delay line to generate a first test pulse, which is applied to each of the output buffers.
      <br/>
      Depending on the impedances of the printed circuit board, the first test pulse transmitted from a particular output buffer may be reflected.
      <br/>
      Reflected test pulses return to the associated input buffers and are recorded.
      <br/>
      The configuration processor determines which IOBs received reflected test pulses, and which have not.
      <br/>
      The configuration processor adjusts the slew rate in the IOBs receiving a reflected test pulse, and repeats the test until there are no reflected test pulses.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS REFERENCE TO RELATED APPLICATION</heading>
    <p num="1">
      This application is a divisional of U.S. patent application Ser.
      <br/>
      No. 09/047,177, entitled "Slew Rate Selection Circuit for a Programmable Device" by Jesse H. Jenkins, IV., filed Mar. 24, 1998, now U.S. Pat. No. 6,020,757.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="3">
      The present invention relates to a circuit for selecting the slew rates of output buffers in an integrated circuit device.
      <br/>
      More specifically, the present invention relates to a circuit for automatically selecting the slew rates of output buffers in a programmable logic device attached to a populated printed circuit board, such that the output buffers experience a selected amount of signal reflection.
    </p>
    <p num="4">2. Related Art</p>
    <p num="5">
      Digital integrated circuits (ICs) are typically mounted on a printed circuit board, thereby enabling these ICs to be coupled to other integrated circuits, which are also mounted on the printed circuit board.
      <br/>
      When the digital ICs drive signals out onto the printed circuit board, signal reflections may occur as a result of the impedances of the printed circuit board traces and/or the impedances of other ICs mounted on the printed circuit board.
      <br/>
      In general, signal reflection occurs when an output signal is driven from a source pin onto a signal path having a relatively low impedance.
      <br/>
      The low impedance results in the output signal reflecting from the intended destination back to the source pin.
      <br/>
      If the source pin is an input/output (I/O) pin which receives input signals in addition to providing output signals, the reflected signal may be erroneously interpreted to be a valid input signal.
    </p>
    <p num="6">
      Early determination of signal reflections on a printed circuit board is critical to successfully debug today's high-speed circuits.
      <br/>
      Finding unwanted signal reflections is one of the single most difficult tasks to accomplish and frequently results in printed circuit board re-design to eliminate undesired signal reflections.
    </p>
    <p num="7">
      Time domain reflectometry (TDR) is a conventional technique used to determine passive impedance by using voltage pulses and timing measurements (similar to the manner in which radar devices determine distance).
      <br/>
      Printed circuit board manufacturers often use TDR to determine the impedance of printed circuit board traces.
      <br/>
      System designers typically use this impedance information to determine the time delay of signals that are driven onto the printed circuit board.
      <br/>
      When known, this impedance information helps to determine signal behavior on the printed circuit board, and enables the signal behavior to be improved if necessary.
      <br/>
      However, the impedances of the printed circuit board traces are measured before there are any devices mounted on the printed circuit board.
      <br/>
      The presence of devices mounted on the printed circuit board can change the effective impedances of the printed circuit board traces.
      <br/>
      Sophisticated circuit simulators have been used to model the behavior of devices attached to printed circuit boards with well-known circuit parameters.
      <br/>
      However, this modeling is difficult and frequently inaccurate.
    </p>
    <p num="8">It would therefore be desirable to have a system which determines the presence of signal reflections on a populated printed circuit board, and automatically eliminates or adjusts detected signal reflections.</p>
    <heading>SUMMARY</heading>
    <p num="9">
      Accordingly, the present invention provides a system which includes a programmable logic device mounted on a populated printed circuit board, and a configuration processor.
      <br/>
      The programmable logic device includes a plurality of input/output blocks (IOBs), each having an input buffer and an output buffer.
      <br/>
      Each of the output buffers has an adjustable slew rate control circuit which is programmable to control the slew rate of the associated output buffer.
      <br/>
      Each of the input buffers can be selectively coupled to an asynchronous latch.
      <br/>
      Each of the output buffers can be selectively coupled to an adjustable delay line in the programmable logic device.
      <br/>
      The adjustable delay line is capable of generating digital pulses of different widths.
    </p>
    <p num="10">
      The configuration processor controls the programmable logic device to select the final slew rates for the various output buffers.
      <br/>
      The final slew rates are usually selected such that reflected signals are eliminated or minimized.
      <br/>
      The configuration processor controls each of the slew rate control circuits to provide a first slew rate.
      <br/>
      In one embodiment, the first slew rate is the fastest selectable slew rate.
      <br/>
      The configuration processor further controls the programmable logic device to couple each of the input buffers to its associated asynchronous latch, and each of the output buffers to the adjustable delay line.
      <br/>
      The configuration processor then controls the adjustable delay line to generate a first digital test pulse having a first width.
      <br/>
      In one embodiment, the first test pulse has a maximum width.
    </p>
    <p num="11">
      The first test pulse is applied to each of the output buffers, such that the test pulse is transmitted from each output buffer to the printed circuit board.
      <br/>
      The first test pulse can be applied to the output buffers simultaneously or sequentially.
      <br/>
      Depending on the impedances of the printed circuit board, the first test pulse transmitted from a particular output buffer may be reflected, thereby resulting in a reflected test pulse.
      <br/>
      The reflected test pulse returns to the associated input buffer.
      <br/>
      If the reflected test pulse has a sufficient magnitude, the input buffer transmits a signal to the associated asynchronous latch.
      <br/>
      In response, the asynchronous latch stores a value indicating the presence of the reflected test pulse.
    </p>
    <p num="12">
      By monitoring the asynchronous latches, the configuration processor determines which IOBs received a reflected test pulse, and which IOBs did not receive a reflected test pulse.
      <br/>
      In one embodiment, the contents of the asynchronous latches are transferred to JTAG boundary scan registers associated with the IOBs, and then shifted from these JTAG registers out of the programmable logic device.
      <br/>
      In response, the configuration processor adjusts the slew rate of the output signal from each IOB that received a reflected test pulse.
      <br/>
      In one embodiment in which it is desired to have no reflection, the slew rate is adjusted by selecting a slower slew rate.
      <br/>
      The first test pulse is again applied to the subset of the output buffers having the adjusted slew rates.
      <br/>
      Again, the associated input buffers and asynchronous latches detect and record any reflected test pulses.
    </p>
    <p num="13">
      This process is continued until there are no reflected test pulses, or until all the possible slew rates have been tested.
      <br/>
      If all of the slew rates have been tested, and there are still reflected test pulses, then the first test pulse can be replaced with a second test pulse having a different pulse width.
      <br/>
      In one embodiment, the second test pulse has a smaller width than the first test pulse.
      <br/>
      The slew rate testing then proceeds using the second test pulse and the various slew rates.
    </p>
    <p num="14">
      When no reflected test pulses are detected, the configuration processor transfers the final slew rates from the slew rate control circuits to associated JTAG registers of the programmable logic device.
      <br/>
      The final slew rates are shifted from the JTAG registers to the configuration processor, During the normal configuration of the programmable logic device, the configuration processor programs the slew rate control circuits with the final slew rates, thereby optimizing performance of the programmable logic device.
    </p>
    <p num="15">
      The present invention enables the automatic detection and elimination of reflected signals in a programmable logic device which has been mounted on a populated printed circuit board.
      <br/>
      The invention also enables the adjustment of reflection of signals where it is desirable to have a certain amount of reflection.
      <br/>
      Advantageously, the present invention reuses standard circuitry which is already present on the programmable logic device, including the adjustable delay line and the JTAG registers.
    </p>
    <p num="16">The present invention will be more fully understood in view of the following description and drawings.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      FIG. 1 is a circuit diagram of a system in accordance with one embodiment of the present invention;
      <br/>
      FIG. 2 is a circuit diagram of an adjustable delay line used in one embodiment of the invention;
      <br/>
      FIG. 3 is a circuit diagram illustrating input/output blocks of the system of FIG. 1 in more detail;
      <br/>
      FIG. 4 is a flow diagram illustrating an automatic slew rate test performed in accordance with one embodiment of the present invention; and
      <br/>
      FIG. 5 is a block diagram illustrating a plurality of JTAG registers in accordance with one embodiment of the invention.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="18">
      FIG. 1 is a circuit diagram of a system 100 in accordance with one embodiment of the present invention.
      <br/>
      System 100 includes FPGA 101, integrated circuit (IC) device 102, printed circuit board 103, and configuration processor 104.
      <br/>
      Both FPGA 101 and IC device 102 are mounted on printed circuit board 103.
      <br/>
      Printed circuit board 103 is, for example, a conventional multi-layer board having multiple insulating layers and conductive paths.
      <br/>
      As described in more detail below, printed circuit board traces 105 and 106 couple FPGA 101 and IC device 102.
      <br/>
      Although only two traces are illustrated, printed circuit board 103 typically includes many more traces.
      <br/>
      In addition, other devices can be mounted on printed circuit board 103.
      <br/>
      Although configuration processor 104 is shown as being located off printed circuit board 103, in other embodiments, configuration processor 104 is located on printed circuit board 103.
      <br/>
      It is noted that the strategy engine (the software that implements the flow diagram of FIG. 4, discussed below) is located outside of FPGA 101.
      <br/>
      The strategy engine is used infrequently, and may be implemented by software sending commands through the JTAG port (not shown) of FPGA 101, thereby directing the distribution of pulses and the collection of latch responses.
      <br/>
      The control or strategy logic can reside off of printed circuit board 103, in a separate computer which is attached to FPGA 101 by a JTAG cable.
    </p>
    <p num="19">
      FPGA 101 includes a plurality of programmable input/output blocks (IOBs) 110, such as IOBs 111 and 112, located around the perimeter of FPGA 101.
      <br/>
      FPGA 101 further includes a centrally located array 120 of configurable logic blocks (CLBs), such as CLB 121.
      <br/>
      Programmable interconnect resources 130 extend between the CLBs of CLB array 120 and IOBs 110.
      <br/>
      In general, the CLBs of CLB array 120 are configured by configuration processor 104 to provide the functional elements of a logic circuit.
      <br/>
      The IOBs 110 are also configured by configuration processor 104 to provide an interface between external circuits (e.g., IC device 102) and the logic circuit implemented by the CLB array 120.
      <br/>
      The programmable interconnect resources 130 are also configured by configuration processor 104 to provide routing paths to connect the IOBs 110 a nd CLBs 120 into the desired networks.
      <br/>
      Both CLB array 120 and programmable interconnect resources 130 are conventional elements which are described in more detail in The Programmable Logic Data Book, (1996) pp. 4-5 to 4-96, available from Xilinx, Inc., 2100 Logic Drive, San Jose, Calif., which are hereby incorporated by reference.
    </p>
    <p num="20">
      Custom configuration of FPGA 101 is achieved by programming internal static configuration memory cells that determine the logic functions and interconnections of IOBs 110, CLBs 120 and programmable interconnect resources 130.
      <br/>
      The custom configuration of FPGA 101 is performed under the control of external configuration processor 104 through interface 150.
      <br/>
      Configuration processor 104 and interface 150 are largely conventional, with novel features of these elements being described below.
      <br/>
      Some of the resources required to configure FPGA 101 are located in centrally located region 140 of FPGA 101.
      <br/>
      This centrally located region 140 is hereinafter referred to as center strip 140.
      <br/>
      Several circuits of FPGA 101 are located in center strip 140.
      <br/>
      One such circuit is a variable pulse generator, or adjustable delay line 160.
    </p>
    <p num="21">
      FIG. 2 is a circuit diagram of delay line 160 of FIG. 1 in accordance with one embodiment of the invention.
      <br/>
      Delay line 160 includes pulse width selector 161, AND gate 162 and amplifiers 171-180.
      <br/>
      The first input terminal of AND gate 162 is coupled to receive an input pulse P_IN.
      <br/>
      Amplifiers 171-180 are connected in series, with the input terminal of amplifier 171 being coupled to receive the P_IN input pulse.
      <br/>
      The output terminals of amplifiers 171-180 are connected to pulse width selector 161.
      <br/>
      Pulse width selector 161 selectively couples the output terminal of one of these amplifiers 171-180 to the second input terminal of AND gate 162.
      <br/>
      Each of amplifiers 171-180 typically exhibits a base delay B_D in transmitting the P_IN input pulse.
      <br/>
      If pulse width selector 161 connects N series amplifiers to the second input terminal of AND gate 162, then the P_IN input pulse is delayed by N times B_D before being applied to the second input terminal of AND gate 162.
      <br/>
      Thus, by selecting N, the width of the output pulse P_OUT provided by AND gate 162 can be controlled.
      <br/>
      During normal operation of FPGA 101, delay line 160 is used as part of a digital phase lock loop, which in turn is used to adjust clock skew.
    </p>
    <p num="22">
      As described in more detail below, configuration processor 104 (FIG. 1) is programmed to perform an automatic slew rate test on FPGA 101 after FPGA 101 is powered on and before FPGA 101 is configured.
      <br/>
      During this slew rate test, delay line 160 is controlled to sequentially transmit pulses to each of the IOBs.
      <br/>
      After transmitting the pulses, the IOBs monitor their associated traces for a reflected signal.
      <br/>
      If a reflected signal is detected at a particular IOB, the slew rate of the IOB is modified and the test is performed again.
      <br/>
      This process is continued until the slew rates are selected such that there are no reflected signals.
      <br/>
      The slew rate selected for each IOB is then transmitted to the configuration processor 104.
      <br/>
      The configuration processor then configures the IOBs to have the selected slew rates during the configuration of FPGA 101.
    </p>
    <p num="23">
      FIG. 3 is a circuit diagram illustrating IOBs 111-112 in more detail.
      <br/>
      IOB 111 includes I/O pad 210, tri-state output buffer 211, input buffer 212, slew rate control circuit 213, multiplexer 214, de-multiplexer 215, asynchronous latch 216, JTAG register 217, tri-state control circuit 218, switch 219 and multiplexer 231.
      <br/>
      Similarly, IOB 112 includes I/O pad 220, tri-state output buffer 221, input buffer 222, slew rate control circuit 223, multiplexer 224, de-multiplexer 225, asynchronous latch 226, JTAG register 227, tri-state control circuit 228, switch 229 and multiplexer 232.
      <br/>
      Although only IOBs 111 and 112 are described in detail, it is understood that all of the IOBs of FPGA 101 have such circuitry.
    </p>
    <p num="24">
      The connections of IOB 112 will now be described.
      <br/>
      Because the various elements of IOB 111 are connected in the same manner as the elements of IOB 112, the connections of IOB 111 will not be described in detail.
      <br/>
      IOB 112 includes an I/O pad 210 which is connected to trace 106 of printed circuit board 103 in a manner well known in the art.
      <br/>
      The output terminal of output buffer 211 is connected to I/O pad 210.
      <br/>
      Output buffer 211 is a tri-state buffer which is controlled by slew rate control circuit 213 and tri-state control circuit 218.
      <br/>
      Tri-state control circuit 218 controls output buffer 211 to be in an enabled state (in which case output buffer 211 provides a logic high signal or a logic low signal) or a high-impedance state.
    </p>
    <p num="25">
      Slew rate control circuit 213 controls the rate at which the output signals provided by output buffer 211 change value.
      <br/>
      Slew rate control circuit 213 is programmable to provide a plurality of pre-determined slew rates.
      <br/>
      Configuration memory cells (not shown) associated with slew rate control circuit 213 are programmed to store configuration data values which define the slew rate of slew rate control circuit 213.
      <br/>
      During the slew rate test, configuration processor 104 programs these configuration memory cells to store the desired configuration data values, thereby causing slew rate control circuit 213 to provide the desired slew rate.
      <br/>
      Adjustable slew rate control circuit 213 is a conventional element which is described in more detail by Pierce et al. in U.S. Pat. No. 5,331,220, which is hereby incorporated by reference.
    </p>
    <p num="26">
      Slew rate control circuit 213 is also coupled to JTAG register 217 through multiplexer 231.
      <br/>
      JTAG register 217 is a conventional register which is typically included in IOB 112 to implement JTAG testing.
      <br/>
      JTAG register 217 is described in more detail in The Programmable Logic Data Book, (1996) pp. 4-5 to 4-96, available from Xilinx.
      <br/>
      As described in more detail below, during the slew rate test, configuration processor 104 causes the configuration data values which define the slew rate control circuit 213 to be written to JTAG register 217.
    </p>
    <p num="27">
      The input terminal of output buffer 211 is coupled to multiplexer 214.
      <br/>
      Multiplexer 214, in turn, is coupled to receive an output signal OUT_1 from other conventional circuitry within IOB 112 (not shown).
      <br/>
      The circuitry which provides the output signal OUT_1 can include, for example, a connection to the programmable interconnect resources 130 (FIG. 1), a connection to the programmable interconnect resources 130 through an inverter, or a connection to the programmable interconnect resources through a flip flop.
      <br/>
      This circuitry is not illustrated in FIG. 2 for purposes of clarity.
      <br/>
      However, this conventional circuitry is described in more detail in The Programmable Logic Data Book, (1996) pp. 4-5 to 4-96, available from Xilinx.
    </p>
    <p num="28">
      Multiplexer 214 is also coupled to delay line 160 through switch 219.
      <br/>
      During the slew rate test, configuration processor 104 controls multiplexer 214 to couple the digital delay line 160 to output buffer 211.
      <br/>
      As described in more detail below, configuration processor 104 also controls switch 219.
    </p>
    <p num="29">
      The input terminal of input buffer 212 is coupled to I/O pad 210 (and to the output terminal of output buffer 211).
      <br/>
      The output terminal of input buffer 212 is coupled to de-multiplexer 215.
      <br/>
      De-multiplexer 215 can be controlled to route the signal provided by input buffer 212 as an input signal IN_1 to conventional circuitry within IOB 112 (not shown).
      <br/>
      The conventional circuitry which receives the input signal IN_1 can include, for example, a connection to programmable interconnect resources 130, a connection to programmable interconnect resources 130 through a flip flop, or a connection to programmable interconnect resources 130 through a delay circuit and the flip flop.
      <br/>
      This circuitry is not illustrated in FIG. 2 for purposes of clarity.
      <br/>
      However, this conventional circuitry is described in more detail in The Programmable Logic Data Book, (1996) pp. 4-5 to 4-96, available from Xilinx.
    </p>
    <p num="30">
      De-multiplexer 215 is also coupled to asynchronous latch 216.
      <br/>
      During the slew rate test, configuration processor 104 controls de-multiplexer 215 to couple input buffer 212 to asynchronous latch 216.
      <br/>
      Asynchronous latch 216 is also coupled to JTAG register 217 through multiplexer 231.
      <br/>
      As described in more detail below, during the slew rate test, configuration processor 104 controls multiplexer 231 to cause the contents of asynchronous latch 216 to be transferred to JTAG register 217.
    </p>
    <p num="31">
      FIG. 4 is a flow diagram illustrating the automatic slew rate test performed in accordance with one embodiment of the present invention.
      <br/>
      During the initialization of system 100 (i.e., power up), configuration processor 104 starts the slew rate test (Step 1) by assuming control of delay line 160, slew rate control circuits 213 and 223, multiplexers 214 and 224, de-multiplexers 215 and 225, tri-state control circuits 218 and 228, and switches 219 and 229.
      <br/>
      Configuration processor 104 controls multiplexers 214 and 224 to couple delay line 160 to output buffers 211 and 221.
      <br/>
      Configuration processor 104 further controls de-multiplexers 215 and 225 such that input buffers 212 and 222 are coupled to asynchronous latches 216 and 226, respectively.
      <br/>
      Tri-state control circuits 218 and 228 are controlled to enable output buffers 211 and 221, respectively.
    </p>
    <p num="32">
      After IOBs 111 and 112 have been configured as described above, configuration controller 104 causes delay line 160 to select a digital test pulse having a predetermined width.
      <br/>
      In the described example, the selected pulse width corresponds with the maximum pulse width that can be generated by delay line 160 (Step 2).
      <br/>
      In general, the maximum pulse width is selected by using pulse width selector 161 to couple the output of amplifier 171 to the second input terminal of AND gate 162 (FIG. 2).
      <br/>
      The maximum pulse width is selected because this pulse width is most likely to cause a signal reflection.
    </p>
    <p num="33">
      Slew rate control circuits 213 and 223 (FIG. 3) are controlled to select a default slew rate within output buffers 211 and 221, respectively (Step 3).
      <br/>
      In the described embodiment, the default slew rate is the fastest possible slew rate.
      <br/>
      The other IOBs of FPGA 101 are controlled in a similar manner.
    </p>
    <p num="34">
      Configuration controller 104 then begins the slew rate test (Step 4) by closing switch 219 and opening switch 229 (and opening the corresponding switches in the remaining IOBs), such that output buffer 211 is the only output buffer which receives the test pulse provided by delay line 160.
      <br/>
      The test pulse is transmitted through output buffer 211 at the slew rate selected by slew rate control circuit 213.
      <br/>
      The test pulse is thereby transmitted to I/O pad 210, trace 106 and IC device 102.
      <br/>
      Immediately after the test pulse has been transmitted, configuration controller 104 causes tri-state control circuit 218 to disable output buffer 211.
      <br/>
      Configuration controller 104 resets asynchronous latch 216 after output buffer 211 has been disabled.
    </p>
    <p num="35">In another embodiment, latch 216 is cleared simultaneously with disabling output buffer 211, so that there is no possibility that a fast reflection will arrive at latch 216 before latch 216 is cleared, and thus be missed.</p>
    <p num="36">
      In yet another embodiment, input buffer 212 is a tristate buffer and is controlled by the complement of the tristate control signal from tristate control circuit 218.
      <br/>
      In this embodiment, latch 216 can be cleared at any time from before output buffer 211 is enabled (thus transmitting the output pulse) until output buffer 211 is disabled and input buffer 212 is enabled.
    </p>
    <p num="37">
      The impedance presented by trace 106 and IC device 102 may cause the test pulse to be reflected back to I/O pad 210 and input buffer 212.
      <br/>
      If the reflected test pulse has a magnitude sufficient to activate input buffer 212, then input buffer 212 transmits the reflected test pulse to asynchronous latch 216.
      <br/>
      In response, asynchronous latch 216 enters a state which is representative of having received the reflected test pulse.
      <br/>
      Latch 216 is asynchronous because the timing of the reflected test pulse is not known.
    </p>
    <p num="38">
      After IOB 112 has been tested, configuration processor 104 opens switch 219 and closes switch 229.
      <br/>
      Configuration processor 104 then causes delay line 160 to generate a second maximum-width test pulse, which is provided to output buffer 221 through switch 229 and multiplexer 224.
      <br/>
      The slew rate test of IOB 111 continues as described above in connection with IOB 112.
      <br/>
      If the second test pulse is reflected with sufficient magnitude, asynchronous latch 226 will enter a state representative of this occurrence.
    </p>
    <p num="39">The slew rate test continues in this manner, with each IOB of FPGA 101 receiving a test pulse, and storing an appropriate value in a corresponding asynchronous latch if there is a reflected digital pulse of a predetermined magnitude.</p>
    <p num="40">
      After pulsing all of the IOBs of FPGA 101, configuration processor 104 reads the state of each of the asynchronous latches, thereby determining if any of the IOBs received a reflected test pulse (Step 5).
      <br/>
      The contents of the asynchronous latches are routed into the JTAG registers through the associated multiplexers under the control of configuration processor 104.
      <br/>
      For example, configuration processor 104 controls multiplexer 231 to transfer the contents of asynchronous latch 216 to JTAG register 217.
      <br/>
      The contents of the JTAG registers are then shifted out of the JTAG registers to the configuration processor 104 in the manner described below in connection with FIG. 5.
    </p>
    <p num="41">
      If none of the asynchronous latches detected a reflected test pulse, then configuration processor 104 causes each of the slew rate control circuits to transmit signals representative of their current slew rates to their associated JTAG registers (Step 14).
      <br/>
      For example, configuration processor 104 controls multiplexers 231 and 323 to couple slew rate control circuits 213 and 223 to JTAG registers 217 and 227, respectively, thereby transferring the fastest slew rate to these JTAG registers 217 and 227.
      <br/>
      If there are more than two selectable slew rates, the JTAG registers are expanded to be able to store more than one bit.
      <br/>
      For example, if there are four selectable slew rates, each JTAG register must be able to store at least two bits to represent each of these four slew rates.
      <br/>
      The contents of the JTAG registers are then shifted out of the JTAG registers to the configuration processor 104 in the manner described below in connection with FIG. 5.
    </p>
    <p num="42">
      Configuration processor 104 accesses the JTAG registers as follows.
      <br/>
      FIG. 5 is a block diagram illustrating a plurality of JTAG registers 301-316 in accordance with one embodiment of the invention.
      <br/>
      JTAG registers 301-316 are connected in a series chain in accordance with the IEEE Standard Test Access Port and Boundary-Scan Architecture, IEEE Std. 1149.1-1990 (including IEEE Std. 1149.1a-193).
      <br/>
      The end of the chain of JTAG registers is connected to a dedicated JTAG test pin 320, typically designated TDO (test data out).
      <br/>
      The binary values representing the final slew rates (or the contents of the asynchronous latches) are sequentially shifted along the chain to TDO pin 320 under the control of configuration processor 104.
      <br/>
      Configuration processor 104 receives the final slew rate values (or the contents of the asynchronous latches) from TDO pin 320 (Step 15).
      <br/>
      Note that there are three other mandatory JTAG signal pins (TMS, TCK and TDI) which are not illustrated in FIG. 5 for purposes of clarity.
    </p>
    <p num="43">
      Configuration processor 104 uses the received final slew rates to configure the slew rate control circuits during the configuration of FPGA 101 (Step 16).
      <br/>
      In the current example, all of the slew rate control circuits would be configured to have the fastest slew rate.
      <br/>
      At this point, the slew rate test is done (Step 17).
    </p>
    <p num="44">
      Returning to Step 5 in the flow diagram of FIG. 4, if any of the asynchronous latches detected a reflected test pulse, then configuration processor 104 adjusts the slew rate of each of the IOBs associated with these asynchronous latches.
      <br/>
      In the described embodiment, the slew rate for each of these IOBs is reduced to the next slower selectable slew rate (Step 6).
      <br/>
      The slew rate test is then repeated (Step 7) for these IOBs in the manner described above in connection with Step 4.
      <br/>
      Note that in Step 7 the slew rate test is not repeated for IOBs that did not detect a reflected test pulse during the slew rate test of Step 4.
    </p>
    <p num="45">
      If no reflected test pulses are detected during the slew rate test of Step 7, then the current slew rate settings are properly selected to prevent signal reflections, and processing proceeds to Steps 14-17.
      <br/>
      In this case, however, it is possible that some of the slew rate control circuits are set at the fastest slew rate, while other slew rate control circuits are set at the next slower slew rate.
      <br/>
      This slew rate information is transmitted to the JTAG registers (Step 14) and then to configuration processor 104 (Step 15), which in turn, uses this slew rate information to configure the slew rate control circuits with the appropriate slew rates (Step 16).
    </p>
    <p num="46">
      If the slew rate test of Step 7 still results in reflected test pulses (Step 8), configuration processor 104 determines whether or not all possible slew rates have been tested (Step 9).
      <br/>
      If all possible slew rates have not been tested, processing returns to Step 6, and processing is repeated for the next slower slew rate.
      <br/>
      However, if all possible slew rates have been tested (and there are still reflected test pulses), processing proceeds to Step 10, where the current slew rates are shifted from the IOBs to the JTAG registers (Step 10), and are then shifted from the JTAG registers to configuration processor 104 (Step 11).
      <br/>
      Steps 10 and 11 are performed in the same manner previously described for Steps 14 and 15, respectively.
      <br/>
      Configuration processor 104 processes the received slew rate information to determine which IOBs are receiving the reflected test pulses.
    </p>
    <p num="47">
      After all of the possible slew rates have been tested at the maximum width test pulse, configuration processor 104 controls delay line 160 to adjust the width of the test pulse (Step 13).
      <br/>
      Note that the width of the test pulse is only adjusted if all of the possible test pulse widths have not already been tested in the slew rate test (Step 12).
      <br/>
      In the described embodiment, the width of the test pulse is incrementally reduced by connecting another amplifier within delay chain 160 (FIG. 2).
      <br/>
      For example, to reduce the width of the maximum width test pulse, configuration processor 104 controls the pulse width selector 161 to route the output of amplifier 172 to the second input terminal of AND gate 162 (FIG. 2).
      <br/>
      After the pulse width has been reduced, processing returns to Step 3, where the above-described process is repeated.
      <br/>
      If all slew rates and pulse widths have been tested (and there are still reflected test pulses), processing proceeds from Step 12 to Step 17.
      <br/>
      Alternatively, processing can proceed from Step 12 to Step 16, with configuration processor 104 configuring FPGA 101 in the best possible manner in response to the results of the slew rate testing.
      <br/>
      This alternative step is shown in dashed lines in FIG. 4.
      <br/>
      Also, alternatively, the configuration processor can generate a message usable for modifying the board into which FPGA 101 is mounted.
      <br/>
      In the foregoing manner, the slew rate control circuits of FPGA 101 are configured to eliminate (or minimize) reflected signals.
      <br/>
      Because the slew rate tests are performed while FPGA 101 is mounted on a populated printed circuit board 103, the results of the slew rate tests are inherently accurate.
    </p>
    <p num="48">
      Advantageously, slew rate testing in accordance with the present invention reuses circuitry which has other functions within FPGA 101.
      <br/>
      More specifically, the present invention reuses the JTAG registers and delay line 160, which are used for other purposes during normal operation of FPGA 101.
    </p>
    <p num="49">
      It should be noted that IC device 102 (and all similar devices mounted on printed circuit board 103) should be designed to not deliver extraneous pulses during the slew rate testing.
      <br/>
      This is necessary because it is possible for some ICs, like clock circuits, to come up delivering their own pulses.
      <br/>
      In this case it may be necessary to inform configuration processor 104 of such ICs, and to take action to disregard pulse activity on uncontrolled pins.
    </p>
    <p num="50">
      It is also noted that some bus standards rely on signal reflections.
      <br/>
      For example, the Peripheral Component Interconnect (PCI) specification stipulates that bus points are unterminated, and relies on reflected wave switching.
      <br/>
      In this case, weak pulses are delivered to the bus and the reflection is targeted to constructively add so the reflected signal reaches its correct value due to the reflection adding to the original signal.
      <br/>
      For these buses, the above-described slew rate testing is modified to look for the absence of reflected signals and modify the slew rate until reflected signals occur.
    </p>
    <p num="51">
      Although the invention has been described in connection with several embodiments, it is understood that this invention is not limited to the embodiments disclosed, but is capable of various modifications which would be apparent to a person skilled in the art.
      <br/>
      For example, although the described slew rate test sequentially tests the IOBs, it is understood that in another embodiment, many or all IOBs can be tested simultaneously.
      <br/>
      Moreover, although the present invention has been described in connection with an FPGA, it is understood that the invention is applicable to other programmable devices, such as complex programmable logic devices (CPLDs).
      <br/>
      Thus, the invention is limited only by the following claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of configuring a programmable device which is mounted on a printed circuit board, the method comprising the steps of:</claim-text>
      <claim-text>selecting a first slew rate for an output buffer of the programmable device; applying a digital pulse to the output buffer, whereby the output buffer transmits the digital pulse to a pad of the programmable logic device and a trace of the printed circuit board; monitoring the pad to determine if the digital pulse is reflected back to the pad;</claim-text>
      <claim-text>and configuring the output buffer to have the first slew rate if the digital pulse is not reflected back to the pad.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, further comprising the step of configuring the output buffer to have a second slew rate if the digital pulse is reflected back to the pad.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2, further comprising the steps of: selecting a second slew rate for the output buffer if the digital pulse is reflected back to the pad; applying a second digital pulse to the output buffer, whereby the output buffer transmits the second digital pulse to the pad and the trace; monitoring the pad to determine if the second digital pulse is reflected back to the pad;</claim-text>
      <claim-text>and configuring the output buffer to have the second slew rate if the second digital pulse is not reflected back to the pad.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, wherein the step of applying the digital pulse is performed by a delay line of the programmable device.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein the steps are controlled by a configuration processor which configures the programmable device.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein the step of monitoring the pad comprises the step of coupling an asynchronous latch to the pad.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, further comprising the step of storing the first slew rate in a JTAG register of the programmable device.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7, further comprising the step of shifting the slew rate from the JTAG register to a configuration processor coupled to the programmable device.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 1, further comprising the step of applying a second digital pulse, having different width than the digital pulse, to the output buffer if the digital pulse is reflected back to the pad.</claim-text>
    </claim>
  </claims>
</questel-patent-document>