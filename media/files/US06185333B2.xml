<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185333B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185333</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185333</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="27554104" extended-family-id="13684248">
      <document-id>
        <country>US</country>
        <doc-number>08847498</doc-number>
        <kind>A</kind>
        <date>19970425</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08847498</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171513</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>84749897</doc-number>
        <kind>A</kind>
        <date>19970425</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08847498</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>JP</country>
        <doc-number>23680692</doc-number>
        <kind>A</kind>
        <date>19920904</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1992JP-0236806</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>JP</country>
        <doc-number>24348192</doc-number>
        <kind>A</kind>
        <date>19920911</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1992JP-0243481</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="4">
        <country>JP</country>
        <doc-number>24649592</doc-number>
        <kind>A</kind>
        <date>19920916</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="4">
        <doc-number>1992JP-0246495</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="5">
        <country>JP</country>
        <doc-number>24649992</doc-number>
        <kind>A</kind>
        <date>19920916</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="5">
        <doc-number>1992JP-0246499</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="6">
        <country>JP</country>
        <doc-number>24650092</doc-number>
        <kind>A</kind>
        <date>19920916</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="6">
        <doc-number>1992JP-0246500</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="7">
        <country>JP</country>
        <doc-number>24650192</doc-number>
        <kind>A</kind>
        <date>19920916</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="7">
        <doc-number>1992JP-0246501</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="8">
        <country>US</country>
        <doc-number>45114895</doc-number>
        <kind>A</kind>
        <date>19950526</date>
        <priority-linkage-type>B</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="8">
        <doc-number>1995US-08451148</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="9">
        <country>US</country>
        <doc-number>11551893</doc-number>
        <kind>A</kind>
        <date>19930901</date>
        <priority-linkage-type>D</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="9">
        <doc-number>1993US-08115518</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06K   9/22        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>22</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06K   9/62        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>62</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06K   9/68        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>68</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>382187000</text>
        <class>382</class>
        <subclass>187000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>345467000</text>
        <class>345</class>
        <subclass>467000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>382189000</text>
        <class>382</class>
        <subclass>189000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06K-009/22H</text>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>009</main-group>
        <subgroup>22H</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06K-009/62B6</text>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>009</main-group>
        <subgroup>62B6</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G06K-009/68A</text>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>009</main-group>
        <subgroup>68A</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06K-009/6807</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>6807</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150725</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06K-009/00429</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>00429</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150723</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06K-009/6255</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>K</subclass>
        <main-group>9</main-group>
        <subgroup>6255</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150725</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>18</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>115</number-of-drawing-sheets>
      <number-of-figures>146</number-of-figures>
      <image-key data-format="questel">US6185333</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Information processing method and apparatus</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>SMALLIGAN L</text>
          <document-id>
            <country>US</country>
            <doc-number>3778910</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3778910</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>DONAHEY ALVIN V</text>
          <document-id>
            <country>US</country>
            <doc-number>3996557</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3996557</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>FUJIMOTO YOSHIJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4015239</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4015239</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>GREANIAS EVON C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4365235</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4365235</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>NARVESON PARM L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4386345</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4386345</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>OOI KATSUNORI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4685142</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4685142</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>BEASLEY JR EUGENE T</text>
          <document-id>
            <country>US</country>
            <doc-number>4793810</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4793810</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>KAWASAKI KIKUO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4814754</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4814754</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>NAKATSUKA TADANORI</text>
          <document-id>
            <country>US</country>
            <doc-number>5265174</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5265174</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>FUJISAKI TETSUNOSUKE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5315667</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5315667</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>HORIUCHI KAORU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5426726</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5426726</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>HWONG YAO D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5432896</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5432896</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>FOX ABIJAH S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4727588</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4727588</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>AGURO MASAYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5150424</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5150424</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>KAMIYA SHIN</text>
          <document-id>
            <country>US</country>
            <doc-number>5181256</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5181256</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>SHOJIMA HIROSHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5191622</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5191622</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>SHIMIZU NOBORU</text>
          <document-id>
            <country>US</country>
            <doc-number>5257328</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5257328</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>HIRAYAMA TOMOSHI</text>
          <document-id>
            <country>US</country>
            <doc-number>5267327</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5267327</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>CHEFALAS THOMAS E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5319721</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5319721</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>SONY CORP</text>
          <document-id>
            <country>EP</country>
            <doc-number>0455336</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-455336</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <document-id>
            <country>JP</country>
            <doc-number>S6239460</doc-number>
            <kind>B2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP87039460</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>Patent Abstracts of Japan, vol. 15, No. 495 (Kokai 3-214281).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Patent Abstracts of Japan, vol. 12, No. 361 (Kokai 63-111585).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Patent Abstracts of Japan, vol. 15, No. 410 (Kokai 3-166677).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Patent Abstracts of Japan, vol. 14, No. 415 (Kokai 2-159689).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>Patent Abstracts of Japan, vol. 15, No. 503 (Kokai 2-207387).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>Patent Abstracts of Japan, vol. 13, No. 345 (Kokai 1-103787).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>Patent Abstracts of Japan, vol. 14, No. 185 (Kokai 2-032487).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>Patent Abstracts of Japan, vol. 13, No. 403 (Kokai 1-145789).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>Patent Abstracts of Japan, vol. 15, No. 220 (Kokai 3-062186).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="10">
          <text>Patent Abstracts of Japan, vol. 13, No. 91 (Kokai 63-165183).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="11">
          <text>Patent Abstracts of Japan, vol. 10, No. 371 (Kokai 63-273928).</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="12">
          <text>Patent Abstracts of Japan, vol. 11, No. 62 (Kokai 61-226823.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="13">
          <text>Patent Abstracts of Japan, vol. 13, No. 228 (Kokai 1-037683).</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>45114895</doc-number>
              <kind>A</kind>
              <date>19950526</date>
            </document-id>
            <parent-status>ABANDONED</parent-status>
          </parent-doc>
        </relation>
      </continuation>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>11551893</doc-number>
              <kind>A</kind>
              <date>19930901</date>
            </document-id>
            <parent-status>ABANDONED</parent-status>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Canon Kabushiki Kaisha</orgname>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>CANON</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Arai, Tsunekazu</name>
            <address>
              <address-1>Tama, JP</address-1>
              <city>Tama</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Sakaguchi, Katsuhiko</name>
            <address>
              <address-1>Kawasaki, JP</address-1>
              <city>Kawasaki</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Mori, Shigeki</name>
            <address>
              <address-1>Koshigaya, JP</address-1>
              <city>Koshigaya</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Matsubayashi, Kazuhiro</name>
            <address>
              <address-1>Yokohama, JP</address-1>
              <city>Yokohama</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Harada, Takashi</name>
            <address>
              <address-1>Yokohama, JP</address-1>
              <city>Yokohama</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="6">
          <addressbook lang="en">
            <name>Takasu, Eiji</name>
            <address>
              <address-1>Yokohama, JP</address-1>
              <city>Yokohama</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="7">
          <addressbook lang="en">
            <name>Yoshii, Hiroto</name>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Fitzpatrick, Cella, Harper &amp; Scinto</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Couso, Yon J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An information processing method and apparatus which uses a memory storing stroke data forming one character together with respective stroke order information to display each stroke data based on the stored stroke order information at an arbitrary speed.
      <br/>
      In addition, a display speed changing instruction is input into the apparatus and the display speed of the stroke data is changed in response to the display speed changing instruction.
      <br/>
      In addition, stroke data stored in correspondence to the stroke order information of an input stroke order number is read from the memory and displayed.
      <br/>
      Further, the stroke data can be displayed under different display conditions such that the stroke order information stored in correspondence to the stroke data can be distinguished from each other.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is a continuation of application Ser.
      <br/>
      No. 08/451,148 filed May 26, 1995 (now abandoned), which in turn is a division of application Ser.
      <br/>
      No. 08/115,518 filed Sep. 1, 1993 now abandoned.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="3">The present invention relates to an information processing method and apparatus, and particularly, to an information processing method and apparatus which is capable of outputting a recognition result by comparing an input pattern with a dictionary pattern.</p>
    <p num="4">2. Related Background Art</p>
    <p num="5">Conventionally, information processing apparatuses have been known in which pattern information memorized for recognition purpose can be displayed upon a designation from the user.</p>
    <p num="6">However, the conventional apparatuses as above noted had the following drawbacks because registration pattern was simply displayed in the form of a list.</p>
    <p num="7">
      1) If the user registered numerous character patterns, the use condition of each pattern could not be found although some patterns were registered but unused or forgotten.
      <br/>
      2) Though a single character could be registered multiply which may be a character or registered pattern in basic dictionary, the use condition of each input pattern could not be found.
      <br/>
      3) When a plurality of same patterns were registered in like writing manner, it could not be found which pattern was effective.
    </p>
    <p num="8">
      Conventionally, character recognition apparatuses have been well known for recognizing an input character based on hand data of the character drawn by handwriting on the coordinate input plane such as an input tablet.
      <br/>
      Such character recognition apparatuses are provided with a registration function of registering track (hand) data specific to the user of which the recognition ratio will be low, corresponding to a particular character code.
      <br/>
      Such a registration process is carried out by a special application for registration which is activated fully independently of the process of character recognition input upon the start of registration process being designated by the user.
    </p>
    <p num="9">
      Typically, there are largely two cases where the user uses such a registration function.
      <br/>
      The first case occurs when a subject character is not contained in the dictionary of recognition device in use, and newly registered and added thereto.
      <br/>
      The second case occurs when the track of a character entered by the user is not matched with data of the dictionary provided in recognition device so that there is a high probability that the character is recognized falsely.
      <br/>
      In either case, the user has a very high probability that the entered character is not totally recognized or erroneously recognized.
      <br/>
      Therefore, in this case, the user tries to register the character code corresponding to the track of character to enhance the input efficiency.
      <br/>
      However, with the conventional method, it was not clear what character the user tried to register until the recognition result for handwritten character first entered was examined.
      <br/>
      Also, there was a drawback that the registration processing, which had to be by necessity performed out of the character input mode, not only would cause the user a lot of difficulty to operate, but would also require the same character as in the input process to be entered again in the registration process, whereby the registration might not take effect if there was a large difference between actually input character and registered character.
    </p>
    <p num="10">The present invention has been achieved in the light of the above-described conventional drawbacks, and its object is to provide a character recognition device which allows the character registration to be simply made in the character input operation, and a registration method in said device.</p>
    <p num="11">
      With the above configuration, the subject character is recognized by referring to a dictionary memory, based on the input hand data, and the recognition character candidates thus recognized are displayed.
      <br/>
      The displayed candidate characters can be registered into the dictionary memory by changing the order of candidates.
    </p>
    <p num="12">
      Also, according to anther invention, the input hand data is memorized, and a character code designating and corresponding to the memorized hand data is registered into the dictionary memory.
      <br/>
      Thus, it operates so that the subject character is recognized by referring to the dictionary memory based on the input hand data.
    </p>
    <p num="13">
      Conventionally, handwriting recognition devices have relied on a method in which a registration dictionary for each user (called a user dictionary) is created to enhance the character recognition ratio.
      <br/>
      With this method, it is indispensable to enter user's hand data into the recognition device, select a standard feature pattern from the hand data, and register it in the user dictionary.
      <br/>
      Also, some devices may include a function of reproducing the track of input pattern to allow for the confirmation of the pattern of a character which was registered as the standard feature pattern.
    </p>
    <p num="14">However, the conventional reproduction methods of input patterns involved displaying the track at constant speed as in the input process, or displaying only the shape of pattern at a time.</p>
    <p num="15">
      Conventionally, in proper recognition means, when it was desired that the hand data of user's originality, which would not result in any aimed recognition result, be reflected on the recognizing means, a feature of hand data of user's originality was stored for registration in a user dictionary, and the character recognition process was performed using the user dictionary to obtain an aimed recognition result.
      <br/>
      Accordingly, if like hand data was presented by different users, the recognition result was sometimes different in some instances, so that it was necessary to provide a plurality of user dictionaries corresponding to a plurality of users.
      <br/>
      To this end, when a particular user tried to make character recognition, a method has been used in which a user dictionary is selected by preselecting the user name from a list of user dictionary holders which is displayed on the operation screen for user dictionary switching means, and the user dictionary of the particular user is set, as shown in FIG. 25.
    </p>
    <p num="16">However, with the above configuration, when a plurality of users having the user dictionary registered made use of the same character recognition device alternately, it was necessary to call out the operation screen for executing user dictionary switch means to switch user dictionary even though the user was engaged in some other application, whereby if there were a great number of user dictionary holders, the selection of user dictionary resulted in a very troublesome operation.</p>
    <p num="17">For example, an on-line character recognition device has been known which can allow the user to confirm which hand data the character stroke information registered in recognition dictionary is based on in creation by drawing sequentially the character stroke data within the recognition dictionary to reproduce the hand data.</p>
    <p num="18">However, the above conventional example had a drawback that since a character was drawn at constant speed for all the strokes composing the character, the character made up of a great number of strokes would be time-consuming, and the user desiring the confirmation only for a part of the character might spend a wasteful amount of time.</p>
    <p num="19">
      Conventionally, character recognition devices, particularly, on-line handwritten character recognition devices have involved comparing a character written by the user on the tablet with the recognition dictionary within the character recognition devices and outputting a character code having the highest degree of similarity as the recognition result.
      <br/>
      However, none of the methods or devices have been publicized having a recognition ratio of 100% in the present character recognition techniques.
      <br/>
      Therefore, research institutes and companies have made various attempts to suppress the false recognition ratio to lower value.
    </p>
    <p num="20">
      One of them includes reproducing the standard pattern of character stored in the recognition dictionary in practice.
      <br/>
      This method includes reproducing the hand data by sequentially drawing the character data (coordinate data) within the recognition dictionary, so that the user can cause user's hand data to approximate to the standard pattern while referring to reproduced hand data to obtain a higher recognition ratio.
    </p>
    <p num="21">
      However, in the above conventional example, the character data within the recognition dictionary is usually stored in normalized state to absorb variations in the actual position and size as input.
      <br/>
      Hence, when reproducing the character, the information of position and size has been lost, and it was impossible to recognize the original profile or state such as hand speed data.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="22">As described above, the present invention provides a hand-written character recognition device which is capable of displaying a registered pattern comprehensibly by providing registered pattern usage information memory means and registered pattern memory information display reflector means, wherein when the registered pattern is recognized as a recognition result, the recognition frequency and average recognition score of the character pattern are memorized in registered pattern usage information memory means, and when the display of registered pattern is designated, the registered pattern usage information is reflected on the display of the registered pattern.</p>
    <p num="23">As described above, according to the present invention, the registration process of character can be simply performed in the character input operation.</p>
    <p num="24">
      As described above, according to the present invention, when a user input character present in the user registration dictionary is reproduced, the color information and sound information are added via track information addition means and track information display means, with the display environments including the display speed made variably by a designation from the user.
      <br/>
      As a result, detailed information concerning the handwritten pattern can be offered to the user, facilitating the decision of whether or not the registered hand pattern is valid.
    </p>
    <p num="25">As described above, if the user designates a part of character pattern displayed, the user is allowed to view that part more concentratively among other character strokes by controlling a partial stroke designated to be displayed at a different speed from the other strokes, resulting in the effect of reducing wasteful time.</p>
    <p num="26">
      As described above, according to the present invention, the hand of the standard pattern can be understood by storing character data useful as the standard pattern without any processing when creating the recognition dictionary, and drawing the character data successively.
      <br/>
      This allows the user of the character recognition device to write user's handwritten character more recognizably, thereby giving rise to the learning effect.
      <br/>
      Also, when the recognition dictionary is a personal user dictionary, the profile of the character registered by the user can be confirmed.
    </p>
    <p num="27">
      Also, according to as aspect of the invention, since character data is stored in the recognition dictionary in normalized state, with the addition of the circumscribed frame information of standard pattern, the profile of character pattern normalized and the position and profile of actual character can be simultaneously observed when reproducing the character pattern.
      <br/>
      Therefore, it is possible to readily make a discrimination between similar characters due to the difference in size and position such as the syllabic nasal often appearing in Japanese characters.
      <br/>
      This can offer the information for greatly reducing false recognition between similar characters.
    </p>
    <p num="28">The recognition device as above is provided with a character reproducer to inform the user of the character information within the recognition dictionary, whereby the higher recognition ratio in the character recognition at the next time is expected.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="29">
      FIG. 1 is a configuration diagram of the main portion in the first embodiment.
      <br/>
      FIG. 2 is a configuration diagram of a user registration recognition device in the first embodiment.
      <br/>
      FIG. 3 is a window state transition diagram of the user registration recognition device in the first embodiment.
      <br/>
      FIG. 4 is a flowchart of the overall user registration.
      <br/>
      FIG. 5 is a flowchart of new user registration.
      <br/>
      FIG. 6 is a flowchart of user dictionary edit.
      <br/>
      FIG. 7 is a flowchart of character selection.
      <br/>
      FIG. 8 is a flowchart of character registration.
      <br/>
      FIG. 9 is a flowchart of character deletion.
      <br/>
      FIG. 10 is a flowchart of handwriting reproduction.
      <br/>
      FIG. 11 is a flowchart of cancel process.
      <br/>
      FIG. 12 is a flowchart of new character registration.
      <br/>
      FIG. 13 is a flowchart for memorizing character hand data.
      <br/>
      FIG. 14 is a flowchart of character selection in the new character registration.
      <br/>
      FIG. 15 is a flowchart of character registration in the new character registration.
      <br/>
      FIG. 16 is a flowchart of cancel process in the new character registration.
      <br/>
      FIG. 17 is a flowchart of character reproduction.
      <br/>
      FIG. 18 illustrates a user registration screen.
      <br/>
      FIG. 19 illustrates a new user registration screen.
      <br/>
      FIG. 20 illustrates a new character registration screen (before character selection).
      <br/>
      FIG. 21 illustrates a new character registration screen (after character selection).
      <br/>
      FIG. 22 illustrates a user dictionary edit screen.
      <br/>
      FIG. 23 illustrates a handwriting reproduction screen.
      <br/>
      FIG. 24 is a configuration view of a user name file.
      <br/>
      FIG. 25 is a configuration view of a registered character code table.
      <br/>
      FIG. 26 is a flowchart of usage frequency memory process.
      <br/>
      FIG. 27 is a configuration diagram of the main portion in the second embodiment.
      <br/>
      FIG. 28 is a flowchart of average score memory process in the second embodiment.
      <br/>
      FIG. 29 is a display example of a basic pattern list in the second embodiment.
      <br/>
      FIG. 30 is a block diagram of an information processing apparatus for carrying out the present invention.
      <br/>
      FIG. 31 is a functional block diagram illustrating the functional configuration of a character recognition device in the second embodiment.
      <br/>
      FIG. 32 is a block diagram illustrating the schematic configuration of the character recognition device in the second embodiment.
      <br/>
      FIGS. 33A and 33B are an input example of character into input unit in the character recognition device of the second embodiment, and a display example of its recognized result.
      <br/>
      FIG. 34 is a flowchart illustrating the character recognition and the selection and registration process of candidate character in the character recognition device of the second embodiment.
      <br/>
      FIG. 35 is a view illustrating the registration process in the second embodiment.
      <br/>
      FIG. 36 is a flowchart illustrating the operation in the second embodiment.
      <br/>
      FIG. 37 is a block diagram illustrating the configuration of a user registration application.
      <br/>
      FIG. 38 is a window state transition diagram of a user registration application.
      <br/>
      FIG. 39 is a flowchart of a process in an initial screen.
      <br/>
      FIG. 40 is a flowchart of a process in a new user registration screen.
      <br/>
      FIG. 41 is a flowchart of a process in a user dictionary editor.
      <br/>
      FIG. 42 is a flowchart of character selection process.
      <br/>
      FIG. 43 is a flowchart of transfer process to a new character registration routine.
      <br/>
      FIG. 44 is a flowchart of character deletion process.
      <br/>
      FIG. 45 is a flowchart of handwriting reproduction process.
      <br/>
      FIG. 46 is a flowchart of cancel process.
      <br/>
      FIG. 47 is a flowchart of a process in a new character register.
      <br/>
      FIG. 48 is a flowchart of handwriting column input process.
      <br/>
      FIG. 49 is a flowchart of character selection process.
      <br/>
      FIG. 50 is a flowchart of registration process.
      <br/>
      FIG. 51 is a flowchart of cancel process.
      <br/>
      FIG. 52 is a flowchart of a process in a handwritten character reproducer.
      <br/>
      FIG. 53 is an initial screen window.
      <br/>
      FIG. 54 is a new user registration screen window.
      <br/>
      FIG. 55 is a new character registration screen window (1) which is the same as FIG. 20.
      <br/>
      FIG. 56 is a new character registration screen window (2) which is the same as FIG. 21.
      <br/>
      FIG. 57 is a user dictionary edit window.
      <br/>
      FIG. 58 is a handwritten character reproduction screen window (1) which is the same as FIG. 23.
      <br/>
      FIG. 59 is a user name index file.
      <br/>
      FIG. 60 is a character code correspondence table.
      <br/>
      FIG. 61 is a block diagram of a reproduction display unit.
      <br/>
      FIG. 62 illustrates a data content of buffer.
      <br/>
      FIG. 63 illustrates a data content of buffer +.
      <br/>
      FIG. 64 is a flowchart of track information adder means.
      <br/>
      FIG. 65 is a handwritten character reproduction screen window (2).
      <br/>
      FIG. 66 is a handwritten character reproduction screen window.
      <br/>
      FIG. 67 is a handwritten character reproduction screen window (4).
      <br/>
      FIG. 68 is a handwritten character reproduction screen window (5).
      <br/>
      FIG. 69 illustrates the order of handwriting.
      <br/>
      FIG. 70 is a block diagram illustrating the configuration of an information processing apparatus.
      <br/>
      FIG. 71 is a configuration block diagram of a user registration application.
      <br/>
      FIG. 72 is a window state transition diagram of user registration application.
      <br/>
      FIG. 73 is a flowchart of a process in an initial screen.
      <br/>
      FIG. 74 is a flowchart of a process in a new user registration screen.
      <br/>
      FIG. 75 is a flowchart (1) of a process in a user dictionary editor.
      <br/>
      FIG. 76 is a flowchart (2) of a process in the user dictionary editor.
      <br/>
      FIG. 77 is a flowchart (3) of a process in a user dictionary editor.
      <br/>
      FIG. 78 is a flowchart (4) of a process in the user dictionary editor.
      <br/>
      FIG. 79 is a flowchart (5) of a process in the user dictionary editor.
      <br/>
      FIG. 80 is a flowchart (6) of a process in the user dictionary editor.
      <br/>
      FIG. 81 is a flowchart (1) of a process in a new character register.
      <br/>
      FIG. 82 is a flowchart (2) of a process in the new character register.
      <br/>
      FIG. 83 is a flowchart (3) of a process in the new character register.
      <br/>
      FIG. 84 is a flowchart (4) of a process in the new character register.
      <br/>
      FIG. 85 is a flowchart (5) of a process in the new character register.
      <br/>
      FIG. 86 is a flowchart of a process in a handwritten character reproducer.
      <br/>
      FIG. 87 is an initial screen window.
      <br/>
      FIG. 88 is a new user registration screen window.
      <br/>
      FIG. 89 is a new character registration screen window (1).
      <br/>
      FIG. 90 is a new character registration screen window (2) which is the same as FIG. 20.
      <br/>
      FIG. 91 is a user dictionary edit screen window which is the same as FIG. 57.
      <br/>
      FIG. 92 is a handwritten character reproduction screen window which is the same as FIG. 23.
      <br/>
      FIG. 93 is a user name index file.
      <br/>
      FIG. 94 is a character code correspondence table.
      <br/>
      FIG. 95 illustrates a conventional art.
      <br/>
      FIG. 96 is a block diagram of a user dictionary switch.
      <br/>
      FIG. 97 is a flowchart of a process in the user dictionary switch.
      <br/>
      FIG. 98 is a window (1) of the user dictionary switch.
      <br/>
      FIG. 99 is a window (2) of the user dictionary switch.
      <br/>
      FIG. 100 is a configurational block diagram of an information processing apparatus according to the fourth embodiment.
      <br/>
      FIG. 101 is a block diagram of a handwriting display unit according to the fifth embodiment.
      <br/>
      FIG. 102 is a view of a screen for the user to register newly handwriting.
      <br/>
      FIG. 103 is a view of a screen for the user to redisplay the handwriting registered.
      <br/>
      FIG. 104 is a view in which a gesture is drawn on the screen of FIG. 103 by a pen.
      <br/>
      FIG. 105 is a flowchart illustrating an operation of handwriting display.
      <br/>
      FIG. 106 is a flowchart illustrating an operation of selecting the character stroke and changing the drawing speed.
      <br/>
      FIG. 107 is a flowchart of the discrimination method of whether or not the noticed point of character stroke is surrounded by the gesture.
      <br/>
      FIG. 108 is an example in which the noticed point is surrounded by the gesture.
      <br/>
      FIG. 109 is an example in which the noticed point of character stroke is not surrounded by the gesture.
      <br/>
      FIG. 110 is a view illustrating each partial pattern of a characrer "+character pullout}" on the font display area.
      <br/>
      FIG. 111 is a table illustrating the stroke number of each partial pattern of the character "+character pullout}", and its location information.
      <br/>
      FIG. 112 is a flowchart illustrating an operatin.
      <br/>
      FIG. 113 is a block diagram of a user register.
      <br/>
      FIG. 114 is a window state transition state view.
      <br/>
      FIG. 115 is a block diagram illustrating the configuration of an information processing apparatus.
      <br/>
      FIG. 116 is a block diagram illustrating the configuration of a user registration application.
      <br/>
      FIG. 117 is a window state transition diagram of the user registration application.
      <br/>
      FIG. 118 is a flowchart of a process in an initial screen.
      <br/>
      FIG. 119 is a flowchart of a process in a new user registration screen.
      <br/>
      FIG. 120 is a flowchart of a process in a user dictionary editor.
      <br/>
      FIG. 121 is a flowchart of character selection process.
      <br/>
      FIG. 122 is a flowchart of transfer process to a new character registration routine.
      <br/>
      FIG. 123 is a flowchart of character deletion process.
      <br/>
      FIG. 124 is a flowchart of handwriting reproduction process.
      <br/>
      FIG. 125 is a flowchart of cancel process.
      <br/>
      FIG. 126 is a flowchart of a process in a new character register.
      <br/>
      FIG. 127 is a flowchart of handwriting column input process.
      <br/>
      FIG. 128 is a flowchart of character selection process.
      <br/>
      FIG. 129 is a flowchart of registration process.
      <br/>
      FIG. 130 is a flowchart of cancel process.
      <br/>
      FIG. 131 is a flowchart of a process in a handwriting reproducer.
      <br/>
      FIG. 132 is an initial screen window.
      <br/>
      FIG. 133 is a new user registration screen window.
      <br/>
      FIG. 134 is a new character registration screen window (1).
      <br/>
      FIG. 135 is a new character registration screen window (2).
      <br/>
      FIG. 136 is a user dictionary edit window.
      <br/>
      FIG. 137 is a handwritten character reproduction screen window (2).
      <br/>
      FIG. 138 is a user name index file.
      <br/>
      FIG. 139 is a character code correspondence table.
      <br/>
      FIG. 140 is a recognition dictionary data format example (1).
      <br/>
      FIG. 141 is an explanation view of character frame.
      <br/>
      FIG. 142 is a recognition dictionary data format example (2).
      <br/>
      FIG. 143 is an explanation view of character frame and circumscribed frame.
      <br/>
      FIG. 144 is a handwritten character reproduction window in accordance with data of FIG. 142.
      <br/>
      FIG. 145 is a block diagram illustrating the configuration of an information processing apparatus in this embodiment.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="30">Embodiment 1</p>
    <p num="31">A first preferred embodiment according to the present invention will be now described in detail with reference to FIGS. 1 to 30.</p>
    <p num="32">
      FIG. 30 is a schematic configuration diagram of an information processing apparatus according to one embodiment of the present invention.
      <br/>
      In the same figure, reference numeral 1 represents a CPU for controlling the whole apparatus, wherein various processings are performed in accordance with programs stored in a ROM 2.
      <br/>
      Reference numeral 2 represents a ROM for storing a control program, an error processing program, and various programs operating in accordance with the flowcharts as hereinafter described.
      <br/>
      Reference numeral 3 represents a RAM for use as the work area of various programs and the temporary save area at the time of error processing.
      <br/>
      In this RAM are stored various data bases, including dictionaries for use with the recognition, as will be described later, a user dictionary 106, a user name index file 107, a character type file 108, and a character standard stroke number data base 109.
      <br/>
      Reference numeral 4 represents a coordinate input unit having a transparent coordinate input plate, not shown, and a pen, not shown, for designating the position of coordinate point on the coordinate input plate, wherein electromagnetic induction or ultrasonic vibration is used in detecting the position of coordinate point.
      <br/>
      Reference numeral 5 represents a VIDEO RAM (hereinafter referred to as "VRAM") having a memory corresponding one by one to the coordinate point on the coordinate input plate and storing bit information of a coordinate point input on the coordinate input plate or bit information of a dot calculated based on the coordinate point as will be described later.
      <br/>
      Reference numeral 6 represents a display for displaying bit image based on bit information stored in VRAM 5, wherein this display 6 uses an LCD but may be an EL element or CRT, for example.
      <br/>
      On this display 6, a variety of windows are displayed.
    </p>
    <p num="33">
      FIG. 1 is a configuration diagram representing the configuration of a user registration character recognition process which is a feature of the present invention.
      <br/>
      In FIG. 1, reference numeral 103-1 represents recognition pattern register means, which corresponds to a new character register 104 in FIG. 2.
      <br/>
      Reference numeral 103-2 represents a user registration dictionary used by this user registration application.
      <br/>
      Reference numeral 103-3 represents recognition means for making a recognition using a dictionary registered by this user registration application, the recognition method relies on making a recognition in accordance with a well-known algorithm as described in Japanese Laid-open Patent Publication No. 62-39460 to transmit the recognized result externally, as well as to registered pattern usage history memory means 103-6.
      <br/>
      Reference numeral 103-7 represents a basic dictionary in which character data preregistered in normal writing format is memorized.
      <br/>
      Recognition means 103-3 transmits the recognized result using both the basic dictionary and the user registration dictionary.
      <br/>
      If the display operation of a list of user registered patterns is instructed from the external, the usage frequency memorized in 103-6 is added to the data of registration dictionary 103-2 to be transmitted to usage history display reflector-means 103-5.
      <br/>
      Reference numeral 103-5 represents usage history display reflector means for changing the gray scale of character display of registered pattern, depending on the usage frequency transmitted from 103-6, to transmit a display instruction to registered pattern display means 103-4.
      <br/>
      Reference numeral 103-4 represents registered pattern display means for displaying a list of user registered patterns as represented by a display example 2102 in FIG. 22 in accordance with an instruction transmitted from 103-5.
    </p>
    <p num="34">
      FIG. 2 is a configuration block diagram of a user registration application in which the present invention is comprehended.
      <br/>
      Reference numerals 101 to 106 represent units each serving as a functional element of user registration in the on-line character recognition, the units being classified into a window application execution section with GUI (Graphical User Interface) and a user dictionary section.
      <br/>
      List of registered patterns with the usage frequency characteristic of the present invention reflected therein is displayed by user dictionary editor 103 in FIG. 2.
      <br/>
      The whole of actual user registration will be described below.
    </p>
    <p num="35">
      Initial screen 101 allows for the display of the list of registered users, and the confirmation for the owner of user dictionary presently set.
      <br/>
      It has other functions including designating the transfer to either the mode of newly registering the user or the mode of editing registered character within user dictionary.
      <br/>
      New user register 102 effects the registration of the new user.
      <br/>
      User dictionary editor 103 displays the list of characters within the user dictionary, and allows for the designation of, deletion or handwritten reproduction for each character.
      <br/>
      This list of characters is shown in FIG. 22. When displaying this list, the usage frequency of user registered character pattern characteristic of the present invention is reflected on the display of character pattern, and as will be seen from FIG. 22, the character with high usage frequency is displayed at a dense gray scale, while the character with low usage frequency is displayed at a sparse gray scale.
    </p>
    <p num="36">
      Also, it includes a designating function for newly registering the character handwritten by the user.
      <br/>
      New character register 104 carries out the character registration designated at the previous stage 103.
      <br/>
      Handwritten character reproducer 105 draws or reproduces the registered character designated at the previous stage 103 in the hand order.
      <br/>
      User dictionary 106 stores information of registered characters to implement the above functions.
      <br/>
      Herein, a plurality of users own different user dictionaries.
    </p>
    <p num="37">
      FIG. 3 is a window state transition diagram of user registration application.
      <br/>
      Reference numerals 201 to 205 represent windows each executing the above function, and reference numeral 206 represents a system to which the control is returned when this user registration application is ended.
      <br/>
      The arrows in the figure indicate the flow of control command with the button control in each window.
      <br/>
      The flow of control command and the transition of windows will be described below.
    </p>
    <p num="38">
      If a "new user registration" command is issued in a new item window 201, a new user registration window 202 appears newly in the form of pop-up window.
      <br/>
      If a "registration &amp; end" command is issued in the new user registration window 202, this pop-up window disappears, and the control is returned to the new item window 201.
      <br/>
      If a "user dictionary edit" command is issued in the new item window 201, the new item window 201 disappears, and a user dictionary edit window 203 appears newly.
      <br/>
      Herein, if a "new character registration" command is issued, a new character registration window 204 appears in the form of pop-up window.
      <br/>
      The character registration operation on this window can be repeatedly executed unless an "end" command is issued.
      <br/>
      If the "end" command is instructed after the character is registered, the new character registration window 204 disappears, and the control is returned to the user dictionary edit window 203.
      <br/>
      A "character delete" command can be executed by plural times in the user dictionary edit window 203.
      <br/>
      Further, if a "handwritten reproduction" command is issued, a handwritten character reproduction window 205 appears in the form of pop-up window.
      <br/>
      At the same time when the window is displayed, the reproduction is started, whereby the use of a "redisplay" command allows for the redisplay repetitively.
      <br/>
      The handwritten character reproduction window disappears by issuing the "end" command, and the control is returned to the user dictionary edit window.
      <br/>
      If the "end" command is issued in the user dictionary edit window 203, the window of its own disappears and the new item window 201 appears again.
      <br/>
      Accordingly, it is only when the "end" command is issued in the initial item window 201 that the user registration application can be ended.
    </p>
    <p num="39">Note that the number of windows in the user registered application is two when the pop-up window of window 202, 204 or 205 appears, and one when the pop-up window of window 201 or 203 appears, as described above.</p>
    <p num="40">The details of the function in each window and the process flow will be now described with reference to the drawings of FIG. 4 and beyond.</p>
    <p num="41">
      First, the process flow in the initial item window will be described using FIG. 18 and a flowchart of FIG. 4.
      <br/>
      In FIG. 18, reference numeral 1701 represents a message display area, reference numeral 1703 represents a user name list display and user dictionary owner display area, reference numeral 1702 represents a scroll bar for use when registered users can not be accommodated within one screen, and reference numerals 1704 to 1707 represent buttons for calling a function by pen tap.
      <br/>
      The present invention uses a combination of a liquid crystal and a coordinate input means with a pen.
      <br/>
      This can be replaced with a coordinate input unit comprised of a CRT and a mouse.
      <br/>
      In this case, the pen tap is replaced by the click of mouse switch.
    </p>
    <p num="42">
      If the user registration application is started, a window is created at step 301, whereupon a registered user name is read from a user name index file 107.
      <br/>
      This user name index file is a disk file having a structure as shown in FIG. 24, and which is readable and writable.
      <br/>
      The created window is as shown in FIG. 18. At step 302, the owner of user dictionary set in the system is discriminated.
      <br/>
      If the owner is discriminated, the user who is an owner of user dictionary is marked in the user name display area 1701 at step 303.
      <br/>
      For example, the user whose user name is "Arai" is an owner in FIG. 18. If the processing up to this point is ended, the procedure waits for a command instruction by the user at step 304.
      <br/>
      If the user name is selected directly by a pointing device such as a pen, the change of the owner of user dictionary is demanded to the system at step 308 to change the setting.
      <br/>
      For other operations with the button command, if a "user dictionary edit" button 1704 is depressed (306), the control is transferred to a user dictionary edit routine, if a "new user registration" button 1705 is depressed (307), the control is transferred to a new user registration routine, and if a "cancel" button 1706 is depressed, the setting change of user dictionary with the user name selection as performed before this point is invalidated, and the user dictionary setting is restored to the state before starting the application.
    </p>
    <p num="43">If an "end" button 1707 is depressed (305), this user registration application is ended, and the control is returned to the system.</p>
    <p num="44">
      The process flow in the new user registration window will be described below with reference to FIG. 19 and a flowchart of FIG. 5.
      <br/>
      In FIG. 19, reference numeral 1801 represents a user name input area for inputting the user name, reference numeral 1802 represents a cancel function button for canceling the input of user name, and reference numeral 1803 represents a registration &amp; end function button for registering the input user name and ending this window.
    </p>
    <p num="45">
      If a "new user registration" command 1704 in the previous initial item window is instructed, a pop-up window as shown in FIG. 19 is displayed (401).
      <br/>
      Then, the operation is placed in a wait state for a command to be instructed by the user.
      <br/>
      If an event signal by pen-down is detected in a user name input area 1801 (404), an existing recognition routine is called.
      <br/>
      This routine subjects a character hand drawn in the user name input area to the on-line character recognition process to convert character data to character code (407).
      <br/>
      If a "registration &amp; end" button command 1803 is instructed, the user name input and converted in the user name input area is determined as a new user name which is then additionally registered to the user name index file 107 (406).
      <br/>
      Thereafter, the current window is erased, and the control is returned to the initial item window again.
      <br/>
      On the other hand, if a "cancel" button command 1802 is instructed, the characters entered into the user name input area are all deleted (408), and the operation is placed again in a wait state for a user name input command.
    </p>
    <p num="46">
      The process flow in the user dictionary editor will be described below with reference to FIG. 22 and a flowchart of FIG. 6.
      <br/>
      In FIG. 22, reference numeral 2101 represents a message display area, reference numeral 2102 represents a registered character list display area characteristic of the invention, reference numeral 2103 represents a scroll bar which allows more registered characters to be displayed, and reference numerals 2104 to 2108 represent function calling buttons by pen tap.
      <br/>
      As will be seen from FIG. 22, the usage frequency of registration pattern can be known at a glace by virtue of the depth of character display.
    </p>
    <p num="47">
      If a "user dictionary edit" button 1705 is depressed, a user dictionary 106 designated is copied and stored separately (512).
      <br/>
      This provides for a back up copy if the dictionary edit operation is canceled.
      <br/>
      Then, the user dictionary is opened to read character codes within the user dictionary into a buffer area (502).
      <br/>
      Herein, to make characters within the user dictionary to correspond to displayed characters, one to one, a character code correspondence table is created (601 in FIG. 7).
      <br/>
      For example, when six characters are registered, the correspondence table is as shown in FIG. 25.
    </p>
    <p num="48">
      In FIG. 25, the column next to the character code is an area for memorizing the character pattern usage frequency.
      <br/>
      This character code correspondence table is created because if a multiplicity of dictionary character data with the same character code exist, the retrieval of dictionary data is not allowed uniquely only with the information of character code in the editing of character with the "delete" or "reproduce" command.
      <br/>
      User dictionary edit window as illustrated in FIG. 22 is displayed based on this character code correspondence table (503).
    </p>
    <p num="49">
      At step S504 in FIG. 6, a character code read is displayed in the registered character list display area 2101, while the gray scale of the character on the display is changed depending on the value of usage frequency stored in the memory area as illustrated in FIG. 25. The gray scale is 100% if the usage frequency is 90 or greater, 75% if the usage frequency is from 75 to 90, 50% if the usage frequency is from 50 to 75, and 25% if the usage frequency is below 50.
      <br/>
      In an example of FIG. 25, characters "+character pullout}" having a usage frequency of 100 are displayed at a gray scale of 100%, a character "+character pullout}" having a usage frequency of 75 is displayed at a gray scale of 75%, a character "+character pullout}" having a usage frequency of 50 is displayed at a gray scale of 50%, and a character "+character pullout}" having a usage frequency of 20 is displayed at a gray scale of 25%, as illustrated in FIG. 22.
    </p>
    <p num="50">The setting process of the usage frequency will be now described along a flowchart of FIG. 26. At step S21, input stroke data is recognized in accordance with a conventionally known algorithm as described in Japanese Laid-open Patent Publication No. 62-39460, and using a user registered dictionary 103-2 and a basic dictionary 103-7 as illustrated in FIG. 1, so that a character code is output as the recognition result.</p>
    <p num="51">
      Next, at step S22, a discrimination is made to see whether or not the recognition result is a user registered pattern.
      <br/>
      For example, where "+character pullout}" is registered in the example, if "+character pullout}" is input and recognized as a registered pattern "+character pullout}", the program proceeds to step S23, or if it is recognized as a basic dictionary pattern "+character pullout}", the frequency memory process of user registered dictionary pattern is ended.
    </p>
    <p num="52">
      At step S23, frequency information of user registered pattern in the usage frequency memory area is incremented.
      <br/>
      This is simply accomplished by counting one once the registered pattern is used.
      <br/>
      That is, if "+character pullout}" is input and recognized as "+character pullout}" in the user registered pattern, the value of user registered pattern "+character pullout}" in the usage frequency memory area is incremented.
      <br/>
      In FIG. 25, value 100 located next to value 0 * 2422 in the first row is counted to obtain 101.
      <br/>
      However, the usage frequency used in practice is different depending on the character.
      <br/>
      Since the usage frequency of "+character pullout}" is high and that of "+character pullout}" is low, it is necessary that the relative actual usage frequency may be set in consideration of such situation.
      <br/>
      The value of usage frequency memorized divided by (the cumulative character recognition number multiplied by the value of character usage frequency) is reflected as the actual usage frequency on the display.
      <br/>
      Therefore, the rarely used character will reach a usage frequency of 100, as illustrated in FIG. 25, if adapted several times, while a character which will be at least once written in ten characters is prevented to reach a usage frequency of 100 unless adapted 10 times after 100 times of recognition has been made.
    </p>
    <p num="53">
      Thereafter, the operation is placed in the wait state for a command instructed by the user (505).
      <br/>
      If a signal by pen down is detected in the registration character list display area, a character located by pen down is selected (506).
      <br/>
      The display number on the character code table is obtained from positional information of the selected character.
      <br/>
      The storage location of dictionary character data practically stored in the user dictionary is determined from its display number to obtain dictionary character data to be edited.
      <br/>
      If a "character registration" button command 2104 is designated (507), the control is transferred to a new character registration routine (701 in FIG. 8).
      <br/>
      If a "character delete" button command 2105 is designated (509), a discrimination is made as to whether or not the character in the registered character list display area is selected (801 in FIG. 9).
      <br/>
      If not selected, the operation returns to the wait state for a command instruction (505).
      <br/>
      If already selected, the dictionary data storage area of the character to be deleted is located using the character code correspondence table as previously noted.
      <br/>
      When it is found, the dictionary character data stored in the actual user dictionary is deleted (802).
      <br/>
      At the same time when the content of user dictionary 106 is changed, the character code correspondence table is also changed to update the character display of registered character list display area (504).
      <br/>
      If a "handwritten reproduction" button 2106 is depressed (509), the control is transferred to a handwritten reproduction routine when there is a character selected, or the operation is placed in the wait state for a character to be selected when there is no character selected (901).
      <br/>
      If a "cancel" button command 2107 is designated (510), a discrimination is made as to whether or not the character in the registered character list display area is selected (1001 in FIG. 11).
      <br/>
      If any character is selected, the character is invalidated, the display is placed in a character unselected state (1002), and the content of registered dictionary is restored to the original state before starting the dictionary edit window (1003).
      <br/>
      With this operation, the editing is enabled to restart.
      <br/>
      An "end" button command 2108 erases this user dictionary edit window, and returns the control to the previous initial item window.
    </p>
    <p num="54">The process flow of new character register will be described below using FIGS. 20 and 21 and a flowchart of FIG. 12. In FIG. 20, reference numeral 1901 represents a message display area, reference numeral 1902 represents a handwritten character input area, reference numeral 1903 represents a font character input area, reference numeral 1904 represents an input code list area, reference numeral 1905 represents a scroll bar which allows more character codes to be displayed, and reference numerals 1906 to 1908 represent function calling buttons by pen tap.</p>
    <p num="55">
      If a "character registration" 2104 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 20 is created for the display in the form of pop-up window (1101).
      <br/>
      By the character registration herein used is meant a task for assigning character data by user's original handwriting to corresponding character code.
      <br/>
      Hence, a data input area for acquiring user's handwritten data and a character code input area corresponding thereto are necessary, wherein "handwritten" column 1902 is a handwritten data input area and "font" column 1903 is a character code input area, as illustrated in FIG. 20. Reference numeral 1904, located centrally downward in FIG. 20, represents an input code list for inputting the character code, the character code being input by selecting it from the list.
      <br/>
      Accordingly, the registerable character types must be displayed in the input code list, for which it is necessary that a character type file 108 storing the registerable character types is created (1109).
      <br/>
      The registerable character types are displayed by reading this file (1102).
      <br/>
      If this display is ended, the operation waits for a command instruction from the user (1103).
      <br/>
      If a pen down input signal by the user is detected in the "handwritten" column, its hand data is stored as a set of two-dimensional coordinates in a buffer area (1201 in FIG. 13), and drawn in the "handwritten" column at the same time.
      <br/>
      FIG. 20 illustrates a state where the user has entered a handwritten pattern corresponding to "+character pullout}" as indicated at 1902.
      <br/>
      The input of corresponding character code is performed in such a manner as to select a character code from the input code list, temporarily store it in the buffer area, and then get it (1301 in FIG. 14).
      <br/>
      The selected character is displayed in larger scale in the "font" column at every time (1302).
      <br/>
      If a "registration" button command 1906 is designated, it is confirmed whether or not both the handwritten character in the "handwritten" column and the character in the "font" column are input (1401).
      <br/>
      If both are input, the creation of a recognition dictionary for that character is started (1403).
      <br/>
      The creation of the recognition dictionary is accomplished by creating the standard pattern from character data by a well-known method.
      <br/>
      As a result, this standard pattern is newly created in the user dictionary 106, or added thereto (1404).
      <br/>
      If the input of hand data and character code is insufficient, a warning is generated (1402), and the same process is repeated until both the handwritten character data and the character code of the character to be registered are input.
      <br/>
      If a "cancel" button command 1907 is designated, both the character data and the character code input in the "handwritten" and "font" columns are invalidated (1501 in FIG. 16), and the input is enabled again.
      <br/>
      FIG. 21 illustrates a state where a character "+character pullout}" has been entered by selecting it from the character code list.
      <br/>
      The "end" button command 1908 serves to erase this new character registration window and return the control to the user dictionary editor.
    </p>
    <p num="56">The process flow in the handwritten character reproducer will be described below using FIG. 23 and a flowchart of FIG. 17. In FIG. 23, reference numeral 2201 represents a handwritten character reproduction area, reference numeral 2202 represents a font display area destined for the handwritten character, reference numeral 2203 represents a hand stroke number display area of the handwritten character, reference numeral 2204 represents a standard stroke number display area of subject font, and reference numerals 2205, 2206 represent function calling buttons by pen tap.</p>
    <p num="57">
      If a "handwritten reproduction" command button 2106 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 23 is created and displayed in the form of pop-up window (1601).
      <br/>
      Since it is already confirmed that the character code is selected in the previous user dictionary editor, the enlarged font of the character is first displayed in the font area (1602).
      <br/>
      The number of strokes of the character is displayed together with the font display (1603), which is accomplished by preparing for a data base for character standard stroke number 109 in which the standard stroke number is described for each character (1607), and retrieving the subject character.
      <br/>
      To reproduce the character data within the user dictionary 106 requires temporary extraction of dictionary data corresponding to the selected character, which is enabled by utilizing the previous character code correspondence table.
      <br/>
      Since the dictionary data of corresponding character contains coordinate points as well as information of pen down and pen up, it is possible to determine of which stroke number the coordinate point belongs to a hand.
      <br/>
      Using this, the handwriting can be drawn by linearly connecting the coordinate points sequentially within the same stroke (1604).
    </p>
    <p num="58">
      The number of strokes for hand data is defined by counting how many times the pen down is made, and displayed (1605).
      <br/>
      If the button command (1606) is "redisplay" 2205, the reproduced drawn data is erased, and hand reproduction is performed again by using dictionary data.
      <br/>
      If an "end" button command 2206 is designated, this handwritten character reproduction window is erased, and the control is transferred to the registered character editor.
      <br/>
      FIG. 23 illustrates a view where the character "+character pullout}" is selected and character hand is half reproduced.
    </p>
    <p num="59">
      Note that the window creation and signal detection as described in the text can be accomplished by using any of well-known techniques.
      <br/>
      While a pen was adopted as the pointing device, it is apparent that a mouse can be operated to enable the selection and entry.
    </p>
    <p num="60">
      In this embodiment, if registered pattern usage history memory means 103-6 of FIG. 6 is replaced with registered pattern average score memory means 103-9 of FIG. 27, and usage history display reflector means 103-5 of FIG. 1 is replaced with average score display reflector means 103-8 of FIG. 27, the recognized average score can be memorized and reflected on the display of registered pattern list when the recognized result is a user registered pattern.
      <br/>
      The memory process of average score will be described below along a flowchart of FIG. 28.
    </p>
    <p num="61">
      At step S21, input stroke data is recognized by recognition means 103-3 of FIG. 27, and the character code and score are output as the recognition result.
      <br/>
      The score has a maximum point of 100 and a minimum point of 0.
    </p>
    <p num="62">
      At step S22, a discrimination is made as to whether or not the character code of recognition result is a pattern of registration dictionary.
      <br/>
      This can be simply achieved because recognition means 103-3 makes a recognition by distinguishing between the user registered dictionary pattern and the basic dictionary pattern.
    </p>
    <p num="63">If the character code is a registered pattern, the program proceeds to step S24, of if the recognition result is a pattern of basic dictionary, the registered pattern score memory process is ended.</p>
    <p num="64">
      At step S24, the average score of registered pattern is calculated, and memorized in the average score memory area.
      <br/>
      In the average score memory area of registered pattern are memorized the current average score and the number of times of recognition.
      <br/>
      It is seen that the usage frequency memory area of FIG. 25 has been replaced with the average score memory area.
      <br/>
      The current average score multiplied by the number of times of recognition, to which a score of this time is added, is divided by the stored number of times of recognition plus one to obtain a new average score, and the new average score and the recognized score up to this time are memorized.
    </p>
    <p num="65">The process wherein the average score thus obtained is used to display the character code read at step 504 in FIG. 6 in the registered character list display area 2101 will be described below.</p>
    <p num="66">
      In this case, the gray scale of displaying the character is changed depending on the value in the average score memory area.
      <br/>
      The gray scale is 100% if the average score is 80 or greater, 75% if the average score is from 75 to 80, 50% if the average score is from 50 to 75, and 25% if the average score is below 50.
      <br/>
      In an example of FIG. 25, characters "+character pullout}" having an average score of 100 are displayed at a gray scale of 100% as illustrated in FIG. 22, a character "+character pullout}" having an average score of 75 is displayed at a gray scale of 75%, a character "+character pullout}" having an average score of 50 is displayed at a gray scale of 50%, and a character "+character pullout}" having an average score of 20 is displayed at a gray scale of 25%.
    </p>
    <p num="67">The characters having bad average score can provide easy-to-use information for the user because correct character pattern is unregistered, and readily recognizable if registered again.</p>
    <p num="68">
      Also, by providing the average score memory area in the basic dictionary, a process equivalent to the registered pattern average memory process can be performed when the basic pattern is recognized.
      <br/>
      This process, if performed, can be reflected on the average score of its character in the display of basic dictionary list, as illustrated in FIG. 29. For frequency written characters having low average scores in the basic character pattern, the usability can be drastically improved if the user pattern is registered.
    </p>
    <p num="69">
      It will be appreciated that the color may be naturally used in the color display unit although the list is differently displayed.
      <br/>
      Also, the numerical value of memory area can be displayed directly under the character.
      <br/>
      Or the graphic representation of crossbar may be presented under the character.
    </p>
    <p num="70">Embodiment 2</p>
    <p num="71">A second preferred embodiment of the present invention will be now described with reference to the accompanying drawings of FIGS. 31 to 36.</p>
    <p num="72">FIG. 31 is a block diagram illustrating the functional configuration of a character recognition device in this embodiment.</p>
    <p num="73">
      In FIG. 31, reference numeral 1 represents an input unit, which is comprised of a coordinate input device such as a tablet, wherein a character to be recognized can be entered by the user who draws or handwrites the character to be recognized on this tablet, using a pen or the like.
      <br/>
      The character data thus input is in the form of a coordinate point set designated by a pen or the like on the tablet plane.
      <br/>
      Also, this input unit 1 transmits coordinate data composed of one character as input to a recognizer 2, as well as to a memory unit 7 for memory.
    </p>
    <p num="74">
      In the figure, a recognizer 2 is a well-known character recognition unit for reading coordinate data indicating the track of one character and transmitting a plurality of candidate characters with the character code of recognized result and its recognition score as one candidate by referring to a basic dictionary 3 and a registration dictionary 4.
      <br/>
      Reference numeral 5 represents a candidate registration selector for allowing the user to select a correct recognition result from the plurality of candidate characters output from the recognizer 2 arranged in the order of score.
      <br/>
      Herein, the normal candidate selector is equipped with a registration calling function, which can be readily called if the user sees the candidate of recognition and intends the recognition registration.
      <br/>
      Reference numeral 6 represents a display for displaying a candidate registration selection screen and so on.
      <br/>
      Reference numeral 8 represents a recognition register, which operates upon a calling for registration being instructed by the candidate registration selector 5.
      <br/>
      This recognition register 8 memorizes feature data in the registration dictionary 4, with the track of one character input from the input unit 1 and memorized in the memory unit 7 as the input data, in the format of dictionary for use in the recognizer 2.
    </p>
    <p num="75">FIG. 32 is a block diagram illustrating the schematic configuration of the character recognition device in this embodiment, wherein common parts to FIG. 31 are indicated by like numbers.</p>
    <p num="76">
      In FIG. 32, reference numeral 21 represents an input pen for designating the coordinate on the tablet plane of input unit 1, the coordinate position designated by this pen 21 being transmitted via an interface unit 22 to a system bus 30.
      <br/>
      Display 6, which is provided underneath a transparent tablet of input unit 1, displays the hand data of a character input by handwriting on the tablet plane and its recognized result.
      <br/>
      Reference numeral 24 represents a CPU for controlling the whole device in accordance with a control program stored in a ROM 25, wherein.the functions of recognizer 2, candidate registration selector 5, memory unit 7 and recognition register 8, as shown in FIG. 31, are implemented by the CPU 24, ROM 25 and RAM 27.
      <br/>
      The ROM 25 stores the control program for the CPU 24, and various data such as character fonts, corresponding to character codes.
      <br/>
      Reference numeral 26 represents a dictionary memory for use in the recognition, which contains the basic dictionary 3 and the registration dictionary 4, as previously described.
      <br/>
      Reference numeral 27 represents a RAM for use as the work area for the CPU 26, as well as temporarily memorizing various data.
      <br/>
      Reference numeral 29 represents an external memory such as a hard disk for storing various data input via controller 28.
      <br/>
      Note that the previously-cited dictionaries are stored in this external memory 29.
    </p>
    <p num="77">The operation of the character recognition device in this embodiment will be described below with reference to FIGS. 33A and 33B.</p>
    <p num="78">
      FIG. 33A is a view illustrating the tablet plane of input unit 1, the display content in this figure being displayed on the display 6 provided in the lower side of the transparent tablet plane.
      <br/>
      Reference numeral 301 represents a handwritten character input area, one character being entered into each lattice of this area by the input pen 21.
      <br/>
      FIG. 33A illustrates an example where the user writes by hand "I am a doctor".
      <br/>
      In this state, if the recognition button 302 is depressed by the input pen 21, the recognition operation is started in the recognizer 2.
      <br/>
      Note that the data indicating the track of a character input by the user is memorized in the memory unit 7 for every character.
    </p>
    <p num="79">
      FIG. 33B illustrates a state where the recognized result by the recognizer 2 is displayed.
      <br/>
      Herein, the character of each lattice is recognized, the character font corresponding to character code of recognized character is read from the ROM 25, and displayed on the display 6.
      <br/>
      On this screen, the recognized result and the candidates of recognized character can be displayed.
      <br/>
      That is, if the lattice in the handwritten character input area 301 ("+character pullout}" in an example of FIG. 33) is designated, as illustrated in FIG. 33B, recognized candidate characters ("+character pullout}" "+character pullout}") are displayed in an area indicated at 304.
      <br/>
      In this case, although the user entered "+character pullout}" in the lattice 302, the character was recognized as "+character pullout}".
    </p>
    <p num="80">
      Herein, if a character in the lattice 303 as indicated in FIG. 33A is entered, "+character pullout}" is possibly registered as the most preferential candidate character where the order of recognition candidates is as shown in FIG. 33B. If "+character pullout}" does not exist in the recognition candidate, it is meant that the user's handwritten character has not been recognized, so that the recognition candidate character may be possibly registered.
      <br/>
      In such a case, by designating a registration button as indicated at 305, the recognition register 8 of FIG. 1 can be activated.
    </p>
    <p num="81">The operation from the inputting of handwritten character to the registration selection in the character recognition device of this embodiment will be described below with reference to a flowchart of FIG. 34. Note that the control program for executing this processing is stored in the ROM 25.</p>
    <p num="82">
      First, at step S1, a subject character of recognition is entered on the tablet of input unit 1, as shown in FIG. 33A. The hand data of the input character is displayed on the display 6 as if it were directly drawn on the tablet.
      <br/>
      Thus, the characters are sequentially entered into the lattices of the character input area 301, with character data (hand data) memorized one in each lattice, and thereafter, if the recognition button 302 is designated, the program proceeds from step S2 to step S3, where the character recognition process is started.
    </p>
    <p num="83">
      This recognition process performs a recognition for each character, so that the candidates for each character and its score are output.
      <br/>
      Then, the program proceeds to step S4, where from the result of recognized character in each character frame, a character code corresponding to a character having the best score is obtained from among the character candidates, and a character pattern corresponding to the character code is read from the ROM 25 and displayed as illustrated in FIG. 33B. Then, when it is desired to select the candidate based on the recognition results, the subject character frame is designated as illustrated in a designation example of FIG. 33B, whereupon the program proceeds to step S5 to discriminate whether or not the candidate is selected.
    </p>
    <p num="84">
      If any of the lattices representing the recognition result is designated as illustrated in FIG. 33B, the program proceeds to step S6, where candidate characters are listed as illustrated in FIG. 33B. If no lattice is designated, the program proceeds to step S11 to discriminate whether or not the end of recognition input is designated.
      <br/>
      If the end is designated, the recognition process is ended.
    </p>
    <p num="85">
      At step S6, a list of candidates and a registration designation button 305 are displayed as illustrated in a display column 304 of FIG. 33B. In this state, if a character "+character pullout}" is designated, for example, the program proceeds from step S7 to step S8, where the candidate order is changed.
      <br/>
      Thereby, with the score of selected candidate character ("+character pullout}" in this example) being perfect as the first candidate, the program returns to step S4 to repeat the described processings.
    </p>
    <p num="86">
      If the registration button 305 is designated, the program proceeds from step S9 to step S10, where the registration process is initiated.
      <br/>
      In this case, the track of input subject character memorized in the memory unit 7 at step S1 is also given as a parameter.
      <br/>
      Thereafter, registered character is added as the candidate having the highest score, and the program returns to step S4 to display on the display 6 again.
      <br/>
      In the registration process at step S10, for example, a new registration screen is displayed on the display 6, the order of recognized candidate characters is changed on the screen, or when there is no subject character candidate, the input of the character is performed.
      <br/>
      Also, when neither candidate order change nor registration is designated, the program proceeds to step S11 to investigate whether or not the other key button is designated.
      <br/>
      If so, the program proceeds to step S12 to perform a process corresponding to the designated button.
    </p>
    <p num="87">
      In the above manner, the registration of a desired character can be made while confirming the recognized result of the character input or handwritten by the user.
      <br/>
      While in this embodiment, the registration button 305 was displayed on the candidate selection screen, it is noted that the registration button may be predisplayed or provided on the tablet plane.
      <br/>
      Further, a symbol denoting the registration is marked at one of the recognized candidate characters, and the registration process can be activated by designating the symbol.
    </p>
    <p num="88">
      While in this embodiment the registration is made in selecting the candidate of recognized result, an example in which the registration is made after the input of character will be described below.
      <br/>
      Note that the track of character as input is memorized in the memory unit 7 only if the character is candidate selected and corrected, and in registration, the hand data of character memorized in the memory unit 7 is displayed again on the display 6 to select whether or not it is registered.
    </p>
    <p num="89">FIG. 35 is a view illustrating a registration screen in this embodiment.</p>
    <p num="90">
      In the figure, reference numerals 402 to 404 represent track display areas for displaying the character as candidate selected or corrected among characters input as indicated in FIG. 33A. Herein, other blank lattices are used as the area for entering the character track which is newly registered independently of the input time as is conventional.
      <br/>
      Also, reference numerals 412 to 414 represent the type of character track, indicating whether the character track displayed in the track area 402 to 404 as the object of registration has been candidate selected (412), corrected (413), or totally newly registered (414).
    </p>
    <p num="91">
      In FIG. 35, it is indicated that a character "+character pullout}" in track area 402 has been candidate selected at the previous recognition input, and a character "+character pullout}" in track area 403 has been input but falsely written at the recognition input, or corrected and deleted because of no intended character among the candidates.
      <br/>
      Also, a character "+character pullout}" in track area 404 has been newly written at the new registration on this input screen, but not at the recognition input.
      <br/>
      These are shown by the types 412 to 414 as "candidate", "corrected" and "new", respectively.
    </p>
    <p num="92">
      FIG. 36 is a flowchart showing the operation of memory unit 7 at the recognition input in the character recognition device.
      <br/>
      The memory operation of character track used for the registration will be briefly described using this figure.
    </p>
    <p num="93">
      This flowchart is involved in the processing to be activated after steps S1 to S3 in FIG. 34, part of which has been omitted for simpler description.
      <br/>
      Also, the processing from step S4 to step S8 is exactly the same as that from step S4 to step S8 in FIG. 34, and the explanation thereof is omitted.
      <br/>
      Note that a control program for executing this processing is stored in ROM 25.
    </p>
    <p num="94">
      At step S21, a check is made to determine whether or not the correction button displayed on the display 6 has been designated, when no intended character is displayed among the candidates of recognition result, or when a wrong character is input.
      <br/>
      Herein, if correction process is designated, the program proceeds to step S22, the deletion of character previously input, and the input of a new character are conducted for the correction.
      <br/>
      Then, to memorize the character track before correction, the track before correction is temporarily stored, and passed to the processing at step S23.
      <br/>
      At step S23, the track of character subjected to change of candidate order and the flag indicating the change of candidate order are memorized, if the step S23 is executed after changing of candidate order performed at step S8.
      <br/>
      On the other hand, if the step S23 is executed after correction at step S22, the character track before correction transferred thereto and the flag indicating the correction process are memorized.
      <br/>
      In the end judgment of the recognition input process at step S25, if the end is judged, the memory area of input character is released, the track and type memorized at step S23 are stored as the information memorized for the registration.
    </p>
    <p num="95">
      As described above, if the memory unit 7 is prepared for the registration, the track and type information as indicated at 402 to 404 and corresponding 412 to 414 in FIG. 35 can be retrieved, based on this memorized information, when the registration process is activated.
      <br/>
      Thus, the character which has not been sufficiently recognized at the recognition input when the recognition registration is made and the character which is not present in the recognition dictionary can be simply registered.
    </p>
    <p num="96">
      As described above, if the information concerning the character track input at the recognition input is memorized, and the registration of the information is selected, the user has the effect of being able to readily and simply register the character not present in the recognition dictionary, or the character which is bad in the accuracy of recognition.
      <br/>
      Further, the user has more convenience because there is no need of entering the track to be registered again at the registration.
    </p>
    <p num="97">Embodiment 3</p>
    <p num="98">A third preferred embodiment of the present invention will be now described in detail with reference to FIGS. 37 to 70.</p>
    <p num="99">
      FIG. 70 is a schematic configurational diagram illustrating the configuration of an information processing apparatus according to one embodiment of the present invention.
      <br/>
      In the same figure, reference numeral 1 represents a CPU for controlling the whole apparatus, wherein various processings are performed in accordance with programs stored in a ROM 2.
      <br/>
      Reference numeral 2 represents a ROM for storing a control program, an error processing program, and various programs operating in accordance with the flowcharts as hereinafter described.
      <br/>
      Reference numeral 3 represents a RAM for use as the work area of various programs and the temporary save area at the time of error processing.
      <br/>
      In this RAM are stored various data bases, including dictionaries for use with the recognition, as will be described later, a user dictionary 106, a user name index file 107, a character type file 108, and a character standard stroke number data base 109.
      <br/>
      Reference numeral 4 represents a coordinate input unit having a transparent coordinate input plate, not shown, and a pen, not shown, for designating the position of coordinate point on the coordinate input plate, wherein electromagnetic induction or ultrasonic vibration is used in detecting the position of coordinate point.
      <br/>
      Reference numeral 5 represents a VIDEO RAM (hereinafter referred to as "VRAM") having a memory corresponding one by one to the coordinate point on the coordinate input plate and storing bit information of a coordinate point input on the coordinate input plate or bit information of a dot calculated based on the coordinate point as will be described later.
      <br/>
      Reference numeral 6 represents a display for displaying bit image based on bit information stored in VRAM 5, wherein this display 6 uses an LCD but may be an EL element or CRT, for example.
      <br/>
      On this display 6, a variety of windows, as will be described later, are displayed.
    </p>
    <p num="100">
      FIG. 37 is a configuration block diagram of a user registration application for implementing the present invention.
      <br/>
      Reference numerals 101 to 106 represent units each serving as a functional element of user registration in the on-line character recognition, the units being classified into a window application execution section (101 to 105) with GUI (Graphical User Interface) and a user dictionay section (106 to 109).
    </p>
    <p num="101">
      Initial screen 101 allows for the display of the list of registered users, and the confirmation for the owner of user dictionary presently set.
      <br/>
      It has other functions including a designating function for the mode of newly registering the user and the mode of editing registered character within user dictionary.
      <br/>
      New user register 102 effects the registration of the new user.
      <br/>
      User dictionary editor 103 displays the list of characters within the user dictionary, and allows for the designation of deletion or handwritten reproduction for each character.
      <br/>
      Also, it includes a designation function for newly registering the character handwritten by the user.
      <br/>
      New character register 104 carries out the character registration designated at the previous stage 103.
      <br/>
      Handwritten character reproducer 105 draws or reproduces the registered character designated at the previous stage 103 in the hand order.
      <br/>
      User dictionary 106 stores information of registered characters to implement the above functions.
      <br/>
      Herein, a plurality of users own different user dictionaries.
      <br/>
      User name index file 107 registers user names owing the user dictionary 106.
      <br/>
      Character type file 108 stores registerable character type data, and character standard stroke number data base 109 stores the standard stroke number for each character.
    </p>
    <p num="102">
      FIG. 38 is a window state transition diagram of user registration application.
      <br/>
      Reference numerals 201 to 205 represent windows for executing each function of FIG. 37, wherein each window, the example of which will be described later, appears on the display 6.
      <br/>
      Reference numeral 206 represents a system to which the control is returned when this user registration application is ended.
      <br/>
      The arrows in the figure indicate the flow of control command to be entered with the button control in each window.
      <br/>
      The flow of control command and the transition of windows will be described below using FIG. 38.
    </p>
    <p num="103">
      If a "new user registration" command is issued in new item window 201, a new user registration window 202 appears newly in the form of pop-up window.
      <br/>
      If a "registration &amp; end" command is issued in the new user registration window 202, this pop-up window disappears, and the control is returned to the new item window 201.
      <br/>
      If a "user dictionary edit" command is issued in the new item window 201, the new item window 201 disappears, and a user dictionary edit window 203 appears newly.
      <br/>
      Herein, if a "new character registration" command is issued, a new character registration window 204 appears in the form of pop-up window.
      <br/>
      The character registration operation on this window can be repeatedly executed unless an "end" command is issued.
      <br/>
      If the "end" command is instructed after the character is registered, the new character registration window 204 disappears, and the control is returned to the user dictionary edit window 203.
      <br/>
      A "character delete" command can be executed by plural times in the user dictionary edit window 203.
      <br/>
      Further, if a "handwritten reproduction" command is issued, a handwritten character reproduction window 205 appears in the form of pop-up window.
      <br/>
      At the same time when the window is displayed, the reproduction is started, whereby the use of a "redisplay" command allows for the redisplay repetitively.
      <br/>
      The handwritten character reproduction window disappears by issuing the "end" command, and the control is returned to the user dictionary edit window.
      <br/>
      If the "end" command is issued in the user dictionary edit window 203, the window of its own disappears and the new item window 201 appears again.
      <br/>
      Accordingly, it is only when the "end" command is issued in the initial item window 201 that the user registration application can be ended.
    </p>
    <p num="104">Note that the number of windows in the user registered application is two when the pop-up window of window 202, 204 or 205 appears, and one when the pop-up window of window 201 or 203 appears, as described above.</p>
    <p num="105">The details of the function in each window and the process flow will be now described with reference to the drawings of FIG. 39 and beyond.</p>
    <p num="106">First, the process flow in the initial item window will be described using FIG. 53 and a flowchart of FIG. 39. In FIG. 53, reference numeral 1701 represents a message display area, reference numeral 1702 represents a user name list display and user dictionary owner display area, reference numeral 1703 represents a scroll bar for use when registered users can not be accommodated within one screen, and reference numerals 1704 to 1707 represent buttons for calling a function by pen tap.</p>
    <p num="107">
      If the user registration application is started, a window is created at step 301, whereupon a registered user name is read from the user name index file 107.
      <br/>
      This user name index file is a disk file having a structure as shown in FIG. 59, and which is readable and writable.
      <br/>
      The created window is as shown in FIG. 53. At step 302, the owner of user dictionary set in the system is discriminated.
      <br/>
      If the owner is discriminated, the user who is an owner of user dictionary is marked in the user name display area 1701 at step 303.
      <br/>
      For example, the user whose user name is "Arai" is an owner in FIG. 37. If the processing up to this point is ended, the procedure waits for a command instruction by the user at step 304.
      <br/>
      If the user name is selected directly by a pointing device such as a pen, the change of the owner of user dictionary is demanded to the system at step 308 to change the setting.
      <br/>
      For other operations with the button command, if a "user dictionary edit" button 1704 is depressed (306), the control is transferred to a user dictionary edit routine, if a "new user registration" button 1705 is depressed (307), the control is transferred to a new user registration routine, and if a "cancel" button 1706 is depressed, the setting change of user dictionary with the user name selection as performed before this point is invalidated, and the user dictionary setting is restored to the state before starting the application.
      <br/>
      If an "end" button 1707 is depressed (305), this user registration application is ended, and the control is returned to the system.
    </p>
    <p num="108">The process flow in the new user registration window will be described below with reference to FIG. 54 and a flowchart of FIG. 40. In FIG. 54, reference numeral 1801 represents a user name input area for inputting the user name, reference numeral 1802 represents a cancel function button for canceling the input of user name, and reference numeral 1803 represents a registration &amp; end function button for registering the input user name and ending this window.</p>
    <p num="109">
      If a "new user registration" command 1704 in the previous initial item window is instructed, a pop-up window as shown in FIG. 54 is displayed (401).
      <br/>
      Then, the operation is placed in a wait state for a command to be instructed by the user.
      <br/>
      If an event signal by pen-down is detected in user name input area 1801 (404), an existing recognition routine is called.
      <br/>
      This routine subjects a character hand drawn in the user name input area to the on-line character recognition process to convert character data to character code (407).
      <br/>
      If a "registration &amp; end" button command 1803 is instructed, the user name input and converted in the user name input area is determined as a new user name which is then additionally registered to the user name index file 107 (406).
      <br/>
      Thereafter, the current window is erased, and the control is returned to the initial item window again.
      <br/>
      On the other hand, if a "cancel" button command 1802 is instructed, the characters entered into the user name input area are all deleted (408), and the operation is placed again in a wait state for a user name input command.
    </p>
    <p num="110">The process flow in the user dictionary editor will be described below with reference to FIG. 57 and a flowchart of FIG. 41. In FIG. 57, reference numeral 2101 represents a message display area, reference numeral 2102 represents a registered character list display area, reference numeral 2103 represents a scroll bar which allows more registered characters to be displayed, and reference numerals 2104 to 2108 represent function calling buttons by pen tap.</p>
    <p num="111">
      If a "user dictionary edit" button 1705 is depressed in the previous initial item window, a user dictionary 106 designated is copied and stored separately (512).
      <br/>
      This provides for a back up copy if the dictionary edit operation is canceled.
      <br/>
      Then, the user dictionary is opened to read character codes within the user dictionary into a buffer area (502).
      <br/>
      Herein, to make characters within the user dictionary to correspond to displayed characters, one to one, a character code correspondence table is created (601 in FIG. 42).
      <br/>
      For example, when six characters are registered, the correspondence table is as shown in FIG. 60. This character code correspondence table is created because if a multiplicity of dictionary character data with the same character code exist, the retrieval of dictionary data is not allowed uniquely only with the information of character code in the editing of character with the "delete" or "reproduce" command.
      <br/>
      User dictionary edit window as illustrated in FIG. 57 is displayed based on this character code correspondence table (503).
      <br/>
      A character code read at this time is displayed in the registered character list display area 2101 (504).
      <br/>
      Thereafter, the operation is placed in the wait state for a command instructed by the user (505).
      <br/>
      If a signal by pen down is detected in the registered character list display area, a character located by pen down is selected (506).
      <br/>
      The display number on the character code table is obtained from positional information of the selected character.
      <br/>
      The storage location of dictionary character data practically stored in the user dictionary is determined from its display number to obtain dictionary character data to be edited.
      <br/>
      If a "character registration" button command 2104 is designated (507), the control is transferred to a new character registration routine (701 in FIG. 53).
      <br/>
      If a "character delete" button command 2105 is designated (509), a discrimination is made as to whether or not the character in the registered character list display area is selected (801 in FIG. 44).
      <br/>
      If not selected, the operation returns to the wait state for a command instruction (505).
      <br/>
      If already selected, the dictionary data storage area of character to be deleted is located using the character code correspondence table as previously noted.
      <br/>
      When it is found, the dictionary character data stored in the actual user dictionary is deleted (802).
      <br/>
      At the same time when the content of user dictionary is changed, the character code correspondence table is also changed to update the character display of registered character list display area (504).
      <br/>
      If a "handwritten reproduction" button 2106 is depressed (509), the control is transferred to a handwritten reproduction routine when there is a character selected, or the operation is placed in the wait state for a character to be selected when there is no character selected (901).
      <br/>
      If a "cancel" button command 2107 is designated (510), a discrimination is made as to whether or not the character in the registered character list display area is selected (1001 in FIG. 37).
      <br/>
      If any character is selected, the character is invalidated, the display is placed in a character unselected state (1002), and the content of registered dictionary is restored to the original state before starting the dictionary edit window (1003).
      <br/>
      With this operation, the editing is enabled to restart.
      <br/>
      An "end" button command 2108 erases this user dictionary edit window, and returns the control to the previous initial item window.
    </p>
    <p num="112">The process flow of the new character register will be described below using FIGS. 55 and 56 and a flowchart of FIG. 47. In FIG. 55, reference numeral 1901 represents a message display area, reference numeral 1902 represents a handwritten character input area, reference numeral 1903 represents a font character input area, reference numeral 1904 represents an input code list area, reference numeral 1905 represents a scroll bar which allows more character codes to be displayed, and reference numerals 1906 to 1908 represent function calling buttons by pen tap.</p>
    <p num="113">
      If a "character registration" 2104 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 55 is created for the display in the form of pop-up window (1101).
      <br/>
      By the character registration herein used is meant a task for assigning character data by user's original handwriting to a corresponding character code.
      <br/>
      Hence, a data input area for acquiring user's handwritten data and a character code input area corresponding thereto are necessary, wherein "handwritten" column 1902 is a handwritten data input area and "font" column 1903 is a character code input area, as illustrated in FIG. 55. Reference numeral 1904 of FIG. 50 represents an input code list for inputting the character code, the character code being input by selecting it from the list.
      <br/>
      Accordingly, the registerable character types must be displayed in the input code list, for which it is necessary that a character type file storing the registerable character types is created beforehand (1109).
      <br/>
      The registerable character types are displayed by reading this file (1102).
      <br/>
      If this display is ended, the operation waits for a command instruction from the user (1103).
      <br/>
      If a pen down input signal by the user is detected in the "handwritten" column, its hand data is stored as a set of two-dimensional coordinates in a buffer area (1201 in FIG. 48), and drawn in the "handwritten" column at the same time.
      <br/>
      FIG. 55 illustrates a state where the user has entered a handwritten character corresponding to a font "+character pullout}" as indicated at 1902.
      <br/>
      The input of corresponding character code is performed in such a manner as to select a character code from the input code list, temporarily store it in the buffer area, and then get it (1301 in FIG. 49).
      <br/>
      The selected character is displayed in larger scale in the "font" column at every time (1302).
      <br/>
      If a "registration" button command 1906 is designated, it is confirmed whether or not both the handwritten character in the "handwritten" column and the character in the "font" column are input (1401).
      <br/>
      If both are input, the creation of a recognition dictionary for that character is started (1403).
      <br/>
      The creation of the recognition dictionary is accomplished by creating the standard pattern from character data by a well-known method.
      <br/>
      As a result, this standard pattern is newly created in the user dictionary, or added thereto (1404).
      <br/>
      If the input of hand data and character code is insufficient, a warning is generated (1402), and the same process is repeated until both the handwritten character data and the character code of the character to be registered are input.
      <br/>
      If a "cancel" button command 1907 is designated, both the character data and the character code input in the "handwritten" and "font" columns are invalidated (1501 in FIG. 15), and the input is enabled again.
      <br/>
      FIG. 56 illustrates a state where a character "+character pullout}" has been entered by selecting it from the character code list.
      <br/>
      The "end" button command 1908 serves to erase this new character registration window and return the control to the user dictionary editor.
    </p>
    <p num="114">The process flow in the handwritten character reproducer will be described below using FIG. 58 and a flowchart of FIG. 52. In FIG. 58, reference numeral 2201 represents a handwritten character reproduction area, reference numeral 2202 represents a font display area destined for the handwritten character, reference numeral 2203 represents a hand stroke number display area of the handwritten character, reference numeral 2204 represents a standard stroke number display area of subject font, and reference numerals 2205, 2206 represent function calling buttons by pen tap.</p>
    <p num="115">
      If a "handwritten reproduction" command button 2106 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 58 is created and displayed in the form of pop-up window (1602).
      <br/>
      Since it is already confirmed that the character code is selected in the previous user dictionary editor, the enlarged font of the character is first displayed in the font area (1603).
      <br/>
      The number of strokes of the character is displayed together with the font display (1603), which is accomplished by preparing for a data base for character standard stroke number in which the standard stroke number is described for each character (1607), and retrieving the subject character.
      <br/>
      To reproduce the character data within the user dictionary requires temporary extraction of dictionary data corresponding to the selected character, which is enabled by utilizing the previous character code correspondence table.
      <br/>
      Since the dictionary data of corresponding character contains coordinate points as well as information of pen down and pen up, it is possible to determine of which stroke number the coordinate point belongs to a hand.
      <br/>
      Using this, the handwriting can be drawn by linearly connecting the coordinate points sequentially within the same stroke (1604).
    </p>
    <p num="116">
      The number of strokes for hand data is defined by counting how many times the pen down is made, and displayed (1605).
      <br/>
      If the button command (1606) is "redisplay" 2205, the reproduced drawn data is erased, and hand reproduction is performed again by using dictionary data.
      <br/>
      If an "end" button command 2206 is designated, this handwritten character reproduction window is erased, and the control is transferred to the registered character editor.
      <br/>
      FIG. 58 illustrates a view where the character "+character pullout}" is selected and character hand is half reproduced.
    </p>
    <p num="117">
      Note that the window creation and signal detection as described in the text can be accomplished by using any of well-known techniques.
      <br/>
      While a pen was adopted as the pointing device, it is apparent that a mouse can be operated to enable the selection and entry.
    </p>
    <p num="118">
      FIG. 61 is a detail configurational diagram of a reproduction display unit in this embodiment, corresponding to the portion consisting of steps 1604 and 1608 shown in FIG. 52 which is a flowchart of handwritten character reproducer (105) of FIG. 37, as previously described.
      <br/>
      The arrows in the figure indicate the data flow.
      <br/>
      Reference numeral 2501 represents registered track recording means, corresponding to step 106 of FIG. 37 or 1608 of FIG. 52. Reference numeral 2502 represents registered track reading means for reading registered track stored in the registered track recording means into a buffer (2505).
      <br/>
      Reference numeral 2503 represents track information adder means for adding new information to track information stored in the buffer into a buffer+ (2506).
      <br/>
      Reference numeral 2504 represents track display means for displaying the information of buffer+ (2506) in the handwritten character reproduction area (2201) of FIG. 58. FIG. 62 illustrates a specific content of buffer.
      <br/>
      Buffer directly stores the coordinates of points made up by pen-down, pen-up and stroke.
      <br/>
      FIG. 27 illustrates a specific content of buffer+. Buffer+ stores raw data of each stroke in array and additional information including the order of the stroke in the order of handwriting.
      <br/>
      FIG. 54 illustrates a flowchart of track information adder means (2503).
      <br/>
      The arrows in the figure indicate the data flow.
      <br/>
      First, the number of pen-ups and that of pen-downs are read from the buffer (2801) to count the total number of strokes (hands) (2802).
      <br/>
      Based on this total number of strokes, an array for the buffer+ (2805) containing the additional information is prepared (2803).
      <br/>
      Next, information reflecting the order of hand (color, sound and so on) or information reflecting the stroke shape is added to each stroke (2804) for storage into the buffer+ (2805).
    </p>
    <p num="119">The above-described constitution is all common to the following examples.</p>
    <p num="120">
      An example of adding the stroke order number to each stroke by track information adder means (2503) will be described below.
      <br/>
      And track display means (2504) displays the stroke order number at the start or end point of each stroke in the handwritten character reproduced area of FIG. 65.
    </p>
    <p num="121">
      An example of adding color information by track information adder means (2503) will be described below.
      <br/>
      Namely, a character having a stroke number of 3, as illustrated in FIG. 66, is displayed at 3001, with color 1 assigned to stroke 1, color 2 to stroke 2, and color 3 to stroke 3.
      <br/>
      Reference numeral 3002 represents a table listing the correspondence between color and stroke, the stroke order numbers being denoted corresponding to respective colors.
      <br/>
      In this case, if the number of strokes increases, the number of colors increases.
      <br/>
      For example, the mixing ratio of two kinds of coloring matter (red and blue or others) may be divided by the number of strokes, so that the stroke order can be reflected sensibly to the color.
      <br/>
      Note that if a greater number of strokes is given, the same color is possibly allocated to different strokes.
    </p>
    <p num="122">
      An example of adding sound information by the track information adder means (2503) will be described below.
      <br/>
      For example, the track display means (2504) reproduces added sounds during the display times of stroke, with a sound "+character pullout}" added to the first stroke, "+character pullout}" to the second stroke, and "+character pullout}" to the third stroke.
    </p>
    <p num="123">
      Or irrespective of the stroke order, sound information reflecting the shape of each stroke is added.
      <br/>
      For example, a higher sound is assigned to the stroke having higher Y coordinate, and a lower sound to the stroke having lower Y coordinate.
      <br/>
      And the track display means (2504) reproduces the sound with the frequency changing during the display times of stroke.
      <br/>
      This allows the user to be provided with information concerning the shape of stroke not only visually but also aurally.
    </p>
    <p num="124">An example of adding a function to a part of track display means (2504) of FIG. 25 will be described below.</p>
    <p num="125">
      Dial 3101 is added to GUI as illustrated in FIG. 67, wherein the display speed of each stroke is varied by operating this dial by the mouse.
      <br/>
      That is, if the dial is moved to the "slower" side, each stroke is displayed more slowly, while if the dial is moved to the "faster" side, each stroke is displayed more rapidly.
      <br/>
      The limit of "slower" is a stop of stroke display, and the limit of "faster" is an instantaneous display of stroke.
    </p>
    <p num="126">
      An example of adding a function to a part of track display means (2504) will be described below.
      <br/>
      For example, buttons 3201 denoting the stroke order are provided as illustrated in FIG. 68, wherein the stroke is displayed corresponding to the stroke order number of button clicked by mouse or depressed.
      <br/>
      In this case, the buttons corresponding to the total number of strokes (hands) are prepared.
    </p>
    <p num="127">Or next or previous stroke button 3202 may be clicked by mouse or depressed to change the order of display, and vary the display time interval between strokes.</p>
    <p num="128">An example of adding a function to track display means (2504) of FIG. 25 will be described below.</p>
    <p num="129">
      For example, the overall shape of a character is displayed prior to each stroke in a display manner apparently different from that of each stroke (in this case, displayed by the fine line in comparison with each stroke displayed by the bold line) as illustrated in FIG. 69, and the track of each stroke is displayed over.
      <br/>
      Also, the color may be changed.
    </p>
    <p num="130">Embodiment 4</p>
    <p num="131">A fourth preferred embodiment of the present invention will be now described in detail with reference to FIGS. 71 to 100.</p>
    <p num="132">
      FIG. 100 is a schematic configurational diagram illustrating the configuration of an information processing apparatus according to one embodiment of the presnet invention.
      <br/>
      In the same figure, reference numeral 1 represents a CPU for controlling the whole apparatus, wherein various processings are preformed in accordance with programs stored in ROM 2.
      <br/>
      Reference numeral 2 represents a ROM for storing a control program, an error processing program, and various programs operating in accordance with the flowcharts as hereinafter described.
      <br/>
      Reference numeral 3 represents a RAM for use as the work area of various programs and the temporary save area at the time of error processing.
      <br/>
      In this RAM are stored various data bases, including dictionaries for use with the recognition, as will be described later, a user dictionary 106, a user name index file 107, a character type file 108, and a character standard stroke number data base 109.
      <br/>
      Reference numeral 4 represents a coordinate input unit having a transparent coordinate input plate, not shown, and a pin, not shown, for designating the position of coordinate point on the coordinate input plate, wherein electromagnetic induction or ultrasonic vibration is used in detecting the position of coordinate point.
      <br/>
      Reference numeral 5 represents a VIDEO RAM (hereinafter referred to as "VRAM") having a memory corresponding one by one to the coordinate point on the coordinate input plate and storing bit information of a coordinate point input on the coordinate input plate or bit information of a dot calculated based on the coordinate point as will be described later.
      <br/>
      Reference numeral 6 represents a display for displaying bit image based on bit information stored in VRAM 5, wherein this display 6 uses an LCD but may be an EL element or CRT, for example.
      <br/>
      On this display 6, a variety of windows, as will be described later, are displayed.
    </p>
    <p num="133">
      FIG. 71 is a configuration block diagram of a user registration application for implementing the present invention.
      <br/>
      Reference numerals 101 to 107 represent units each serving as a functional element of user registration in the on-line character recognition, the units being classified into a window application execution section with GUI (Graphical User Interface) and a dictionary section.
    </p>
    <p num="134">
      Initial screen 101 allows for the display of the list of registered users, and the confirmation for the owner of user dictionary presently set.
      <br/>
      It has other functions including a designating function for the mode of newly registering the user and the mode of editing registered character within user dictionary.
      <br/>
      New user register 102 effects the registration of the new user.
      <br/>
      User dictionary editor 103 displays the list of characters within the user dictionary, and allows for the designation of deletion or handwritten reproduction for each character.
      <br/>
      Also, it includes a designation function for newly registering the character handwritten by the user.
      <br/>
      New character register 104 carries out the character registration designated at the previous stage 103.
      <br/>
      Handwritten character reproducer 105 draws or reproduces the registered character designated at the previous stage 103 in the hand order.
      <br/>
      User dictionary 106 stores information of registered characters to implement the above functions.
      <br/>
      Herein, a plurality of users own different user dictionaries.
      <br/>
      User dictionary switch unit 107 switches the user dictionary set by 101 based on the information from a pen input unit and a screen output unit processed by user application.
    </p>
    <p num="135">
      FIG. 72 is a window state transition diagram of user registration application.
      <br/>
      Reference numerals 201 to 205 represent windows for executing each function as described above.
      <br/>
      Reference numeral 206 represents a system to which the control is returned when this user registration application is ended.
      <br/>
      The arrows in the figure indicate the flow of control command to be entered with the button control in each window.
      <br/>
      The flow of control command and the transition of windows will be described below.
    </p>
    <p num="136">
      If a "new user registration" command is issued in new item window 201, a new user registration window 202 appears newly in the form of pop-up window.
      <br/>
      If a "registration &amp; end" command is issured in the new user registration window 202, this pop-up window disappears, and the control is returned to the new item window 201.
      <br/>
      If a "user dictionary edit" command is issued in the new item window 201, the new item window 201 disappears, and a user dictionary edit window 203 appears newly.
      <br/>
      Herein, if a "new character registration" command is issued, a new character registration window 204 appears in the form of pop-up window.
      <br/>
      The character registration operation on this window can be repeatedly executed unless an "end" command is issued.
      <br/>
      If the "end" command is instructed after the character is registered, the new character registration window 204 disappears, and the control is returned to the user dictionary edit window 203.
      <br/>
      A "character delete" command can be executed by plural times in the user dictionary edit window 203.
      <br/>
      Further, if a "handwritten reproduction" command is issued, a handwritten character reproduction window 205 appears in the form of pop-up window.
      <br/>
      At the same time when the window is displayed, the reproduction is started, whereby the user of a "redisplay" command allows for the redisplay repetitively.
      <br/>
      The handwritten character reproduction window disappears by issuing the "end" command, and the control is returned to the user dictionary edit window.
      <br/>
      If the "end" command is issued in the user dictionary edit window 203, the window of its own disappears and the new item window 201 appears again.
      <br/>
      Accordingly, it is only when the "end" comand is issued in the initial item window 201 that the user registration application can be ended.
    </p>
    <p num="137">Note that the number of windows in the user registered application is two when the pop-up window of window 202, 204 or 205 appears, and one when the pop-up window of window 201 or 203 appears, as described above.</p>
    <p num="138">
      FIG. 96 is a block diagram illustrating the operation of user dictionary switch unit for user registration application.
      <br/>
      Reference numerals 2601 to 2604 represent a user dictionary switch unit and other associated units involving the flow of information thereto or therefrom.
      <br/>
      It is noted herein that the owner of a user dictionary presently selected and main user information is transmitted from initial item window 2603 to user dictionary switch unit 2601, while the updated main user information is transmitted from user dictionary switch unit 2601 to initial item window 2603.
      <br/>
      Also, display status information is transmitted from a system 2604 from which the user dictionary switch unit 2601 is called.
      <br/>
      Reference numeral 2602 represents an arbitrary application for performing the recognition operation in which the user is involved, wherein the application display information is transmitted from this application 2602 to the system 2604, while the display status information from the system 2604 to the application 2602.
    </p>
    <p num="139">The details of the function in each window and the process flow will be now described with reference to the drawings of FIG. 73 and beyond.</p>
    <p num="140">First, the process flow in the initial item window will be described using FIG. 87 and a flowchart of FIG. 73. In FIG. 87, reference numeral 1701 represents a message display area, reference numeral 1702 represents a user name list display and user dictionary owner display area, reference numeral 1703 represents a scroll bar for use when registered users can not be accommodated within one screen, and reference numerals 1704 to 1707 represent buttons for calling a function by pen tap.</p>
    <p num="141">
      If the user registration application is started, a window is created at step 301, whereupon a registered user name is read from the user name index file 107.
      <br/>
      This user name index file 107 is a disk file having a structure as shown in FIG. 93, and which is readable and writable.
      <br/>
      The created window is as shown in FIG. 87. At step 302, the owner of user dictionary set in the system is discriminated.
      <br/>
      If the owner is discriminated, the user who is an owner of user dictionary selected is marked in the user name display area 1701 at step 303.
      <br/>
      Also, in this case, one particular user who has been registered as the main user is marked with a main user mark indicating the main user.
      <br/>
      For example, two users whose user name is "arai" and whose user name is "uzuki" are registered in FIG. 87, and particularly, the user whose user name is "arai" is provided with a main user mark indicating the main user.
      <br/>
      If the processing up to this point is ended, the procedure waits for a command instruction by the user (304).
    </p>
    <p num="142">
      If the user name is selected directly by a pointing device such as a pen, the addition of the owner of user dictionary is demanded to the system at step 308 to change the setting.
      <br/>
      Similarly, if the check button portion directly indicating the main user is selected by a pointing device such as a pen, the registration of a main user of user dictionary 107 is demanded to the system at step 309 to change the setting.
      <br/>
      For other operations with the button command, if a "user dictionary edit" button 1704 is depressed (306), the control is transferred to a user dictionary edit routine, if a "new user registration" button 1705 is depressed (307), the control is transferred to a new user registration routine, and if a "cancel" button 1706 is depressed, the setting change of user dictionary with the user name selection as performed before is invalidated, and the user dictionary setting is restored to the state before starting the application.
      <br/>
      If an "end" button 1707 is depressed (305), this user registration application is ended, and the control is returned to the system.
    </p>
    <p num="143">The process flow in the new user registration window will be described below with reference to FIG. 88 and a flowchart of FIG. 74. In FIG. 88, reference numeral 1801 represents a user name input area for inputting the user name, reference numeral 1802 represents a cancel function button for cancelling the input of user name, and reference numeral 1803 represents a registration &amp; end function button for registering the input user name and ending this window.</p>
    <p num="144">
      If a "new user registration" command 1704 in the previous initial item window is instructed, a pop-up window as shown in FIG. 88 is displayed (401).
      <br/>
      Then, the operation is placed in a wait state for a command to be instructed by the user.
      <br/>
      If an event signal by pen-down is detected in user name input area 1801 (404), an existing recognition routine is called.
      <br/>
      This routine subjects a character hand drawn in the user name input area to the on-line character recognition process to convert character data to character code (407).
      <br/>
      If a "registration &amp; end" button command 1803 is instructed, the user name input and converted in the user name input area is determined as a new user name which is then additionally registered to the user name index file 107 (406).
      <br/>
      Thereafter, the current window is erased, and the control is returned to the initial item window again.
      <br/>
      On the other hand, if a "cancel" button command 1802 is instructed, the characters entered into the user name input area are all deleted (408), and the operation is placed again in a wait state for a user name input command.
    </p>
    <p num="145">The process flow in the user dictionary editor will be described below with reference to FIG. 91 and a flowchart of FIG. 75. In FIG. 91, reference numeral 2101 represents a message display area, reference numeral 2102 represents a registered character list display area, reference numeral 2103 represents a scroll bar which allows more registered characters to be displayed, and reference numerals 2104 to 2108 represnet function calling buttons by pen tap.</p>
    <p num="146">
      If a "user dictionary edit" button 1705 is depressed in the previous initial item window, a user dictionary of main user designated is copied and stored separately (512).
      <br/>
      This provides for a back up copy if the dictionary edit operation is canceled.
      <br/>
      Then, the user dictionary 106 is opened to read character codes within the user dictionary into a buffer area (502).
      <br/>
      Herein, to make characters within the user dictionary 106 to correspond to displayed characters, one to one, a character code correspondence table is created (601 in FIG. 72).
      <br/>
      For example, when six characters are registered, the correspondence table is as shown in FIG. 94. This character code correspondence table is created because if a multiplicity of dictionary character data with the same character code exist, the retrieval of dictionary data is not allowed uniquely only with the information of character code in the editing of character with the "delete" or "reproduce" command.
      <br/>
      User dictionary edit window of main user as illustrated in FIG. 91 is displayed based on this character code correspondence table (503).
      <br/>
      A character code read at this time is displayed in the registered character list display area 2101 (504).
      <br/>
      Thereafter, the operation is placed in the wait state for a command instructed by the user (505).
      <br/>
      If a signal by pen down is detected in the registered character list display area, a character located by pen down is selected (506).
      <br/>
      The display number on the character code table is obtained from positional information of the selected character.
      <br/>
      The storage location of dictionary character data practically stored in the user dictionary is determined from its display number to obtain dictionary character data to be edited.
      <br/>
      If a "character registration" button command 2104 is designated (507), the control is transferred to a new character registration routine (701 in FIG. 77).
      <br/>
      If a "character delete" button command 2105 is designated (509), a discrimination is made as to whether or not the character in the registered character list display area is selected (801 in FIG. 78).
      <br/>
      If not selected, the operation returns to the wait state for a command instruction (505).
      <br/>
      If already selected, the dictionary data storage area of a character to be deleted is located using the character code correspondence table as previously noted.
      <br/>
      When it is found, the dictionary character data stored in the actual user dictionary 106 is deleted (802).
    </p>
    <p num="147">
      At the same time when the content of user dictionary is changed, the character code correspondence table is also changed to update the character display of registered character list display area (504).
      <br/>
      If a "handwritten reproduction" button 2106 is depressed (509), the control is transferred to a handwritten reproduction routine when there is a character selected, or the operation is placed in the wait state for a character to be selected when there is no character selected (901).
      <br/>
      If a "cancel" button command 2107 is designated (510), a discrimination is made as to whether or not the character in the registered character list display area is selected (1001 in FIG. 80).
      <br/>
      If any character is selected, the character is invalidated, the display is placed in a character unselected state (10020, and the content of registered dictionary is restored to the original state before starting the dictionary edit window (1003).
      <br/>
      With this operation, the editing is enabled to restart.
      <br/>
      An "end" button command 2108 erases this user dictionary edit window, and returns the control to the previous initial item window.
    </p>
    <p num="148">The process flow of the new character register will be described below using FIGS. 89 and 90 and a flowchart of FIG. 81. In FIG. 89, reference numeral 1901 represents a message display area, reference numeral 1902 represents a handwritten character input area, reference numeral 1903 represents a font character input area, reference numeral 1904 represents an input code list area, reference numeral 1905 represents a scroll bar which allows more character codes to be displayed, and reference numerals 1906 to 1908 represent function calling buttons by pen tap.</p>
    <p num="149">
      If a "character registration" 2104 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 89 is created for the display in the form of pop-up window (1101).
      <br/>
      By the character registration herein used is meant a task for assigning character data by user's original handwriting to a corresponding character code.
      <br/>
      Hence, a data input area for acquiring user's handwritten data and a character code input area corresponding thereto are necessary, wherein "handwritten" column 1902 is a handwritten data input area and "font" column 1903 is a character code input area, as illustrated in FIG. 89. Reference numeral 1904, indicated centrally downward in FIG. 89, represents an input code list for inputting the character code, the character code being input by selecting it from 10 the list.
      <br/>
      Accordingly, the registerable character types must be displayed in the input code list, for which it is necessary that a character type file 108 storing the registerable character types is created beforehand (1109).
      <br/>
      The registerable character types are displayed by reading this file (1102).
      <br/>
      If this display is ended, the operation waits for a command instruction from the user (1103).
      <br/>
      If a pen down input signal by the user is detected in the "handwritten" column, its hand data is stored as a set of two-dimensional coordinates in a buffer area (1201 in FIG. 82), and drawn in the "handwritten" column at the same time.
      <br/>
      FIG. 89 illustrates a state where the user has entered a handwritten parttern corresponding to a font "+character pullout}" as indicated at 1902.
      <br/>
      The input of corresponding character code is performed in such a manner as to select a character code from the input code list, temporarily store it in the buffer area, and then get it (1301 in FIG. 83).
      <br/>
      The selected character is displayed in larger scale in the "font" column at every time (1302).
      <br/>
      If a "registration" button command 1906 is designated, it is confirmed whether or not both the handwritten character in the "handwritten" column and the character in the "font" column are input (1401).
      <br/>
      If both are input, the creation of a recognition dictionary for that character is started (1403).
      <br/>
      The creation of the recognition dictionary is accomplished by creating the standard pattern from character data by a well-known method.
      <br/>
      As a result, this standard pattern is newly created in the user dictionary 106, or added thereto (1404).
      <br/>
      If the input of hand data and character code is insufficient, a warning is generated (1402), and the same process is repeated until both the handwritten character data and the character code of the character to be registered are input.
      <br/>
      If a "cancel" button command 1907 is designated, both the character data and the character code input in the "handwritten" and "font" columns are invalidated (1501 in FIG. 85), and the input is enabled again.
      <br/>
      FIG. 90 illustrates a state where a character "+character pullout}" has been entered by selecting it from the character code list.
      <br/>
      The "end" button command 1908 serves to erase this new character registration window and return the control to the user dictionary editor.
    </p>
    <p num="150">The process flow in the handwritten character reproducer will be described below using FIG. 92 and a flowchart of FIG. 88. In FIG. 92, reference numeral 2201 represents a handwritten character reproduction area, reference numeral 2202 represents a font display area destined for the handwritten character, reference numeral 2203 represents a hand stroke number display area of the handwritten character, reference numeral 2204 represents a standard stroke number display area of subject font, and reference numerals 2205, 2206 represent function calling buttons by pen tap.</p>
    <p num="151">
      If a "handwritten reproduction" command button 2106 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 92 is created and displayed in the form of pop-up window (1602).
      <br/>
      Since it is already confirmed that the character code is selected in the previous user dictionary editor, the enlarged font of the character is first displayed in the font area (1603).
      <br/>
      The number of strokes of the character is displayed together with the font display (1603), which is accomplished by preparing for a data base for character standard stroke number in which the standard stroke number is described for each character (1607), and retrieving the subject character.
      <br/>
      To reproduce the character data within the user dictionary 106 requires temporary extraction of dictionary data corresopnding to the selected character, which is enabled by utilizing the previous character code correspondence table.
      <br/>
      Since the dictionary data of corresponding character contains coordinate points as well as information of pen down and pen up, it is possible to determine of which stroke number the coordinate point belongs to a hand (called a stroke).
      <br/>
      Using this, the handwriting can be drawn by linearly connecting the coordinate points sequentially within the same stroke (1604).
      <br/>
      The number of strokes for hand data is defined by counting how many times the pen down is made, and displayed (1605).
      <br/>
      If the button command (1606) is "redisplay" 2205, the reproduced drawn data is erased, and hand reproduction is performed again by using dictionary data.
      <br/>
      If an "end" button command 2206 is designated, this handwritten character reproduction window is erased, and the control is transferred to the registered character editor.
      <br/>
      FIG. 92 illustrates a view where the character "+character pullout}" is selected and character hand is half reproduced.
    </p>
    <p num="152">
      Finally, the process flow in the user dictionary switch unit will be described below using FIG. 96 and a flowchart of FIG. 97. Application 2602 in FIG. 96 is an arbitrary application.
      <br/>
      Herein, it is supposed to be a "loan calculation application" by handwriting input as illustrated in FIGS. 98 and 99. System 2604 is a system which governs a user dictionary registration application of the present invention and the application 2602.
      <br/>
      The system is provided with a specification of turning a display screen 2802 upside down by 180 degrees upon depression of a screen up-down button 2803 in FIG. 98 to change into a reverse display screen 2901 as shown in FIG. 99. This function is a very convenient function when a plurality of users, faced to each other, are alternately engaged in the input operation in applications supposed for the presentation having a number of handwriting input items as shown in FIGS. 98 and 99, and has been long employed in many machines.
      <br/>
      In the application screen in FIG. 98, it is assumed that the registered content of user registration application is as illustrated in FIG. 87. Among the user dictionaries registered, the user dictionaries are selected for a user whose user name is "arai" and a user whose user name is "uzuki", and particularly the user whose user name is "arai" is selected as the main user.
      <br/>
      Accordingly, in initial user condition of FIG. 98, the user dictionary of the user whose user name is "arai" is preferentially employed, so that when a stroke information quite similar is registered as different font data in two user dictionaries with the user name "arai" and "uzuki" in the user registration application, the registered content which main user "arai" has registered can be caused to appear as a more preferential candidate whereby the comfortable operation can be expected.
      <br/>
      In this case, when the description of dispaly screen 2802 is engaged by the user placed opposedly, namely, whose user name is "uzuki", the system 2604 switches the display screen to up-down display screen 2901 upon either of the users depressing the screen up-down button 2803.
      <br/>
      As a result, the system 2604 starts a process as shown in FIG. 97. First, at step 2701, display status information passed from the system is read, and subsequently, the owner information and main user information of a user dictionary selected in the initial item window 2603 are read (2702 and 2703).
      <br/>
      Based on the user dictionary information obtained at steps 2702 and 2703, main user information is replaced (2705).
      <br/>
      Finally, at step 2706, updated main user dictionary information is sent to the initial item window 2603, and the process of user dictionary switch unit is ended.
      <br/>
      Consequently, in the state of FIG. 99, the user whose user name is "uzuki" is registered as the main user in the user registration application.
    </p>
    <p num="153">As described above, according to the present invention, as the display screen upside down, i.e., the change of user in charge of handwritten recognition, is notified by the system, the user dictionary of main user is automatically switched among a plurality of registered users having preassigned priority, whereby the comfortable handwriting input environment can be subsequently provided.</p>
    <p num="154">
      Note that the creation of window, the detection of signal, and the reversion of display screen as described in the text can be realized by well-known techniques.
      <br/>
      Also, though a pen was adopted as the pointing device, it is apparent that the operation by mouse also allows for the selection and entry of items.
    </p>
    <p num="155">While an example of automatic switching of user dictionary was described in which with two user dictionaries selected, the registration of main user is switched corresponding to two patterns of normal and reverse display, it should be noted that more user dictionaries are registered at the same time, with more screen display directions corresponding thereto in internal memory table, subject user dictionaries are reset as the main user dictionary by switching of the screen display direction, whereby the use of recognition dictionary for user registration corresponding to more complex switching between users can be realized.</p>
    <p num="156">
      While an example of switching the user engaged in recognition by changing the screen display direction was described.
      <br/>
      It should be noted that another means for detecting the switching of users, i.e., means for detecting by the user of a pen device, for example, composed of multiple stylus pens having distinguishable individual IDs which are provided in correspondence to a plurality of users may be employed, so that the switching of more users can be detected.
    </p>
    <p num="157">Embodiment 5</p>
    <p num="158">A fifth preferred embodiment of the present invention will be now described in detail with reference to FIGS. 101 to 115 of the accompanying drawings.</p>
    <p num="159">
      FIG. 115 is a schematic configurational diagram illustrating the configuration of an information processing apparatus according to one embodiment of the present invention.
      <br/>
      In the same figure, reference numeral 41 represents a CPU for controlling the whole apparatus, wherein various processings are performed in accordance with programs stored in ROM 42.
      <br/>
      Reference numeral 42 represents a ROM for storing a control program, an error processing program, and various programs operating in accordance with the flowcharts as hereinafter described.
      <br/>
      Reference numeral 43 represents a RAM for use as the work area of various programs and the temporary save area at the time of error processing.
      <br/>
      In this RAM 43 are stored various data bases, including dictionaries for use with the recognition, as will be described later, a user dictionary 106, a user name index file 107, a character type file 108, and a character standard stroke number data base 109.
      <br/>
      Reference numeral 44 represents a coordinate input unit having a transparent coordinate input plate, not shown, and a pen, not shown, for designating the position of coordinate point on the coordinate input plate, wherein electromagnetic induction or ultrasonic vibration is used in detecting the position of coordinate point.
      <br/>
      Reference numeral 45 represents a VIDEO RAM (hereinafter referred to as "VRAM") having a memory corresponding one by one to the coordinate point on the coordinate input plate and storing bit information of a coordinate point input on the coordinate input plate or bit information of a dot calculated based on the coordinate point as will be described later.
      <br/>
      Reference numeral 46 represents a display for displaying bit image based on bit information stored in VRAM 5, wherein this display 46 uses an LCD but may be an EL element or CRT, for example.
      <br/>
      On this display 46, a variety of windows, as will be described later, are displayed.
    </p>
    <p num="160">In this embodiment, a user registration function will be particularly presented which allows the user to register user's hand to the dictionary with an example of the on-line character recognition device.</p>
    <p num="161">
      FIG. 113 is a configuration block diagram of a user registration application for implementing the present invention.
      <br/>
      Reference numerals 21 to 26 represent units each serving as a functional element of user registration in the on-line character recognition, the units being classified into a window application execution section (21 to 25) will GUI (Graphical User Interface) and a dictionary section (106).
    </p>
    <p num="162">
      Initial screen 24 allows for the display of the list of registered users, and the confirmation for the owner of user dictionary presently set.
      <br/>
      It has other functions including a designating function for the mode of newly registering the user and the mode of editing registered character within user dictionary.
      <br/>
      New user register 25 effects the registration of new user.
      <br/>
      User dictionary editor 26 displays the list of characters within the user dictionary, and allows for the designation of deletion or handwritten reproduction for each character.
      <br/>
      Also, it includes a designation function for newly registering the character handwritten by the user.
      <br/>
      New character register 21 carries out the character registration designated by the user dictionary editor 26.
      <br/>
      Handwritten character reproducer 22 draws or reproduces the registered character designated by the user dictionary editor 26 in the hand order.
      <br/>
      User dictionary 23 stores information of registered characters to implement the above functions.
      <br/>
      Herein, a plurality of users own different user dictionaries.
    </p>
    <p num="163">
      FIG. 114 is a window state transition diagram of user registration application.
      <br/>
      Reference numerals 201 to 205 represent windows for executing each function of FIG. 113, as previously described.
      <br/>
      Reference numeral 206 represents a system to which the control is returned when this user registration application is ended.
      <br/>
      The arrows in the figure indicate the flow of control command to be entered with the button control in each window.
      <br/>
      The flow of control command and the transition of windows will be described below using FIG. 114.
    </p>
    <p num="164">
      If a "new user registration" command is issued in new item window 201, a new user registration window 202 appears newly in the form of pop-up window.
      <br/>
      If a "registration &amp; end" command is issued in the new user registration window 202, this pop-up window disappears, and the control is returned to the new item window 201.
      <br/>
      If a "user dictionary edit" command is issued in the new item window 201, the new item window 201 disappears, and a user dictionary edit window 203 appears newly.
      <br/>
      Herein, if a "new character registration" command is issued, a new character registration window 204 appears in the form of pop-up window.
      <br/>
      The character registration operation on this window can be repeatedly executed unless an "end" command is issued.
      <br/>
      If the "end" command is instructed after the character is registered, he new character registration window 204 disappears, and the control is returned to the user dictionary edit window 203.
      <br/>
      A "character delete" command can be executed by plural times in the user dictionary edit window 203.
      <br/>
      Further, if a "handwritten reproduction" command is issued, a handwritten character reproduction window 205 appears in the form of pop-up window.
      <br/>
      At the same time when the window is displayed, the reproduction is started, whereby the use of a "redisplay" command allows for the redisplay repetitively.
      <br/>
      The handwritten character reproduction window disappears by issuing the "end" command, and the control is returned to the user dictionary edit window.
      <br/>
      If the "end" command is issued in the user dictionary edit window 203, the window of its own disappears and the new item window 201 appears again.
      <br/>
      Accordingly, it is only when the "end" command is issued in the initial item window 201 that the user registration application can be ended.
    </p>
    <p num="165">Note that the number of windows in the user registered application is two when the pop-up window of window 202, 204 or 205 appears, and one when the pop-up window of window 201 or 203 appears, as described above.</p>
    <p num="166">FIG. 101 illustrates a block diagram of a hand display device in this embodiment.</p>
    <p num="167">Dispaly 8 is a liquid crystal display of dot matrix type, coordinate input unit 1 detects coordinates input by handwriting by a pen on the display, and processor 9 performs processing and displays on the display 8.</p>
    <p num="168">Examples of screen on the display 8 are illustrated in FIGS. 102, 103 and 104.</p>
    <p num="169">The screen is created and displayed by a window manager 7.</p>
    <p num="170">FIG. 102 illustrates a screen for the user to register newly the hand in the new character register 21, corresponding to 204 in FIG. 114.</p>
    <p num="171">
      If a character is written by a pen on a handwritten input area 11 in new character registration screen 10, coordinate input unit 1 detects input coordinates thereof, input analyzer 2 analyzes the character input on the handwritten input area 11, and hand data memory unit 3 memorizes the hand data.
      <br/>
      Hand data is composed of the coordinate values making up the hand, a code indicating the termination of each stroke, and a code indicating the termination of all strokes.
    </p>
    <p num="172">By selecting one of the characters displayed on character selection area 13 by the pen, the selected character is made corresponding to hand data as above mentioned by a registration key 14, and registered in the user dictionary.</p>
    <p num="173">FIG. 103 illustrates a screen for redisplaying user's registered hand by handwritten character reproducer 22 as designated in the user dictionary edit window 203, corresponding to 205 in FIG. 114.</p>
    <p num="174">Hand drawer 6 draws hand in a handwritten display area 15, based on hand data memorized in hand data memory unit 3.</p>
    <p num="175">This operation will be described using a flowchart of FIG. 105.</p>
    <p num="176">At step S1, if a code indicating the termination of all strokes is detected from hand data, the program is ended, or otherwise proceeds to the subsequent operation.</p>
    <p num="177">At step S2, one coordinate point is read from hand data, and set to variable P1.</p>
    <p num="178">At step S3, variables TD and TU representing the time are set.</p>
    <p num="179">At step S4, if a code indicating the termination of one stroke is detected, the program proceeds to step S9, or otherwise to the subsequent operation.</p>
    <p num="180">At step S5, one coordinate point is read from hand data and set to variable P2.</p>
    <p num="181">
      At step S6, a coordinate point P1 and a coordinate point P2 are connected by the straight line.
      <br/>
      Upon a drawing command being sent from the hand drawer 6 to the window manager 7, the line is displayed on the display 8.
    </p>
    <p num="182">At step S7, the value of variable P2 is substituted for variable P1.</p>
    <p num="183">At step S8, the program is caused to wait for a time TD for the speed adjustment for displaying the stroke, and then returns to step S4.</p>
    <p num="184">At step S9, the program is caused to wait for a time TU for the time adjustment between strokes, and then returns to step S1.</p>
    <p num="185">With the above operation, hand data is displayed in the hand display area 15.</p>
    <p num="186">Herein, with constant time TD and TU, the character is displayed at constant rate, but in this embodiment, only a part of hand which the user wants to confirm can be slowly displayed by changing the value of time TD and TU for the stroke designated by the user.</p>
    <p num="187">Redisplay of a part of hand designated for which the user wants to confirm the hand order will be now described.</p>
    <p num="188">
      As illustrated in FIG. 104, a track 18 is entered by a pen 17 on the handwritten display area 15, and recognized as a command signifying the stroke selection.
      <br/>
      Track accepted as a command is referred to as a gesture.
      <br/>
      Input analyzer 2 determines the meaning and attribute of command from the position and shape of gesture.
    </p>
    <p num="189">
      Character stroke designator 4 selects a partial character stroke of handwritten character 15 surrounded by the gesture 18.
      <br/>
      Display speed setter 5 sets the display speed for a stroke selected by the character stroke designator 4 and other strokes.
    </p>
    <p num="190">The operation of drawing at a drawing speed of each stroke set by the gesture of stroke selection will be described below with reference to a flowchart of FIG. 106.</p>
    <p num="191">At step S11, the input of gesture is detected by coordinate input unit 1, and if a redisplay key 16 is designated, the following operation is initiated.</p>
    <p num="192">
      At step S12, the meaning of gesture is analyzed by input analyzer 2.
      <br/>
      A test is performed to determine whether or not each stroke composed of a sequence of coordinate points memorized in hand data memory 3 is enclosed by the gesture.
      <br/>
      This test method will be described later with reference to FIG. 107.
    </p>
    <p num="193">
      At step S13, character stroke designator 4 calculates the minimum stroke number m and the maximum stroke number n among character strokes enclosed by the gesture.
      <br/>
      Stroke number signifies k at the k-th stroke.
      <br/>
      For example, for a character of eight strokes, there are strokes having stroke numbers 1 to 8, whereby if 3-rd, 5-th, 6-th and 7-th stroke are enclosed by the gesture, the minimum value m is equal to 3 and the maximum value n is equal to 7.
    </p>
    <p num="194">
      At step S14, hand drawer 6 draws first to (m-1)-th strokes are drawn at high speed.
      <br/>
      Display speed setter 5 sets the time TD and TU to respective redetermined value TD1 and TU1 to allow the drawing at high speed.
    </p>
    <p num="195">
      At step S15, hand drawer 6 draws m-th to n-th strokes are drawn at low speed.
      <br/>
      Display speed setter 5 sets the time TD and TU to respective predetermined value TD2 and TU2 to allow the drawing at low speed.
      <br/>
      Where TD2 &gt;TD1 and TU2 &gt;TU1.
    </p>
    <p num="196">At step S16, hand drawer 6 draws (n+1)-th to final strokes are drawn at high speed.</p>
    <p num="197">The test method of whether or not each character stroke is enclosed by the gesture at step S12 will be now described in detail.</p>
    <p num="198">First, take notice of one point among the points making up each character stroke.</p>
    <p num="199">A method of investigating whether or not the notice point is enclosed by the gesture will be described with reference to a flowchart of FIG. 107.</p>
    <p num="200">At step S21, flags f1, f2, f3 and f4 are all cleared.</p>
    <p num="201">At step S22, the initial point of gesture is taken notice of.</p>
    <p num="202">
      At step S23, it is investigated which quadrant the notice point of gesture resides in, when the notice point of character stroke is assumed to be an origin.
      <br/>
      For convenience sake, axis of coordinate is also included in the quadrant.
      <br/>
      When the coordinate for the notice point of character stroke is assumed to be (XS, YS) and the coordinate for the notice point of gesture (XG, YG) the notice point of gesture resides in the first quadrant if XG &gt;= XS and YG &gt;= YS, the second quadrant if XG &lt;XS and YG &gt;= YS, the third quadrant if XG 21 XS and YG &lt;YS, or the fourth quadrant if XG &gt;= XS and YG &lt;YS.
      <br/>
      If it resides in the Q-th quadrant, flag fQ is set (Q=1, 2, 3, 4).
    </p>
    <p num="203">At step S24, if the flags f1, f2, f3 and f4 are all set, the program proceeds to step S25, or otherwise to step S26.</p>
    <p num="204">At step S25, it is judged that the notice point of character stroke is enclosed by the gesture, and the program is ended.</p>
    <p num="205">At step S26, if the notice point of gesture is a terminal point, the program proceeds to step S27, or otherwise to step S28.</p>
    <p num="206">At step S27, it is judged that the notice point of character stroke is not enclosed by the gesture, and the program is ended.</p>
    <p num="207">At step S28, the next point of gesture is taken notice of, and the program returns to step S23.</p>
    <p num="208">FIG. 108 illustrates an instance where the notice point of character stroke is enclosed by the gesture, and FIG. 109 illustrates an instance where the notice point of character stroke is not enclosed by the gesture.</p>
    <p num="209">The program performs the above determinations while taking notice of each point making up character stroke, wherein if any notice point of character stroke is enclosed by the gesture, it is judged that the character stroke is enclosed by the gesture.</p>
    <p num="210">
      By adding a function of changing each value of time TD1, TU1, TD2 and TU2 to the above-described function, it is possible to confirm the hand at a desired speed of the user.
      <br/>
      For example, by setting TD1 and TU1 to 0, the stroke for which the confirmation for hand is unnecessary can be drawn almost instantaneously, resulting in elimination of wasteful time.
    </p>
    <p num="211">Also, if only the selected stroke is particularly necessary, the display color of selected stroke may be changed, or the selected stroke only displayed.</p>
    <p num="212">In this embodiment, when redisplaying the hand data in accordance with the order of strokes, it is possible to designate a part of hand for which the user wants to confirm for the stroke in simple operation.</p>
    <p num="213">An example of involving a device of displaying the font in accordance with the correct order of strokes will be described below.</p>
    <p num="214">FIG. 110 is a view illustrating a font display area 12 of a hand display device of FIG. 2.</p>
    <p num="215">In FIG. 110, a character "+character pullout}" is displayed in the font display area 12, and divided into four partial sections 101 to 104.</p>
    <p num="216">
      As illustrated in FIG. 111, partial pattern 101 involves the first to third strokes, partial pattern 102 involves the fourth to eighth strokes, partial pattern 103 involves the ninth to twelfth strokes, and partial pattern 104 involves the thirteenth to twenty second strokes.
      <br/>
      Also, in FIG. 111, the positions of left edge, right edge, top edge and bottom edge of each partial pattern are listed.
      <br/>
      This font display area are equally divided longitudinally and transversely into 16 sections, which is indicated by the numerical value of 0 to 15.
    </p>
    <p num="217">Note that the number of partial patterns and the position are different depending on the character to be displayed, the numerical values being memorized for each character as in FIG. 111.</p>
    <p num="218">In this embodiment, if a gesture is drawn with the pen 17 on the partial pattern of font display area 12, only the partial pattern over which the pens has passed is displayed slowly, and other partial patterns are displayed rapidly.</p>
    <p num="219">The operation of this embodiment will be described below using a flowchart of FIG. 112.</p>
    <p num="220">At step S31, the first partial pattern is first taken notice of.</p>
    <p num="221">
      At step S32, a check is made to determine whether or not the gesture has passed over the partial pattern noticed.
      <br/>
      If any one point of the coordinates making up the gesture is included between left edge and right edge and between bottom edge and top edge, it is judged that the gesture has passed over the partial pattern.
      <br/>
      If passed, the program proceeds to step S33, or otherwide to step S34.
    </p>
    <p num="222">At step S33, each stroke making up the partial pattern is displayed at low speed.</p>
    <p num="223">At step S34, each stroke making up the partial pattern is displayed at high speed.</p>
    <p num="224">At step S35, if the partial pattern is last, the processing is ended.</p>
    <p num="225">At step S36, the next partial pattern is taken notice of, and the program returns to step S32.</p>
    <p num="226">
      Usually, it is often demanded that the stroke for a certain partial pattern be known.
      <br/>
      In this embodiment, when redisplaying the font in accordance with the order of strokes, a part of hand for which the stroke is confirmed can be designated in simple manner by memorizing the positional information of partial pattern for each character.
    </p>
    <p num="227">Embodiment 6</p>
    <p num="228">A sixth preferred embodiment of the present invention will be now described in detail with reference to FIGS. 116 to 145.</p>
    <p num="229">
      FIG. 145 is a schematic configurational diagram illustrating the configuration of an information processing apparatus according to one embodiment of the present invention.
      <br/>
      In the same figure, reference numeral 1 represents a CPU for controlling the whole apparatus, wherein various processings are performed in accordance with programs stored in ROM 2.
      <br/>
      Reference numeral 2 represents a ROM for storing a control program, an error processing program, and various programs operating in accordance with the flowcharts as hereinafter described.
      <br/>
      Reference numeral 3 represents a RAM for use as the work area of various programs and the temporary save area at the time of error processing.
      <br/>
      In this RAM are stored various data bases, including dictionaries for use with the recognition, as will be described later, a user dictionary 106, a user name index file 107, a character type file 108, and a character standard stroke number data base 109.
      <br/>
      Reference numeral 4 represents a coordinate input unit having a transparent coordinate input plate, not shown, and a pen, not shown, for designating the position of coordinate point on the coordinate input plate, wherein electromagnetic induction or ultra-sonic vibration is used in detecting the position of coordinate point.
      <br/>
      Reference numeral 5 represents a VIDEO RAM (hereinafter referred to as "VRAM") having a memory corresponding one by one to the coordinate point on the coordinate input plate and storing bit information of a coordinate point input on the coordinate input plate or bit information of a dot calculated based on the coordinate point as will be described later.
      <br/>
      Reference numeral 6 represents a display for displaying bit image based on bit information stored in VRAM 5, wherein this display 6 uses an LCD but may be an EL element or CRT, for example.
      <br/>
      On this display 6, a variety of windows, as will be described later, are displayed.
    </p>
    <p num="230">
      FIG. 116 is a configuration block diagram of a user registration application for implementing the present invention.
      <br/>
      Reference numerals 101 to 106 represent units each serving as a functional element of user registration in the on-line character recognition, the units being classified into a window application execution section (101 to 105) with GUI (Graphical User Interface) and a dictionary section (106 to 109).
    </p>
    <p num="231">
      Initial screen 101 allows for the display of the list of registered users, and the confirmation for the owner of user dictionary presently set.
      <br/>
      It has other functions including a designating function for the mode of newly registering the user and the mode of editing registered character within user dictionary.
      <br/>
      New user register 102 effects the registration of new user.
      <br/>
      User dictionary editor 103 displays the list of characters within the user dictionary, and allows for the designation of deletion or handwritten reproduction for each character.
      <br/>
      Also, it includes a designation function for newly registering the character handwritten by the user.
      <br/>
      New character register 104 carries out the character registration designated at the previous stage 103.
      <br/>
      Handwritten character reproducer 105 draws or reproduces the registered character designated at the previous stage 103 in the hand order.
      <br/>
      User dictionary 106 stores information of registered characters to implement the above functions.
      <br/>
      Herein, a plurality of users own different user dictionaries.
      <br/>
      User name index file 107 registers user names owning the user dictionary 106.
      <br/>
      Character type file 108 stores registerable character type data, and character standard stroke number data base 109 stores the standard stroke number for each character.
    </p>
    <p num="232">
      FIG. 117 is a window state transition diagram of user registration application.
      <br/>
      Reference numerals 201 to 205 represent windows for executing each function of FIG. 116, wherein each window, the example of which will be described later, appears on the display 6.
      <br/>
      Reference numeral 206 represents a system to which the control is returned when this user registration application is ended.
      <br/>
      The arrows in the figure indicate the flow of control command to be entered with the button control in each window.
      <br/>
      The flow of control command and the transition of windows will be described below using FIG. 117.
    </p>
    <p num="233">
      If a "new user registration" command is issued in new item window 201, a new user registration window 202 appears newly in the form of pop-up window.
      <br/>
      If a "registration &amp; end" command is issued in the new user registration window 202, this pop-up window disappears, and the control is returned to the new item window 201.
      <br/>
      If a "user dictionary edit" command is issued in the new item window 201, the new item window 201 disappears, and a user dictionary edit window 203 appears newly.
      <br/>
      Herein, if a "new character registration" command is issued, a new character registration window 204 appears in the form of pop-up window.
      <br/>
      The character registration operation on this window can be repeatedly executed unless an "end" command is issued.
      <br/>
      If the "end" command is instructed after the character is registered, the new character registration window 204 disappears, and the control is returned to the user dictionary edit window 203.
      <br/>
      A "character delete" command can be executed by plural times in the user dictionary edit window 203.
      <br/>
      Further, if a "handwritten reproduction" command is issued, a handwritten character reproduction window 205 appears in the form of pop-up window.
      <br/>
      At the same time when the window is displayed, the reproduction is started, whereby the use of a "redisplay" command allows for the redisplay repetitively.
      <br/>
      The handwritten character reproduction window disappears by issuing the "end" command, and the control is returned to the user dictionary edit window.
      <br/>
      If the "end" command is issued in the user dictionary edit window 203, the window of its own disappears and the new item window 201 appears again.
      <br/>
      Accordingly, it is only when the "end" command is issued in the initial item window 201 that the user registration application can be ended.
    </p>
    <p num="234">Note that the number of windows in the user registered application is two when the pop-up window of window 202, 204 or 205 appears, and one when the pop-up window of window 201 or 203 appears, as described above.</p>
    <p num="235">The details of the function in each window and the process flow will be now described with reference to the drawings of FIG. 118 and beyond.</p>
    <p num="236">First, the process flow in the initial item window will be described using FIG. 132 and a flow-chart of FIG. 118. In FIG. 132, reference numeral 1701 represents a message display area, reference numeral 1702 represents a user name list display and user dictionary owner display area, reference numeral 1703 represents a scroll bar for use when registered users can not be accommodated within one screen, and reference numerals 1704 to 1707 represent buttons for calling a function by pen tap.</p>
    <p num="237">
      If the user registration application is started, a window is created at step 301, whereupon a registered user name is read from the user name index file 107.
      <br/>
      This user name index file is a disk file having a structure as shown in FIG. 138, and which is readable and writable.
      <br/>
      The created window is as shown in FIG. 132. At step 302, the owner of user dictionary set in the system is discriminated.
      <br/>
      If the owner is discriminated, the user who is an owner of user dictionary is marked in the user name display area 1701 at step 303.
      <br/>
      For example, the user whose user name is "Arai" is an owner in FIG. 132. If the processing up to this point is ended, the procedure waits for a command instruction by the user at step 304.
      <br/>
      If the user name is selected directly by a pointing device such as a pen, the change of the owner of user dictionary is demanded to the system at step 308 to change the setting.
      <br/>
      For other operations with the button command, if a "user dictionary edit" button 1704 is depressed (306), the control is transferred to a user dictionary edit routine, if a "new user registration" button 1705 is depressed (307), the control is transferred to a new user registration routine, and if a "cancel" button 1706 is depressed, the setting change of user dictionary with the user name selection as performed before this point is invalidated, and the user dictionary setting is restored to the state before starting the application.
      <br/>
      If an "end" button 1707 is depressed (305), this user registration application is ended, and the control is returned to the system.
    </p>
    <p num="238">The process flow in the new user registration window will be described below with reference to FIG. 133 and a flowchart of FIG. 119. In FIG. 133, reference numeral 1801 represents a user name input area for inputting the user name, reference numeral 1802 represents a cancel function button for canceling the input of user name, and reference numeral 1803 represents a registration &amp; end function button for registering the input user name and ending this window.</p>
    <p num="239">
      If a "new user registration" command 1704 in the previous initial item window is instructed, a pop-up window as shown in FIG. 133 is displayed (401).
      <br/>
      Then, the operation is placed in a wait state for a command to be instructed by the user.
      <br/>
      If an event signal by pen-down is detected in user name input area 1801 (404), an existing recognition routine is called.
      <br/>
      This routine subjects a character hand drawn in the user name input area to the on-line character recognition process to convert character data to character code (407).
      <br/>
      If a "registration &amp; end" button command 1803 is instructed, the user name input and converted in the user name input area is determined as a new user name which is then additionally registered to the user name index file 107 (406).
      <br/>
      Thereafter, the current window is erased, and the control is returned to the initial item window again.
      <br/>
      On the other hand, if a "cancel" button command 1802 is instructed, the characters entered into the user name input area are all deleted (408), and the operation is placed again in a wait state for a user name input command.
    </p>
    <p num="240">The process flow in the user dictionary editor will be described below with reference to FIG. 136 and a flowchart of FIG. 120. In FIG. 136, reference numeral 2101 represents a message display area, reference numeral 2102 represents a registered character list display area, reference numeral 2103 represents a scroll bar which allows more registered characters to be displayed, and reference numerals 2104 to 2108 represent function calling buttons by pen tap.</p>
    <p num="241">
      If a "user dictionary edit" button 1705 is depressed in the previous initial item window, a user dictionary 106 designated is first copied and stored separately (512).
      <br/>
      This provides for a back up copy if the dictionary edit operation is canceled.
      <br/>
      Then, the user dictionary is opened to read character codes within the user dictionary into a buffer area (502).
      <br/>
      Herein, to make characters within the user dictionary to correspond one-to-one to displayed characters, a character code correspondence table is created (601 in FIG. 121).
      <br/>
      For example, when six characters are registered, the correspondence table is as shown in FIG. 139. This character code correspondence table is created because if a multiplicity of dictionary character data with the same character code exist, the retrieval of dictionary data is not allowed uniquely only with the information of character code in the editing of character with the "delete" or "reproduce" command.
      <br/>
      User dictionary edit window as illustrated in FIG. 139 is displayed based on this character code correspondence table (503).
      <br/>
      A character code read at this time is displayed in the registered character list display area 2101 (504).
      <br/>
      Thereafter, the operation is placed in the wait state for a command instructed by the user (505).
      <br/>
      If a signal by pen down is detected in the registered character list display area, a character located by pen down is selected (506).
      <br/>
      The display number on the character code table is obtained from positional information of the selected character.
      <br/>
      The storage location of dictionary character data practically stored in the user dictionary is determined from its display number to obtain dictionary character data to be edited.
      <br/>
      If a "character registration" button command 2104 is designated (507), the control is transferred to a new character registration routine (701 in FIG. 122).
      <br/>
      If a "character delete" button command 2105 is designated (509), a discrimination is made as to whether or not the character in the registered character list display area is selected (801 in FIG. 123).
      <br/>
      If not selected, the operation returns to the wait state for a command instruction (505).
      <br/>
      If already selected, the dictionary data storage area of character to be deleted is located using the character code correspondence table as previously noted.
      <br/>
      When it is found, the dictionary character data stored in the actual user dictionary is deleted (802).
      <br/>
      At the same time when the content of user dictionary is changed, the character code correspondence table is also changed to update the character display of registered character list display area (504).
      <br/>
      If a "handwritten reproduction" button 2106 is depressed (509), the control is transferred to a handwritten reproduction routine when there is a character selected, or the operation is placed in the wait state for a character to be selected when there is no character selected (901).
      <br/>
      If a "cancel" button command 2107 is designated (510), a discrimination is made as to whether or not the character in the registered character list display area is selected (1001 in FIG. 125).
      <br/>
      If any character is selected, the character is invalidated, the display is placed in a character unselected state (1002), and the content of registered dictionary is restored to the original state before starting the dictionary edit window (1003).
      <br/>
      With this operation, the editing is enabled to restart.
      <br/>
      An "end" button command 2108 erases this user dictionary edit window, and returns the control to the previous initial item window.
    </p>
    <p num="242">The process flow of the new character register will be described below using FIGS. 134 and 135 and a flowchart of FIG. 126. In FIG. 134, reference numeral 1901 represents a message display area, reference numeral 1902 represents a handwritten character input area, reference numeral 1903 represents a font character input area, reference numeral 1904 represents an input code list area, reference numeral 1905 represents a scroll bar which allows more character codes to be displayed, and reference numerals 1906 to 1908 represent function calling buttons by pen tap.</p>
    <p num="243">
      If a "character registration" 2104 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 134 is created for the display in the form of pop-up window (1101).
      <br/>
      By the character registration herein used is meant a task for assigning character data by user's original handwriting to a corresponding character code.
      <br/>
      Hence, a data input area for acquiring user's handwritten data and a character code input area corresponding thereto are necessary, wherein "handwritten" column 1902 is a handwritten data input area and "font" column 1903 is a character code input area, as illustrated in FIG. 134. Reference numeral 1904 of FIG. 134 represents an input code list for inputting the character code, the character code being input by selecting it from the list.
      <br/>
      Accordingly, the registerable character types must be displayed in the input code list, for which it is necessary that a character type file storing the registerable character types is created beforehand (1109).
      <br/>
      The registerable character types are displayed by reading this file (1102).
      <br/>
      If this display is ended, the operation waits for a command instruction from the user (1103).
      <br/>
      If a pen down input signal by the user is detected in the "handwritten" column, its hand data is stored as a set of two-dimensional coordinates in a buffer area (1201 in FIG. 127), and drawn in the "handwritten" column at the same time.
      <br/>
      FIG. 134 illustrates a state where the user has entered a handwritten character corresponding to a font "+character pullout}" as indicated at 1902.
      <br/>
      The input of corresponding character code is performed in such a manner as to select a character code from the input code list, temporarily store it in the buffer area, and then get it (1301 in FIG. 128).
      <br/>
      The selected character is displayed in larger scale in the "font" column at every time (1302).
      <br/>
      If a "registration" button command 1906 is designated, it is confirmed whether or not both the handwritten character in the "handwritten" column and the character in the "font" column are input (1401).
      <br/>
      If both are input, the creation of a recognition dictionary for that character is started (1403).
      <br/>
      The creation of the recognition dictionary is accomplished by creating the standard pattern from character data by a well-known method.
      <br/>
      As a result, this standard pattern is newly created in the user dictionary, or added thereto (1404).
      <br/>
      If the input of hand data and character code is insufficient, a warning is generated (1402), and the same process is repeated until both the handwritten character data and the character code of the character to be registered are input.
      <br/>
      If a "cancel" button command 1907 is designated, both the character data and the character code input in the "handwritten" and "font" columns are invalidated (1501 in FIG. 130), and the input is enabled again.
      <br/>
      FIG. 135 illustratets a state where a character "+character pullout}" has been entered by selecting it from the character code list.
      <br/>
      The "end" button command 1908 serves to erase this new character registration window and return the control to the user dictionary editor.
    </p>
    <p num="244">
      The process flow in the handwritten character reproducer will be described below using FIG. 137 and a flowchart of FIG. 131. In FIG. 137, reference numeral 2201 represents a handwritten character reproduction area, reference numeral 2202 represents a font display area destined for the handwritten character, reference numeral 2203 represents a hand stroke number display area of the handwritten character, reference numeral 2204 represents a standard stroke number display area of subject font, reference numerals 2205, 2206 represent function calling buttons by pen tap, and reference numeral 2207 represents a character position reference line.
      <br/>
      Reference numeral 2208 represents a pen pressure information of handwritten character.
    </p>
    <p num="245">Herein, the user dictionary for use with the handwritten character reproduction will be described below.</p>
    <p num="246">
      FIG. 140 is a diagram illustrating the structure of a recognition dictionary.
      <br/>
      The dictionary consists of a set of character blocks including a character code and other information, which is arranged as shown at 2501.
      <br/>
      The content of each character block is as illustrated in 2502.
      <br/>
      Each information contained in 2502 has been introduced and processed beforehand at the creation of standard pattern.
      <br/>
      A "character frame information" in 2502 stores information of character frame as shown in FIG. 141. That is, "(X, Y)" is an absolute coordinate at the left upper corner of character frame, "width" is a width of frame, and "height" is a height of frame.
      <br/>
      Also, the pen pressure information is an average pen pressure value of character obtained from an input tablet.
      <br/>
      At the last location in the character block is stored character data, including two-dimensional coordinate, as well as each code of pen-up, pen-down and termination.
      <br/>
      The coordinate of character data is as it is input and stored, without undergoing any processing, and thus has a value with the left upper corner of character frame defined as a origin.
    </p>
    <p num="247">
      If a "handwritten reproduction" command button 2106 is designated in the previous user dictionary editor, a skeleton of screen as illustrated in FIG. 137 is created and displayed in the form of-pop-up window (1602).
      <br/>
      Since it is already confirmed that the character code is selected in the previous user dictionary editor, the enlarged font of the character is first displayed in the font area (1603).
      <br/>
      The number of strokes of the character is displayed together with the font display (1603), which is accomplished by preparing for a data base for character standard stroke number in which the standard stroke number is described for each character (1607), and retrieving the subject character.
      <br/>
      To reproduce the character data within the user dictionary requires temporary extraction of dictionary data corresponding to the selected character, which is enabled by utilizing the previous character code correspondence table.
      <br/>
      Since the dictionary data of corresponding character contains coordinate points as well as information of pen down and pen up, it is possible to determine of which stroke number the coordinate point belongs to a hand.
      <br/>
      Using this, the handwriting can be drawn by linearly connecting the coordinate points sequentially within the same stroke (1604).
      <br/>
      The number of strokes for hand data is defined by counting how many times the pen down is made, and displayed (1605).
      <br/>
      Also, pen pressure information which is provided in the character block within the user dictionary is displayed (2208).
    </p>
    <p num="248">
      If the button command (1606) is "redisplay" 2205, the reproduced drawn data is erased, and hand reproduction is performed again by using dictionary data.
      <br/>
      If an "end" button command 2206 is designated, this handwritten character reproduction window is erased, and the control is transferred to the registered character editor.
      <br/>
      FIG. 137 illustrates a view where the character "+character pullout}" is selected and character hand is half reproduced.
    </p>
    <p num="249">
      Note that the window creation and signal detection as described in the text can be accomplished by using any of well-known techniques.
      <br/>
      While a pen was adopted as the pointing device, it is apparent that a mouse can be operated to enable the selection and entry.
    </p>
    <p num="250">While means for reproducing the character within the recognition dictionary as previously described draws sequentially character data present within the recognition dictionary which is stored in no processed state (raw data) to reproduce the character hand faithfully, a method will be now described in which a recognition dictionary for use with character hand reproduction is made a different structure.</p>
    <p num="251">
      First, the structure of recognition dictionary will be described using FIG. 142. Character block array 2701 is not different from that as previously described, but has a different structure of character block.
      <br/>
      Character data is stored at the last location of character block 2702, each coordinate value of character data being a point coordinate having absorbed variations in the position and size at the creation of dictionary (2703).
      <br/>
      Since the information of position and size can not be obtained from character data, circumscribed frame of entered character at the creation of dictionary is stored, in addition to character frame information, within the character block 2702.
      <br/>
      FIG. 143 is a view representing the portion regarding the character frame information and circumscribed frame information within the character block.
      <br/>
      Reference numeral 2801 represents a character frame and reference numeral represents a circumscribed frame of character.
      <br/>
      As illustrated in embodiment 1, X0, Y0, W0 and H0 indicate absolute X coordinate and Y coordinate, located at the left upper corner of character frame, character frame width and character frame height, and X1, Y1, W1 and H1 indicate absolute X coordinate and Y coordinate, located at the left upper corner of character circumscribed frame, character frame width and character frame height.
      <br/>
      With the character block structure with the above information, a character reproducer as illustrated in FIG. 29 can be-created.
      <br/>
      Reference numeral 2901 represents a hand-written character area, reference numeral 2902 represents a font character area, reference numeral 2903 represents a stroke number display area of handwritten character, reference numeral 2904 represents a stroke number display area of font character, reference numeral 2905 represents a redisplay button, reference numeral 2906 represents an end button, reference numeral 2907 represents a character frame, reference numeral 2908 represents a pen pressure display area for displaying the pen pressure, and reference numeral 2909 represents a character circumscribed frame.
      <br/>
      The output of font character and handwritten character can be performed in similar way as in embodiment 1.
      <br/>
      Also, the output of circumscribed frame is enabled by utilizing the circumscribed frame information within the character block.
    </p>
    <p num="252">
      Note that the present invention may be applicable to either a system comprised of a plurality of equipments or a single equipment.
      <br/>
      It will be understood that the present invention is applicable to a system or apparatus to which a program for implementing the invention is supplied.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>An information processing method comprising the steps of:</claim-text>
      <claim-text>by using a memory which stores a plurality of stroke data forming one character together with respective stroke order information having color information provided according to the stroke order, automatically displaying each of the stroke data forming one character, in response to a reproduction command, based on the stored stroke order information; inputting an instruction to change the speed of automatically displaying stroke data;</claim-text>
      <claim-text>and controlling to change the speed of automatically displaying each of the stroke data in accordance with the instruction input in said inputting step.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method according to claim 1, wherein said inputting step inputs the automatic-display-speed changing instruction in response to an operator actuating a change instruction button.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method according to claim 1, further comprising the step of outputting different sounds at a timing when the stroke data are displayed.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A method according to claim 1, wherein the display order of the stroke data is variable.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method according to claim 1, wherein the stroke order information comprises information indicating in which order the stroke is to be input in the character.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A method according to claim 2, wherein the change instruction button comprises a key pattern displayed on a screen.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. An information processing apparatus comprising: a memory which stores a plurality of stroke data forming one character together with respective stroke order information having color information provided according to the stroke order; displaying means for automatically displaying each of the stroke data forming one character, in response to a reproduction command, based on the stored stroke order information; inputting means for inputting an instruction to change the speed of automatically displaying stroke data;</claim-text>
      <claim-text>and controlling means for controlling to change the speed of automatically displaying each of the stroke data in accordance with the instruction input by said inputting means.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. An apparatus according to claim 7, wherein said inputting means inputs the automatic-display-speed changing instruction in response to an operator actuating a change instruction button.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. An apparatus according to claim 7, further comprising means for outputting different sounds at a timing when the stroke data are displayed.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. An apparatus according to claim 7, wherein the display order of the stroke data is variable.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. An apparatus according to claim 7, wherein the stroke order information comprises information indicating in which order the stroke is to be input in the character.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. An apparatus according to claim 8, wherein the change instruction button comprises a key pattern displayed on a screen.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A computer usable medium having computer readable program code means embodied therein for causing a computer to process information comprising: first computer readable program code means for causing the computer to use a memory which stores a plurality of stroke data forming one character together with respective stroke order information having color information provided according to stroke order, and to automatically display each of the stroke data forming one character, in response to a reproduction command, based on the stored stroke order information; second computer readable program code means for causing the computer to input an instruction to change the speed of automatically displaying stroke date;</claim-text>
      <claim-text>and third computer readable program code means for causing the computer to control change of the speed of automatically displaying each of the stroke data in accordance with the input instruction input by said second computer readable program code means.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A computer usable medium according to claim 13, wherein said second computer readable program code means causes the computer to input the automatic-display-speed changing instruction in response to an operator actuating a change instruction button.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A computer usable medium according to claim 13, further comprising fourth computer readable program code means for causing the computer to output different sounds at a timing when the stroke data are displayed.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A computer usable medium according to claim 13, wherein the display order of the stroke data is variable.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. A computer usable medium according to claim 13, wherein the stroke order information comprises information indicating in which order the stroke is to be input in the character.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. A computer usable medium according to claim 14, wherein the change instruction button comprises a key pattern displayed on a screen.</claim-text>
    </claim>
  </claims>
</questel-patent-document>