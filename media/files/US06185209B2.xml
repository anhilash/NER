<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185209B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185209</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185209</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="25401492" extended-family-id="1496042">
      <document-id>
        <country>US</country>
        <doc-number>08893391</doc-number>
        <kind>A</kind>
        <date>19970711</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08893391</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>1555595</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>89339197</doc-number>
        <kind>A</kind>
        <date>19970711</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08893391</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04L  12/56        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>56</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04Q  11/04        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>11</main-group>
        <subgroup>04</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>370395710</text>
        <class>370</class>
        <subclass>395710</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>370417000</text>
        <class>370</class>
        <subclass>417000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H04L-049/30J</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>049</main-group>
        <subgroup>30J</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H04L-049/30C</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>049</main-group>
        <subgroup>30C</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>H04Q-011/04S2</text>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>011</main-group>
        <subgroup>04S2</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-049/3081</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>49</main-group>
        <subgroup>3081</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-049/3027</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>49</main-group>
        <subgroup>3027</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-2012/5646</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>2012</main-group>
        <subgroup>5646</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04Q-011/0478</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>11</main-group>
        <subgroup>0478</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>15</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>17</number-of-figures>
      <image-key data-format="questel">US6185209</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">VC merging for ATM switch</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>KAUFMAN CHARLES W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5418781</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5418781</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>CALAMVOKIS COSTAS, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5572522</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5572522</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>HAYTER ANDREW T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5577035</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5577035</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>CHIUSSI FABIO MASSIMO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5689505</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5689505</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>BONOMI FLAVIO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5838681</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5838681</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>LEHNERT RALF, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5285445</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5285445</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>TANAKA KENJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5339318</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5339318</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>CORDELL ROBERT R</text>
          <document-id>
            <country>US</country>
            <doc-number>5367520</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5367520</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>SHTAYER RONEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5414701</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5414701</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>LOYER BRUCE A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5418786</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5418786</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>MARSHALL KEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5420858</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5420858</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>SUGITA MASAHIRO</text>
          <document-id>
            <country>US</country>
            <doc-number>5440552</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440552</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>LAUER HUGH, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5455825</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5455825</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>HUEY HENRY E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5467349</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5467349</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>GOUBERT JOZEF A O, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5481687</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5481687</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>BEN-NUN MICHAEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5483526</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5483526</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>DREFENSTEDT REINHARD</text>
          <document-id>
            <country>US</country>
            <doc-number>5504743</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5504743</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>ZHENG OIN</text>
          <document-id>
            <country>US</country>
            <doc-number>5515359</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5515359</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>WATANABE HIROYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5521917</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5521917</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>KOZAKI TAKAHIKO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5530698</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5530698</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>CONDON JOSEPH H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5530806</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5530806</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>OZVEREN CUNEYT M</text>
          <document-id>
            <country>US</country>
            <doc-number>5546377</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5546377</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>CALAMVOKIS COSTAS</text>
          <document-id>
            <country>US</country>
            <doc-number>5555256</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5555256</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0531599</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-531599</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0676878</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-676878</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>PMC SIERRA INC</text>
          <document-id>
            <country>GB</country>
            <doc-number>2301913</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>GB2301913</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>IBM Technical Disclosure Bulletin, vol. 35, No. 3, "Connectionless ATM Network Support Using Virtual Path Connections," pp. 445-448, Aug. 1992.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>IBM Technical Disclosure Bulletin, vol. 38, , No. 1 "Combined Translation Lookaside Buffer for Page Frame Table and Translation Control Word Entries," pp. 240-242, Jan. 1993.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>IBM Technical Disclosure Bulletin, vol. 38, No. 11 "Fast Technological Update in Asynchronous Transfer Mode Networks," pp. 359-360, Nov. 1995.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>IBM Technical Disclosure Bulletin, vol. 39, No. 1, "Method for High-Speed Swapping of Asynchronous Transfer Mode Virtual Path Identifier/Virtual Channel Identifier Headers," pp. 225-228, Jan. 1996.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Telefonaktiebolaget LM Ericsson</orgname>
            <address>
              <address-1>Stockholm, SE</address-1>
              <city>Stockholm</city>
              <country>SE</country>
            </address>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>ERICSSON</orgname>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Wicklund, Göran</name>
            <address>
              <address-1>Nacka, SE</address-1>
              <city>Nacka</city>
              <country>SE</country>
            </address>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Nixon &amp; Vanderhye P.C.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Nguyen, Chau</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An Asynchronous Transfer Mode (ATM) switching device (110) has a switch core (112) connected to a plurality of incoming VC channels and an egress port (116) connected to receive cells from the switch core.
      <br/>
      The egress port has both a plurality of pre-merge VC queues (144) and a plurality of merge VC queues (140).
      <br/>
      Cells received from the switch core are stored in one of the plurality of pre-merge VC queues in accordance with their incoming VC channel.
      <br/>
      A merge controller (132) determines when one of the pre-merge VC queues has a complete packet of cells, and enters the packet of cells into an appropriate one of the merge VC queues.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is related to the following (all of which are incorporated herein by reference): U.S. patent application Ser.
      <br/>
      No. 08/891,232, entitled "ABR SERVER", filed Jul. 11, 1997; U.S. patent application Ser.
      <br/>
      No. 08/890,758, entitled "HANDLING ATM MULTICAST CELLS", filed Jul. 11, 1997; U.S. patent application Ser.
      <br/>
      No. 08/893,576, entitled "A DATA SHAPER FOR ATM TRAFFIC", filed Jul. 11, 1997; U.S. patent application Ser.
      <br/>
      No. 08/893,479, entitled "VP/VC LOOK-UP FUNCTION", filed Jul. 11, 1997.
    </p>
    <heading>BACKGROUND</heading>
    <p num="2">
      1.
      <br/>
      Field of Invention
    </p>
    <p num="3">This invention pertains to telecommunications, and particularly to the handling of cells in a switching node of a telecommunications network operating in the asynchronous transfer mode.</p>
    <p num="4">2. Related Art and Other Considerations</p>
    <p num="5">The increasing interest for high band services such as multimedia applications, video on demand, video telephone, and teleconferencing has motivated development of the Broadband Integrated Service Digital Network (B-ISDN). B-ISDN is based on a technology know as Asynchronous Transfer Mode (ATM), and offers considerable extension of telecommunications capabilities.</p>
    <p num="6">
      ATM is a packet-oriented transfer mode which uses asynchronous time division multiplexing techniques.
      <br/>
      Packets are called cells and have a fixed size.
      <br/>
      An ATM cell consists of 53 octets, five of which form a header and forty eight of which constitute a "payload" or information portion of the cell.
      <br/>
      The header of the ATM cell includes two quantities which are used to identify a connection in an ATM network over which the cell is to travel, particularly the VPI (Virtual Path Identifier) and VCI (Virtual Channel Identifier).
      <br/>
      In general, the virtual is a principal path defined between two switching nodes of the network; the virtual channel is one specific connection on the respective principal path.
    </p>
    <p num="7">
      At its termination points, an ATM network is connected to terminal equipment, e.g., ATM network users.
      <br/>
      Between ATM network termination points are a plurality of switching nodes having ports which are connected together by physical transmission paths or links.
      <br/>
      In traveling from an origin terminal equipment to a destination terminal equipment, ATM cells forming a message may travel through several switching nodes.
    </p>
    <p num="8">
      A switching node has a plurality of ports, each of which is connected by via a link circuit and a link to another node.
      <br/>
      The link circuit performs packaging of the cells according to the particular protocol in use on the link.
      <br/>
      A cell incoming to a switching node may enter the switching node at a first port and exit from a second port via a link circuit onto a link connected to another node.
      <br/>
      Each link can carry cells for a plurality of connections, a connection being a transmission between a calling subscriber or party and a called subscriber or party.
    </p>
    <p num="9">
      The switching nodes each typically have several functional parts, a primary of which is a switch core.
      <br/>
      The switch core essentially functions like a cross-connect between ports of the switch.
      <br/>
      Paths internal to the switch core are selectively controlled so that particular ports of the switch are connected together to allow a message ultimately to travel from an ingress side of the switch to an egress side of the switch, and ultimately from the originating terminal equipment to the destination terminal equipment.
    </p>
    <p num="10">
      FIG. 1 shows a prior art ATM switching device 10 having a switch core 12, a plurality of ingress ports 14 (1)-14 (3), and a exemplary egress port 16.
      <br/>
      FIG. 1 shows, in broken lines, cells incoming to switch 10 on three channels, particularly a first channel VC-1 to port 14 (1), a second channel VC-2 to port 14 (2), and a third channel VC-3 to port VC-3.
      <br/>
      All cells on the same channel have the same VC or VCI, e.g., cells on the first channel all have a first VC denominated as VC-1.
    </p>
    <p num="11">
      In the illustration of FIG. 1, the incoming cells on all channels VC-1 through VC-3 happen to be switched through switch core 12 to the same egress port 16 for eventual output to channel VC-4.
      <br/>
      At egress port 16 the cells are all assigned a new VPI/VCI code.
      <br/>
      The switching of several incoming VC channels to a same outgoing VC channel is referred to as "VC merging".
      <br/>
      The purpose of VC merging is to collect packets that shall be routed to the same destination into one single virtual channel, instead of using a separate VC between each source and the destination.
      <br/>
      This reduces the number of required virtual channels in the ATM network.
    </p>
    <p num="12">
      If the cells were all sent out in the order in which they arrived at the switch core 12, there would be no way of separating them at the end-point of channel VC-4.
      <br/>
      For this reason, VC merging can only work for channels carrying AAL-5 packets by storing complete packets at the egress port and sending them out packet-by-packet, i.e., the multiplexing is performed at the packet level.
    </p>
    <p num="13">What is needed, therefore, and an object of the present invention, is method and apparatus for efficiently conducting a VC merging operation.</p>
    <heading>SUMMARY</heading>
    <p num="14">
      An Asynchronous Transfer Mode (ATM) switching device has a switch core connected to a plurality of incoming VC channels and an egress port connected to receive cells from the switch core.
      <br/>
      The egress port has both a plurality of pre-merge VC queues and a plurality of merge VC queues.
      <br/>
      Cells received from the switch core are stored in one of the plurality of pre-merge VC queues in accordance with their incoming VC channel.
      <br/>
      A merge controller determines when one of the pre-merge VC queues has a complete packet of cells, and enters the packet of cells into an appropriate one the merge VC queues.
    </p>
    <p num="15">
      In one embodiment, the plurality of pre-merge VC queues and the merge VC queues are each stored as separate linked lists in a common memory.
      <br/>
      The merge controller enters the completed packet of cells into the appropriate merge VC queue by linking the pre-merge linked list storing the packet to the linked list which forms the merge VC queue.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="16">
      The foregoing and other objects, features, and advantages of the invention will be apparent from the following more particular description of preferred embodiments as illustrated in the accompanying drawings in which reference characters refer to the same parts throughout the various views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.
      <br/>
      FIG. 1 is a schematic view of a prior art ATM switching device.
      <br/>
      FIG. 2 is a schematic view of a ATM switching device according to an embodiment of the present invention.
      <br/>
      FIG. 3 is a schematic diagram showing the relationship of FIG. 3A and FIG. 3B.
      <br/>
      FIG. 3A and FIG. 3B are flowcharts showing operations performed in an egress port of the ATM switching device of FIG. 2 with respect to a pre-merge queue.
      <br/>
      FIG. 4A-FIG. 4F are schematic views of the egress port of the ATM switching device of FIG. 2 showing cell population of a post-merge queue and pre-merge queues in accordance with an exemplary scenario.
      <br/>
      FIG. 5A-FIG. 5F are schematic views of a memory of the egress port of the ATM switching device of FIG. 2 showing cell population in accordance with the exemplary scenario depicted by corresponding FIG. 4A-FIG. 4F.
    </p>
    <heading>DETAILED DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      In the following description, for purposes of explanation and not limitation, specific details are set forth such as particular architectures, interfaces, techniques, etc. in order to provide a thorough understanding of the present invention.
      <br/>
      However, it will be apparent to those skilled in the art that the present invention may be practiced in other embodiments that depart from these specific details.
      <br/>
      In other instances, detailed descriptions of well known devices, circuits, and methods are omitted so as not to obscure the description of the present invention with unnecessary detail.
    </p>
    <p num="18">
      FIG. 2 is a schematic view of ATM switching device 100 according to an embodiment of the present invention, also simply referred to as the ATM switch.
      <br/>
      ATM switch has a switch core 112 to which are connected a plurality of ingress ports 114 (1)-114 (3) and egress port 116.
      <br/>
      For sake of simplification of illustration, only three ingress ports 114 and one egress port 116 are depicted, it being understood that in actuality there are many ingress ports and many egress ports.
    </p>
    <p num="19">
      In like manner with FIG. 1, FIG. 2 shows, in broken lines, cells incoming to switch 100 on three channels, particularly a first channel VC-1 to port 114 (1), a second channel VC-2 to port 114 (2), and a third channel VC-3 to port VC-3.
      <br/>
      All cells on the same channel have the same VC or VCI, e.g., cells or. the first channel all have a first VC denominated as VC-1.
    </p>
    <p num="20">
      Switch core 112 routes cells to many egress ports, of which egress port 116 is shown as one example.
      <br/>
      Egress port 116 is connected to an outgoing link 120 through an unillustrated link interface circuit.
      <br/>
      In the particular embodiment shown in FIG. 2, egress port 116 comprises a memory 130 and a merge controller 132.
      <br/>
      Memory 130 can be any suitable storage means, such as a random access memory (RAM).
      <br/>
      In the example of FIG. 2, merge controller 132 is a microprocessor.
    </p>
    <p num="21">
      Memory 130 of egress port 116 includes a plurality of VC merge queues and a plurality of pre-merge VC queues.
      <br/>
      For sake of simplicity, only one VC merge queue 140 and three pre-merge VC queues 144 (1) through 144 (3) are illustrated.
      <br/>
      Each pre-merge VC queue 144 corresponds to a paired one of the incoming VC channels.
      <br/>
      As a cell is received by egress port 116 from switch core 112, merge controller 132 directs the cell to one of the pre-merge VC queues 144 (1) through 144 (3) in accordance with the incoming VC of the cell.
      <br/>
      For example, cells received on channel VC-1 are directed by merge controller 132 to pre-merge VC queue 144 (1); cells received on channel VC-2 are directed by merge controller 132 to pre-merge VC queue 144 (2); and so forth.
    </p>
    <p num="22">
      Merge controller 132 knows the incoming VC channel of a cell output to egress port 116 from switch core 112.
      <br/>
      Each cell carries a channel identifier, e.g., 16 bits that are prepended to the actual ATM cell.
      <br/>
      In this regard, the ingress port prepends each cell with routing information (e.g., to which egress port the cell shall be switched in the switch core) and the channel identifier which is used by the egress port to identify the cell.
      <br/>
      The channel identifier is derived from the VPI and VCI field of the incoming cell.
    </p>
    <p num="23">
      Cells are collected in their respective pre-merge queues 144 until merge controller 132 determines that an entire packet has been assembled in the pre-merge queue 144.
      <br/>
      When a completed packet has been assembled in a pre-merge queue 144, that completed packet is moved into the merge VC queue 140.
    </p>
    <p num="24">
      As demonstrated hereinafter with respect to FIGS. 5A-5F, the merge VC queue 140 is a linked list in memory 130 and the plurality of pre-merge VC queues are each separate linked lists in memory 130.
      <br/>
      Merge controller 132 enters a completed packet of cells in a selected one of the pre-merge VC queues 144 into merge VC queue 140 by linking the linked list of the selected one of the pre-merge VC queues 144 to the linked list which forms the VC queue 140.
    </p>
    <p num="25">
      Each pre-merge VC queue 144 and VC queue 140 have a set of control words associated therewith.
      <br/>
      These control words are also stored in memory 130, as indicated in FIG. 2.
      <br/>
      For example, merge VC queue 140 has set 150 of control words and pre-merge VC queues 144 (1)-144 (3) have corresponding sets 154 (1)-154 (3) of control words.
      <br/>
      The control words included in set 154 for each pre-merge VC queue 144 are explained by Table 1.
      <br/>
      The control words included in set 150 for merge VC queue 140 are explained by Table 2.
    </p>
    <p num="26">
      -- TABLE 1
      <br/>
      -- CONTROL WORDS FOR PRE-MERGE VC QUEUES
      <br/>
      --         Control Word         Explanation
      <br/>
      --         Head_in              a pointer to the first cell
      <br/>
      --                              in the pre-merge VC queue
      <br/>
      --         Tail_in              a pointer to the last cell
      <br/>
      --                              in the pre-merge VC queue
      <br/>
      --         Out_VC               a pointer to the appropriate
      <br/>
      --                              Merge VC queue
      <br/>
      --         Count_in             a number of cells currently
      <br/>
      --                              stored in the pre-merge VC
      <br/>
      --                              queue
    </p>
    <p num="27">
      -- TABLE 2
      <br/>
      -- CONTROL WORDS FOR MERGE VC QUEUE
      <br/>
      --         Control Word          Explanation
      <br/>
      --         Head_out              a pointer to the first cell
      <br/>
      --                               in the merge VC queue
      <br/>
      --         Tail_out              a pointer to the last cell
      <br/>
      --                               in the merge VC queue
      <br/>
      --         Length                the current length of the
      <br/>
      --                               merge VC queue
    </p>
    <p num="28">
      Each cell in the pre-merge queues 144 and in the merge VC queue 140 has a pointer "Next" associated therewith.
      <br/>
      The pointer "Next" is or points to an address of the next cell which follows the cell in the corresponding queue.
    </p>
    <p num="29">
      In the above regard, FIG. 5A-FIG. 5F show contents, at differing times, of a portion of memory 130 in accordance with an example scenario of operation of the present invention.
      <br/>
      In each of FIG. 5A-FIG. 5F, memory 130 is shown as segmented into cell storage locations, such as a first storage location LO, a second storage location L1, and so forth.
      <br/>
      Each storage location is depicted as having, in its lower right hand corner, the associated "Next" pointer.
      <br/>
      Reference letter N is employed in FIG. 5A to indicate the "Next" pointer for the cell C1 stored at location L2.
      <br/>
      The "Next" pointer for cell C1 shows that cell C1 is followed in the linked list by the cell having location L4, i.e., cell C2.
    </p>
    <p num="30">
      FIG. 3A and FIG. 3B depict basic steps performed by egress port 116 in accordance with the present invention.
      <br/>
      Step 3-1 shows egress port 116 obtaining a cell from switch core 112.
      <br/>
      When a cell is obtained from switch core 112, the cell also contains an indication of its incoming channel number (e.g., whether VC-1, VC-2, etc) and whether the cell is the last cell of a packet.
      <br/>
      Based on the incoming channel number, at step 3-2 merge controller 132 selects an appropriate pre-merge VC queue 144.
    </p>
    <p num="31">
      With an appropriate one of the pre-merge VC queues 144 having been selected at step 3-2, at step 3-3 a free location in memory 130 where the cell can be written is determined.
      <br/>
      Memory 130 is common to all queues, and all unused positions are linked into an idle queue.
      <br/>
      When a cell arrives, it is placed in the first buffer in this idle queue, and then linked into the right pre-merge VC queue (and linked out from the idle queue).
    </p>
    <p num="32">
      At step 3-4 the cell just written into the free location in memory 130 is linked to the selected pre-merge queue 144.
      <br/>
      At step 3-5 the location of the just-written cell is indicated by the Tail_in pointer.
    </p>
    <p num="33">
      At step 3-6 merge controller 132 determines whether the selected pre-merge VC queue 144 was formerly empty (i.e., empty for writing of the just-written cell).
      <br/>
      This is done by reading the Count in value.
      <br/>
      If the determination at step 3-6 is affirmative, at step 3-7 merge controller 132 sets the Head_in pointer (see the control words of sets 154 in FIG. 2) of the selected pre-merge queue 144 to the position (e.g. location) of the cell just written.
      <br/>
      Thus, step 3-7 essentially sets the beginning of the selected pre-merge VC queue at the location occupied by the just-written cell.
    </p>
    <p num="34">
      When the selected pre-merge VC queue 144 was not previously empty (indicated by counter value=0), at step 3-8 merge controller 132 determines whether the just-written cell is the last cell in a packet.
      <br/>
      The last cell of each packet has its PTI-field coded to 001 or 011.
      <br/>
      The PI field is bits 2-4 in the fourth octet of the ATM cell header bits number 1-8, bit 8 being transmitted first).
    </p>
    <p num="35">
      If the just-written cell does not complete a packet, steps 3-9 and 3-10 are executed before merge controller 132 awaits receipt of another cell at step 3-1.
      <br/>
      At step 3-9, merge controller 132 sets the Tail_in pointer for the selected pre-merge VC queue to the location of the cell just written.
      <br/>
      At step 3-10, the cell counter Count_in for the selected pre-merge VC queue is incremented to take into consideration inclusion of the just-written cell.
    </p>
    <p num="36">
      The steps of FIG. 3B are executed when merge controller 132 has determined that a packet has been completely assembled in the selected pre-merge VC queue 144.
      <br/>
      At step 3-11, for the selected pre-merge VC queue 144 the merge controller 132 uses the Out-VC pointer value to determine to which of the plurality of VC merge queues the new packet should be linked.
      <br/>
      In this regard, while only one VC merge queue 140 has been shown, in actuality there are many such VC merge queues.
      <br/>
      The value of the Out_VC pointer for a particular pre-merge VC queue determines to which of the plurality of VC merge queues the packets are destined.
    </p>
    <p num="37">
      At step 3-12 merge controller 132 determines whether the length of the merge VC queue 140 is zero.
      <br/>
      This determination is accomplished by checking the value of control word Length in set 150 (see FIG. 2).
      <br/>
      If the determination of step 3-12 is affirmative, at step 3-13 merge controller 132 sets the Head_out pointer of merge VC queue 140 equal to the Head_in pointer of the selected pre-merge VC queue 144.
    </p>
    <p num="38">
      Assuming merge VC queue 140 is not empty, at step 3-14 merge controller 132 sets the "Next" pointer for the cell which is currently the last cell in merge VC queue 140 equal to the value of the Head_in pointer for pre-merge VC queue 144.
      <br/>
      The currently last cell is found by reading the value of the Tail-out pointer.
      <br/>
      Step 3-14 effectively links the completed packet in the pre-merge VC queue to merge VC queue, by having the "Next" pointer of what was formerly the last cell in merge VC queue 140 set to point to the first cell of the completed packet in the selected pre-merge VC queue 144.
    </p>
    <p num="39">
      Upon completion of either step 3-14 or step 3-13, at step 3-15 merge controller 132 sets the Tail_out pointer of merge VC queue 140 to the location of the cell just written in the selected pre-merge VC queue 144.
      <br/>
      Step 3-15 effectively indicates that the end of merge VC queue 140 is now at the end of the selected pre-merge VC queue 144.
    </p>
    <p num="40">
      At step 3-16 merge controller 132 adds the cell counter (Count_in) for the selected pre-merge VC queue 144 to the length counter (Length) for merge VC queue 140, thereby updating the length counter (Length) for merge VC queue 140.
      <br/>
      Then, at step 3-17, merge controller 132 clears the cell counter (Count-In) for the selected pre-merge VC queue 144, since reading out of the completed packet from the selected pre-merge VC queue 144 empties the selected pre-merge VC queue 144.
      <br/>
      With the completed packet thus having been merged into merge VC queue 140, at step 3-18 merge controller 132 then awaits a further cell from switch core 112.
    </p>
    <p num="41">
      As appropriate, the steps of FIG. 3A and/or FIG. 3B are performed by merge controller 132 for each cell obtained from switch core 112.
      <br/>
      Which pre-merge VC queue 144 is the "selected" pre-merge VC queue 144 for any particular cell for which the steps of FIG. 3A and FIG. 3B are executed depends, as explained previously, on the incoming VC channel for the cell.
    </p>
    <p num="42">
      FIG. 4A-FIG. 4F illustrate an example scenario of operation of ATM switch 110 of the present invention in accordance with the steps of FIG. 3A and FIG. 3B as above described.
      <br/>
      FIG. 4A-FIG. 4F, showing portions of egress port 116, are correlated with FIG. 5A-FIG. 5F, respectively, which show portions of memory 130 of egress port 116.
      <br/>
      At a first time shown in FIG. 4A and FIG. 5A, merge VC queue 140 has cells C1 and C2 stored therein, and pre-merge VC queues 144 (2) and 144 (3) have cells C3 and C4, respectively, stored therein.
      <br/>
      As mentioned previously, the "Next" pointer N of cell C1 points to the location of cell C2, i.e., location L4, by which merge VC queue 140 is formed by a linking of cell C2 to cell C1.
    </p>
    <p num="43">
      FIG. 4B and FIG. 5B show cell C5 entering from switch core 112 and, in view of its incoming VC, being stored in pre-merge VC queue 144 (1).
      <br/>
      It just so happens that the free list pointer in memory 130 points to location L0, with the result that cell C5 is stored in location L0 of memory 130.
    </p>
    <p num="44">
      FIG. 4C and FIG. 5C show reception and storage in pre-merge VC queue 144 (1) of a further cell C6.
      <br/>
      Cell C6 is stored in a next free location in memory 130, i.e., location L1.
      <br/>
      So that cell C6 is linked into pre-merge VC queue 144 (1), in accordance with step 3-5 of FIG. 3A the "Next" pointer for cell C5 is loaded with the location of cell C6, i.e., location L1.
    </p>
    <p num="45">
      FIG. 4D and FIG. 5D show reception and storage in pre-merge VC queue 144 (2) of a further cell C7.
      <br/>
      Cell C7 is stored in a free location in memory 130, i.e., location L3, the free location being determined in accordance with the idle list.
      <br/>
      Cell C7 was stored in pre-merge VC queue 144 (2) since it had an incoming VC corresponding to VC channel VC-2.
      <br/>
      Thus, it is seen that cells received from switch core 112 are not necessarily all consecutively stored in the same pre-merge VC queue 144.
      <br/>
      So that cell C7 is linked into pre-merge VC queue 144 (2), the "Next" pointer for cell C3 is loaded with the location of cell C7, i.e., location L3.
    </p>
    <p num="46">
      FIG. 4E and FIG. 5E show reception and storage in pre-merge VC queue 144 (1) of a further cell C8.
      <br/>
      Cell C8 is stored in a next free location in memory 130, i.e., location L5.
      <br/>
      So that cell C8 is linked into pre-merge VC queue 144 (1), the "Next" pointer for cell C6 is loaded with the location of cell C8, i.e., location L5.
    </p>
    <p num="47">
      As also shown in FIG. 4E, it is determined by merge controller 132 that an entire packet P consisting of cells CS, C6, and C8 has been assembled in pre-merge VC queue 144 (1).
      <br/>
      Accordingly, as depicted by FIG. 4F and FIG. 5F, merge controller 132 links pre-merge VC queue 144 (1) to merge VC queue 140.
    </p>
    <p num="48">The linkage of pre-merge VC queue 144 (1) to merge VC queue 140 is shown in FIG. 4F by inclusion of cells C5, C6, and C8 in merge VC queue 140, and in FIG. 5F by e.g., loading the location of the first cell in queue 144 (1), i.e., location L0, into the "Next" pointer of what formerly was the last cell in queue 140, i.e., cell C2.</p>
    <p num="49">
      After the cells have been stored in the right one of the plurality of merge VC queues, e.g., VC merge queue 140 in the present illustration, a scheduler or selector may take one cell from each of the merge VC queues at a time (e.g., in round-robin fashion) and send the cells out onto an outgoing link.
      <br/>
      When doing so, a new VPI/VCI value is assigned to the cells, the same value being assigned for all cells from a particular merge VC queue.
      <br/>
      Alternatively, the new VPI/VCO value may be provided by the ingress port and already inserted in to the cell when it arrives at the egress port.
      <br/>
      When the cell has been sent out, the corresponding position in memory 130 is returned to the idle queue, i.e., setting the Next pointer of the previously last cell in the idle queue to point to it.
    </p>
    <p num="50">
      In accordance with the present invention, cell arriving from switch core 112 is put into an appropriate one of the plurality of pre-merge VC queues 144 based on its incoming internal channel number (VC).
      <br/>
      When the last cell of a packet has been received in a pre-merge VC queue 144, as indicated by a specified bit in the cell header, merge controller 132 moves the completed packet to merge VC queue 140 for output from egress port 116.
      <br/>
      There is one merge VC queue 140 for each outgoing channel, so that for any outgoing channel the cells are sent out in the order in which they are stored in the merge VC queue 140 for that channel, i.e., one complete packet at a time.
    </p>
    <p num="51">While the invention has been particularly shown and described with reference to the preferred embodiments thereof, it will be understood by those skilled in the art that various alterations in form and detail may be made therein without departing from the spirit and scope of the invention.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>The embodiments of the invention in which an exclusive property or privilege is claimed are defined as follows:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>An Asynchronous Transfer Mode (ATM) switching device comprising:</claim-text>
      <claim-text>a switch core connected to a plurality of incoming VC channels, the switch core receiving, on the plurality of incoming VC channels, cells having a corresponding plurality of VC identifiers; an egress port connected to receive, from the switch core, cells having the corresponding plurality of VC identifiers and which are applied to a same outgoing VC channel, the egress port comprising:</claim-text>
      <claim-text>- a plurality of pre-merge VC queues into which cells received from the switch core are stored in accordance with their incoming VC channel; - a merge VC queue associated with the outgoing VC channel; - a merge controller which determines when one of the pre-merge VC queues has a completed packet of cells therein and enters the packet of cells into the merge VC queue so that completed packets of cells in the plurality of pre-merge VC queues are merged into a single outgoing link connected to the merge VC queue, whereby all cells entered into the merge VC queue are applied to the single outgoing link.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The apparatus of claim 1, wherein the plurality of pre-merge VC queues and the merge VC queue are stored in a memory, wherein the merge VC queue comprises a merge linked list in the memory and a selected one of the plurality of pre-merge VC queues comprises a selected pre-merge linked list in the memory, and wherein the merge controller enters the packet of cells into the merge VC queue by linking the selected pre-merge linked list to the merge linked list in the memory.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method of operating an Asynchronous Transfer Mode (ATM) switching device, the method comprising: applying incoming cells to a switch core from a plurality of incoming VC channels, the switch core receiving, on the plurality of incoming VC channels, cells having a corresponding plurality of VC identifiers; receiving, at an egress port connected to the switch core, cells having the corresponding plurality of VC identifiers and which are applied to a same outgoing VC channel, and at the egress port performing the steps of: - storing the incoming cells in a plurality of pre-merge VC queues in accordance with their incoming VC channel; - making a determination when one of the pre-merge VC queues has a completed packet of cells therein;</claim-text>
      <claim-text>and, in accordance with the determination, - entering the packet of cells into a merge VC queue associated with the outgoing VC channel;</claim-text>
      <claim-text>and - applying the completed packets of cells from the merge VC queue to a single outgoing link connected to the merge VC queue whereby all cells entered into the merge VC queue are applied to the single outgoing link.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3, further comprising: establishing the plurality of pre-merge VC queues and the merge VC queue in a memory; forming the merge VC queue as a merge linked list in the memory; forming a selected one of the plurality of pre-merge VC queues as a selected pre-merge linked list in the memory; entering the packet of cells into the merge VC queue by linking the selected pre-merge linked list to the merge linked list in the memory.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The apparatus of claim 1, wherein the cells received from the switch core are unicast cells.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 3, wherein the cells received from the switch core are unicast cells.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. An Asynchronous Transfer Mode (ATM) switching device comprising: a switch core connected to a plurality of incoming VC channels; an egress port connected to receive cells from the switch core, the egress port comprising: - a plurality of pre-merge VC queues into which cells received from the switch core are stored in accordance with their incoming VC channel; - at least first and second merge VC queues; - a merge controller which determines when one of the pre-merge VC queues has a completed packet of cells therein, and wherein said merge controller determines whether to enter the packet of cells in the first or second merge VC queue and thereafter enters the packet of cells into the appropriate one of the merge VC queues so that completed packets of cells in the plurality of pre-merge VC queues are merged into a single outgoing link connected to the appropriate merge VC queue.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The apparatus of claim 7, wherein the plurality of pre-merge VC queues and the merge VC queues are stored in a memory, wherein each merge VC queue comprises a merge linked list in the memory and a selected one of the plurality of pre-merge VC queues comprises a selected pre-merge linked list in the memory, and wherein the merge controller enters the packet of cells into the appropriate merge VC queue by linking the selected pre-merge linked list to the merge linked list in the memory.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The apparatus of claim 7, wherein the cells received from the switch core are unicast cells.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The apparatus of claim 7, wherein cells output from said first merge VC queue are output on a first outgoing link and include a first VC identifier, and cells output from said second merge VC queue are output on a second outgoing link and include a second VC identifier.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The apparatus of claim 7, wherein cells output from said first merge VC queue are output on a first link so as to be directed toward another node via a first VC, and cells output from said second merge VC queue are output on a second link so as to be directed toward another node via a second VC.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method of operating an Asynchronous Transfer Mode (ATM) switching device, the method comprising: applying incoming cells to a switch core from a plurality of incoming VC channels; at an egress port connected to receive cells from the switch core: - storing the incoming cells into a plurality of pre-merge VC queues in accordance with their incoming VC channel; - providing first and second merge VC queues in the egress port; - making a determination when one of the pre-merge VC queues has a completed packet of cells therein; - determining whether to enter the packet of cells in the first merge VC queue or the second merge VC queue; - entering the packet of cells into the first merge VC queue based upon said determining step;</claim-text>
      <claim-text>and - applying the completed packets of cells from the first merge VC queue to a single outgoing link connected to the first merge VC queue.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 12, further comprising: establishing the plurality of pre-merge VC queues and the merge VC queues in a memory; forming each of the merge VC queues as a merge linked list in the memory; forming a selected one of the plurality of pre-merge VC queues as a selected pre-merge linked list in the memory; entering the packet of cells into the first merge VC queue by linking the selected pre-merge linked list to the corresponding merge linked list in the memory.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 12, wherein the cells received from the switch core are unicast cells.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 12, wherein a first virtual circuit or channel identifier is assigned to cells output from the first merge VC queue and a different second virtual circuit or channel identifier is assigned to cells output from the second merge VC queue.</claim-text>
    </claim>
  </claims>
</questel-patent-document>