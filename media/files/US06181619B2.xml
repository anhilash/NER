<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181619B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181619</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181619</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="22762477" extended-family-id="42108196">
      <document-id>
        <country>US</country>
        <doc-number>09205508</doc-number>
        <kind>A</kind>
        <date>19981204</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09205508</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43164586</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>20550898</doc-number>
        <kind>A</kind>
        <date>19981204</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09205508</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G11C   7/12        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>12</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G11C  11/409       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>11</main-group>
        <subgroup>409</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>365203000</text>
        <class>365</class>
        <subclass>203000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>365230030</text>
        <class>365</class>
        <subclass>230030</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G11C-007/12</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>12</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G11C-011/409</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>11</main-group>
        <subgroup>409</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-011/409</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>11</main-group>
        <subgroup>409</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-007/12</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>12</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>20</number-of-claims>
    <exemplary-claim>11</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>5</number-of-figures>
      <image-key data-format="questel">US6181619</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Selective automatic precharge of dynamic random access memory banks</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>STOLT PATRICK F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5721860</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5721860</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>JENG TERRY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5825710</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5825710</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>SCHUMANN REINHARD C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5889714</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5889714</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>KANMA HIROKAZU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5914903</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5914903</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>PINNEY DAVID L</text>
          <document-id>
            <country>US</country>
            <doc-number>5923603</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5923603</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>BAINS KULJIT</text>
          <document-id>
            <country>US</country>
            <doc-number>5940848</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5940848</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>RAO G R MOHAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5950219</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5950219</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>RAO G R MOHAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5963468</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963468</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>HOLLAND WAYLAND BART</text>
          <document-id>
            <country>US</country>
            <doc-number>5963497</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963497</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Intel Corporation</orgname>
            <address>
              <address-1>Santa Clara, CA, US</address-1>
              <city>Santa Clara</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>INTEL</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Bogin, Zohar</name>
            <address>
              <address-1>Folsom, CA, US</address-1>
              <city>Folsom</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>VonBokern, Vincent</name>
            <address>
              <address-1>Rescue, CA, US</address-1>
              <city>Rescue</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Freker, David</name>
            <address>
              <address-1>Folsom, CA, US</address-1>
              <city>Folsom</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Blakely, Sokoloff, Taylor &amp; Zafman LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Zarabian, A</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method and apparatus for selective automatic precharge of dynamic random access memory banks is disclosed.
      <br/>
      By automatically precharging memory banks under certain conditions overall memory throughput can be improved because precharging is performed on a more selective basis.
      <br/>
      In one embodiment, the present invention provides support for multiple open banks of memory within a single memory sub-system.
      <br/>
      When multiple banks of memory are open simultaneously, a bank of memory that is less likely to be accessed in the future can be precharged when a new bank of memory is to be opened to service a memory request.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">
      The present invention relates to control of random access memory.
      <br/>
      More particularly, the present invention relates to selective automatic precharge of dynamic random access memory based on predetermined criteria.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      Typical dynamic random access memory (DRAM) controllers follow a specific sequence to access a memory location.
      <br/>
      This sequence includes activating or opening a bank of memory, accessing (e.g., reading or writing) a memory location in the bank of memory, and closing or precharging the bank of memory.
      <br/>
      Generally, each step of the sequence is the result of an individual explicit command.
      <br/>
      When multiple memory locations within a single bank of memory are accessed, the activation and precharging steps can be performed once for the group of accesses to the bank of memory.
    </p>
    <p num="3">
      Many computer systems have multitasking capabilities that allow the computer system to maintain multiple active processes.
      <br/>
      Because processes often access memory locations within a common bank of memory, the activation and precharging steps can be performed sparingly for a single process.
      <br/>
      When multiple processes are active, however, each process has a location in memory that can be repeatedly accessed.
      <br/>
      Thus, the activation and precharging of DRAM banks are often included in context switching overhead.
    </p>
    <p num="4">What is needed is a method and apparatus that reduces the number of precharge operations in a memory sub-system having multiple banks.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="5">
      A method and apparatus for selective automatic precharge of dynamic random access memory banks is described.
      <br/>
      A bank of memory in a memory sub-system is opened.
      <br/>
      A memory location in the bank of memory is accessed.
      <br/>
      The bank of memory is precharged automatically based, at least in part, on a predetermined bank closure policy.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="6">
      The present invention is illustrated by way of example, and not by way of limitation in the figures of the accompanying drawings in which like reference numerals refer to similar elements.
      <br/>
      FIG. 1 is a block diagram of a computer system suitable for use with the present invention.
      <br/>
      FIG. 2 is a timing diagram of a dynamic random access memory (DRAM) access.
      <br/>
      FIG. 3 is a logical address for accessing a location in memory.
      <br/>
      FIG. 4 is a block diagram of components for accessing DRAM.
      <br/>
      FIG. 5 is one embodiment of a paging policy register.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="7">
      A method and apparatus for selective automatic precharge of dynamic random access memory banks is described.
      <br/>
      In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention.
      <br/>
      It will be apparent, however, to one skilled in the art that the present invention can be practiced without these specific details.
      <br/>
      In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the present invention.
    </p>
    <p num="8">
      Reference in the specification to "one embodiment" or "an embodiment" means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the invention.
      <br/>
      The appearances of the phrase "in one embodiment" in various places in the specification are not necessarily all referring to the same embodiment.
    </p>
    <p num="9">
      The present invention provides a method and apparatus for selective automatic precharge of dynamic random access memory banks.
      <br/>
      By precharging memory banks under certain conditions overall memory throughput can be improved because automatic precharging is performed on a more selective basis than would otherwise occur.
      <br/>
      In one embodiment, the present invention provides support for multiple open banks of memory within a single memory sub-system.
      <br/>
      When multiple banks of memory are open simultaneously, a bank of memory that is less likely to be accessed in the future can be precharged when a new bank of memory is to be opened to service a memory request.
    </p>
    <p num="10">
      In general, automatic precharge of memory banks provides the advantage that two operations can be performed in response to a single command.
      <br/>
      Under certain conditions automatic precharge can reduce latency and thereby increase throughput.
      <br/>
      In the following example memory commands require two clock cycles to complete.
      <br/>
      A first access to row1, bank1, page1 is performed with an automatic precharge.
      <br/>
      Because the automatic precharge is used for the access, the memory command bus is available two cycles sooner than if an explicit precharge command were issued.
    </p>
    <p num="11">
      A second access is unrelated to the first access and is to row2, bank2, page2.
      <br/>
      Because the memory command bus is available two cycles earlier than with explicit precharge commands, the latency associated with the second access is reduced by two clock cycles.
      <br/>
      A third access to row1, bank1, page2 can similarly begin earlier than otherwise possible because row1, bank1 has been precharged as a result of the first access.
    </p>
    <p num="12">
      Automatic precharge as a general policy for memory accesses, however, suffer from the disadvantage that an unnecessarily large number of precharges may occur when a bank of memory can remain open for subsequent accesses.
      <br/>
      Therefore, the present invention provides selective use of precharge and automatic precharge commands based, at least in part, on the type of memory access.
      <br/>
      In other words, the present invention utilizes a selective automatic precharge policy based, at least in part, on the memory operations performed.
      <br/>
      In one embodiment, automatic precharge operations are used in a way to benefit more latency sensitive accesses (e.g., processor reads) over less latency sensitive accesses (e.g., I/O device accesses).
    </p>
    <p num="13">
      FIG. 1 is one embodiment of a computer system suitable for use with the present invention.
      <br/>
      Computer system 100 includes processor 105 coupled to processor bus 110.
      <br/>
      In one embodiment, processor 105 is a processor in the Pentium.RTM. family of processors including the Pentium.RTM. II family and mobile Pentium.RTM. and Pentium.RTM. II processors available from Intel Corporation of Santa Clara, Calif.
      <br/>
      Alternatively, other processors may be used.
      <br/>
      Processor 105 may include a first level (L1) cache memory (not shown in FIG. 1).
    </p>
    <p num="14">
      In one embodiment, processor 105 is also coupled to cache memory 107, which is a second level (L2) cache memory, via dedicated cache bus 102.
      <br/>
      The L1 and L2 cache memories can also be integrated into a single device.
      <br/>
      Alternatively, cache memory 107 may be coupled to processor 105 by a shared bus.
      <br/>
      Cache memory 107 is optional and is not required for computer system 100.
    </p>
    <p num="15">
      Chip set 120 is also coupled to processor bus 110.
      <br/>
      In one embodiment, chip set 120 is the 440BX chip set available from Intel Corporation; however, other chip sets can also be used.
      <br/>
      Main memory 113 is coupled to processor bus 110 through chip set 120.
      <br/>
      Main memory 113 and cache memory 107 store sequences of instructions that are executed by processor 105.
      <br/>
      In one embodiment, main memory 113 includes dynamic random access memory (DRAM); however, main memory 113 may have other configurations.
      <br/>
      The sequences of instructions executed by processor 105 may be retrieved from main memory 113, cache memory 107, or any other storage device.
    </p>
    <p num="16">
      Additional devices may also be coupled to processor bus 110, such as multiple processors and/or multiple main memory devices.
      <br/>
      Computer system 100 is described in terms of a single processor; however, multiple processors can be coupled to processor bus 110.
      <br/>
      In one embodiment, a digital signal processor (not shown in FIG. 1) is coupled to processor bus 110.
      <br/>
      Video device 125 is also coupled to chip set 120.
      <br/>
      In one embodiment, video device includes a video monitor such as a cathode ray tube (CRT) or liquid crystal display (LCD) and necessary support circuitry.
    </p>
    <p num="17">
      Processor bus 110 is coupled to system bus 130 by chip set 125.
      <br/>
      In one embodiment, system bus 130 is a Peripheral Component Interconnect (PCI) standard bus; however, other bus standards may also be used.
      <br/>
      Multiple devices, such as audio device 127, may be coupled to system bus 130.
    </p>
    <p num="18">
      Bus bridge 140 couples system bus 130 to secondary bus 150.
      <br/>
      In one embodiment, secondary bus 150 is an Industry Standard Architecture (ISA) bus; however, other bus standards may also be used, for example Extended Industry Standard Architecture (EISA).
      <br/>
      Multiple devices, such as hard disk 153 and disk drive 154 may be coupled to secondary bus 150.
      <br/>
      Other devices, such as cursor control devices (not shown in FIG. 1), may be coupled to secondary bus 150.
    </p>
    <p num="19">
      FIG. 2 is a timing diagram of a dynamic random access memory (DRAM) access.
      <br/>
      The timing diagram of FIG. 2 illustrates a memory access to synchronous DRAM (SDRAM); however, similar memory accesses apply to asynchronous DRAM as well.
    </p>
    <p num="20">
      As used herein, signal named followed by a "-" are low asserted signals.
      <br/>
      Thus, CS- indicates a signal that is asserted with a low voltage signal and CS indicates a signal that is asserted with a high voltage signal.
      <br/>
      While some signals described herein are low asserted signals, the description applies equally to corresponding high asserted embodiments.
    </p>
    <p num="21">
      At time t1 the chip select signal (CS-) is asserted to select the specific memory chip corresponding to a memory location to be accessed.
      <br/>
      The row address strobe (RAS-) signal is also asserted at t1 to activate the row of memory corresponding to the memory location to be accessed.
      <br/>
      The address (ADDR) signals indicate the row of memory that is to be accessed.
      <br/>
      Time t1 is the activation of the row of memory to be accessed.
    </p>
    <p num="22">
      At time t2, the CS- signal is asserted again to select the memory chip corresponding to the memory location to be accessed.
      <br/>
      The synchronous column address strobe (CAS-) signal is asserted.
      <br/>
      The address signals indicate the column of memory that is to be accessed.
    </p>
    <p num="23">
      At time t2, the memory location corresponding to the row and column addresses indicated at times t1 and t2, respectively is accessed.
      <br/>
      Thus, time t2 is the memory access.
      <br/>
      If the memory access is a write, the write enable (WE-) signal is asserted (not shown in FIG. 1).
      <br/>
      If the memory access is a read, the WE- signal is not asserted.
    </p>
    <p num="24">
      Time t3 is a precharge of the memory bank that corresponds to the memory location accessed at t2.
      <br/>
      In one embodiment, the WE-, CS-, RAS-, and CAS- signals are asserted at t3 to indicate a precharge.
      <br/>
      Alternatively, other signal combinations can be used to indicate a precharge.
    </p>
    <p num="25">
      FIG. 3 is a logical address for accessing a location in memory.
      <br/>
      The description of FIG. 3 assumes a memory sub-system having multiple banks of memory.
      <br/>
      In one embodiment, rows within the memory sub-system are not required to have an equal number of banks.
    </p>
    <p num="26">
      In one embodiment bits 0-9 are used to identify a target column with in a memory chip corresponding to a memory location to be accessed during t2 of FIG. 2.
      <br/>
      Bits 10-21 are used to identify a target row within a memory chip corresponding to the memory location to be accessed during t1 of FIG. 2.
      <br/>
      The intersection of the row and column is the memory location to be accessed.
      <br/>
      In alternative embodiments, the row and column address can be different sizes.
    </p>
    <p num="27">
      In one embodiment bits 22 and 23 indicate the address of a bank within a particular row of the memory sub-system.
      <br/>
      Each row of the memory sub-system can have zero, two or four banks.
      <br/>
      Bits 24-30 are used for row selection, which identifies a row of memory devices within the memory sub-system.
      <br/>
      In contrast to the row selection bits that address a row of memory devices within the memory sub-system, the row address bits (10-21) are used to select a row of memory locations within a bank of memory.
    </p>
    <p num="28">
      FIG. 4 is a block diagram of components for accessing DRAM.
      <br/>
      In one embodiment, chip set 120 includes memory register set 450.
      <br/>
      Memory register set 450 includes 32 registers configured to maintain 32 banks of memory open simultaneously; however, any number of registers and any number of open banks of memory can be supported for use with the present invention.
    </p>
    <p num="29">
      In one embodiment memory register set 450 includes paging policy register 455 that determines a DRAM precharge policy.
      <br/>
      Paging policy register 455 includes a precharge control field that determines the action taken when a page miss occurs.
      <br/>
      The format and functionality of paging policy register 455 is described in greater detail below.
    </p>
    <p num="30">
      Chip set 120 is coupled to multiple rows of memory devices (e.g., 420, 422, 424 and 428).
      <br/>
      In one embodiment, 8 rows of memory having zero, two or four banks each can be supported.
      <br/>
      Alternatively, a different number of rows can be supported with an appropriate number of registers in memory register set 450.
      <br/>
      In one embodiment, each row of memory devices is individually evaluated by chip set 120 to determine the number of banks per row such that the different rows of memory can contain varying numbers of memory devices.
    </p>
    <p num="31">
      Chip set 120 and registers of memory register set 450 operate together to support multiple open banks of memory.
      <br/>
      When a page miss occurs, a bank of memory is closed in order to open a new bank of memory that includes the target address of the operation that caused the page miss.
      <br/>
      In order to reduce latency as compared to a scheme such as least-recently used (LRU), paging policy register 455 is used to selectively precharge (close) a bank of memory that is less likely to be used in the future.
    </p>
    <p num="32">
      FIG. 5 is one embodiment of a paging policy register.
      <br/>
      In one embodiment paging policy register 455 is a 16-bit register; however, the size can be modified based on the number of banks supported as well as other features of the DRAM sub-system used therewith.
      <br/>
      Paging policy register 455 provides a predetermined bank closure policy that precharges banks selectively.
    </p>
    <p num="33">
      Bits 0-3 are DRAM Idle Timer (DIT) bits 500 that are used to determine the number of clock cycles during which the DRAM controller remains in the idle state before precharging all banks of a memory row with Precharge All command.
      <br/>
      The Precharge All command causes all banks of a selected memory row to be precharged.
      <br/>
      In one embodiment, the banks of the selected memory row are in an idle state after the Precharge All command has been completed.
      <br/>
      The following table describes one embodiment of DIT bits 500.
    </p>
    <p num="34">
      --
      <br/>
      --                     Idle clocks before
      <br/>
      --                     Precharge All
      <br/>
      --             DIT     Command
      <br/>
      --             0000    0
      <br/>
      --             0001    2
      <br/>
      --             0010    4
      <br/>
      --             0011    8
      <br/>
      --             0100    10
      <br/>
      --             0101    12
      <br/>
      --             0110    16
      <br/>
      --             0111    32
      <br/>
      --             1XXX    Pages are not closed
      <br/>
      --                     for idle condition
    </p>
    <p num="35">
      Bit 4 is the Selective Auto Precharge Enable (SAPEN) bit 510.
      <br/>
      In one embodiment if SAPEN bit 510 is set, selective automatic precharge functionality is enabled.
      <br/>
      If SAPEN bit 510 is not set, selective automatic precharge functionality is not enabled.
      <br/>
      Thus, if chip set 120 is used with DRAM that does not support automatic precharge commands, automatic precharge functionality can be disabled.
    </p>
    <p num="36">
      Bits 5-6 are the Precharge Control (PCCON) bits 520.
      <br/>
      In one embodiment, PCCON bits 520 are used to determine the action taken when a page miss occurs.
      <br/>
      The following table describes the actions taken on a page miss based on PCCON bits 520.
    </p>
    <p num="37">
      --
      <br/>
      -- PCCON              Action
      <br/>
      -- 00                 Issue Precharge All command
      <br/>
      -- 01                 Precharge bank targeted by the page miss
      <br/>
      --                    cycle
      <br/>
      -- 10                 If the page miss cycle is not the first cycle
      <br/>
      --                    following an arbitration switch then
      <br/>
      --                    precharge only the bank targeted by the
      <br/>
      --                    page miss cycle.
      <br/>
      Otherwise issue
      <br/>
      --                    Precharge All command
      <br/>
      -- 11                 Reserved
    </p>
    <p num="38">
      Bit 7 is reserved and bits 8-15 are the Banks Per Row (BPR) bits 540.
      <br/>
      In one embodiment, each bit within BPR 540 corresponds to one row of the memory array (e.g., 420,422,424 and 428 of FIG. 4).
      <br/>
      Each bit indicates whether the associated row has a device with a two-bank implementation or a four-bank implementation.
    </p>
    <p num="39">
      In one embodiment, selected banks within a selected row of memory can be precharged as a result of a page miss or other event.
      <br/>
      For example, if an active process accesses a particular bank within a row of memory and a second process accesses a second bank within the same row of memory, two banks within the row of memory are open simultaneously.
      <br/>
      If a page miss occurs and a bank of memory is closed to open a new bank of memory, the second bank of memory can be closed by precharging that bank only rather than closing the first bank or closing both banks with a Precharge All operation.
      <br/>
      Thus the first bank of memory that is accessed by the active process remains open so that the bank is not reopened upon the next memory access by the active process.
    </p>
    <p num="40">
      In one embodiment, the operation and/or process that caused a bank to be opened is used to determine which open bank of memory is closed in order to open a new bank of memory.
      <br/>
      For example, banks that are open because of a high latency operations, such as a posted write, are precharged so that banks that arc open for lower latency operations and/or processes remain open.
      <br/>
      Thus, banks of memory that are more likely to be accessed in the future can remain open while banks that are less likely to be accessed in the future are closed when a new bank of memory is opened.
    </p>
    <p num="41">
      In one embodiment, pages that are accessed by I/O devices or processor posted writes are automatically precharged.
      <br/>
      Because processor read operations are likely to follow the I/O device access and/or posted writes, automatically precharging banks allows earlier access to memory banks by subsequent operations.
      <br/>
      Such an embodiment can improve overall memory sub-system performance.
    </p>
    <p num="42">
      The following table provides one embodiment of memory operations suitable for use with the present invention.
      <br/>
      Read and Write operations are provided to contrast Read With Auto Precharge and Write With Auto Precharge, respectively.
      <br/>
      In the following table, A10 and A11 are bits 10 and 11 of the ADDR signals, respectively.
      <br/>
      Similarly, A9-A0 are bits 9-0 of the ADDR signals.
      <br/>
      Low and High signal levels are represented by "L" and "H" respectively, valid data is represented by "V" and "X" represents a don't care condition.
    </p>
    <p num="43">
      --
      <br/>
      -- Operation            CS- RAS- CAS- WE- A11    A10    A9-A0
      <br/>
      -- Read                 L       H       L       H      V      L      V
      <br/>
      -- Read with Automatic  L       H       L       H      V      H      V
      <br/>
      -- Precharge
      <br/>
      -- Write                L       H       L       L      V      L      V
      <br/>
      -- Write with Automatic L       H       L       L      V      H      V
      <br/>
      -- Precharge
      <br/>
      -- Bank Activate        L       L       H       H      V      V      V
      <br/>
      -- Precharge Select Bank L       L       H       L      V      L      X
      <br/>
      -- Precharge All Banks  L       L       H       L      X      H      X
    </p>
    <p num="44">
      The operations described above allow a computer system or other device in which multiple banks of memory are used to selectively precharge banks of memory based on a predetermined bank precharge (closure) policy.
      <br/>
      By using the various commands described above, a bank precharge policy can be fine tuned for a particular system and/or environment.
      <br/>
      Thus, the present invention provides precharge policies that improve performance of a memory sub-system.
    </p>
    <p num="45">
      Chip set 120 issues the commands described above to control the memory sub-system.
      <br/>
      By selectively issuing Read, Read with Automatic Precharge, Write, Write with Automatic Precharge, Precharge Select Bank, and Precharge All Banks operations, chip set 120 can manage the memory sub-system with lower overhead and higher throughput as compared to a memory sub-system not supporting all of the operations described above.
    </p>
    <p num="46">
      In one embodiment, the source of a memory access is used to determine whether the access is terminated with an automatic precharge.
      <br/>
      The state of a DRAM arbiter can also be used to determine whether an access should be terminated with an automatic precharge.
    </p>
    <p num="47">
      In the foregoing specification, the present invention has been described with reference to specific embodiments thereof.
      <br/>
      It will, however, be evident that various modifications and changes can be made thereto without departing from the broader spirit and scope of the invention.
      <br/>
      The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11.</claim-text>
      <claim-text>A system comprising: a bus; a processor coupled to the bus, the processor to issue operations; a chip set coupled to the bus, the chip set to receive one or more operations issued by the processor, the chip set to cause memory operations issued by the processor to be performed;</claim-text>
      <claim-text>and a memory sub-system coupled to the chip set, the memory sub-system to receive memory operations from the chip set, the memory operations to cause a bank of the memory within the memory sub-system to be selectively and automatically precharged based, at least in part, on a type of access to the memory location.</claim-text>
      <claim-text>1. A method comprising:</claim-text>
      <claim-text>opening a bank of memory in a memory sub-system; accessing a memory location in the bank of memory;</claim-text>
      <claim-text>and precharging the bank of memory selectively and automatically based, at least in part, on a type of access to the memory location.</claim-text>
      <claim-text>2. The method of claim 1 further comprising automatically precharging one or more additional banks of memory in a common row with the bank of memory.</claim-text>
      <claim-text>3. The method of claim 1 further comprising automatically precharging one bank of a row of memory based, at least in part, on an operation that caused a page miss in the memory sub-system.</claim-text>
      <claim-text>4. The method of claim 1 further comprising: determining a bank of memory accessed by a high latency process;</claim-text>
      <claim-text>and precharging the bank of memory accessed by the high latency process in response to a page miss.</claim-text>
      <claim-text>5. The method of claim 1 wherein automatic precharge is determined based, at least in part, on an operation causing the memory access.</claim-text>
      <claim-text>6. An apparatus comprising: means for opening a bank of memory in a memory sub-system; means for accessing a memory location in the bank of memory;</claim-text>
      <claim-text>and means for precharging the bank of memory selectively and automatically based, at least in part, on a type of access to the memory location.</claim-text>
      <claim-text>7. The apparatus of claim 6 further comprising means for automatically precharging one or more additional banks of memory in a common row with the bank of memory.</claim-text>
      <claim-text>8. The apparatus of claim 6 further comprising means for automatically precharging one bank of a row of memory based, at least in part, on an operation that caused a page miss in the memory sub-system.</claim-text>
      <claim-text>9. The apparatus of claim 6 further comprising: means for determining a bank of memory accessed by a high latency process;</claim-text>
      <claim-text>and means for precharging the bank of memory accessed by the high latency process in response to a page miss.</claim-text>
      <claim-text>10. The apparatus of claim 6 further comprising means for automatically precharging the bank of memory based, at least in part, on an operation causing the memory access.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The system of claim 11 wherein the bank of memory is automatically precharged in response to a page miss.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The system of claim 11 wherein the bank of memory that is automatically precharged was accessed by a high latency process.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The system of claim 11 wherein the chip set comprises a memory register set having multiple registers to support multiple open banks of memory.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The system of claim 11 wherein automatic precharge is determined based, at least in part, on an operation causing a memory access.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. An apparatus having: an interface to receive memory operations;</claim-text>
      <claim-text>and a control circuit coupled to the interface, the control circuit to selectively and automatically precharge banks of a memory sub-system based, at least in part, on a type of access to a memory location.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The apparatus of claim 16 wherein the bank of memory is automatically precharged in response to a page miss.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The apparatus of claim 16 wherein the bank of memory that is automatically precharged was accessed by a high latency process.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The apparatus of claim 16 wherein the control circuit comprises a memory register set having multiple registers to support multiple open banks of memory.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The apparatus of claim 16 wherein automatic precharge is determined based, at least in part, on an operation causing the memory access.</claim-text>
    </claim>
  </claims>
</questel-patent-document>