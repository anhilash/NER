<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182025B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182025</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182025</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="23984199" extended-family-id="58768280">
      <document-id>
        <country>US</country>
        <doc-number>09311182</doc-number>
        <kind>A</kind>
        <date>19990513</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09311182</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>60046105</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>31118299</doc-number>
        <kind>A</kind>
        <date>19990513</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09311182</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>49918695</doc-number>
        <kind>A</kind>
        <date>19950707</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1995US-08499186</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  11/22        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>22</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  11/26        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>26</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F  11/34        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>34</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06F  13/10        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>H04L  12/56        20060101A N20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>56</subgroup>
        <classification-value>N</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>H04Q  11/04        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>11</main-group>
        <subgroup>04</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>703024000</text>
        <class>703</class>
        <subclass>024000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>703026000</text>
        <class>703</class>
        <subclass>026000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>703027000</text>
        <class>703</class>
        <subclass>027000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>714E11167</text>
        <class>714</class>
        <subclass>E11167</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>714E11193</text>
        <class>714</class>
        <subclass>E11193</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>714E11195</text>
        <class>714</class>
        <subclass>E11195</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04Q-011/0478</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>11</main-group>
        <subgroup>0478</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/261</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>261</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/3409</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>3409</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/3414</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>3414</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/3419</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>3419</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/3438</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>3438</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-013/107</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>107</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2201/86</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2201</main-group>
        <subgroup>86</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-2201/87</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>2201</main-group>
        <subgroup>87</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-2012/5616</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>2012</main-group>
        <subgroup>5616</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130710</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>18</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>5</number-of-figures>
      <image-key data-format="questel">US6182025</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Remote terminal emulator</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BLIVEN DAVID C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5111497</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5111497</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="2">
          <text>KERR RANDAL H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5086393</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5086393</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="3">
          <text>HENWOOD KEVIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5109350</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5109350</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <text>BOEGEL MARK A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5440697</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440697</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>HANES CHARLES F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5440719</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440719</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0539313</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-539313</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>DYNIX MANAGEMENT INC</text>
          <document-id>
            <country>WO</country>
            <doc-number>9010269</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9010269</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Anonymous, "Benchmarking: Part 4: Performance Awareness Corp.", Capacity Management Review, pp. 5-6, Oct. 1993.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Anonymous, "Benchmarking: Part 5: Neal Nelson &amp; Associates", Capacity Management Review, pp. 5-6, Oct. 1993.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>49918695</doc-number>
              <kind>A</kind>
              <date>19950707</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5978575</doc-number>
              <kind>A</kind>
              <date>19991102</date>
            </document-id>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sun Microsystems, Inc.</orgname>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUN MICROSYSTEMS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Packer, Allan N.</name>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Conley, Rose, &amp; Tayon, PC</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Kivlin, B. No{umlaut over (e)}l</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Teska, Kevin J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A remote terminal emulator (RTE) is provided in which substantially all of the time elapsing during an emulated use of a computer system under test is categorized and reported.
      <br/>
      The time required by the computer system under test to respond to command signals transmitted by the RTE is recorded as a receive time and is measured from completion of the transmission of the command signals to recognition of a pattern specified by the RTE as signifying completion of the response by the computer system under test.
      <br/>
      As a result the receive time recorded reflects the time required by the computer system under test to (a) process and carry out the command transmitted by the RTE and (b) transmit response data back to the RTE.
      <br/>
      The RTE accurately measures and reports the measured user think time to provide important information regard the authenticity of the emulated use, when compared to actual user think times measured during actual use of the computer system under test by actual users, and the relative importance of the processing capacity of the computer system under test.
      <br/>
      The time during which the RTE processes information, causing emulation of use of the computer system under test to be suspended, is accurately measured as application processing time and is reported to the user of the RTE.
      <br/>
      Substantially all of the time elapsing during the emulated use of the computer system under test is reported to the user of the RTE to provide the user of the RTE more complete and revealing information regarding the performance of the computer system under test.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is a divisional to a application Ser.
      <br/>
      No. 08/499,186, filed Jul. 7, 1995. now U.S. Pat. No. 5,978,575 issued Nov. 2, 1999.
    </p>
    <heading>FIELD OF THE INVENTION</heading>
    <p num="2">The present invention relates to a remote terminal emulator and, in particular, to a remote terminal emulator which reports timed components of an emulated user of a computer system under test in a particularly accurate and complete manner and in which substantially all time of an emulation is accounted for and reported to a user.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="3">
      A remote terminal emulator (RTE) simulates use of a computer system under test by a user through a remotely coupled terminal.
      <br/>
      An RTE is used to test the computer system under test for such purposes as quality assurance and quantitative comparisons between respective computer systems.
      <br/>
      For example, a computer system under test may be designed to process data according to commands entered by multiple users simultaneously through multiple terminals coupled remotely to the computer system under test.
      <br/>
      Such a computer system can be tested without the assistance of actual users by simultaneous execution of RTEs which collectively simulate simultaneous use of the computer system under test by multiple users.
      <br/>
      Testing computer systems without the assistance of actual users has become an important component of the development of computer systems since such testing can be performed for very long periods of time and at times when other use of the computer system under test is typically light, e.g., over night.
      <br/>
      In addition, RTEs can be used to replicate identical operating environments in two or more respective computer systems to compare relative performance characteristics of the respective computer systems.
    </p>
    <p num="4">
      It is important that the simulation of an RTE of use of the computer system under test be as accurately reflective as possible of actual use of the computer system under test by an actual user.
      <br/>
      Otherwise, conclusions regarding performance characteristics of the computer system under test drawn from information obtained by emulated use effected by the RTE can be erroneous or inaccurate.
      <br/>
      As a result, evaluation of the computer system under test can result in over-estimation or under estimation of the requisite computer system configuration to perform a particular task.
      <br/>
      For example, if the performance of the computer system under test is reported by an RTE overly optimistically, a systems administrator may configure the computer system under test with a central processing unit which is too slow to meet the systems administrator's needs when actually used.
      <br/>
      Conversely, if the performance of the computer system under test is reported by an RTE overly pessimistically, a systems administrator may unnecessarily increase the processing capacity of the computer system under test thereby incurring a necessary expense.
    </p>
    <p num="5">
      Typically, an RTE which emulates a remote terminal coupled to a computer system under test is a computer process executing on a second computer system, which is remotely coupled to the computer system under test.
      <br/>
      Such a computer process is sometimes called an RTE process.
      <br/>
      The RTE process transmits command signals to the computer system under test as if the command signals were entered through a remote terminal by an actual user of the computer system and receives resulting output data from the computer system under test.
      <br/>
      Simultaneous use by multiple users of a multi-user computer system under test is emulated using a remotely coupled computer system and multiple RTE processes which execute concurrently on the remotely coupled computer system.
    </p>
    <p num="6">
      RTEs are used to evaluate computer systems and, in general, performance characteristics such as response times and throughput for such computer systems.
      <br/>
      However, currently available RTEs provide insufficient information regarding the performance of a particular computer system under test to make specific, important conclusions regarding the performance.
      <br/>
      For example, conventional RTEs provide insufficient information regarding an emulated use of a computer system under test to determine what proportion of the time elapsing during the emulated use reflects processing by the computer system under test or what proportion of the time elapsing during the emulated use reflects administrative processing by the RTE.
      <br/>
      As a result, conclusions, such as the sufficiency of the processor of the computer system under test to perform a particular task, cannot be derived from such conventional RTEs with confidence.
    </p>
    <p num="7">What is therefore needed is an RTE which realistically simulates actual use of a computer system under test by a user and which reports sufficient information regarding the performance of the computer system under test to support specific, important conclusions regarding the performance.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="8">
      In accordance with the present invention, an RTE is provided in which the time required by the computer system under test to respond to command signals transmitted by the RTE is recorded as a receive time and is measured from completion of the transmission of the command signals to recognition of a pattern specified by the RTE as signifying completion of the response by the computer system under test.
      <br/>
      As a result, the recorded receive time reflects the time required by the computer system under test to (a) process and carry out a command specified by the command signals transmitted by the RTE and (b) transmit resulting output data back to the RTE.
      <br/>
      The recorded receive time is therefore accurately reflective of the proportion of time elapsing during an emulated use of the computer system under test devoted to processing by the computer system under test and therefore supports more conclusively a conclusion regarding the sufficiency of the processing capabilities of the computer system under test.
    </p>
    <p num="9">
      Further in accordance with the present invention, the RTE accurately measures and reports user think time and application processing time.
      <br/>
      The RTE determines an amount of time during which transmission of data to the computer system under test is suspended to emulate thinking by a user of the computer system under test.
      <br/>
      The RTE suspends transmission of command signals to the computer system under test and measures and records as user think time the actual amount of time during which transmission of command signals is suspended.
      <br/>
      The user think time is then reported to the user of the RTE to provide more complete information regarding the emulated use of the computer system under test.
      <br/>
      Specifically, accurately measuring and reporting user think time provides important information regard the authenticity of the emulated use, when compared to actual user think times measured during actual use of the computer system under test by actual users, and the relative importance of the processing capacity of the computer system under test.
    </p>
    <p num="10">
      An RTE typically performs logic operations and other processing in emulating use of the computer system under test.
      <br/>
      For example, an RTE can recognize one of a number of patterns in data received from the computer system under test and perform one of a number of tasks depending upon which of the patterns is recognized.
      <br/>
      In accordance with the present invention, the time during which the RTE processes information, causing emulation of use of the computer system under test to be suspended, is accurately measured as application processing time and is reported to the user of the RTE.
      <br/>
      The application processing time provides to the user an indication of the influence of the RTE itself on the emulated use of the computer system under test.
    </p>
    <p num="11">
      Further in accordance with the present invention, the RTE measures each occurrence during an emulated use of the computer system under test to a single, consistent precision.
      <br/>
      The RTE reports the measured times of the components of the emulated use of the computer system under test to the same precision.
      <br/>
      Substantially all of the time elapsing during the emulated use of the computer system under test is reported to the user of the RTE to provide the user of the RTE more complete and revealing information regarding the relative performance of the computer system under test during emulated use of the computer system under test.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="12">
      FIG. 1 is a block diagram of an RTE system and a computer system under test.
      <br/>
      FIG. 2 is a block diagram of an RTE system in accordance with the present invention.
      <br/>
      FIG. 3 is a block diagram of an RTE process in accordance with the present invention.
      <br/>
      FIG. 4 is a timeline diagram representing event components logged during an execution of the RTE process shown in FIG. 3.
      <br/>
      FIG. 5 is a block diagram of a session capture process which is used to generate the RTE process of FIG. 3.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="13">
      Greater accuracy in ascertaining the relative performance of a computer system under test 100 (FIG. 1) is provided by a remote terminal emulator (RTE) system 110 in accordance with the present invention RTE system 110 accurately measures and reports user think time, application processing time, and time required by computer system under test 100 to respond to command signals received from RTE system 110.
      <br/>
      Substantially all of the time elapsing during an emulated use of computer system under test 100 by RTE system 110 is accounted for and reported to the user of RTE system 110 such that the user can make more conclusive assessments of the relative performance of computer system under test 100.
    </p>
    <p num="14">
      Computer system under test 100, which is sometimes called "SUT" 100, is a multi-user computer system which supports multiple computer processes executing within SUT 100 concurrently.
      <br/>
      Each of one or more actual users of SUT 100 controls one or more computer processes executing within SUT 100 through a remotely coupled terminal, through which the user sends command signals to SUT 100 and receives resulting output data from SUT 100.
      <br/>
      Simultaneous use by multiple users through multiple respective remotely coupled terminals is simulated by RTE system 110, which sends commands signals to and receives resulting output data from SUT 100 through a connection 120.
      <br/>
      Connection 120 can be, for example, a standard Ethernet connection.
    </p>
    <p num="15">
      RTE system 110 is shown in greater detail in FIG. 2.
      <br/>
      RTE system 110 includes a processor 202 which is coupled to a memory 204 through a bus 206.
      <br/>
      Memory 204 can include generally any type of memory including without limitation, randomly-accessible memory (RAM), read-only memory (ROM), and magnetic and optical storage devices such as magnetic disks and magnetic tape.
      <br/>
      Processor 202 fetches from memory 204 and executes computer instructions.
      <br/>
      Processor 202 also reads data from and writes data to memory 204.
      <br/>
      Memory 204 includes RTE processes 210A-D, each of which is a computer process executing in processor 202 from memory 204.
      <br/>
      RTE processes 210A-D execute in RTE system 110 concurrently in a conventional manner.
    </p>
    <p num="16">
      In accordance with computer instructions of RTE processes 210A-D, processor 202 transmits command signals to SUT 100 through bus 206, a network access device 208, and connection 120.
      <br/>
      Similarly, network access device 208, which includes network interface circuitry, receives resulting output data from SUT 100 through connection 120 and transmits those resulting output data to processor 202 through bus 206.
      <br/>
      Processor 202 forwards received resulting output data to the one of RTE processes 210A-D to whose command signals the received resulting output data corresponds.
      <br/>
      Network access device 208 can be, for example, network interface circuitry which implements the standard Ethernet network protocol.
      <br/>
      Processor 202, memory 204, bus 206, and network access device 208 can be, for example, components of a computer workstation such as the SPARCstation workstation computer available from Sun Microsystems, Inc. of Mountain View, Calif.
    </p>
    <p num="17">
      Each of RTE processes 210A-D simulates, through processor 202 and network access device 208, use of SUT 100 by a single user through a remotely coupled terminal.
      <br/>
      RTE processes 210A-D are analogous to one another.
      <br/>
      Accordingly, the following description of RTE process 210A is equally applicable to each of RTE processes 210B-D.
      <br/>
      RTE process 210A is shown in greater detail in FIG. 3 and is formed generally in three steps.
    </p>
    <p num="18">
      In a first step, which is generally conventional and is described herein for completeness, a user accesses SUT 100 through a session capture process 502 (FIG. 5).
      <br/>
      Session capture process 502 is a computer process executing within RTE system 110 which records command signals generated by the user and corresponding resulting output data which indicates completion of the task of SUT 100 directed by the command signals generated by the user.
      <br/>
      Specifically, the user enters command signals to be transmitted to SUT 100 using, for example, a keyboard 504.
      <br/>
      Command signals generated by the user can also include, for example, signals resulting from the user moving or acing a pointing device (not shown) such as an electronic mouse.
      <br/>
      The command signals are received through bus 206 by session capture process 502 which records the command signals in an RTE model 506 and transmits the command signals to SUT 100 through network access device 208.
      <br/>
      When SUT 100 responds to the command signals by transmitting to network access device 208 resulting output data, the output data is transmitted to session capture process 502.
      <br/>
      Session capture process 502 selects a relatively unique pattern from at or near the end of the resulting output data and records the selected pattern in RTE model 506.
      <br/>
      Session capture process 502 also transmits the resulting output data to an output device, e.g., CRT 508, for display of the resulting output data to the user.
      <br/>
      This first step is generally referred to as capturing keystrokes and is conventional.
    </p>
    <p num="19">
      Continuing in the first step, an RTE procedure 302 (FIG. 3) of RTE process 210A is derived from the captured keystrokes.
      <br/>
      Specifically, RTE procedure 302 is derived from RTE model 506 (FIG. 5) and includes a number of "send" computer instructions, e.g., send computer suctions 304A (FIG. 3) and 304C, and a number of "receive" computer instructions, e.g., receive computer instructions 304B and 304D.
      <br/>
      Send computer instructions 304A and 304C, when executed, each send to SUT 100 a series of command signals which collectively form a single command entered by the user as recorded in RTE model 506 (FIG. 5).
      <br/>
      Receive instructions 304B (FIG. 3) and 304D, when executed, scans data received from SUT 100 for a particular pattern, as stored in RTE model 506 (FIG. 5) which indicates that all, or substantially all, of the resulting output data corresponding to the most recently sent command signals have been received from SUT 100.
      <br/>
      In capturing keystrokes, command signals generated by the user are grouped into single, complete commands and, for each such command, a send computer instruction is included in RTE procedure 302 (FIG. 3).
      <br/>
      In addition, a unique pattern is selected from the end or nearly the end of the resulting output data received from SUT 100 in response to the command sent.
      <br/>
      A receive computer instruction specifying the selected pattern is included in RTE procedure 302, typically immediately following the corresponding send computer instruction.
    </p>
    <p num="20">
      In the second step, parameters which define characteristics of the simulation by RTE process 210A of use by a user of SUT 100 are established and recorded.
      <br/>
      Such parameters include (1) the rate at which a user generates input signals, (2) the amount of time the user takes to review received resulting output data before beginning to generate input signals, (3) the amount of time the user thinks about the received resulting output data before beginning to generate input signals, and (4) the minimum time required for the user to generate a specified set of input signals.
      <br/>
      The first parameter is, in general, the speed at which the user types and is, in one embodiment, expressed in terms of keyboard keystrokes per second.
      <br/>
      The second parameter is referred to as a review time and simulates the user reading, reviewing, and taking time to understand resulting output data which is displayed on the terminal used by the user.
      <br/>
      The second parameter typically specifies a random distribution of review times since different users require varying amounts of time to review any particular resulting output data.
      <br/>
      The third parameter is referred to as a user think time and simulates thinking by the user regarding what input signals to generate in response to the displayed resulting output data.
      <br/>
      The third parameter typically specifies a random distribution of user think times since different users require varying amounts of tune to think prior to issuing command signals in response to any particular resulting output data.
      <br/>
      The fourth parameter is referred to as a transaction user think time and is used to simulate a task performed by the user in which a minimum amount of time is required to perform the task without regard to (i) how fast the user can type, read, and think or (ii) how fast SUT 100 processes command signals and returns resulting output data.
      <br/>
      For example, a user may be required to turn pages or physically move papers on a desk between reviewing output data and generating input signals and such actions may require a minimum amount of time to be accomplished.
      <br/>
      A transaction is defined by the developer of RTE process 210A to be a collections of components of RTE process 210A to which a transaction user think time is applicable.
      <br/>
      Specific values for these parameters are ascertained, in one embodiment, by observing actual use of SUT 100 by actual users and measuring the times represented by the parameters during such actual use.
      <br/>
      These times are typically measured repeatedly during several actual uses to provide a sufficient number of samples to generate random distributions which accurately reflect actual use of SUT 100.
      <br/>
      The above-listed parameters, once corresponding specific values are ascertained, are stored in a session parameters database 306 of RTE process 210A.
    </p>
    <p num="21">
      In the third step, the computer instructions formed in the first step described above are combined with other computer instructions and the parameters recorded in the second step described above to form a computer program which, when executed, forms RTE process 210A.
      <br/>
      During execution, RTE process 210A records components of events in a session log 308.
      <br/>
      Event components recorded in session log 308 include beginning and ending of major and minor events, beginning and ending of performance of send and receive computer instructions, beginning and duration of user think times, beginning and duration of review times, beginning and ending of freeze times during which processing of RTE process 210A is suspended, and beginning and ending of transactions.
      <br/>
      The relative performance of SUT 100 is later evaluated from the event components recorded in session log 308.
      <br/>
      The time at which each and every event component recorded in session log 308 is recorded to a single, uniform precision which is, in one embodiment, one one-thousandth of a second.
      <br/>
      All times are recorded to a uniform precision so that substantially all time which elapses during execution of RTE process 210A can be accounted for.
      <br/>
      The accounting for time during an execution of RTE process 210A and the corresponding analysis of the performance of SUT 100 are described more completely below.
    </p>
    <p num="22">
      RTE process 210A includes a receive buffer 310 in which are stored resulting output data received from SUT 100 as a result of command signals transmitted to SUT 100.
      <br/>
      During execution of a receive computer instruction, e.g, receive computer instruction 304B, RTE process 210A compares data stored in receive buffer 310 with the pattern specified in the receive computer instruction.
      <br/>
      When the pattern specified in receive computer instruction 304B is matched, the completion of receive computer instruction 304B is recorded in session log 308 along with the time at which receive computer instruction 304B completed.
      <br/>
      When the pattern specified in receive computer instruction 304B is matched, receive buffer 310 can include output data received from SUT 100 after receipt of the matched pattern.
    </p>
    <p num="23">
      Conventional RTEs clear a receive buffer only up to the matched pattern.
      <br/>
      However, it is possible that the pattern specified in receive computer instruction 304D is matched in the portion of receive buffer 310 which follows the pattern matched in execution of receive computer instruction 304B.
      <br/>
      If such is the case and receive buffer 310 is cleared only up to the pattern matched in execution of receive computer instruction 304B, execution of receive computer instruction 304D would immediately complete as the pattern specified therein is immediately matched in data remaining in receive buffer 310.
      <br/>
      As a result, RTE process 210A would erroneously record in session log 308 that SUT 100 took essentially no time at all to respond to the command signals transmitted to SUT 100 in execution of send computer instruction 304C.
      <br/>
      Therefore, RTE process 210A clears receive buffer 310 entirely when the pattern specified in receive computer instruction 304B is matched in receive buffer 310.
    </p>
    <p num="24">
      Once RTE process 210A is formed as described above, RTE process 210A is executed in RTE system 110 to simulate use of SUT 100 by a user of SUT 100 through a remotely coupled terminal.
      <br/>
      Several test executions of RTE process 210A can be used to compare throughput, i.e., the number of executions of RTE process 210A that can be completed in a period of time, to throughput of actual use of SUT 100 by one or more actual users of SUT 100 to determine whether the various parameters described above and stored in session parameter database 306 are properly chosen.
      <br/>
      Once the parameters are verified, RTE process 210A can be used to simulate use of SUT 100 by an actual user of SUT 100.
      <br/>
      Several RTE processes which are identical to RTE process 210A can execute concurrently within RTE system 110 to simulate several users performing identical tasks on SUT 100 simultaneously.
      <br/>
      Several RTE processes which simulate different tasks, e.g., RTE processes 210B-D, can be created in a manner directly analogous to the creation of RTE process 210A as described above.
      <br/>
      These RTE processes can execute concurrently with RTE process 210A in RTE system 110 to simulate use of SUT 100 by several users performing different tasks on SUT 100 simultaneously.
      <br/>
      Such RTE processes execute, individually or concurrently with other such RTE processes, within RTE system 110 to simulate use of SUT 100 by one or many users, respectively.
    </p>
    <p num="25">
      After execution of RTE process 210A, a report is generated from event components recorded in session log 308 and the report is studied by a user of RTE system 110 to evaluate performance of SUT 100 during execution of RTE process 210A.
      <br/>
      An exemplary report generated from a session log such as session log 308 is attached hereto as Appendix A. In the report of Appendix A, each event is reported individually.
      <br/>
      The user of RTE system 110 who constructs RTE process 210A as described above and who is sometimes referred to herein as the developer of RTE process 210A groups event components into events which are delimited within RTE procedure 302 by begin event computer instructions and end event computer instructions.
      <br/>
      An event is typically a series of corresponding send and receive commands which collectively define a task.
      <br/>
      A transaction is a specific type of event described above and is delimited within RTE procedure 302 by begin transaction computer instructions and end transaction computer instructions.
      <br/>
      The beginning and end of each event of RTE process 210A are time stamped and recorded in session log 308 as event components.
    </p>
    <p num="26">
      For each event, the total number of occurrences of the event during an execution of RTE process 210A is reported.
      <br/>
      Furthermore, average elapsed times are reported for the following components of the event (which appears under the heading "Total" in the report of Appendix A): (i) total time from being to end of the event (which appears under the heading "Total" in the report of Appendix A), (ii) total review time during the event (which appears under the heading "Review" in the report of Appendix A), (iii) total user think time during the event (which appears under the heading "Think" in the report of Appendix A), (iv) total transaction user think time (which appears under the heading "TranTh" in the report of Appendix A), (v) total time required for processing by RTE process 210A and otherwise not accounted for during the event (which appears under the heading "Appln" in the report of Appendix A), (vi) total time elapsing during send and receive computer instructions of the event (which appears under the heading "Send/Recv" in the report of Appendix A), (vii) total time elapsing during send computer instructions during the event (which appears under the heading "Send" in the report of Appendix A), and (viii) total time elapsing during receive computer instructions during the event (which appears under the heading "Recv" in the report of Appendix A).
      <br/>
      In addition to average elapsed times, the following statics are reported for each of the above-listed times: (i) standard deviation (which is labeled "Std.Dev" in the report of Appendix A), (ii) coefficient of variation (which is labeled "C.O.V." in the report of Appendix A), (iii) the minimum time (which is labeled "Low" in the report of Appendix A), (iv) the maximum time (which is labeled "High" in the report of Appendix A), and (v) one or more user-selectable percentiles, e.g., the ninetieth percentile (which is labeled "90%ile" in the report of Appendix A).
    </p>
    <p num="27">
      The total time from beginning to end of an event, which is sometimes referred to herein as the "event time", is helpful in determining how much time is spent by a user in a particular event relative to the remainder of the task which includes the event.
      <br/>
      Event time is also generally helpful in determining whether simulation of the event is generally accurate by comparing the event time with actual event times measured during use of SUT 100 by actual users.
      <br/>
      However, event time alone is not particularly helpful in determining whether individual parameters stored in session paremeters 306 are accurately reflective of actual use of SUT 100.
      <br/>
      Furthermore, event time alone is not particularly indicative of the effect on event time of the particular processing capabilities of SUT 100.
      <br/>
      For example, a long event time provides insufficient information to determine what effect upgrading the processor (not shown) of SUT 100 would have on the event time or the overall throughput of SUT 100 when actually used.
    </p>
    <p num="28">
      Total review time, user think time, and transaction user think time during an event provide information regarding review times, user think times, and transaction user think times actually used by RTE process 210A in a random distribution of review, think and transaction user think times according to parameters stored in session parameters 306 as described above.
      <br/>
      Total review time, user think time and transaction user think time during an event generally indicate whether parameter defining the random distribution of review time and user think time, respectively, are accurately selected.
      <br/>
      In fact, without knowing review time, user think time, and transaction user think time as actually used by RTE process 210A in emulating the use of SUT 100, it is particularly difficult to determine whether such parameters are accuracy selected.
      <br/>
      Total review time, user think time, and transaction user think time during an event are also generally indicative of the amount of time elapsing during components of an event unrelated to performance characteristics of SUT 100 and related instead to human, e.g., ergonomic or user-interface, components of the event.
    </p>
    <p num="29">
      Total time elapsing during send and receive computer instructions of the event, which is sometimes referred to herein as "send/receive time", is generally equal to the sum of the total time elapsing during send computer instructions of the event and the total time elapsing during receive computer instructions of the event, which are sometimes referred to herein as "send time" and "receive time", respectively.
      <br/>
      Some conventional RTE systems only report send/receive time and throughput and various statistics for each.
      <br/>
      Send/receive time alone is at best roughly indicative of the relative performance of SUT 100 and is at best roughly indicative of throughput for a given event.
    </p>
    <p num="30">
      As described above, send computer instructions replicate manual generation and transmission of command signals by a user through use of a computer input device such as a keyboard.
      <br/>
      As a result, send time, which is a component of send/receive time, is generally not indicative of the relative performance of SUT 100.
      <br/>
      Send time is more indicative of the speed with which the simulated user types, the complexity of the command which the simulated user is required to enter, and, correspondingly, the effectiveness of the user-interface by which the simulated user interacts with SUT 100.
    </p>
    <p num="31">
      Receive time is particularly indicative of the relative performance of SUT 100.
      <br/>
      Receive time indicates the amount of time elapsing between completion of the most recently completed send computer instruction and the matching of the pattern specified for the current receive computer instruction and is therefore a particularly good indicator of the amount of time taken by SUT 100 to respond to the most recently completed send computer instruction.
      <br/>
      All other components of the total elapsed time of an event are independent of performance characteristics of SUT 100.
      <br/>
      Reporting send time in conjunction with send/receive time and receive time provides to the system evaluator confidence in accuracy of the reported times and that all time has been accounted for.
    </p>
    <p num="32">
      Total time required for processing by RTE process 210A and which elapses but is otherwise not accounted for during the emulated use of SUT 100 is sometimes referred to herein as "application processing time".
      <br/>
      Application processing time reflects processing by RTE process 210A in performing such tasks as organizing send and receive computer instructions into major and minor events, maintaining data structures for representing and recording performance of such events, monitoring receive buffer 310 for patterns specified in receive computer instructions, and performing logical operations and computer instructions to determine which of the computer instructions of RTE process 210A to next execute.
      <br/>
      The last task occurs when the next send computer instruction executed within RTE process 210A depends on which of a number of patterns is matched in data received from SUT 100.
      <br/>
      Application processing time is an indication of the amount of overhead processing resulting from the relative complexity of RTE process 210A.
      <br/>
      Excessive complexity in RTE process 210A, which results in a particularly large amount of application processing time, indicates that such complexity in RTE process 210A affects, and potentially interferes with, the simulation effected by RTE process 210A and reported in the report of Appendix A. If application processing time is reported as a significant time component of an event, the computer instructions of RTE process 210A can be reorganized to make processing by RTE process 210A more efficient and to reduce influence of overhead processing by RTE process 210A on the results reported in the report of Appendix A. Accurately measuring and reporting application processing time provides to a user of RTE system 110 who analyzes the results reported in the report of Appendix A confidence that substantially all time elapsing during execution of RTE process 210A is accounted for and accurately reported.
      <br/>
      Furthermore, confidence that overhead processing by RTE process 210A does not excessively influence the emulated use of SUT 100 by RTE process 210A is bolstered by accurately measuring and reporting application processing time.
    </p>
    <p num="33">
      FIG. 4 shows a time line 400 representing execution of RTE process 210A (FIG. 3) as recorded in session log 308.
      <br/>
      Along time line 400 (FIG. 4), a number of log entries 402-432 represent occurrences recorded in session log 308 (FIG. 3) during execution of RTE process 210A.
      <br/>
      Each of log entries 402-432 (FIG. 4) are recorded along with the time at which the recorded occurrence occurred.
      <br/>
      Such is commonly called "time stamping" the occurrence.
      <br/>
      The log entries shown in FIG. 4 collectively form a simple event which includes a single send computer instruction and a single receive computer instruction.
      <br/>
      Log entry 402 records performance of a begin event computer instruction in which RTE process 210A (FIG. 3) records the beginning of an event.
      <br/>
      Soon thereafter, log entry 404 (FIG. 4) records performance of a begin transaction computer instruction in which RTE process 210A (FIG. 3) records the beginning of a transaction.
      <br/>
      The difference between the times at which log entries 402 (FIG. 4) and 404 are recorded is categorized as application processing time 450.
    </p>
    <p num="34">
      Shortly after log entry 404, RTE process 210A initiates a think timer (not shown) and records initiation of the think timer in session log 308 as log entry 406 (FIG. 4).
      <br/>
      Any passing time between log entries 404 and 406 is recorded as application processing time 452.
      <br/>
      Application processing time 452, and all application processing time shown in FIG. 4, is typically insignificant but is measured nonetheless to provide to the user of RTE process 210A (FIG. 3) complete information regarding the simulation performed by RTE process 210A and confidence in the reported results by accounting for substantially all of the time elapsing during an execution of RTE process 210A.
    </p>
    <p num="35">
      As described above, user think time, e.g., user think time 454, simulates time required by a simulated user to think prior to taking action.
      <br/>
      RTE process 210A (FIG. 3) initiates a think timer (not shown) and such initiation is recorded in session log 308 as log entry 406 (FIG. 4).
      <br/>
      When the think timer expires, RTE process 210A stores log entry 408 in session log 308 (FIG. 3) to record completion of the simulated thinking by the simulated user.
      <br/>
      The difference in time between log entries 406 (FIG. 4) and 408 is measured as user think time 454 to accurately reflect the actual amount of time spent by RTE process 210A (FIG. 3) to simulate thinking by a user.
      <br/>
      In reporting performance chaeristics of a system under test, some conventional RTE systems use the amount of user think time that is specified in a computer instruction which effects a simulated thinking by a user.
      <br/>
      However, the amount of time spent by an RTE process simulating thinking and the amount of user think time so specified can differ, and reported user think time in such conventional RTE systems can be inaccurate.
    </p>
    <p num="36">
      Once the think timer has expired, the expiration of the think timer is recorded in session log 308 (FIG. 3) as log entry 408 (FIG. 4), user think time 452 is calculated as described above, and processing by RTE process 210A (FIG. 3) continues.
      <br/>
      In the event shown in FIG. 4, an send computer instruction, e.g., send computer instruction 304A FIG. 3), executes substantially immediately after expiration of the think timer.
      <br/>
      Log entry 410 records the transmission of the first character of the send computer instruction.
      <br/>
      The difference between the times at which log entries 408 (FIG. 4) and 410 are recorded is categorized as application processing time 456.
    </p>
    <p num="37">
      Log entry 412 records transmission by RTE process 210A (FIG. 3) of the last character of a send computer instruction, e.g., send computer instruction 304A.
      <br/>
      The time recorded in session log 308 for log entry 410 (FIG. 4) is subtracted from the time recorded in session log 308 (FIG. 3) for log entry 412 (FIG. 4) and the resulting time is the difference between the time of transmission of the last and first characters of a send computer instruction.
      <br/>
      Accordingly, the resulting time is categorized as send time 458.
    </p>
    <p num="38">
      Receive time 462 is the difference in time between log entry 414, which substantially immediately follows transmission of the last character of the most recently completed send computer instruction of RTE process 210A (FIG. 3), e.g., send computer instruction 304A, and log entry 418 (FIG. 4), which is the matching of the pattern specified in a receive computer instruction, e.g., receive computer instruction 304B (FIG. 3).
      <br/>
      Some conventional RTE systems which report receive time separately from send/receive time measure receive time between the beginning of receive, shown at log entry 414, and receipt of the first character of a receive computer instruction, shown at log entry 416 (FIG. 4).
      <br/>
      In such conventional RTE systems, receive time is not an accurate indication of the relative performance characteristics of SUT 100 (FIG. 3) since total time during which SUT 100 processes data and commands received as a result of the most recently completed send computer instruction is not reported.
      <br/>
      Specifically, SUT 100 can respond relatively quickly to a send computer instruction with resulting output data which substantially immediately informs the emulated user that processing will continue for a period of time and that patience is warranted.
      <br/>
      For example, such resulting output can be in the form of a textual message such as "Processing . . . Please wait . . . ." Such resulting output data does not indicate that SUT 100 has completed processing the most recently transmitted data but rather indicates that processing of the data has just begun.
      <br/>
      By not including time between such a message and the matching of the pattern which that substantially all of the resulting output data has been received, conventional RTEs can A.N.P.7/7/95 misreport receive time.
      <br/>
      Accordingly, time elapsing between log entry 416 (FIG. 4) and log entry 418 represents time during which SUT 100 (FIG. 3) continues to processes data and commands received from RTE system 110 as a result of execution of a send computer instruction by RTE process 210A and such elapsed time is recorded in RTE process 210A as part of receive time in accordance with the present invention.
    </p>
    <p num="39">
      Since receive time 462 (FIG. 4) includes time elapsing while SUT 100 (FIG. 2) processes command signals transmitted to SUT 100, i.e., time elapsing between log entries 414 (FIG. 4) and 418, receive time 462 is related in a significant way to the particular performance characteristics of SUT 100.
      <br/>
      For example, significantly increasing the processing capacity of SUT 100 results in a corresponding significant decrease in the time difference between log entries 414 and 418 and therefore in receive time 462.
      <br/>
      However, significantly increasing the processing capacity of SUT 100 has little or no effect on the time required for the user to generate and transmit to SUT 100 command signals, to review resulting output data, or to think to determine what command signals to next generate and transmit to SUT 100.
      <br/>
      Accordingly, significantly increasing the processing capacity of SUT 100 can have relatively little effect on the throughput of SLIT 100 depending largely on the proportion of tasks executed by SUT 100 categorized as receive times, e.g., receive time 462.
      <br/>
      Thus, categorizing receive times as such and reporting receive times apart from other components of an event provides a user of RTE system 110 (FIG. 2) with valuable and crucial information regarding the potential effect of upgrading hardware components of SUT 100.
    </p>
    <p num="40">
      Send time 458 (FIG. 4) and receive time 462 are combined to form send/receive time 464.
      <br/>
      Application processing time 460 is the time elapsing between log entry 412, which is the transmission of the last character of a send computer instruction, and log entry 414, at which RTE process 210A (FIG. 3) begins monitoring receive buffer 310 for the pattern specified in the receive computer instruction.
      <br/>
      Typically, application processing time 460 (FIG. 4) will be very small and relatively insignificant However, it is preferred that application processing time 460 is shown as part of event time 482 to accurately report the time required by SUT 100 to process the data and commands transmitted by RTE system 110 during the most recently executed send computer instruction.
    </p>
    <p num="41">
      As described above, review time, e.g., review time 468, simulates review by a user of received output data prior to action taken by the user in response to such data.
      <br/>
      RTE process 210A (FIG. 3) initiates a review timer (not shown) shortly after log entry 420 (FIG. 4), which indicates completion of a receive computer instruction.
      <br/>
      Initiation of the review timer is recorded in session log 308 (FIG. 3) as log entry 422 (FIG. 4).
      <br/>
      When the review timer expires, RTE process 210A (FIG. 3) stores log entry 424 (FIG. 4) in session log 308 (FIG. 3) to record completion of the simulated review of received data by the simulated user.
      <br/>
      The difference in time between log entries 422 (FIG. 4) and 424 is measured as review time 468 to accurately reflect the actual amount of time spent by RTE process 210A (FIG. 3) to simulate review of received data by a user.
      <br/>
      Some conventional RTE systems report the amount of review time that is specified in a computer instruction which effects a simulated review of received data by a user.
      <br/>
      However, the amount of time spent by an RTE process simulating review of received data and the amount of review time so specified can differ, and reported review time in such conventional RTE systems can be inaccurate.
    </p>
    <p num="42">
      Prior to initiation of the review timer as recorded by log entry 422 (FIG. 4) in session log 308 (FIG. 3) and after matching of the pattern specified in the most recently performed receive computer instruction, e.g., receive computer instruction 304B, as recorded by log entry 418 (FIG. 4) in session log 308 FIG. 3), RTE process 210A clears receive buffer 310.
      <br/>
      If the developer of RTE process 210A has specified in receive computer instruction 304B a pattern near or at the end of the data received from SUT 100, receive buffer will be cleared after receipt of the last character as represented by time 420 (FIG. 4).
    </p>
    <p num="43">
      Shortly after termination of the simulated review, which is recorded in session log 308 as log entry 424 (FIG. 4), RTE process 210A (FIG. 3) determines the amount of time which has elapsed since execution of the begin transaction computer instruction recorded by log entry 404 in session log 308 (FIG. 3) and compares the elapsed time of the transaction to a transaction user think time specified in the begin transaction computer instruction.
      <br/>
      As described above, transaction user think time is used to simulate a task performed by the user in which a minimum amount of time is required to perform the task without regard to (i) how fast the user can type, read, and think or (ii) how fast SUT 100 processes command signals and returns resulting output data.
      <br/>
      Since transaction user think time represents a minimum transaction time, RTE process 210A (FIG. 3) only uses transaction user think time if less than the minimum transaction time has elapsed since execution of the begin transaction computer instruction recorded by log entry 404 in session log 308.
      <br/>
      If less than the minimum transaction time has elapsed, RTE process 210A initiates a transaction think timer (not shown) to expire when the minimum transaction time has elapsed since execution of the most recently executed begin transaction computer instruction and records initiation of the transaction think timer in session log 308 as log entry 426 (FIG. 4).
      <br/>
      Any passing time between log entries 424 and 426 is recorded as application processing time 470.
      <br/>
      Application processing time 470 is typically insignificant but is measured nonetheless to provide to the user of RTE process 210A (FIG. 3) complete information regarding the simulation performed by RTE process 210A and confidence in the reported results by accounting for substantially all of the time elapsing during an execution of RTE process 210A.
    </p>
    <p num="44">When the think timer expires, RTE process 210A stores log entry 428 in session log 308 (FIG. 3) to record accurately the amount of transaction user think time used in the simulated use of SUT 100 by RTE process 210A The difference in time between log entries 426 (FIG. 4) and 428 is measured as transaction user think time 472 to accurately reflect the actual amount of time spent by RTE process 210A (FIG. 3) to implement the minimum transaction time.</p>
    <p num="45">
      In the event shown in FIG. 4, an end transaction computer instruction executes substantially immediately after expiration of the transaction think timer, and terminates the transaction.
      <br/>
      The termination of the transaction is recorded in session log 308 (FIG. 3) as log entry 430 (FIG. 4).
      <br/>
      Any time elapsing between log entries 428 and 430 is categorized as application processing time 474 and is typically insignificant.
      <br/>
      When the event shown in FIG. 4 is terminated as recorded in log entry 432, the time elapsing between log entries 404 and 430, which record the being and end, respectively, of a transition, is categorized as transaction time 480.
    </p>
    <p num="46">
      An end event computer instruction executes substantially immediately after termination of the transaction, and terminates the event.
      <br/>
      The termination of the event is recorded in session log 308 (FIG. 3) as log entry 432 (FIG. 4).
      <br/>
      Any time elapsing between log entries 430 and 432 is categorized as application processing time 476 and is typically insignificant When the event shown in FIG. 4 is terminated as recorded in log entry 432, the time elapsing between log entries 402 and 432, which record the beginning and end, respectively, of the event of FIG. 4, is categorized as event time 482.
      <br/>
      Event time 482 is equal to the sum of user think time 454, send time 458, receive time 462, review time 468, transaction user think time 472, and application processing times 450, 452, 456, 460, 466, 470, 474, and 476.
      <br/>
      In the report of Appendix A, (i) user think time 454, (ii) send time 458, (iii) receive time 462, (iv) send/receive time 464, (v) review time 468, (vi) transaction user think time 472, and (vii) the sum of application processing times 450, 452, 456, 460, 466, 470, 474, and 476 are reported to the system evaluator.
      <br/>
      Thus, substantially all of the time elapsing during the event shown in FIG. 4 is reported to the system evaluator.
    </p>
    <p num="47">
      While the event represented in time line 400 (FIG. 4) includes execution of only a single send computer instruction and a single receive computer instruction, it is appreciated that an event can include multiple send and receive computer instructions to represent more complex events.
      <br/>
      In addition, events and transactions can be nested within RTE process 210A.
      <br/>
      For example, begin and end event computer instructions which initiate and terminate, respectively, a first event can be included between begin and end event computer instructions which initiate and terminate, respectively, a second event.
      <br/>
      The first event is therefore an event component of the second event.
      <br/>
      Transactions can be nested in an analogous manner.
      <br/>
      Furthermore, a transaction can be included in an event as a component of the event and an event can be included as a component of a transaction.
      <br/>
      The developer of RTE process 210A is provided with substantial flexibility in categorizing the various event components to provide useful information regarding the performance of SUT 100.
    </p>
    <p num="48">
      The above description is illustrative only and is not limiting.
      <br/>
      Instead, the present invention is limited only by the claims which follow.
    </p>
    <heading>-- APPENDIX A</heading>
    <p num="49">
      -- Run Started 21:04:44, Ended 22:20:05
      <br/>
      -- Only considering transactions between 21:18 and 22:18
      <br/>
      -- No. of users = 64
      <br/>
      -- SendRecv =
      <br/>
      -- Major Event Count Total = (Review + Think + TranTh + Appln + SendRecv) Send
      <br/>
      --  + Recv
      <br/>
      -- glupd         71        484.58  57.72   274.97  0.00    0.60   151.29
      <br/>
      --  122.76  28.31
      <br/>
      --               Std.
      <br/>
      Dev  250.55  24.10   171.26  0.00           78.91
      <br/>
      --  68.76   15.17
      <br/>
      --               C.O.V.    0.52    0.42    0.62    0.00           0.52    0.56
      <br/>
      --     0.54
      <br/>
      --               Low       179.51  30.28   80.78   0.00           53.46
      <br/>
      --  46.13   7.26
      <br/>
      --               90% ile   931.65  91.16   581.47  0.00           283.33
      <br/>
      --  243.13  46.94
      <br/>
      --               High      1002.06 173.80  636.12  0.00           311.51
      <br/>
      --  263.62  76.15
      <br/>
      -- Details (each event may include more than one of each type):
      <br/>
      --               Number            71      13036   0              13036
      <br/>
      --  13036   13036
      <br/>
      --               Averge            57.72   1.50    0.00           0.82    0.67
      <br/>
      --     0.15
      <br/>
      --               Std.
      <br/>
      Dev          24.10   1.45    0.00           1.12    0.55
      <br/>
      --     0.98
      <br/>
      --               C.O.V.            0.42    0.97    0.00           1.36    0.83
      <br/>
      --     6.33
      <br/>
      --               Low               30.28   0.00    0.00           0.20    0.19
      <br/>
      --     0.00
      <br/>
      --               High              173.80  7.50    0.00           44.57   5.00
      <br/>
      --     43.98
      <br/>
      -- glbat         54        188.97  120.13  22.34   0.00    0.06   46.44
      <br/>
      --  41.29   5.12
      <br/>
      --               Std.
      <br/>
      Dev  66.17   58.53   8.71    0.00           15.30
      <br/>
      --  14.20   3.03
      <br/>
      --               C.O.V.    0.35    0.49    0.39    0.00           0.33    0.34
      <br/>
      --     0.59
      <br/>
      --               Low       112.99  60.55   5.35    0.00           26.50
      <br/>
      --  24.08   1.80
      <br/>
      --               90% ile   262.01  193.78  35.30   0.00           69.25
      <br/>
      --  61.69   9.71
      <br/>
      --               High      443.57  343.07  39.02   0.00           77.25
      <br/>
      --  67.76   17.23
      <br/>
      -- Details (each event may include more than one of each type):
      <br/>
      --               Number            54      1256    0              953     1256
      <br/>
      --     953
      <br/>
      --               Averge            120.13  0.96    0.00           2.23    1.78
      <br/>
      --     0.29
      <br/>
      --               Std.
      <br/>
      Dev          58.53   0.94    0.00           2.30    1.79
      <br/>
      --     0.74
      <br/>
      --               C.O.V.            0.49    0.98    0.00           1.03    1.01
      <br/>
      --     2.55
      <br/>
      --               Low               60.55   0.00    0.00           0.33    0.32
      <br/>
      --     0.00
      <br/>
      --               High              343.07  5.00    0.00           18.51
      <br/>
      --  10.35   8.41
      <br/>
      -- glinq         100       1084.99 841.58  113.47  0.00    0.25   129.69
      <br/>
      --  100.32  29.30
      <br/>
      --               Std.
      <br/>
      Dev  165.17  154.73  30.64   0.00           25.52
      <br/>
      --  23.48   7.52
      <br/>
      --               C.O.V.    0.15    0.18    0.27    0.00           0.20    0.23
      <br/>
      --     0.26
      <br/>
      --               Low       799.21  575.64  49.95   0.00           78.15
      <br/>
      --  43.62   14.71
      <br/>
      --               90% ile   325.51  1025.61 159.96  0.00           165.46
      <br/>
      --  128.03  38.10
      <br/>
      --               High              667.41  1368.12 187.18  0.00   184.57
      <br/>
      --  148.75  57.62
      <br/>
      -- Details (each event may include more than one of each type):
      <br/>
      --               Number            700     5748    0              5748    5748
      <br/>
      --     5748
      <br/>
      --               Averge            120.23  1.97    0.00           2.26    1.75
      <br/>
      --     0.51
      <br/>
      --               Std.
      <br/>
      Dev          58.33   1.91    0.00           1.67    0.82
      <br/>
      --     1.23
      <br/>
      --               C.O.V.            0.49    0.97    0.00           0.74    0.47
      <br/>
      --     2.41
      <br/>
      --               Low               60.21   0.00    0.00           0.33    0.33
      <br/>
      --     0.00
      <br/>
      --               High              360.00  10.00   0.00           43.55   4.59
      <br/>
      --     41.57
      <br/>
      -- Jnl Inquiry   479       15.01   0.00    5.66    0.00    0.01   9.34    6.61
      <br/>
      --     2.72
      <br/>
      --               Std.
      <br/>
      Dev  3.84    0.00    3.13    0.00           2.37    0.08
      <br/>
      --     2.37
      <br/>
      --               C.O.V.    0.26    0.00    0.55    0.00           0.25    0.01
      <br/>
      --     0.87
      <br/>
      --               Low       8.85    0.00    0.18    0.00           7.46    5.61
      <br/>
      --     0.86
      <br/>
      --               90% ile   19.76   0.00    9.79    0.00           10.76   6.65
      <br/>
      --     4.13
      <br/>
      --               High      51.64   0.00    17.56   0.00           48.40   7.10
      <br/>
      --     41.80
      <br/>
      -- Details (each event may include more than one of each type):
      <br/>
      --               Number            0       1437    0              1437    1437
      <br/>
      --     1437
      <br/>
      --               Averge            0.00    1.89    0.00           3.11    2.20
      <br/>
      --     0.91
      <br/>
      --               Std.
      <br/>
      Dev          0.00    1.84    0.00           1.76    0.83
      <br/>
      --     1.72
      <br/>
      --               C.O.V.            0.00    0.97    0.00           0.57    0.37
      <br/>
      --     1.90
      <br/>
      --               Low               0.00    0.00    0.00           1.47    1.32
      <br/>
      --     0.00
      <br/>
      --               High              0.00    10.00   0.00           43.55   3.76
      <br/>
      --     41.57
      <br/>
      -- Qpick Standard 13019     2.51    0.00    1.62    0.00    0.00   0.88
      <br/>
      --  0.87    0.01
      <br/>
      --               Std.
      <br/>
      Dev  1.68    0.00    1.61    0.00           0.35    0.35
      <br/>
      --     0.02
      <br/>
      --               C.O.V.    0.67    0.00    0.99    0.00           0.40    0.41
      <br/>
      --     2.53
      <br/>
      --               Low       0.60    0.00    0.00    0.00           0.59    0.59
      <br/>
      --     0.00
      <br/>
      --               90% ile   4.73    0.00    3.77    0.00           1.35    1.34
      <br/>
      --     0.05
      <br/>
      --               High      11.70   0.00    10.00   0.00           1.99    1.77
      <br/>
      --     1.39
      <br/>
      -- Details (each event may include more than one of each type):
      <br/>
      --               Number            0       13019   0              13019
      <br/>
      --  13019   13019
      <br/>
      --               Averge            0.00    1.62    0.00           0.88    0.87
      <br/>
      --     0.01
      <br/>
      --               Std.
      <br/>
      Dev          0.00    1.61    0.00           0.35    0.35
      <br/>
      --     0.02
      <br/>
      --               C.O.V.            0.00    0.99    0.00           0.40    0.41
      <br/>
      --     2.53
      <br/>
      --               Low               0.00    0.00    0.00           0.59    0.59
      <br/>
      --     0.00
      <br/>
      --               High              0.00    10.00   0.00           1.99    1.77
      <br/>
      --     1.39
      <br/>
      -- Total Send/Receive pairs = 31532, Ave. time = 1.24
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for reporting to a user of a remote terminal emulator which emulates the use of a computer system under test through a remotely coupled terminal, the use comprising one or more occurrences, the method comprising:</claim-text>
      <claim-text>recording the occurrences during a simulated use of the computer system under test to a specified precision, wherein the simulated use includes the remote terminal emulator simulating operation of the remotely coupled terminal;</claim-text>
      <claim-text>and accounting to the user for time elapsed during the simulated use to the specified precision, wherein said time elapsed includes user think time.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method as recited in claim 1, wherein said recording of occurrences i performed by an occurrence recorder.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method as recited in claim 1, wherein said accounting to the user for all time elapsed is performed by a simulated user reporter.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method as recited in claim 1, wherein said time elapsed includes application processing time.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method as recited in claim 1, wherein said time elapsed includes time required by said computer system under test to respond to command signals.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method as recited in claim 1, wherein said accounting to the user for time elapsed is for all time elapsed during said simulated use.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A remote terminal emulator comprising: a processor; a memory operatively coupled to the processor; a remote terminal emulator process which executes in the processor from the memory and which emulates one or more occurrences of a use of a computer system under test through a remotely coupled terminal, the remote terminal emulator process comprising:</claim-text>
      <claim-text>- an occurrence recorder which records the time at which the occurrences take place during a simulated use of the computer system under test to a specified precision;</claim-text>
      <claim-text>and - a simulated user reporter, operatively coupled to the occurrence recorder, for accounting to a user of the remote terminal emulator process for time elapsed during the simulated use to the specified precision, wherein said time elapsed includes user think time.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The remote terminal emulator as recited in claim 7, wherein said memory is a random access memory (RAM).</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The remote terminal emulator as recited in claim 7, wherein said memory is a read-only memory (ROM).</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The remote terminal emulator as recited in claim 7, wherein said remote terminal emulator is configured to simulate simultaneous use by multiple users of said computer system under test.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The remote terminal emulator as recited in claim 7, wherein said remote terminal emulator is coupled to said computer system under test by an Ethernet connection.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The remote terminal emulator as recited in claim 7, wherein said accounting to a user of the remote terminal emulator process for time elapsed is for all time elapsed during the simulated use.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A computer-readable memory including computer instruction which, when executed by a computer processor, report to a user of a remote terminal emulator which emulates the use of computer system under test through a remotely coupled terminal, the use comprising one or more occurrences, the memory comprising: computer instructions configured to record the occurrences during a simulated use of the computer system under test to a specified precision, wherein the simulated use includes the remote terminal emulator simulating operation of the remotely coupled terminal;</claim-text>
      <claim-text>and computer instructions configured to account to the user for time elapsed during the simulated use to the specified precision, wherein said time elapsed includes user think time.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The computer-readable memory as recited in claim 13, wherein said computer instructions include send instructions.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The computer-readable memory as recited in claim 13, wherein said computer instructions include receive instructions.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The computer-readable memory as recited in claim 13, wherein said computer-readable memory is a random access memory (RAM).</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The computer-readable memory as recited in claim 13, wherein said computer-readable memory is a read-only memory (ROM).</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The computer-readable memory as recited in claim 13, wherein said time elapsed is for all time elapsed during the simulated use.</claim-text>
    </claim>
  </claims>
</questel-patent-document>