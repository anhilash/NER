<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185466B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185466</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185466</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25481990" extended-family-id="42113512">
      <document-id>
        <country>US</country>
        <doc-number>08944745</doc-number>
        <kind>A</kind>
        <date>19971006</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08944745</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171748</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>94474597</doc-number>
        <kind>A</kind>
        <date>19971006</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08944745</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G05B  19/414       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>19</main-group>
        <subgroup>414</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>700019000</text>
        <class>700</class>
        <subclass>019000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>700002000</text>
        <class>700</class>
        <subclass>002000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>700018000</text>
        <class>700</class>
        <subclass>018000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>700083000</text>
        <class>700</class>
        <subclass>083000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>709201000</text>
        <class>709</class>
        <subclass>201000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>709213000</text>
        <class>709</class>
        <subclass>213000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>709222000</text>
        <class>709</class>
        <subclass>222000</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>713001000</text>
        <class>713</class>
        <subclass>001000</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>713002000</text>
        <class>713</class>
        <subclass>002000</subclass>
      </further-classification>
      <further-classification sequence="9">
        <text>713100000</text>
        <class>713</class>
        <subclass>100000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G05B-019/414</text>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>19</main-group>
        <subgroup>414</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-019/414</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>19</main-group>
        <subgroup>414</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/31139</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>31139</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/31324</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>31324</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/33273</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>33273</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/36512</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>36512</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/31139</classification-symbol>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/31324</classification-symbol>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/33273</classification-symbol>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/36512</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>32</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>6</number-of-figures>
      <image-key data-format="questel">US6185466</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Distributed digital control system including modules with multiple stored databases and selector</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GLEBA JAMES S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4656593</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4656593</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>FLOOD MARK A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5193189</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5193189</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>KESSLER JAMES A</text>
          <document-id>
            <country>US</country>
            <doc-number>5249140</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5249140</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>SITTE HANS J</text>
          <document-id>
            <country>US</country>
            <doc-number>5469150</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5469150</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>NAYLOR MICHAEL A</text>
          <document-id>
            <country>US</country>
            <doc-number>5506767</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5506767</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>HODOROWSKI JOHN</text>
          <document-id>
            <country>US</country>
            <doc-number>5530643</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5530643</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>STANDISH DARRELL E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5550980</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5550980</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>GROSS KENNETH C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5764509</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5764509</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>LE VAN SUU MAURICE</text>
          <document-id>
            <country>US</country>
            <doc-number>5796607</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5796607</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>NIXON MARK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5801942</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5801942</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>DOVE ANDREW P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5838563</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5838563</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>NIXON MARK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5909368</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5909368</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Proteus Industries, Inc.</orgname>
            <address>
              <address-1>Mountain View, CA, US</address-1>
              <city>Mountain View</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>PROTEUS INDUSTRIES</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Nicewonger, Mark R.</name>
            <address>
              <address-1>Aptos, CA, US</address-1>
              <city>Aptos</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Arter &amp; Hadden, LLP</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Alexander, Esq., David G.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Gordon, Paul P.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A distributed digital control system includes a plurality of control modules which are interconnected by a communication link.
      <br/>
      Each module includes a processor unit for running a control program, and a plurality of system databases which correspond to nodes in the system.
      <br/>
      Each module further includes a selector such as a Dual Inline Package (DIP) switch for inputting a node number.
      <br/>
      The program automatically selects the database corresponding to the input node number when the module is powered up.
      <br/>
      The system preferably utilizes the industry standard LonTalk(R) protocol, with each database including Standard Network Variable Types (SNVTs) and Standard Configuration Parameter Types (SCPTs) for the respective node.
      <br/>
      A default database is also stored in each module, which is automatically used by the program if the system databases are not found.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention generally relates to the art of industrial control systems, and more specifically to a distributed digital control system including modules with multiple stored databases and a selector.</p>
    <p num="3">2. Description of the Related Art</p>
    <p num="4">
      A simple digital control system includes a single processor or controller to which various input and output devices such as sensors and actuators are connected.
      <br/>
      The controller is programmed to make decisions and control the actuators based on information obtained from the sensors.
      <br/>
      This type of system is typically implemented with a microprocessor based controller, with its sensors and actuators in relatively close proximity to facilitate their direct connection to the controller electronics.
    </p>
    <p num="5">
      In cases where the sensors and/or actuators are not located near the controller, a transmission medium or communication link is employed to transmit information between the controller and the remote devices.
      <br/>
      Conventional transmission media include 4 to 20 milliamp current loops, simple digital serial interfaces such as RS-232, and Local Area Networks (LAN), with the controller being located at a central point.
    </p>
    <p num="6">
      A distributed control system uses multiple controllers instead of a single central controller.
      <br/>
      The system functions are segmented into discrete tasks and divided between the various controllers.
      <br/>
      The information necessary to coordinate the overall system is then communicated between the controllers by a medium which is suitable for the particular application, such as a shared memory space, or more typically a LAN.
    </p>
    <p num="7">
      There are two ways to organize distributed control systems; client/server and peer to peer.
      <br/>
      In a typical client/server system, one of the controllers functions as a server and the remaining controllers function as clients.
      <br/>
      The server acts a system coordinator.
      <br/>
      All shared information is located at the server and may not be passed directly between clients.
      <br/>
      Conventional office computer networks and the Internet are examples of client/server systems.
    </p>
    <p num="8">
      In a peer to peer system, communication takes place directly between the processors without having to go through an immediate server.
      <br/>
      Controllers exchange information using special program variables known as system variables.
      <br/>
      Changes in the value of a system output variable on one controller are communicated to another controller's system input variable, and thus the same value is maintained for both variables.
      <br/>
      Not all system output variables are communicated to all system input variables, but those variables that are communicated are said to be "connected" or "bound".
      <br/>
      The establishment of these connections is referred to as binding.
      <br/>
      Peer to peer systems are typically used in distributed control applications such as factory automation or building energy control systems.
    </p>
    <p num="9">
      Controllers in a peer to peer system often have their program functions divided into discrete units known as objects.
      <br/>
      Each object can have one or more system input or output variables.
      <br/>
      Objects are designed to be general purpose building blocks which may be used in various combinations to achieve a desired system function.
      <br/>
      Although each individual object has a fixed function, the overall operation or relationship of the objects to one another, as defined by the system variable connections, is not fixed, but may be changed to accomplish the desired system level result.
      <br/>
      Objects may also have operating parameters which may be specified in each instance to adjust for varying operating conditions.
    </p>
    <p num="10">
      A systems designer typically uses a computer program, referred to as a management tool, to define the system variable connections and the operating parameter values for each of the objects on the controllers.
      <br/>
      When a new controller is installed, it must be configured by the management tool before it can assume any role within the system.
      <br/>
      This is true both when the individual controllers are first brought together as a system, and whenever a controller is replaced for maintenance reasons.
      <br/>
      Therefore, the presence of a management tool, and its operator, is required both at the initial assembly point and the field service point.
    </p>
    <p num="11">
      For many distributed control systems, the two management points (assembly and service) are one and the same.
      <br/>
      This is true when a system is not physically moved to another location after it is installed.
      <br/>
      A good example of this is a factory automation system, where it is practical for the same management tool and operating personnel to be used for both system installation and maintenance.
    </p>
    <p num="12">
      For an Original Equipment Manufacturer (OEM) product which incorporates an embedded distributed control system, the two management points are not the same, and both present problems which many times make such systems impractical.
      <br/>
      At the assembly point, systems are installed not only once, as in the factory automation case, but over and over again, each time the product is assembled, thus complicating the manufacturing process.
      <br/>
      The larger problem, however, is at each remote point to which the product is shipped, where a management tool and qualified operator are required for field service.
    </p>
    <p num="13">
      Each controller in a distributed system requires three types of memory: a program memory which is a non-volatile storage space containing the program instructions which direct the operation of the controller, and is often implemented using read-only memory, and a scratch-pad memory which is a random access memory used for intermediate values (results of calculations, program stack, etc.) that do not have to be permanently stored.
      <br/>
      These first two memory types are universal to all microprocessor based controllers.
    </p>
    <p num="14">
      The third type of memory, unique to distributed controllers, is a system database.
      <br/>
      The system database is a record of the system variable connections and the operating parameter values for each object on the controller.
      <br/>
      This memory must be non-volatile to preserve the information which determines the overall operation of a system, and is usually a read/write type memory to enable database updates.
      <br/>
      The role of a management tool is to generate the information to be contained in the system database, and to transfer the information into the controller's system database.
    </p>
    <p num="15">
      One way to completely eliminate the need for a management tool in an OEM system is to put the system database into non-volatile read-only memory.
      <br/>
      This is sometimes referred to as a pre-configured system.
      <br/>
      One drawback to this is that many or all of the controllers within the system are often exactly the same physically, with the only distinction between them being the contents of the system database.
    </p>
    <p num="16">
      Placing a different system database into each controller's read-only memory forces the stocking and labeling, at both manufacturing and field service points, of a separate unit for each of the controllers, which can be not only cumbersome, but confusing since the controllers all look for the same.
      <br/>
      This is contrasted to stocking only a single item, which is used in multiple instances, for systems using a management tool to update the system database each time a controller is installed.
    </p>
    <p num="17">
      A second drawback to pre-configured systems is inflexibility.
      <br/>
      An OEM may ship systems to multiple customers, with each one requiring a different system database configuration.
      <br/>
      This again comes down to an inventory control issue, since the stocking problems described above are now multiplied by the number of customers.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="18">
      The present invention overcomes the drawbacks of an OEM system by combining the simplified stocking requirements of a typical distributed control system with the advantage of a pre-configured system which does not need a management tool.
      <br/>
      The present invention accomplishes this goal by maintaining a duplicate copy of each controller's system database on every controller of the same type in the system.
      <br/>
      Each controller stores not only its own single system database, but a number of system databases equal to the number of similar controllers in the system.
      <br/>
      Dissimilar controllers do not need to share each other's databases since they are physically different.
    </p>
    <p num="19">
      An input device is provided on each controller to function as a database selector.
      <br/>
      The selector input can be implemented in a variety of ways, from a simple switch array to a keypad and display where the selector value can be entered by the installer and saved in memory.
      <br/>
      A special management tool loads the multiple system databases into each controller as required.
      <br/>
      Thereafter, each controller assumes its proper role in the system by using the databases designated by the selector.
      <br/>
      Thus, each controller can take the place of any controller of the same type in the system, by simply changing the database selector.
    </p>
    <p num="20">
      Although a management tool is still required to initially load databases to the controllers, the disadvantages to an OEM are avoided.
      <br/>
      Databases can be loaded into the system database memory at the time the controllers are manufactured, much the same as the program memory must be loaded.
      <br/>
      The controllers arrive at the system assembly and field service points with the only installation requirement being to properly set the selector device.
      <br/>
      No management tool is required at either the manufacturing final assembly or field service points.
    </p>
    <p num="21">
      A distributed digital control system embodying the present invention which accomplishes this goal includes a plurality of control modules which are interconnected by a communication link.
      <br/>
      Each module includes a processor unit for running a control program, and a plurality of system databases which correspond to nodes in the system.
      <br/>
      Each module further includes a selector such as a Dual Inline Package (DIP) switch for inputting a node number.
      <br/>
      The program automatically selects the database corresponding to the input node number when the module is powered up.
      <br/>
      The system preferably utilizes the industry standard LonTalk.RTM. protocol, with each database including binding information for the Standard Network Variable Types (SNVTs) and values for the Standard Configuration Parameter Types (SCPTs) for the respective node.
      <br/>
      A default database is also stored in each module, which is automatically used by the program if the system databases are not found.
    </p>
    <p num="22">
      More specifically, the present distributed digital control system includes a plurality of control modules and a communication link interconnecting the modules.
      <br/>
      Each module includes a digital processor unit, memory for storing a digital control program which is executed by the processor unit for controlling the module, and a plurality of module databases corresponding to identification numbers respectively.
    </p>
    <p num="23">
      Each module further includes a selector for inputting an identification number, the program being configured to control the module using a database corresponding to the identification number input by the selector.
      <br/>
      The program is configured to sense the selector and select the database corresponding to the identification number input by the selector when the module is powered up.
    </p>
    <p num="24">These and other features and advantages of the present invention will be apparent to those skilled in the art from the following detailed description, taken together with the accompanying drawings, in which like reference numerals refer to like parts.</p>
    <heading>DESCRIPTION OF THE DRAWINGS</heading>
    <p num="25">
      FIG. 1 is a block diagram illustrating a distributed digital control system embodying the present invention;
      <br/>
      FIG. 2 is a block diagram illustrating a control module of the system;
      <br/>
      FIG. 3 is a diagram illustrating program data and default configuration data stored in a programmable peripheral memory of the control module of FIG. 2;
      <br/>
      FIG. 4 is a diagram illustrating a configuration database or configuration data set;
      <br/>
      FIG. 5 is a diagram illustrating data stored in an external EPROM memory of the control module; and
      <br/>
      FIG. 6 is a diagram illustrating data stored in an internal microprocessor EPROM memory of the control module.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="26">
      A distributed digital control system embodying the present invention is commercially available from Proteus Industries, Inc., of Mountain View, Calif., the assignee of the present invention, under the product name FluidTalk (tm) . The system measures the flow rate, temperature and pressure of liquid in industrial equipment cooling systems.
      <br/>
      However, the present invention is not limited to cooling system control or any other particular application, and can be adapted to any environment in which distributed digital control is required.
    </p>
    <p num="27">
      As illustrated in FIG. 1, a distributed digital control system 10 embodying the invention includes a plurality of control modules 12a, 12b, 12c and 12d which constitute nodes of the system 10 and are interconnected by a communication link 14 such as a LAN.
      <br/>
      As illustrated in FIG. 1 modules 12a, 12b, 12c and 12d are of the same type and construction, although the system 10 can additionally include modules of different types such as a display unit 28.
    </p>
    <p num="28">
      Each sensor unit 12a, 12b, 12c and 12d typically has at least one input and/or output connected to a sensor or actuator.
      <br/>
      The arrangement of control modules, sensors and actuators is entirely flexible and can be selected in accordance with a particular application.
      <br/>
      As shown in the example of FIG. 1, the module 12a has an input connected to an output of a sensor 16 which is constructed to sense fluid pressure, temperature, flow, etc., and outputs connected to inputs of an actuator 18 which may for example, open or close a or valve.
      <br/>
      The controller 20 can, for example, control fluid flow.
      <br/>
      The module 12b is illustrated as having an input connected to an output of a sensor 22, whereas the module 12c an output connected to an input of an actuator 26.
    </p>
    <p num="29">
      The display unit 28 is connected to the link 14 for displaying parameters that are transmitted between the modules 12a, 12b, 12c and 12d.
      <br/>
      Although not explicitly shown, the display unit 28 is provided with a display screen for displaying, for example, values that are sensed by the sensors 16 and 22.
    </p>
    <p num="30">
      The system 10 further includes a gateway 30 in the form of a handheld unit which is connected to the link 14.
      <br/>
      The gateway 30 serves as a link between the sensor units 12a, 12b, 12c and 12d and a computer 32 such as a conventional personal computer.
      <br/>
      In this capacity the gateway 30 enables the computer 32 to function as a management tool to configure the sensor units 12a, 12b, 12c and 12d as will be described below.
      <br/>
      The gateway 30 is also capable of functioning as a management tool for configuring the sensor units 12a, 12b, 12c and 12d without the computer 32.
    </p>
    <p num="31">
      The module 12a (the modules 12b, 12c and 12d are the same as the module 12a) is illustrated in FIG. 2.
      <br/>
      The module 12a preferably includes a processor unit 40 in the form of a Neuron.RTM. chip which is commercially available from the above referenced Echelon Corporation.
      <br/>
      The unit 40 generally includes three pipelined processors 42a, 42b and 42c for concurrent processing of application program code and network packets (the method of data communication between the modules 12a, 12b, 12c and 12d), a Random Access Memory (RAM) 44 for buffering network data and storing network variables, an internal Electrically Erasable Programmable Read-Only Memory (EEPROM) 46, a communications port 48 for network connection, and an Input/Output port 50 for connection to sensors, and actuators.
    </p>
    <p num="32">The module 12a further includes an external EEPROM 52 which is connected to the I/O port 50, and a transceiver 54 which is connected between the communications port 48 and the link (LAN) 14. The unit 12a also includes a programmable peripheral unit 56 having its own EPROM 58, RAM 57 and additional I/O port 59 which is connected to the processor unit 40.</p>
    <p num="33">
      An input or selector which is preferably in the form of a Dual Inline Package (DIP) switch 60 is connected to the I/O port 59.
      <br/>
      It will be understood that the selector configuration is not limited to a switch, but can be embodied as a keypad and display or any other suitable means.
      <br/>
      The selector can also be a register, memory or other electrical unit into which a numerical value can be entered by an external handheld unit or other suitable means.
    </p>
    <p num="34">
      The modules 12a, 12b, 12c and 12d, display unit 28 and gateway 30 communicate with each other over the link 14 using the industry standard LonTalk.RTM. protocol which was developed by the Echelon Corporation of Palo Alto, Calif.
      <br/>
      This protocol is an Open Systems Interconnection (OSI) arrangement which performs file transfer via network data packets using a model consisting of 7 layers.
      <br/>
      The protocol per se is not the particular subject matter of the present invention and will not be described in detail.
    </p>
    <p num="35">
      The program and variable data used by the system 10 includes program code in the form of the program objects which are provided as firmware in the EPROM 58, operation data, and any other necessary program code.
      <br/>
      The operation data establishes the Standard Network Variable Types (SNVTs) and Standard Configuration Parameter Types (SCPTs) which are used by the modules 12a, 12b, 12c and 12d.
    </p>
    <p num="36">
      The firmware code for the program objects in combination with the operation data and any other necessary code constitute a control program which is executed by the processor unit 40 for controlling the module 12a.
      <br/>
      The control program and variable data are stored in what will be collectively referred to as "memory".
      <br/>
      The memory can conceivably be one integral unit, but is preferably segmented into distributed functional elements as will be described below.
      <br/>
      It will be understood that the memory allocation for program code and data is not limited to the illustrated embodiment, but can be arranged in any suitable configuration depending on a particular application.
    </p>
    <p num="37">
      In the preferred embodiment of the invention, a plurality of program objects 62 are stored in the EPROM 58 in the programmable peripheral unit 56 as illustrated in FIG. 3.
      <br/>
      The objects 62 include a node object, one of the key tasks of which is to perform configuration database management functions such as communicating database files over the link 14, to and from the computer 32, via the gateway 30 and selecting the proper database for the particular module 12a based on the value of the selector device 60.
    </p>
    <p num="38">
      The objects 62 also include one or more objects which are executed by the processor unit 40 to implement the functionality of a sensor, actuator, controller, etc.
      <br/>
      As illustrated in the drawing, the objects 62 include, in addition to the node object, flow sensor, temperature sensor, pressure sensor, switch sensor, relay actuator, frequency actuator, analog actuator, comparator, logical AND controller, and logical OR controller objects.
    </p>
    <p num="39">
      As described above, each node (module) in the system requires a configuration database containing the information for implementing the functionality of the particular node.
      <br/>
      As illustrated in FIG. 4, an exemplary database 70 includes a domain table 72 and an address table 74 which in combination with a network variable table 76 defines the binding of the network variables between the nodes of the system 10, and also a configuration parameter table 78 contains the operating values of the Standard Configuration Parameter Type (SCPTs) which define how the objects 62 are configured.
    </p>
    <p num="40">
      As illustrated in FIG. 5, the external EEPROM 52 stores a configuration database index 82, and a plurality of configuration databases 84, each of which has the configuration illustrated in FIG. 4.
      <br/>
      In the FluidTalk product, each module stores 31 databases for 31 respective nodes, although the invention is not limited to any particular number of databases.
    </p>
    <p num="41">
      The illustrated arrangement enables the system 10 to automatically configure itself when the modules 12a, 12b, 12c and 12d are connected in the system 10 and powered up.
      <br/>
      This is accomplished by setting an identification number which corresponds to the node number into each of the modules 12a, 12b, 12c and 12d using the selector or DIP switch 60.
      <br/>
      More specifically, the switch elements in the DIP switch 60 are set to correspond to the binary value of the node number.
      <br/>
      In the exemplary case of 31 nodes and corresponding databases, the DIP switch 60 will have at least five switch elements, each corresponding to a respective binary digit or power of two.
    </p>
    <p num="42">
      When the module 12a is powered up, the control program senses the DIP switch 60 to determine the binary identification number constituted by the positions of the individual switch elements.
      <br/>
      The program uses the identification number as an offset into the database index 82 illustrated in FIG. 5, which maps identification numbers to the individual databases 84.
      <br/>
      For example, if the identification number is 00011 (decimal 3), the control program will access the database index 82 with the base number of the index 82 in the EEPROM 52 plus the offset 00011.
      <br/>
      The value found at this address in the index 82 will be the number of the configuration database in the EEPROM 52 to be used by the module 12a.
    </p>
    <p num="43">
      The module 12a will then operate using the database which was selected as described above.
      <br/>
      In this manner, the module 12a automatically configures itself with the proper database upon power-up in accordance with the identification number which was input using the DIP switch 60.
      <br/>
      This enables any module 12a, 12b, 12c and 12d to assume the functionality of any node in the system 10 merely by inputting the appropriate node number using the DIP switch 60.
    </p>
    <p num="44">
      The configuration databases 84, together with the database index 82 can be directly programmed into the external EEPROM 52 at the time of manufacture of the module 12a.
      <br/>
      The preferred practice is to download the databases and index by way of the file transfer mechanism embodied the modules 12a's node object 62, using the gateway 30 and computer 32.
      <br/>
      It is further within the scope of the invention to download this data on-site after the system has been physically installed.
    </p>
    <p num="45">
      If the databases are to be downloaded into the EEPROM 52 using the file transfer protocol, the EEPROM 52 will not initially have a database therein to bind the module 12a to the gateway 30.
      <br/>
      For this reason, a default configuration database set 86 is stored in, for example, the EPROM 58 as illustrated in FIG. 3.
      <br/>
      If the control program detects that the databases 84 are not present, it operates using the default database 86 and thereby has an initial configuration that will enable file transfer and downloading of the databases 84.
    </p>
    <p num="46">
      Although it is within the scope of the invention for the processor 40 to access the selected database directly from the EEPROM 52, use of the Neuron chip dictates that the selected database be copied from the external EEPROM 52 into the internal EEPROM 46 of the processor unit 40 and access the database in the EEPROM 46.
      <br/>
      The control program's node object 62 performs this operation upon power-up and detection of the identification number.
    </p>
    <p num="47">
      As illustrated in FIG. 6, the selected database, comprising a domain table 72, address table 74, network variable table 76 and configuration parameter table 78 are stored in the EEPROM 46.
      <br/>
      Further stored is a dip switch setting 90 which is the identification number set in the DIP switch 60 the last time the module 12a was powered up.
    </p>
    <p num="48">
      The control program is able to determine if the databases 84 are present by examining the dip switch setting 90.
      <br/>
      This will have a certain value set in at the time of manufacture of the module 12a if the databases are not present.
      <br/>
      In this case, the control program will load and use the default database 86.
    </p>
    <p num="49">
      Although the default database 86 has been described and illustrated as being stored in the EPROM 58, the invention is not so limited.
      <br/>
      The default database can alternatively be stored in the internal EEPROM 46, the external EEPROM 52, or any other suitable memory location.
      <br/>
      It is further within the scope of the invention and actually embodied in the FluidTalk system to provide several default databases, which allows for multiple default operating modes.
    </p>
    <p num="50">
      In summary, the present invention overcomes the shortcomings of conventional distributed control systems as described above.
      <br/>
      Despite the advantages of distributed control systems, they are often impractical for OEM applications, being too difficult to manage either at the system database level for systems which must be installed with a management tool, or at the inventory control level for pre-configured systems.
      <br/>
      By maintaining multiple system databases at each controller which can be easily selected at installation time, the advantages of both pre-configured systems and management tool installed systems are afforded to the OEM.
    </p>
    <p num="51">Various modifications will become possible for those skilled in the art after receiving the teachings of the present disclosure without departing from the scope thereof.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A distributed digital control system, comprising:</claim-text>
      <claim-text>a plurality of control modules;</claim-text>
      <claim-text>and a communication link interconnecting the modules; in which each module includes:</claim-text>
      <claim-text>- a digital processor unit; - memory for storing a digital control program which is executed by the processor unit for controlling the module, and a plurality of module databases corresponding to identification numbers respectively;</claim-text>
      <claim-text>and - a selector for inputting an identification address number; the program being configured to control the module using a database corresponding to the identification number input by the selector.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A system as in claim 1, in which, in each module, the program is configured to sense the selector and select the database corresponding to the identification number input by the selector when the module is powered up.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A system as in claim 2, in which the selector comprises a switch.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A system as in claim 2, in which: the processor unit in each module comprises an internal memory;</claim-text>
      <claim-text>and the program is configured to copy the database corresponding to the identification number input by the selector from said memory into the internal memory when the module is powered up.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A system as in claim 1, in which, in each module, the program is configured to, if said plurality of databases is not stored in said memory, control the module using a default database.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A system as in claim 5, in which the default database is stored in said memory.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A system as in claim 5, in which: the processor unit comprises an internal memory;</claim-text>
      <claim-text>and the default database is stored in the internal memory.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A system as in claim 1, in which: at least one of the modules has a sensor input;</claim-text>
      <claim-text>and the system further comprises a sensor having an output connected to the sensor input.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A system as in claim 1, in which: at least one of the modules has a control output;</claim-text>
      <claim-text>and the system further comprises an actuator having an input connected to the control output.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A system as in claim 1, in which the programs in the modules are configured to operate autonomously and communicate with each other.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A system as in claim 1, in which the program in one of the modules is configured to coordinate operation and intercommunication of all of the modules.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A system as in claim 1, further comprising a server which is connected to the communication link for coordinating operation and communication with the modules.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A system as in claim 1, in which the identification numbers comprise system node numbers respectively.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A control module for a distributed digital control system, comprising: a digital processor unit; memory for storing a digital control program which is executed by the processor unit for controlling the module, and a plurality of module databases corresponding to identification numbers respectively;</claim-text>
      <claim-text>and a selector for inputting an identification number; the program being configured to control the module using a database corresponding to the identification number input by the selector.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A control module as in claim 14, in which the program is configured to sense the selector and select the database corresponding to the identification number input by the selector when the module is powered up.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A control module as in claim 15, in which the selector comprises a switch.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. A control module as in claim 15, in which: the processor unit comprises an internal memory;</claim-text>
      <claim-text>and the program is configured to copy the database corresponding to the identification number input by the selector from said memory into the internal memory when the module is powered up.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. A control module as in claim 14, in which the program is configured to, if said plurality of databases is not stored in said memory, control the module using a default database.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A control module as in claim 18, in which the default database is stored in said memory.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. A control module as in claim 18, in which: the processor unit comprises an internal memory;</claim-text>
      <claim-text>and the default database is stored in the internal memory.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A control module as in claim 14, in which the module has a sensor input.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A control module as in claim 14, in which the module has a control output.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. A control module as in claim 14, in which the program is configured to operate autonomously.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A control module as in claim 14, in which the program is configured to be coordinated by input signals.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. A control module as in claim 14, in which the identification number comprises a system node number.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. A method of incorporating a control module into a digital control system, comprising the steps of: (a) providing a control module which includes: - a digital processor unit; - memory;</claim-text>
      <claim-text>and - a selector for inputting an identification number; (b) storing a plurality of module databases in said memory, the databases corresponding to identification numbers respectively; (c) storing a digital control program in said memory for execution by the processor unit to control the module, the program being configured to control the module using a database corresponding to an identification number input by the selector; (d) using the selector to input an identification number;</claim-text>
      <claim-text>and (e) operatively installing the module in the control system.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. A method as in claim 26, in which: step (c) comprises storing the program as being configured to sense the selector and select the database corresponding to the identification number input by the selector when the module is powered up;</claim-text>
      <claim-text>and step (e) comprises powering up the module.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. A method as in claim 27, in which step (a) comprises providing the module such that the selector includes a switch.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. A method as in claim 27, in which: step (a) comprises providing the processor unit as including an internal memory; step (c) comprises storing the program as being configured to copy the database corresponding to the identification number input by the selector from said memory into the internal memory when the module is powered up;</claim-text>
      <claim-text>and step (e) comprises powering up the module.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. A method as in claim 26, in which step (c) comprises storing the program as being configured to, if said plurality of databases is not stored in said memory, control the module using a default database.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. A method as in claim 30, further comprising the step, performed prior to step (e), of: (f) storing the default database in said memory.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. A method as in claim 30, in which: step (a) comprises providing the module such that the processor unit comprises an internal memory;</claim-text>
      <claim-text>and the method further comprises the step, performed prior to step (e), of: - (f) storing the default database in the internal memory.</claim-text>
    </claim>
  </claims>
</questel-patent-document>