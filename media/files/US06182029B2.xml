<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182029B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182029</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182029</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="23459192" extended-family-id="58676973">
      <document-id>
        <country>US</country>
        <doc-number>09370329</doc-number>
        <kind>A</kind>
        <date>19990806</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09370329</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>1248186</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>37032999</doc-number>
        <kind>A</kind>
        <date>19990806</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09370329</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>73888996</doc-number>
        <kind>A</kind>
        <date>19961028</date>
        <priority-linkage-type>2</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1996US-08738889</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/27        20060101A I20060722RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>27</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20060722</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  17/30        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F  17/28        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>28</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06Q  50/00        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>50</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>704009000</text>
        <class>704</class>
        <subclass>009000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>715236000</text>
        <class>715</class>
        <subclass>236000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-017/27A2</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27A2</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-017/27A</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27A</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G06F-017/27G</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27G</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>G06F-017/27R</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27R</subgroup>
      </classification-ecla>
      <classification-ecla sequence="5">
        <text>G06F-017/27R4</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27R4</subgroup>
      </classification-ecla>
      <classification-ecla sequence="6">
        <text>G06F-017/27S2</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>27S2</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/271</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>271</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/2705</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>2705</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/274</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>274</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/2765</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>2765</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/2775</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>2775</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/279</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>279</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>39</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>9</number-of-figures>
      <image-key data-format="questel">US6182029</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">System and method for language extraction and encoding utilizing the parsing of text data in accordance with domain parameters</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BOGURAEV BRANIMIR K</text>
          <document-id>
            <country>US</country>
            <doc-number>5799268</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5799268</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>ANAND TEJWANSH S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5832496</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5832496</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>CHIPMAN RICHARD R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6038668</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6038668</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>FRIEDMAN CAROL</text>
          <document-id>
            <country>US</country>
            <doc-number>6055494</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6055494</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>PAIK WOOJIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6076088</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6076088</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Friedman, et al., "Natural Language Processing in an Operational Clinical Information System", Natural Language Engingeering, vol. 1(1), pp. 83-108, May 1995.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>G. Hripcsak, C. Friedman, P. Alderson, W. DuMouchel, S. Johnson, P. Clayton, "Unlocking Clinical Data From Narrative Reports," Ann. of Int. Med., vol. 122(9), pp. 681-688 (1995).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="3">
          <text>P. Haug, D. Ranum, P. Frederick, "Computerized Extraction of Coded Findings from Free-Text Radiologic Report," Radiology, vol. 174, pp. 543-548 (1990).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="4">
          <text>P. Zweigenbaum, B. Bachimont, J. Bouaud, J. Charlet and J. A. Boisvieux, "A Multi-lingual Architecture for Building a Normalized Conceptual Representation from Medical Language," Proceedings of the 19th Annual SCAMC; pp. 357-361 (1995).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="5">
          <text>R. Baud, A. Rassinoux, J. Scherrer, "Natural Language Processing and Semantical Representation of Medical Texts," Meth. of Info. Med., vol. 31(2), pp. 117-125 (1993).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="6">
          <text>L. Lenert and M. Tovar, "Automated Linkage of Free-Text Descriptions of Patients with a Practice Guideline," Proceedings of the 17th Annual SCAMC, pp. 274-278 (Ozbolt ed. 1993).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="7">
          <text>M. Gundersen, P. Haug, T. Pryor, R. van Bree, S. Koehler, K. Bauer, B. Clemons, "Development and Evaluation of a Computerized Admission Diagnoses Encoding System," Computers and Biomedical Research, vol. 29, pp. 351-372 (1996).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="8">
          <text>C. Lovis, J. Gaspoz, R. Baud, P. Michel and J. Scherrer, "Natural Language Processing and Clinical Support to Improve the Quality of Reimbursement Claim Databases," Proceedings of the 1996 AMIA Fall Annual Symposium, p. 899 (Henley &amp; Belfus 1996).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="9">
          <text>N. Sager et al., "Medical Language Processing With SGML Display," Proceedings of the 1996 AMIA Fall Annual Symposium, pp. 547-551 (1996).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="10">
          <text>P. Zweigenbaum et al., "From Text to Knowledge: A Unifying Document-Oriented View of Analyzed Medical Language," Workshop on Medical Concept Representation and Natural Language Processing, IMIA WG6, pp. 21-29 (1997).</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="11">
          <text>R. Dolin et al., "SGML as a Message Interchange Format in Healthcare," Proceeding of the 1997 Fall AMIA Annual Symposium, pp. 635-639 (1997).</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation-in-part>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>73888996</doc-number>
              <kind>A</kind>
              <date>19961028</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>6055494</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation-in-part>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>The Trustees of Columbia University in the City of New York</orgname>
            <address>
              <address-1>New York, NY, US</address-1>
              <city>New York</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>COLUMBIA UNIVERSITY</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Friedman, Carol</name>
            <address>
              <address-1>Larchmont, NY, US</address-1>
              <city>Larchmont</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Baker Botts LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Thomas, Joseph</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A computerized method for extracting information from natural-language text data includes parsing the text data to determine the grammatical structure of the text data and regularizing the parsed text data to form structured word terms.
      <br/>
      The parsing step, which can be performed in one or more parsing modes, includes the step of referring to a domain parameter having a value indicative of a domain from which the text data originated, wherein the domain parameter corresponds to one or more rules of grammar within a knowledge base related to the domain to be applied for parsing the text data.
      <br/>
      Preferably, the structured output is mapped back to the words in the original sentences of the text data input using XML tags.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>SPECIFICATION</heading>
    <p num="1">
      This application is a continuation-in-part of U.S. application Ser.
      <br/>
      No. 08/738,889 filed Oct. 28, 1996, now U.S. Pat. No. 6,055,494 which is incorporated herein by reference.
    </p>
    <heading>STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH</heading>
    <p num="2">
      The invention described herein and claimed was funded in part by a grant from the National Library of Medicine, namely, Grant -'s LM06274 and LM05627.
      <br/>
      The United States Government may have certain rights to the invention.
    </p>
    <heading>STATEMENT REGARDING MATERIAL SUBJECT TO COPYRIGHT</heading>
    <p num="3">
      A portion of the disclosure of this patent document contains material which is subject to copyright protection.
      <br/>
      The copyright owner has no objection to the facsimile reproduction by anyone of any portion of the patent document, as it appears in any patent granted from the present application or in the Patent and Trademark Office file or records available to the public, but otherwise reserves all copyright rights whatsoever.
    </p>
    <p num="4">A microfiche appendix containing source code utilized in practicing an exemplary embodiment of the invention is included as part of the Specification and is hereinafter referred to as Appendix A. Appendix A includes a total of 5 microfiche and a total of 465 frames.</p>
    <p num="5">1. Field of the Invention</p>
    <p num="6">
      This invention relates to the computerized processing of natural-language phrases used in specialized areas of expertise such as medicine, clinical sciences, genomics, etc.
      <br/>
      More particularly, the present invention is related to the extraction and encoding of information from natural-language text sources such as physician reports and technical and scientific literature.
    </p>
    <p num="7">2. Background of the Invention</p>
    <p num="8">
      Conventional automated methods and systems, in particular in the area of clinical medicine, have been developed for producing standardized, encoded representations of extracted "natural-language" textual data.
      <br/>
      Such systems are useful for extracting clinical information from examination reports, medical histories, progress notes, and discharge summaries.
      <br/>
      Further, specialized techniques have been developed for use with different types of pathology, radiology and surgery reports.
    </p>
    <p num="9">
      Although textual patient documents often provide valuable clinical data, most conventional systems provide textual information that cannot be reliably accessed by automated applications.
      <br/>
      To enable access to the information, however, medical language processing (MLP) systems have been developed that extract and structure information in patient reports in order to organize and encode the pertinent information appropriately for subsequent clinical applications.
      <br/>
      See, e.g., N. Sager, M. Lyman, C. Buchnall, N. Nhan and L. Tick, "Natural Language Processing and the Representation of Clinical Data," JAMIA, vol. 1 (2), pp. 142-160 (1994); C. Friedman, P. O. Alderson, J. Austin, J. J. Cimino and S. B. Johnson, "A General Natural Language Text Processor for Clinical Radiology," JAMIA, vol. 1 (2), pp. 161-174 (1994); G. Hripcsak, C. Friedman, P. Alderson, W. DuMouchel, S. Johnson, P. Clayton, "Unlocking Clinical Data From Narrative Reports," Ann. of Int. Med., vol. 122 (9), pp. 681-688 (1995); P. Haug, D. Ranum, P. Frederick, "Computerized Extraction of Coded Findings from Free-Text Radiologic Report," Radiology, vol. 174, pp. 543-548 (1990); P. Zweigenbaum, B. Bachimont, J. Bouaud, J. Charlet and J. A. Boisvieux, "A Multi-lingual Architecture for Building a Normalized Conceptual Representation from Medical Language," Proceedings of the 19th Annual SCAMC; pp. 357-361 (1995); R. Baud, A. Rassinoux, J. Scherrer, "Natural Language Processing and Semantical Representation of Medical Texts," Meth. of Info. Med., vol. 31 (2), pp. 117-125 (1993); and L. Lenert and M. Tovar, "Automated Linkage of Free-Text Descriptions of Patients with a Practice Guideline," Proceedings of the 17th Annual SCAMC, pp. 274-278 (Ozbolt ed. 1993).
    </p>
    <p num="10">Of particular further interest is a general approach which is based on concepts and techniques described in the following papers: C. Friedman et al., "A Conceptual Model for Clinical Radiology Reports," In: C. Safran, ed., Seventeenth Symposium for Computer Applications in Medical Care, New York, McGraw-Hill, March 1994, pp. 829-833; C. Friedman et al., "A General Natural-Language Text Processor for Clinical Radiology," Journal of the American Medical Informatics Association, Vol. 1 (April 1994), pp. 161-174; C. Friedman et al., "A Schema for Representing Medical Language Applied to Clinical Radiology," Journal of the American Medical Informatics Association, Vol. 1 (June 1994), pp. 233-248; C. Friedman et al., "Natural Language Processing in an Operational Clinical Information System," Natural Language Engineering, Vol. 1 (March 1995), pp. 83-106.</p>
    <p num="11">
      Despite the advancement of medical and natural language processing systems, conventional systems remain limited to specific areas of expertise (i.e., domains) and can only be used on a limited number of dedicated computing platforms.
      <br/>
      Examples of such conventional systems include those used for decision support and quality assurance tasks.
      <br/>
      See, e.g., N. Sager, M. Lyman, C. Buchnall, N. Nhan and L. Tick, "Natural Language Processing and the Representation of Clinical Data," JAMIA, vol. 1 (2), pp. 142-160 (1994); G. Hripcsak, C. Friedman, P. Alderson, W. DuMouchel, S. Johnson, P. Clayton, "Unlocking Clinical Data From Narrative Reports," Ann. of Int. Med., vol. 122 (9), pp. 681-688 (1995); P. Haug, D. Ranum, P. Frederick, "Computerized Extraction of Coded Findings from Free-Text Radiologic Report," Radiology, vol. 174, pp. 543-548 (1990); and L. Lenert and M. Tovar, "Automated Linkage of Free-text Descriptions of Patients with a Practice Guideline," Proceedings of the 17th Annual SCAMC, pp. 274-278 (Ozbolt ed. 1993).
      <br/>
      Other systems automatically generate ICD codes from text to assist in generating billing codes.
      <br/>
      See, e.g., M. Gundersen, P. Haug, T. Pryor, R. van Bree, S. Koehler, K. Bauer, B. Clemons, "Development and Evaluation of a Computerized Admission Diagnoses Encoding System," Computers and Biomedical Research, vol. 29, pp. 351-372 (1996); and C. Lovis, J. Gaspoz, R. Baud, P. Michel and J. Scherrer, "Natural Language Processing and Clinical Support to Improve the Quality of Reimbursement Claim Databases," Proceedings of the 1996 AMIA Fall Annual Symposium, p. 899 (Henley &amp; Belfus 1996).
      <br/>
      Although output generated by these systems are structured so that it may be used by different automated applications, conventional systems remain unable to map the structured output directly to corresponding text in the original report.
      <br/>
      Other systems use comprehensive syntactic and semantic knowledge, and include knowledge about the structure of complete sentences.
    </p>
    <p num="12">
      Still other systems rely more heavily on semantic and local phrasal information.
      <br/>
      RECIT, for example, uses syntactical information to recognize the structure of local phrases and interleaves phrase recognition with semantic knowledge in order to assemble semantically relevant groupings and representations.
      <br/>
      See Zweigenbaum et al., "A Multi-Lingual Architecture for Building a Normalized Conceptual Representation from Medical Language," Proceedings of the 19th Annual SCAMC, pp. 357-361 (1995).
      <br/>
      SPRUS, which was initially purely semantically driven, uses semantic information relating to words in a sentence along with expectations about findings, locations and conditions associated with the words.
      <br/>
      See, e.g., G. Hripcsak et al., Unlocking Clinical Data from Narrative Reports," Ann. of Int. Med., vol. 122 (9), pp. 681-688 (1995); N. Sager et al., "Medical Language Processing With SGML Display," Proceedings of the 1996 AMIA Fall Annual Symposium, pp. 547-551 (1996).
      <br/>
      More recent versions of SPRUS have integrated some syntax into the processing.
      <br/>
      Other MLP systems use methods that are based on pattern matching and keyword searching.
    </p>
    <p num="13">
      Other conventional systems enrich patient reports by using predefined tags for the purpose of facilitating highlighting, manual review and limited automated retrieval of information.
      <br/>
      See, e.g., N. Sager et al., "Medical Language Processing With SGML Display," Proceedings of the 1996 AMIA Fall Annual Symposium, pp. 547-551 (1996); P. Zweigenbaum et al., "From Text to Knowledge: A Unifying Document-Oriented View of Analyzed Medical Language," Workshop on Medical Concept Representation and Natural Language Processing," IMIA WG6, pp. 21-29 (1997).
      <br/>
      The problem with these approaches, however, is that automated retrieval of documents containing the desired information cannot be performed with sufficient accuracy.
      <br/>
      For example, if all documents containing a tag for "cardiomegaly" were retrieved, many reports would be obtained which correspond to the negation of cardiomegaly, as in "cardiomegaly was not observed."
    </p>
    <p num="14">A number of medical language processing systems have been developed that structure and/or encode information occurring in textual clinical reports so that the information can be used for automated decision support and for facilitating document manipulation and viewing by the user.</p>
    <p num="15">
      In the healthcare field, for example, there have been a number of articles that report on the use of SGML and XML to tag medical documents.
      <br/>
      See, e.g., R. Dolin et al., "SGML as a Message Interchange Format in Healthcare," Proceeding of the 1997 Fall AMIA Annual Symposium, pp. 635-639 (1997).
      <br/>
      A special interest group, HL7-SGML/XML, has been formed to further promote the use of SGML and XML in the electronic patient records.
      <br/>
      See HL7 SGML/XML Special Interest Group web site at http://www.mcis.duke.edu/standards/HL7/committees/sgml/. In particular, the group's effort involves specifications for embedding XML within the HL7 structure and for developing a model of medical documents to facilitate exchange of documents between users.
      <br/>
      See The HL7 Document Patient Record Architecture, http://www.mcis.duke.edu/standards/HL7/committee/sgml/WhitePapers/Prap.
      <br/>
      Another goal is to enable automated applications to process the documents after the document exchange has been made.
    </p>
    <p num="16">
      Within the medical language processing community, so-called "document-centered" approaches have been described to tag medical documents.
      <br/>
      Sager, for example, first described the utility of augmenting textual patient reports using SGML by means of MLP in order to provide tools to facilitate document handling for health care workers.
      <br/>
      See N. Sager et al., "Medical Language Processing with SGML Display," Proceedings of the 1996 AMIA Fall Annual Symposium, pp. 547-551 (1996).
      <br/>
      One relatively simple task would be to tag the words and phrases of the text according to semantic and syntactic categories, and another would be to tag the report according to sections and paragraphs.
      <br/>
      Sager also proposed the use of a more complex tagging schema, such as tagging occurrences of diagnoses, that could be later be used to retrieve pertinent clinical information.
    </p>
    <p num="17">
      Zweigenbaum also proposed the adoption of an "enriched-document" paradigm based on SGML and natural language processing to further the dissemination of applications that utilize natural language processing methodology.
      <br/>
      See P. Zweigenbaum et al., "From Text to Knowledge: a Unifying Document-oriented View of Analyzed Medical Language," Workshop on Medical Concept Representation and Natural Language Processing," IMIA WG6, pp. 21-29 (1997).
      <br/>
      A number of benefits of using a document-oriented model were discussed including the ability to use annotated text as a valuable resource to further the development of language processing systems.
      <br/>
      Zweigenbaum also proposed embedding a conceptual graphical representation into each sentence of a document.
    </p>
    <p num="18">
      A major disadvantage however of the document-centered approaches disclosed by Sager and Zweigenbaum is that accurate access of the information is elusive because the tagging schemas are extensively intertwined with the text and dependent on word order, which is extremely varied and unpredictable.
      <br/>
      Conventional document-centric techniques are thus not well-suited for searching purposes due to dependencies on the ordering of the phrases within the text.
      <br/>
      These techniques are also inadequate in that the structured XML forms include references to portions of the original text that ultimately limit the amount of information available to the user.
    </p>
    <p num="19">Thus, a need exists to provide medical and natural language processing techniques that provide structured data output that can be used for a variety of different applications across a variety of different computing platforms.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="20">
      The aforedescribed limitations and inadequacies of conventional language extraction methods are substantially overcome by the present invention, in which a primary object is to provide a natural language processing system for extracting information from a natural language document input that can be easily adapted for use in a variety of areas of expertise by modifying, if necessary, one or more corresponding knowledge components.
      <br/>
      For example, by using different lexicons and/or grammar knowledge bases, the natural language processing system of the present invention can be used for extracting medical/clinical data from physician reports and genomics-related information from electronic text sources.
    </p>
    <p num="21">
      It is another object of the present invention to provide a natural language processing system that extracts relevant information from a document input and generates an enriched, structured output that enables reliable and efficient access to information found in the original document input.
      <br/>
      Such a capability is useful for retrieving and summarizing relevant information from a variety of document types, such as patient reports and technical publications, for a broad range of medical, clinical and scientific applications.
    </p>
    <p num="22">It is yet another object of the present invention to provide an automated method using natural language processing techniques for extracting information from a document input.</p>
    <p num="23">It is still another object of the present invention to provide an automated method using natural language processing techniques for mapping textual data from an original document input into a structured output form.</p>
    <p num="24">
      A preferred method for extracting information from natural language data includes basic steps here designated as phrase parsing and regularizing and, optionally, code selection.
      <br/>
      Further included, preferably, is a step of pre-processing prior to phrase parsing, and a step of output filtering.
      <br/>
      A structured output can be generated in the form of a printout, as a monitor display, as a database entry, or via the Internet, for example.
      <br/>
      Preferably, the structured output is then mapped back to the words in the original sentences of the text data input.
    </p>
    <p num="25">
      In processing, one or several parameters are referred to.
      <br/>
      The parameters are associated with options.
      <br/>
      To choose an option, the appropriate value is assigned to the parameter.
      <br/>
      A parameter can have a value by default.
      <br/>
      Of particular importance is the inclusion of a parameter which is associated with the medical/clinical domain or sub-field of the input data.
      <br/>
      Other parameters may be associated with the level of parsing accuracy desired, whether code selection is desired, the type of filtering, or the format of the output.
    </p>
    <p num="26">
      The method can be expressed in a high-level computer language such as Prolog, for example, for execution as a system on a suitable general-purpose computer.
      <br/>
      In the following, the method and the system will be referred to by the acronym MedLEE, short for Medical Language Extraction and Encoding.
    </p>
    <p num="27">Further objects, features and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying figures showing illustrative embodiments of the invention.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="28">
      For a complete understanding of the present invention and the advantages thereof, reference is now made to the following description taken in conjunction with the accompanying drawings in which like reference numbers indicate like features and wherein:
      <br/>
      FIG. 1 is a block diagram of an information extraction system in accordance with a preferred embodiment of the present invention;
      <br/>
      FIG. 2 is a block diagram of a system or application having an interface for the MedLEE system of FIG. 1;
      <br/>
      FIG. 3 is a block diagram of an information extraction system in accordance with another preferred embodiment of the present invention;
      <br/>
      FIG. 4 is an example XML tagging scheme for address entry;
      <br/>
      FIG. 5 is an example document type definition (DTD) corresponding to the tagging scheme of FIG. 4);
      <br/>
      FIG. 6 is an example of a structured component in accordance with the information extraction system of FIG. 3;
      <br/>
      FIG. 7 is an example of a taggcd text component in accordance with the information extraction system of FIG. 3;
      <br/>
      FIG. 8 is another example of a structured component in accordance with the information extraction system of FIG. 3; and
      <br/>
      FIG. 9 is a sample output wherein information extracted from a document input is highlighted and viewable via a web browser in accordance with the information extraction system of FIG. 3.
    </p>
    <p num="29">A microfiche appendix attached hereto includes a printout of computer source code for the MedLEE computer program.</p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="30">
      FIG. 1 is a block diagram of an information extraction system in accordance with a preferred embodiment of the present invention.
      <br/>
      The information extraction system of FIG. 1, known as MedLEE, is designed for use as a general processor within the medical domain, e.g., radiography, mammography, neuroradiology, pathology, and electrocardiography, etc.
      <br/>
      Although used for language extraction in the medical/clincal context, MedLEE can be adapted for use in other domains such as genomics.
      <br/>
      An additional preferred embodiment of MedLEE is shown in FIG. 3, wherein the MedLEE embodiment is written in Quintus Prolog and uses the Unix or Windows operating systems, is described in detail below.
    </p>
    <p num="31">
      The Appendix below provides both "stand-alone" and "server" versions, ml_parser.pl and ml_server.pl, respectively, of the information extraction system of FIG.
      <br/>
      The stand-alone version ml_parser.pl is a top level control program that establishes input and output data streams, writes error messages to the user, and calls the main program radrec.pl. The server version ml_server.pl is similar to the stand-alone except that it is designed to begin processing upon receiving a request from a client server.
      <br/>
      In addition, Medleefunc.pl is a function that allows another process to compile the MedLEE program into a host system by using a function call.
    </p>
    <p num="32">
      A natural-language phrase included in text document is understood as a delimited string comprising natural-language terms or words.
      <br/>
      The string is computer-readable as obtained, e.g., from a pre-existing database, or from keyboard input, optical scanning of typed or handwritten text, or processed voice input.
      <br/>
      The delimiter may be a period, a semicolon, an end-of-message signal, a new-paragraph signal, or any other suitable symbol recognizable for this purpose.
      <br/>
      Within the phrase, the terms are separated by another delimiter, e.g., a blank or another suitable symbol.
    </p>
    <p num="33">
      As a result of phrase parsing, terms in a natural-language phrase are classified, e.g., as referring to a body part, a body location, a clinical condition or a degree of certainty of a clinical condition, and the relationships between the terms are established and represented in a standard form.
      <br/>
      For example, in the phrase "moderate cardiac enlargement", "moderate" is related to "enlargement" and cardiac is also related to "enlargement".
      <br/>
      Similarly, in a genomics-related example, where natural language phrases are classified as proteins, genes and actions, "protein X" and "gene Y" are related to the action "activate" in the term "X activates Y".
    </p>
    <p num="34">
      In the interest of versatility and applicability of the system to different domains or sub-domains, parsing can be domain or sub-domain specific in accordance with the value of a domain parameter used by the system.
      <br/>
      Depending on the value of the domain parameter, the appropriate rules can be referred to in parsing by the system.
    </p>
    <p num="35">While parsing may be based primarily on semantics or meaning, use of syntactic or grammatical information is not precluded.</p>
    <p num="36">
      Regularizing involves bringing together terms which may be discontiguous in a natural-language phrase but which belong together conceptually as a structured word term.
      <br/>
      Regular forms or composites ("compositional mappings") are obtained.
      <br/>
      Regularizing may involve reference to a separate knowledge base.
      <br/>
      For example, from each of the phrases "heart is enlarged", "enlarged heart", "heart shows enlargement" and "cardiac enlargement", a regularizer can generate "enlarged heart".
    </p>
    <p num="37">
      In code selection, which is optional, a common, unique vocabulary term or code is assigned to each regular term by reference to yet another knowledge base which may also be chosen domain specific.
      <br/>
      For example, in the domain of X-ray diagnostics, the term "cystic disease" has a different meaning as compared with the domain of mammography.
    </p>
    <p num="38">
      FIG. 1 shows a preprocessor module 11 by which natural-language input text is received.
      <br/>
      The preprocessor uses the lexicon knowledge base 101 and handles abbreviations, which may be domain dependent.
      <br/>
      The preprocessor 11 thus performs lexical lookup to identify and categorize multi-word and single word phases within each sentence.
      <br/>
      The output of this component consists of a list of word positions where each position is associated with a word or multi-word phrase in the report.
      <br/>
      For example, assuming that the sentence "spleen appears to be moderately enlarged" is at the beginning of the report, it would be represented as the list where position 1 is associated with "spleen", position 2 with the multi-word phrase "appears to be", position 5 with "moderately", and 6 with "enlarged".
      <br/>
      The remainder of the list of word positions would be associated with the remaining words in the report.
    </p>
    <p num="39">
      With the domain parameter properly set, the preprocessor refers to the proper knowledge base.
      <br/>
      For example, depending on the domain, the abbreviation "P.E." can be understood as physical examination or as pleural effusion.
      <br/>
      Also, the preprocessor determines phrase or sentence boundaries, and generates a list form for each phrase for further processing by the parser module 12.
    </p>
    <p num="40">
      The second component of the MedLEE system is the parser.
      <br/>
      It utilizes the grammar and categories assigned to the phrases of a sentence to recognize well-formed syntactic and semantic patterns in the sentence and to generate intermediate forms.
      <br/>
      The target form generated by the parser for the sample phrase "spleen is moderately enlarged" would be the frame: �problem,6,�bodyloc,1�,�degree,5�,�certainty,2��. In this form, the value of each frame is a number representing the position of the corresponding phrase in the report.
      <br/>
      In a subsequent stage of processing the number will be replaced by an output form that is the canonical output specified by the lexical entry of the word or phrase in that position and a reference to the position in the text.
      <br/>
      The parser proceeds by starting at the beginning of the sentence position list and following the grammar rules.
      <br/>
      When a semantic or syntactic category is reached in the grammar, the lexical item corresponding to the next available unmatched position is obtained and its corresponding lexical definition is checked to see whether or not it matches the grammar category.
      <br/>
      If it does match, the position is removed from the unmatched position list, and the parsing proceeds.
      <br/>
      If a match is not obtained, an alternative grammar rule is tried.
      <br/>
      If no analysis can be obtained, an error recovery procedure is followed so that a partial analysis is attempted.
    </p>
    <p num="41">
      The parser module 12 uses the lexicon 101, and a grammar module 102 to generate intermediate target forms.
      <br/>
      Thus, in addition to parsing of complete phrases, sub-phrase parsing can be used to advantage where highest accuracy is not required.
      <br/>
      In case a phrase cannot be parsed in its entirety, one or several attempts can be made to parse a portion of the phrase for obtaining useful information in spite of some possible loss of information.
      <br/>
      For example, in the phrase "spleen was enlarged after going to the movies", the words "spleen was enlarged" are processed and the remaining words are skipped.
    </p>
    <p num="42">
      The next component of the natural language processing system performs phrase regularization.
      <br/>
      It first replaces each position number with the canonical output form specified in the lexical definition of the phrase associated with its position in the report.
      <br/>
      It also adds a new modifier frame idref for each position number that is replaced.
      <br/>
      For example, the sample output form shown above would be changed to:
    </p>
    <p num="43">�problem,enlarged,�idref,6�,�bodyloc,spleen,�idref,1��,�degree,severe, �idref,5��, �certainty,appear,�idref,2���.</p>
    <p num="44">
      This stage also composes multi-word phrases, i.e., compositional mappings, which are separated in the documents.
      <br/>
      For example, in the sample sentence, the individual components of the multi-word term "enlarged spleen" are separated. "Spleen" and "enlarged" are composed during phrase regularization and mapped into the target form "enlarged spleen" so that the output at this stage would be:
      <br/>
      �problem,enlarged spleen,�idref,�6,1��,�bodyloc,spleen,�idref,1��, �degree,severe,�idref,3��,�certainty,appear,�idref,2���.
    </p>
    <p num="45">
      Notice that the value of idref for the frame problem is a list �6,1� rather than a single value because two words in the text report which are separated from each other constitute the components of the term enlarged spleen.
      <br/>
      Mapping knowledge bases maps.pl amd mmaps.pl are used by the regularizer 13.
      <br/>
      In accordance with a preferred embodiment of the present invention, maps.pl is a knowledge base of "standard", automatically generated compositional mappings and mmaps.pl is a knowledge base of manually generated compositional mappings.
    </p>
    <p num="46">With the parsed forms as input, and using mapping information 103, the phrase regularizer 13 composes regular terms as described above.</p>
    <p num="47">
      From the regularized phrases, the filter module 14 deletes information on the basis of parameter settings.
      <br/>
      For example, a parameter can be set to call for removal of negative findings.
      <br/>
      A preferred embodiment of the filter module 14 is shown by the removefromtarg routine of the radrec.pl file provided in the Appendix.
    </p>
    <p num="48">
      The next component performs the encoding.
      <br/>
      This consists of mapping the canonical forms into controlled vocabulary terms if applicable.
      <br/>
      In this example, we assume the controlled term for "enlarged spleen" is "splenomegaly", the controlled term for "moderate" is "moderate degree", and the controlled term for "appears" is "moderate certainty".
      <br/>
      The target form would be translated into:
      <br/>
      �problem,splenomegaly,�idref,�6,1��,�bodyloc,spleen,�idref,1��, �degree,`moderate degree`,�idref,3��, �certainty,`moderate certainty`,�idref,2���.
    </p>
    <p num="49">
      The encoder module 15 uses a table of codes 104 to translate the regularized forms into unique concepts which are compatible with a clinical controlled vocabulary.
      <br/>
      A preferred embodiment of the encoder module 15 is shown by the computecode routine of the newform.pl file provided in the Appendix.
    </p>
    <p num="50">
      The last component, tagger 16 of FIG. 3, is used to "tag" the original text data with a structured data component.
      <br/>
      In a system using an XML format, for example, the system of the present invention will generate the following output for the phrase "spleen is moderately enlarged" discussed above:
      <br/>
      &lt;problem v="splenomegaly" idref="p1 p6"&gt;&lt;bodyloc v="spleen" idref="p1"&gt;&lt;/bodyloc&gt;&lt;degree v="moderate degree"idref="p3"&gt;&lt;/degree&gt;&lt;certainty v="moderate certainty" idref="p2"&gt;&lt;/certainty&gt;&lt;/problem&gt;.
    </p>
    <p num="51">
      FIG. 2 shows an interface module 21, and the MedLEE program 22 of FIG. 1.
      <br/>
      The interface module 21 may be domain-specific, and it may serve, e.g., to separate formatted sections from non-formatted sections in a report.
      <br/>
      Also, the interface 21 may serve to pass chosen parameter values to the MedLEE system 22 and to pass output from the MedLEE system.
      <br/>
      For example, such an interface can be designed for communication over the World-Wide Web or a local network, for input to or output from MedLEE.
    </p>
    <p num="52">
      Conveniently, each module is software-implemented and stored in random-access memory of a suitable computer, e.g., a work-station computer.
      <br/>
      The software can be in the form of executable object code, obtained, e.g., by compiling from source code.
      <br/>
      Source code interpretation is not precluded.
      <br/>
      Source code can be in the form of sequence-controlled instructions as in Fortran, Pascal or "C", for example.
      <br/>
      Alternatively, a rule-based system can be used such a Prolog, where suitable sequencing is chosen by the system at run-time.
    </p>
    <p num="53">
      An illustrative portion of the MedLEE system is shown in the Appendix in the form of a Prolog source listing with comments.
      <br/>
      The following is further to the comments.
    </p>
    <p num="54">
      Process_sents with get_inputsents, process_sects and outputresults reads in an input stream, processes sections of the input stream according to parameter settings, and produces output according to the settings.
      <br/>
      Among parameters supplied to Process_sents are the following: Exam (specifying the sub-domain in a medical/clinical domain), Mode (specifying the parsing mode), Amount (specifying the type of filtering), Type (specifying the output format) and Protocol (html or plain).
      <br/>
      Process_sents is called by another predicate, after user-specified parameters have been processed.
    </p>
    <p num="55">
      The parsing modes are selected by MedLEE so as to parse a sentence or phrase structure using a grammar that includes one or more patterns of semantic and syntactic categories that are well-formed.
      <br/>
      For example, for the phrase "pain in arms and legs", a legitimate pattern can be finding in bodyloc1 conj bodyloc2, wherein finding="pain", bodyloc1="arms" and bodyloc2="legs".
      <br/>
      However, if parsing fails, error recovery block 17 utilizes various error recovery techniques in order to achieve at least a partial analysis of the phrase.
      <br/>
      These error recovery techniques include, for example, segmenting a sentence or phrase at pre-defined locations and processing the corresponding sentence portions or sub-phrases.
      <br/>
      Each recovery technique is likely to increase sensitivity but decrease specificity and precision.
      <br/>
      Sensitivity is the performance measure equal to the true positive information rate of the natural language system, i.e., the ratio of thc amount of information actually extracted by the natural language processing system to the amount of information that should have been extracted.
      <br/>
      Specificity is the performance measure equal to the true negative information rate of the system, i.e., the ratio of the amount of information not extracted to the amount of information that should not have been extracted.
      <br/>
      In processing a report, the most specific mode is attempted first, and successive less specific modes are used only if needed.
    </p>
    <p num="56">
      In accordance with the preferred embodiments of the present invention, the parser 12 of FIGS. 1 and 3 includes five parsing modes, Modes 1 through 5, for parsing sentences or phrases.
      <br/>
      Nominally, the parser 12 is configured to first select Mode 1 and then Modes 2 through 5 successively until parsing is completed.
      <br/>
      With Mode 1, the initial segment is the entire sentence and all words in the segment must be defined.
      <br/>
      This mode requires a well-formed pattern for the complete segment.
    </p>
    <p num="57">
      Mode 2 requires that the sentence or phrase be segmented at certain types of words or phrases, e.g.,". . . consistent with . . . ". Here, an attempt is made to recognize each segment independently, i.e., a first segment ending before the word "consistent" and a second segment beginning at the word "consistent".
      <br/>
      The segmenting process is repeated until an analysis of each segment is obtained or until segmenting is no longer possible.
      <br/>
      Segment.pl and segmentandparse in radpardb.pl provided in the Appendix specify phrases where a sentence may be segmented.
    </p>
    <p num="58">
      Mode 3 requires a well-formed pattern for the "largest" prefix of the segment, i.e., usually a prefix occurring in the beginning of a sentence.
      <br/>
      Thus, Mode 3 is useful when a sentence contains a pattern at the end which is not included in the grammar but a beginning portion that is included.
      <br/>
      For example, in the phrase "severe pain in arm developed on the fifth floor", the beginning of the phrase "on the fifth floor" will be skipped and "severe pain in arm developed" will be parsed.
    </p>
    <p num="59">
      Mode 4 requires that undefined words be skipped and an analysis be attempted in accordance with mode 1.
      <br/>
      Mode 4 processing is useful where there are typographical errors and unknown words.
      <br/>
      For example, in the phrase "a lxgre suspicious calcification was seen" the term "lrgx" will be skipped but the remainder of the phrase will be parsed.
    </p>
    <p num="60">
      Mode 5 first requires that the first word or phrase in the segment associated with a primary finding, e.g., "infiltrate", "mastectomy", "penicillin", etc.) be found.
      <br/>
      Next, an attempt is made to recognize the phrase starting with the leftmost recognizable modifier.
      <br/>
      For example, "in during severe pain in arm up to the fifth floor", the phrase "severe pain in arm" will be parsed and the remaining words will be skipped.
      <br/>
      If no analysis is found, recognition is retried at the next modifier to the right.
      <br/>
      This process continues until an analysis is found.
      <br/>
      A modification of this process exists if the leftmost modifier is a negation, because negative terms should not be skipped.
      <br/>
      For example, in the phrase "no abc pain in arm up to the fifth floor", the phrase "no pain in arm" will be parsed and the remaining words will be skipped.
      <br/>
      Analysis of the remaining portion of the segment uses the same process.
    </p>
    <p num="61">Process_sects with get_section and parse_sentences gets each section and generates intermediate output for the sentences in each section.</p>
    <p num="62">Outputresults with removefromtarg, write, writelines, markupsents and outputh17 filters output if appropriate, produces output in the appropriate format and optionally including formats tags for selected words of the original sentence, and produces error messages and an end-of-output message.</p>
    <p num="63">Setargs sets arguments or parameter values based on user input or by default.</p>
    <p num="64">
      Removefromtarg filters formatted output by leaving only positive clinical information and by removing negative findings and possibly findings associated with past information from the formatted output.
      <br/>
      If an input parameter is pos, only negative findings are removed; if the parameter is pac, both negative and positive findings are removed.
      <br/>
      Any number of different filters can be included as required.
      <br/>
      Write_structured generates the structured component of the output depending on the output format specified by the user.
    </p>
    <p num="65">
      Writelines produces one line per finding in list format, whereas writenested generates all findings at once.
      <br/>
      Writeindentform and writeindentform2 produce output in indented form.
      <br/>
      Writesgmlfroms generates output in XML form, and writetabular generates output in tabular form.
    </p>
    <p num="66">
      The routine markupsents envelopes the original sentence with tags so that the clinical information is highlighted.
      <br/>
      The markup_text routine is used to add identifier tags to the original text.
      <br/>
      Different types of information can be highlighted in different colors by using an appropriate Internet browser program such as NETSCAPE, for example.
    </p>
    <p num="67">
      The outputh17 routine is used to convert the MedLEE output to an appropriate form for storage in database (xformtodb) and to write the MedLEE output in an HL7 in coded format.
      <br/>
      This process uses synonym knowledge and an encoding knowledge base.
    </p>
    <p num="68">
      The output generated by the MedLEE program is a frame-based representation wherein each frame specifies the informational type, value, and modifier slots (which are also frames).
      <br/>
      See C. Friedman, J. Starren, S. Johnson, "Architectural Requirements For a Multipurpose Natural Language Processor in The Clinical Environment," Proceedings of SCAMC, pp. 347-351 (1995).
      <br/>
      Consider the text data input "moderately enlarged spleen".
      <br/>
      A corresponding intermediate output, as shown below, is a frame denoting a problem, which has the value enlarged; in addition, there are degree and body location modifiers with the values moderate and spleen respectively:
      <br/>
      �problem,enlarged,�degree,moderate�,�bodyloc,spleen��
    </p>
    <p num="69">
      The intermediate output undergoes several mappings before the corresponding structured word term (structured output) is created.
      <br/>
      Compositional mapping, for example, is required in order to compose components of multi-word phrases that are separated in the original text; another type of mapping is necessary to translate target terms into controlled vocabulary concepts.
      <br/>
      A final mapping is generally performed in order to translate the frame format to the final structured output format of the MedLEE program.
    </p>
    <p num="70">
      FIG. 3 shows a block diagram of a second embodiment of the information extraction (MedLEE) program of FIG. 1.
      <br/>
      The modified program 300 includes a tagger routine 16 for linking the structured output described previously with respect to FIG. 1 to the corresponding words in the original sentences of the text data input.
      <br/>
      Preferably, the tagger 16 utilizes markup languages, such as Hypertext Markup Language (HTML) and Extensible Markup Language (XML), which are derived from Standard Generalized Markup Language (SGML) and which are used rendering documents for the World Wide Web.
      <br/>
      Widespread adoption of markup languages are evidenced by: the Text Encoding Initiative (TEI) which uses SGML to encode literature; Chemical Markup Language (CML), which involves documentation of chemical compounds using SGML; and Open Financial Exchange (OFE), which is an SGML standard format for interchange of financial transactions.
    </p>
    <p num="71">
      In accordance with the preferred embodiment of FIG. 3, the tagging schema disclosed herein integrates content-centric and document-centric approaches in that salient clinical information is represented in a structured XML form that contains references to identifiers in the unstructured report where the original words and phrases are assigned unique identifiers.
      <br/>
      This design is optimal both for searching because it is not dependent on the ordering of the phrases within the text, and for rendering text to users because the structured XML form contains references to appropriate portions of the original text.
    </p>
    <p num="72">
      XML is a subset of SGML that is computationally less complex than SGML, and therefore simpler and more efficient to process.
      <br/>
      XML is a language that provides the ability to augment additional elements of information, i.e., tags, to textual documents so as to provide documents that have machine independent.
      <br/>
      Documents with such formats can be easily manipulated across a variety of different computing platforms, and are structured using varying levels of complexity, i.e., sections, paragraphs, sentences, phrases, etc.
    </p>
    <p num="73">
      FIG. 4 below is an example of a document which represents an address using XML tags.
      <br/>
      As shown in FIG. 4, the street, city, state and zipcode tags are nested within an address tag, and the number and street_name tags are nested within the street tag.
      <br/>
      Having an address in this form provides a way to manipulate documents with address tags in different ways.
      <br/>
      For example, documents with a specified zip code and street name can be retrieved easily by searching for the text enclosed by the zipcode and street_name tags.
    </p>
    <p num="74">
      The structure of XML documents is specified using a DTD, which is a set of blueprints related to information about the organization of the document type and consists of specifications concerning the structure of the document.
      <br/>
      The DTD is used by an XML parser to ensure that a document is valid according to the DTD.
      <br/>
      The DTD further specifies positions, attributes, cardinality and values of the XML tags.
    </p>
    <p num="75">
      FIGS. 5-7 are examples of a document tagging schema in accordance with a preferred embodiment of the present invention.
      <br/>
      The document tagging schema uses a document structure based on Extensible Markup Language (XML), a subset of Standard Generalized Markup Language (SGML), designed for ease of implementation and interoperability with SGML and HTML standards used by most Internet web browsers.
      <br/>
      As described below, the schema embeds a tagged, structured and encoded representation of the informational content of an original document within an enriched version of the original document.
      <br/>
      With this schema, for example, radiologists can enrich reports by mapping textual findings of references to regions of a digitized image.
      <br/>
      Subsequently, users can retrieve and view reports having highlighted images corresponding to a specified query or positive finding.
      <br/>
      Additionally, since the form of the processed reports is XML, a standard format for textual documents, commercial off-the-shelf and publicly available software can be obtained to manipulate or further process the XML output.
    </p>
    <p num="76">
      FIG. 5 shows, by way of example and not limitation, a (simplified) document structure or document type definition (DTD) of a clinical report (medleeOut) generated by the MedLEE computer program of FIG. 3.
      <br/>
      DTD's can be further customized as required depending upon the specific report being generated.
    </p>
    <p num="77">
      The definitions of the elements (i.e., &lt;�ELEMENT . . . &gt;) delineate the structure of the tags, which are the components of the document.
      <br/>
      Cardinality is represented using "?" (denoting 0 or 1 element), "+" (1 or more elements), or "*" (0 or more elements).
      <br/>
      The names and types of values of the attributes of an element are specified using the statement &lt;�ATTLIST . . . &gt;.
    </p>
    <p num="78">
      The section element of the DTD includes two components: a structured component structured containing structured data, and a tagged textual element tt.
      <br/>
      The structured component provides a content-centric view of the report, and is essential for enabling reliable and efficient access to information in the document.
      <br/>
      The structured component also contains information that references corresponding textual portions of the report.
    </p>
    <p num="79">
      As further shown in FIG. 5, the structured component itself includes one or more components corresponding to a primary finding called problem or procedure.
      <br/>
      The component problem in turn contains one or more components corresponding to modifiers of the findings, for example, certainty, degree, status, change, bodyloc, region, sid, and idref.
      <br/>
      The modifier components are also defined in the DTD; those having no nested structures are defined using the keyword EMPTY, e.g., the definition of sid which specifies a sentence identifier.
    </p>
    <p num="80">
      The tags representing the primary findings and modifiers also have attributes.
      <br/>
      For example, problem has an attribute v which must be present (-REQUIRED) and which consists of character data (CDATA), and an attribute idref which is optional (-IMPLIED) and which includes one or more references (IDREFS) to other attributes in the document that are unique identifiers.
    </p>
    <p num="81">
      The tagged textual element tt is also specified in FIG. 5.
      <br/>
      It provides a document-centric view of the report because it consists of the original report enriched with tags that delineate and identify textual elements sent (marking sentences) and -PCDATA which is the original textual data.
      <br/>
      The component sent consists of textual data, phrases phr, or undefined words undef.
      <br/>
      The component phr has an attribute id whose value is a unique identifier within the report.
      <br/>
      The idref attributes of the elements of the structured components correspond to the id attributes of the phrases.
      <br/>
      Similarly the idref attributes of the sid elements of the structured components correspond to the id attributes of the sentences (sent).
    </p>
    <p num="82">
      FIG. 6 shows an example of a structured component utilized by MedLEE for "tagging" the following input from a "History of Present Illness" section of a physician report: "Intermittent pain in lower abdomen developed on Mar. 4, 1995. There was no swelling in extremities." The structured output includes two problem tags corresponding to the informational type problem.
      <br/>
      The first problem tag has the value "pain," itself having a reference to identifier p2 along with other modifiers, themselves also having their own values and identifiers.
      <br/>
      The second problem tag has the value "swelling" and reference identifier p13, the "swelling value itself having the modifiers certainty, body location (bodyloc) and sentence identifier (sid).
      <br/>
      The sentence identifier sid includes a section number, paragraph number within the section, and the sentence number within the paragraph.
    </p>
    <p num="83">
      The problem tag also has embedded tags which are modifiers.
      <br/>
      The bodyloc modifier has an attribute v whose value is "abdomen" and also an idref attribute.
      <br/>
      Tags that correspond to phrases in the original textual report have idref attributes.
      <br/>
      However some tags do not have an idref attribute because they do not correspond to a phrase in the original report but to contextual information added during parsing.
      <br/>
      For example parsemode specifies the method used to structure the information.
      <br/>
      The parse mode is a measure of accuracy of the output based on the mode used to interpret the sentence and obtain the structured form.
      <br/>
      Mode 1 is likely to be the most accurate interpretation whereas Mode 5 is likely to be the least accurate.
    </p>
    <p num="84">
      In the example shown in FIG. 6, the values of the v attribute are frequently the same as the corresponding words and phrases in the report.
      <br/>
      However as shown in FIG. 8, the value of the v attribute can be different from the corresponding phrase in the actual report because it corresponds to a controlled vocabulary term, e.g., "splenomegaly", which is different from the canonical textual form, e.g., "enlarged spleen".
    </p>
    <p num="85">
      FIG. 7 shows a tagged text element tt corresponding to the text data input described in connection with FIG. 6.
      <br/>
      As shown in FIG. 7, the tt component is the same as the original report except that it is enriched with tags that uniquely identify sentences and phrases.
      <br/>
      A tag sent notes the beginning of a new sentence and includes an attribute id whose value identifies the section number, paragraph number and sentence number of the sentence in the original report.
      <br/>
      This information is useful for certain applications.
      <br/>
      For example, discharge summaries in hospitals generally include a "History of Present Illness" section containing the chief complaint, and a "Hospital Course" section containing the discharge plan.
      <br/>
      Furthermore, sentences which are adjacent and in the same paragraph generally refer to the same body locations and time period, unless another body location or time period is explicitly stated.
      <br/>
      Writesgmlform writes structured output in XML form similar to the example shown in FIG. 6.
      <br/>
      Writeflats write structures output in tabular form which is convenient for importing into a database or spreadsheet.
      <br/>
      Markup_text writes the tagged textual portion similar to the example shown in FIG. 7.
    </p>
    <p num="86">
      The tag phr denotes the beginning of a single or multi-word phrase of the report.
      <br/>
      It has an id attribute, whose value is a unique identifier of the phrase within the report.
      <br/>
      Phrases which are referenced in the structured component are shown in FIG. 7 and those that are not referenced are omitted.
      <br/>
      For example, the word "no" in the phrase "no evidence of" is preceded by the begin phr tag identified by "p11", and the word "of" is followed by the end phr tag.
      <br/>
      Sent may also have an element which is an undef tag.
      <br/>
      This tag surrounds words which are not found in the lexicon.
      <br/>
      This may prove useful for other applications, such as further training of the NLP system or identification of proper names.
    </p>
    <p num="87">
      FIG. 8 shows a structured component for the phrase "the spleen and liver appear to be moderately enlarged".
      <br/>
      The values of the id attributes of the tag phr are based on the assumption that the phrase appears at the beginning of the report so that the first word "the" of the phrase is assigned a position 1.
      <br/>
      The attribute idref for splenomegaly has two values that reference the individual components "enlarged" and "spleen" that constitute the concept splenomegaly.
    </p>
    <p num="88">
      The structured representations of certain sentences are not always as straightforward as the example shown above, particularly if the text is complex or contains conjunctions.
      <br/>
      For example, the sentence "the spleen and liver are enlarged" contains the concepts splenomegaly and hepatomegaly, which are controlled vocabulary concepts associated with the phrases "enlarged spleen" and "enlarged liver" respectively.
      <br/>
      A corresponding the tagged text element is:
      <br/>
      The &lt;phr id="p1"&gt;spleen&lt;/phr&gt;&lt;phr id="p2"&gt;appears to be &lt;/phr&gt;&lt;phr id="p3&gt;moderately&lt;/phr&gt;&lt;phr id="p5&gt;enlarged &lt;/phr&gt;.
    </p>
    <p num="89">
      In the text, the individual word components of "enlarged spleen" are "enlarged" and "spleen" which are separated from each other, as are the words "enlarged" and "liver".
      <br/>
      Moreover the word "enlarged" pertains to both the words "spleen" and "liver".
      <br/>
      In this situation, as shown in FIG. 8, two of the idref attributes are multi-valued because they are associated with the non-contiguous single word phrases identified by references to p2 and p7 which correspond to splenomegaly and to p4 and p7 which correspond to hepatomegaly.
    </p>
    <p num="90">
      FIG. 9 shows a sample "tagged" report generated by the MedLEE program of FIG. 3.
      <br/>
      The output shows the "description" section of a radiological report associated with the clinical condition "congestive heart failure" where terms associated with congestive heart failure are highlighted.
      <br/>
      The report was retrieved and highlighted using a JAVA program and structured output generated by MedLEE.
      <br/>
      The identifiers (idrefs) corresponding to the structured findings associated with the condition were used to highlight the appropriate phrases in the textual report.
    </p>
    <p num="91">
      As noted above, the tagged report of FIG. 9 was retrieved as being positive for a finding of congestive heart failure.
      <br/>
      Notice that the term congestive heart failure is not in the report, but findings suggestive of congestive heart failure are, i.e., cardiomegaly, pulmonary vascular congestion, and pleural effusions.
      <br/>
      Also notice that these three phrases are highlighted in the report.
      <br/>
      When a relevant finding associated with congestive heart failure was detected, the value of the idref attribute(s) is used to identify textual phrases to be highlighted.
    </p>
    <p num="92">
      Preferably, the structured output in the text report is placed at the beginning of each section of the report.
      <br/>
      However, it may be placed at the beginning of the report so that conceptually it is thought of as an index or codification of the contents of the report.
      <br/>
      It could also be made to precede each sentence.
      <br/>
      Also, in another preferred embodiment, more substantial variation of the schema involves more information in the phr tags by adding additional attribute-value pairs other than the id attribute.
      <br/>
      For example the semantic and syntactic categories of the phrases could also be supplied by adding the appropriate attributes sem and syn to the phrase tag.
    </p>
    <p num="93">
      When performing a query using the structured output, it may be desirable to display different types of relevant information, for example, modifiers may be displayed as well as primary findings.
      <br/>
      As such, it may be desirable to highlight more than just the primary finding by using different colors to highlight different types of information including but not limited to body location, degree and certainty modifiers.
    </p>
    <p num="94">
      In order to evaluate the accuracy of the MedLEE program of FIG. 3, a study was conducted wherein queries associated with certain clinical conditions, such as congestive heart failure and neoplasm, were generated using the modified version of MedLEE described above.
      <br/>
      It was shown that the modified MedLEE program were not significantly different from clinicians in retrieving reports associated with the specified conditions.
    </p>
    <p num="95">
      The study was conducted using two hundred handwritten reports, each of which was by at least six of twelve clinicians participating in the study.
      <br/>
      The clinicians were asked to read the reports and check off any number of clinical conditions they felt were associated with each report.
      <br/>
      All 200 reports were then processed and converted into the enriched XML format using the modified version of the MedLEE program discussed herein.
      <br/>
      The XML output documents were then parsed successfully using the DTD and an XML validating parser.
      <br/>
      The validating parser was used to automatically convert the XML structured output (output A) to a line format output (output B).
      <br/>
      A previous version of MedLEE was used to process the same report inputs and generate a structured output (output C) in the same line format used to create output B. Outputs B and C were then compared and verified to be identical.
    </p>
    <p num="96">
      In summary, a computer system has been disclosed that embeds structured encoded information within a textual report using XML.
      <br/>
      Having the capability to associate structured output with portions of the original report adds significant functionality to the report.
      <br/>
      Applications or user of the above-described system can utilize the structured component of the XML output to obtain highly specific retrieval capabilities and then be able to highlight relevant information, thereby facilitating manual review.
      <br/>
      Preferably, a special browser can be used to highlight specific information, such as diagnoses, procedures performed, medications given, or pertinent history, in order to assist the user in the reading of a report.
    </p>
    <p num="97">
      Thus, it has been shown that natural language processing can be used to automatically creating an enriched document that contains a structured component whose elements are linked to corresponding portions of the original textual report.
      <br/>
      The integrated document model used by the tagging feature of the above-described system provides a representation wherein textual documents or reports containing specific information can be accurately and efficiently retrieved automatically by querying the structured components.
      <br/>
      If manual review of the documents is desired, the salient information in the original reports can also be identified and highlighted.
      <br/>
      Using an XML model of tagging provides an additional benefit that software tools that manipulate XML documents are readily available.
    </p>
    <p num="98">
      By modifying the knowledge base components, the above-described natural language processing system of FIGS. 1-3 can further be adapted to extract a variety of different information from scientific or technical natural language text sources.
      <br/>
      For example, by using different lexicon and grammar knowledge bases 101 and 102, the natural language processing system of the present invention can be adapted for extracting, for example, gene, protein and other related information from genomics-related literature.
      <br/>
      An example of such a lexicon, lexsemsub.tmp, lexsemact.tmp, and lexsyn.tmp collectively, is provided in the Appendix; gengram.pl, which also provided in the Appendix, is an example of a grammar for use with genomics literature.
      <br/>
      Optionally, the genomics-related application of the above-described natural language processing system may also require related mapping and coding knowledge bases.
    </p>
    <p num="99">
      Although the present invention has been described in connection with particular embodiments thereof, it is to be understood that various modifications, alterations and adaptions may be made by those skilled in the art without departing from the spirit and scope of the invention.
      <br/>
      It is intended that the invention be limited only by the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for extracting information from natural-language text data, comprising:</claim-text>
      <claim-text>parsing the text data to determine the grammatical structure of the text data, said parsing step comprising the step of referring to a domain parameter having a value indicative of a domain from which the text data originated, the domain parameter corresponding to one or more rules of grammar within a knowledge base related to the domain to be applied for parsing the text data; regularizing the parsed text data to form structured word terms;</claim-text>
      <claim-text>and tagging the text data with a structured data component derived from the structured word terms.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method according to claim 1, further comprising preprocessing the data prior to parsing, with preprocessing comprising the step of referring to the domain parameter.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method according to claim 1, further comprising the step of encoding at least one term of the regularized phrase, with encoding comprising the step of referring to the domain parameter.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method according to claim 1, further comprising filtering the regularized phrase.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method according to claim 1, further comprising referring to an additional parameter which is indicative of the degree to which subphrase parsing is to be carried out.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method according to claim 1, further comprising referring to an additional parameter which is indicative of desired filtering.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method according to claim 1, further comprising referring to an additional parameter which is indicative of a desired type of output.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method according to claim 1, further comprising referring to an additional parameter which is indicative of a desired output format.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method according to claim 1, wherein said parsing step further comprises segmenting the text data by sentences.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method according to claim 1, wherein said parsing step further comprises: segmenting the text data by sentences;</claim-text>
      <claim-text>and segmenting each of the sentences at identified words or phrases.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method according to claim 1, wherein said parsing step further comprises: segmenting the text data by sentences;</claim-text>
      <claim-text>and segmenting each of the sentences at a prefix.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method according to claim 1, wherein said parsing step further comprises skipping undefined words.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method according to claim 1, wherein said parsing step further comprises: identifying one or more primary findings in the text data;</claim-text>
      <claim-text>and identifying one or more modifiers associated with the primary findings.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method according to claim 1, further comprising performing error recovery when parsing of the text data is unsuccessful.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method according to claim 14, wherein said error recovery step comprises: segmenting the text data;</claim-text>
      <claim-text>and analyzing the segmented text data to achieve at least a partial parsing of the unsuccessfully parsed text data.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method according to claim 1, wherein said tagging step comprises providing the structured data component in a Standard Generalized Markup Language (SGML) compatible format.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method according to claim 1, wherein said tagging step comprises providing the structured data component in Extensible Markup Language (XML).</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method according to claim 1, further comprising highlighting one or more primary findings in the natural-language text data.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A computer system for extracting information from natural-language text data, comprising: means for parsing the natural-language text data, said parsing means comprising means for referring to a domain parameter having a value indicative of a domain from which the natural-language text data originated, and wherein the domain parameter corresponds to one or more rules of grammar within a knowledge base related to the domain to be applied for parsing the natural-language text data; means for regularizing the parsed text data to form structured word terms;</claim-text>
      <claim-text>and means for tagging the text data with a structured data component derived from the structured word terms.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The system according to claim 19, further comprising means for preprocessing the data prior to parsing, with the preprocessing means comprising means for referring to the domain parameter.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The system according to claim 19, further comprising means for encoding at least one term of the regularized phrase, with the encoding means comprising means for referring to the domain parameter.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The system according to claim 19, further comprising means for filtering the regularized phrase.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The system according to claim 19, further comprising means for referring to an additional parameter which is indicative of the degree to which subphrase parsing is to be carried out.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The system according to claim 19, further comprising means for referring to an additional parameter which is indicative of desired filtering.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The system according to claim 19, further comprising means for referring to an additional parameter which is indicative of a desired type of output.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The system according to claim 19, further comprising means for referring to an additional parameter which is indicative of a desired output format.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The system according to claim 19, wherein said parsing means further comprises means for segmenting the text data by sentences.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The system according to claim 19, wherein said parsing means further comprises: means for segmenting the text data by sentences;</claim-text>
      <claim-text>and means for segmenting each of the sentences at identified words or phrases.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The system according to claim 19, wherein said parsing means further comprises: means for segmenting the text data by sentences;</claim-text>
      <claim-text>and means for segmenting each of the sentences at a prefix.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The system according to claim 19, wherein said parsing means further comprises means for skipping undefined words.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The system according to claim 19, wherein said parsing means further comprises: means for identifying one or more primary findings in the text data;</claim-text>
      <claim-text>and means for identifying one or more modifiers associated with the primary findings.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The system according to claim 19, further comprising means for performing error recovery when parsing of the text data is unsuccessful.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The system according to claim 32. wherein said error recovery means comprises: means for segmenting the text data;</claim-text>
      <claim-text>and means for analyzing the segmented text data to achieve at least a partial parsing of the unsuccessfully parsed text data.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The system according to claim 19, wherein said tagging means comprises means for providing the structured data component in a Standard Generalized Markup Language (SGML) compatible format.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The system according to claim 19, wherein said tagging step comprises means for providing the structured data component in Extensible Markup Language (XML).</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The system according to claim 19, further comprising means for highlighting one or more primary findings in the original text data.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. A combination of the system according to claim 19 with an interface module for enabling the system to receive input from and/or to produce standardized output for the World-Wide Web and/or a local network.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. The combination according to claim 37, further comprising means for viewing the output using a standardized browser.</claim-text>
    </claim>
    <claim num="39">
      <claim-text>39. The combination according to claim 38, wherein the browser is a Web-browser.</claim-text>
    </claim>
  </claims>
</questel-patent-document>