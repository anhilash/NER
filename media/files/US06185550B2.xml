<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185550B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185550</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185550</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="25364091" extended-family-id="42076435">
      <document-id>
        <country>US</country>
        <doc-number>08874783</doc-number>
        <kind>A</kind>
        <date>19970613</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08874783</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43120940</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>87478397</doc-number>
        <kind>A</kind>
        <date>19970613</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08874783</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>87456797</doc-number>
        <kind>A</kind>
        <date>19970613</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1997US-08874567</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <term-of-grant>
      <disclaimer/>
    </term-of-grant>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <further-classification sequence="1">
        <text>707999001</text>
        <class>707</class>
        <subclass>999001</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707999003</text>
        <class>707</class>
        <subclass>999003</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>707999005</text>
        <class>707</class>
        <subclass>999005</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>707999100</text>
        <class>707</class>
        <subclass>999100</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>707999102</text>
        <class>707</class>
        <subclass>999102</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>707E17058</text>
        <class>707</class>
        <subclass>E17058</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>715234000</text>
        <class>715</class>
        <subclass>234000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/3071</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>3071</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/3061</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>3061</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/3069</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>3069</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30707</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30707</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130822</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99931</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99931</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99933</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99933</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99935</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99935</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99943</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99943</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99944</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99944</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>75</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>6</number-of-drawing-sheets>
      <number-of-figures>9</number-of-figures>
      <image-key data-format="questel">US6185550</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus for classifying documents within a class hierarchy creating term vector, term file and relevance ranking</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>WILLIAMS MARVIN L</text>
          <document-id>
            <country>US</country>
            <doc-number>5162992</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5162992</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>KAJIGAYA YASUHIRO</text>
          <document-id>
            <country>US</country>
            <doc-number>5255104</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5255104</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>MORI TOSHIAKI</text>
          <document-id>
            <country>US</country>
            <doc-number>5418946</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5418946</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>SAKAKIBARA YASUBUMI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5463773</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5463773</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>KUPIEC JULIAN M</text>
          <document-id>
            <country>US</country>
            <doc-number>5519608</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5519608</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>NISHIYAMA TATSUYA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5568640</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5568640</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>FERGUSON GREGORY J</text>
          <document-id>
            <country>US</country>
            <doc-number>5649186</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649186</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>HOLT JOHN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5761497</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5761497</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>DEERWESTER SCOTT</text>
          <document-id>
            <country>US</country>
            <doc-number>5778362</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5778362</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>SNOW WILLIAM A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6055540</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6055540</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>HITACHI LTD</text>
          <document-id>
            <country>EP</country>
            <doc-number>0704810</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-704810</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>BERNSTEIN KEITH, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5297249</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5297249</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>THURMAN AUDREE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5301319</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5301319</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>SANG JR HENRY W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5317646</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5317646</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>STEFANOPOULOS ARTHUR C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5333237</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5333237</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>LEWIS JONATHON R T</text>
          <document-id>
            <country>US</country>
            <doc-number>5355472</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5355472</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>PEDERSEN JAN O, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5442778</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5442778</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>KUPIEC JULIAN M</text>
          <document-id>
            <country>US</country>
            <doc-number>5500920</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5500920</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>THOMSON WILLIAM K</text>
          <document-id>
            <country>US</country>
            <doc-number>5634051</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5634051</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>NOGUCHI NAOHIKO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5706496</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5706496</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>UNGER SANDRA S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5721910</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5721910</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>KIRK THOMAS, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5768578</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5768578</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>CORDELL JOHN PALMER, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5778372</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5778372</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>STORK DAVID G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5781914</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5781914</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>BIGUS JOSEPH PHILLIP</text>
          <document-id>
            <country>US</country>
            <doc-number>5787425</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5787425</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>KARAEV ISAAK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5802518</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5802518</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="27">
          <text>SHAW VENSON M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5806068</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5806068</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="28">
          <text>SOMERS JEFFREY S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5809340</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5809340</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="29">
          <text>SASAKI MASAHIRO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5812995</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5812995</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="30">
          <text>GUSTMAN SAMUEL</text>
          <document-id>
            <country>US</country>
            <doc-number>5813014</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5813014</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="31">
          <text>DUFRESNE FRED B</text>
          <document-id>
            <country>US</country>
            <doc-number>5835712</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5835712</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="32">
          <text>KAVANAGH THOMAS S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5838965</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5838965</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="33">
          <text>REED DRUMMOND SHATTUCK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5862325</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5862325</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sun Microsystems, Inc.</orgname>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUN MICROSYSTEMS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Snow, William A.</name>
            <address>
              <address-1>Redwood City, CA, US</address-1>
              <city>Redwood City</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Mocker, Joseph D.</name>
            <address>
              <address-1>Cupertino, CA, US</address-1>
              <city>Cupertino</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>D'Alessandro &amp; Ritchie</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Breene, John</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method for classifying a document based on content within a class hierarchy.
      <br/>
      The class hierarchy comprises a plurality of category nodes stored within a tree data structure.
      <br/>
      Each of the plurality of category nodes includes a category name corresponding to a unique directory and a category definition comprising a set of defining terms.
      <br/>
      The class hierarchy is searched to determine appropriate categories for classification of the document.
      <br/>
      The document is then stored in directories corresponding to the categories selected for classification.
      <br/>
      If no categories are produced by the search, a system administrator is notified of the unsuccessful search.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">
      The embodiments of the present invention relate to a method and apparatus for classification of documents within defined categories using a class hierarchy having document categories and corresponding category definitions.
      <br/>
      More particularly, the embodiments of the present invention relate to a method and apparatus for comparing a document to be classified to the category definitions to determine appropriate category classification for the document and classifying the document within the appropriate category or categories.
    </p>
    <p num="3">2. Background of the Invention</p>
    <p num="4">
      Libraries and other institutions have historically categorized documents by hand.
      <br/>
      Furthermore, information retrieval systems exist which provide documents for automated retrieval.
      <br/>
      For example, Yahoo�.RTM., an information storage and retrieval system available to Internet users at http://www.yahoo.com, allows a user to search for information according to various search terms.
    </p>
    <p num="5">
      Yahoo�.RTM. allows a user to classify a document within various categories.
      <br/>
      However, Yahoo�.RTM. requires a user to determine appropriate classification for each document prior to classifying the document.
      <br/>
      In today's computerized society, it would be extremely beneficial to provide a means for automating this process of document categorization.
      <br/>
      A need exists in the prior art for an automated document classification system for categorizing a document based upon the content of the document.
    </p>
    <heading>BRIEF DESCRIPTION OF THE INVENTION</heading>
    <p num="6">
      A method and apparatus for classification of documents based on content within a class hierarchy is provided.
      <br/>
      The class hierarchy comprises a plurality of category nodes stored within a tree data structure.
      <br/>
      Each of the plurality of category nodes includes a category name corresponding to a unique directly and a category definition comprising a set of defining terms.
      <br/>
      In accordance with the invention, the class hierarchy is searched to determine appropriate categories for classification of the document.
      <br/>
      The document is stored in directories corresponding to the categories selected for classification.
      <br/>
      If no categories are produced by the search, a system administrator is notified of the unsuccessful search.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="7">
      The following figures are illustrative and not intended to limit the scope of the invention.
      <br/>
      FIG. 1 illustrates a class hierarchy according to one embodiment of the present invention.
      <br/>
      FIG. 2 is a flow diagram of the main program loop utilized in creation of the class hierarchy according to an embodiment of the present invention.
      <br/>
      FIG. 3 is a flow diagram of the process category command procedure shown in the main program loop of FIG. 2 according to an embodiment of the present invention.
      <br/>
      FIG. 4 is a flow diagram of the process terms command procedure shown in the main program loop of FIG. 2 according to one embodiment of the present invention.
      <br/>
      FIG. 5 illustrates a document directory hierarchy according to an embodiment of the present invention.
      <br/>
      FIG. 6 is a flow diagram of the main procedure utilized in creation of the document directory hierarchy according to one embodiment of the present invention.
      <br/>
      FIG. 7 is a flow diagram illustrating a method for searching the document directory hierarchy according to an embodiment of the present invention.
      <br/>
      FIG. 8 illustrates a method for retrieving matching category names corresponding to directory paths shown in FIG. 7 according to one embodiment of the present invention.
      <br/>
      FIG. 9 illustrates a block diagram of an embodiment of a computer system implementing the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE EMBODIMENTS OF THE INVENTION</heading>
    <p num="8">
      Those of ordinary skill in the art will realize that the following description of the embodiments of the present invention is illustrative only and is not intended to be in any way limiting.
      <br/>
      Other embodiments of the invention will readily suggest themselves to such skilled persons from an examination of the within disclosure.
    </p>
    <p num="9">
      The embodiments of the present invention provide for automatic document classification within user-defined categories.
      <br/>
      A user can then interactively search for documents according to search terms within the user-defined categories.
      <br/>
      Documents are ranked according to relevance, and a user specified number of documents which are most relevant are returned.
      <br/>
      According to one embodiment, the present invention is made available to multiple users via a network.
    </p>
    <p num="10">
      While the embodiments of the present invention are of broad applicability and can be used in a variety of contexts, one embodiment is designed specifically to interface with Fulcrum, an information retrieval system designed for use by application developers.
      <br/>
      Fulcrum is available from Fulcrum Technologies, Inc., located at 785 Carling Ave, Ottawa, Canada K1S5H4, (613) 238-1761.
      <br/>
      The functions provided by Fulcrum include text search, indexing and retrieval capabilities.
      <br/>
      Indexing creates a summary of all documents within a desired directory and subdirectories.
      <br/>
      When a directory is indexed, Fulcrum creates an index comprising a document vector for each document within the selected directory.
      <br/>
      To create each document vector, each document is split into terms and a weight is associated with each of the terms.
      <br/>
      The term weights are based upon frequency of occurrence of each term within the document.
      <br/>
      The weights, therefore, are higher when a term exists multiple instances within the document.
    </p>
    <p num="11">Method for Creating a Class Hierarchy</p>
    <p num="12">
      Referring now to FIG. 1, a class hierarchy 10 according to one embodiment of the present invention is shown.
      <br/>
      The class hierarchy 10 comprises at least one level of categories.
      <br/>
      These categories may further comprise sub-categories.
      <br/>
      The categories are stored in category nodes 12 within a tree data structure.
      <br/>
      According to one embodiment of the present invention, each of the category nodes 12 corresponds to a class hierarchy directory 14 equivalent to a category NodeID 16.
      <br/>
      Each category not further comprising sub-categories will herein be referred to as a leaf node, or leaf category.
      <br/>
      Each leaf category comprises a category definition 18 defining the leaf category.
      <br/>
      According to an embodiment of the present invention, the category definition 18 comprises two groups of data.
      <br/>
      The first group of data contains descriptive terms defining the corresponding leaf category.
      <br/>
      The second group of data contains portions of documents which have been classified by a user as being relevant to the leaf category.
      <br/>
      Each category further comprising subcategories is defined by the terms corresponding to all subcategories within the category.
      <br/>
      The class hierarchy 10 is stored in a class hierarchy database.
    </p>
    <p num="13">According to one embodiment of the present invention, the category node 12 includes the following fields:</p>
    <p num="14">Category name--The category name is used for display purposes.</p>
    <p num="15">
      Nodetype--There are three possible node types: normal, "see" and "see also". "See also" indicates that a category/node can be added at this level, but lists alternate locations in which it may also be placed. "See" indicates that a category/node cannot be added at this level, and gives alternate categories in which to place the new category. "Normal" indicates that the node is either a branch or a leaf node.
      <br/>
      The node type is set at time of creation of the node.
    </p>
    <p num="16">
      NodeID--When a node is created, an integer NodeID is associated with the node.
      <br/>
      According to an embodiment of the present invention, each directory within the class hierarchy comprises a directory name equivalent to the NodeID of the corresponding category.
      <br/>
      The NodeID is used rather than the category name, since each category name may contain characters that would result in an invalid directory name.
    </p>
    <p num="17">ParentID--The ParentID field contains an integer indicating the NodeID of the parent node.</p>
    <p num="18">
      LinkID--The LinkID field is used for "see" and "see also" node types.
      <br/>
      The LinkID contains an integer indicating a NodeID of a desired reference node.
    </p>
    <p num="19">
      Entered by--The entered by field comprises a user ID entered by the user.
      <br/>
      This field provides a means for tracking system updates and creation of system errors.
    </p>
    <p num="20">One of ordinary skill in the art will recognize that the category node may comprise fewer or additional fields.</p>
    <p num="21">
      Referring now to FIG. 2, a flow diagram of the main program loop utilized in creation of the class hierarchy according to one embodiment of the present invention is shown.
      <br/>
      At step 20, initialization of the class hierarchy is performed.
      <br/>
      Initially, the class hierarchy comprises a root category, or root node.
      <br/>
      In addition, an initial set of descriptive terms, including document portions, are provided to a user.
      <br/>
      The set of initial terms and document portions are generated from various sources (i.e., keyword tables, search log files).
    </p>
    <p num="22">
      The class hierarchy is displayed at step 22.
      <br/>
      To display the updated class hierarchy, the class hierarchy is traversed.
      <br/>
      First, the root is found by finding the node having no parent.
      <br/>
      The NodeID of the root is then obtained.
      <br/>
      Second, it is determined whose parent is the NodeID of the root.
      <br/>
      The second step is iteratively performed with the NodeID of the current node until the LinkID indicated that the node contains no children.
      <br/>
      Since categories and terms cannot be added to a node unless a node contains only "see also" subnodes, this is indicated in the display.
      <br/>
      For example, if a node contains only "see also" subnodes, this node will be displayed to the user.
      <br/>
      However, if a node contains a subnode having a "normal" or "see" nodetype, the node will not be displayed or this limitation will otherwise be indicated to the user.
      <br/>
      Alternatively, the class hierarchy may be displayed at a later step.
    </p>
    <p num="23">
      Several category commands are available to create the class hierarchy.
      <br/>
      These commands include the capability to add a category node, link a first category node to a second category node, move a category node, delete a category node, edit a category node, or display information defining a category node.
      <br/>
      Manipulating nodes in a tree data structure is known in the art of software development.
    </p>
    <p num="24">
      At step 24, a user-selected command is entered.
      <br/>
      If the user-selected command is determined to be a category command at step 26, the appropriate category command is processed at step 28, and the routine returns to step 22.
      <br/>
      If it is determined that the user-selected command is not a category command at step 26, it is next determined whether the user-selected command is a terms command at step 30.
      <br/>
      If the user-selected command is a terms command, the appropriate terms command is processed at step 32, and the loop is repeated at step 22.
      <br/>
      The loop is repeated at step 22 until the user chooses to exit the main program loop at step 34.
      <br/>
      Alternatively, the steps 26-32 may ordered in various ways to achieve the same result.
    </p>
    <p num="25">
      Referring now to FIG. 3, a flow diagram of the process category command procedure 28 shown in FIG. 2 according to an embodiment of the present invention is illustrated.
      <br/>
      If the user-selected command is determined to be an add category command at step 36, the add category command is performed at step 38.
      <br/>
      This command is used to add a new category by name, adding a child node to an existing category.
      <br/>
      Add is not available if the node is a leaf node or the node contains a "see" link.
      <br/>
      Add is available if a node contains only "see also" sub-nodes.
      <br/>
      The first category, or node, comprises a root directory, or 0 node.
      <br/>
      When a new category is added, a new category node is created containing a user-defined category name, a nodetype, a unique NodeID corresponding to the user-defined category name, a ParentID corresponding to a NodeID of a parent category node, a LinkID, and a UserID.
      <br/>
      This category node is then stored within the parent category node.
    </p>
    <p num="26">
      If the user-selected command is not an add category command, at step 40 it is determined if the user-selected command is a link category command.
      <br/>
      If the user-selected command is a link category command, the link category command is performed at step 42.
      <br/>
      The link category command allows a category to refer to another category using "see" or "see also". "See also" indicates that one or more other categories contain related information. "See" indicated that this category name cannot contain sub-categories.
      <br/>
      Link is not available at the root node.
      <br/>
      Furthermore, the link command is not available if a node already contains a "see" link.
    </p>
    <p num="27">
      If the user-selected command is not a link-category command, at step 44 it is determined if the user-selected command is a move category command.
      <br/>
      If the user-selected command is a move category command, the move category command is performed at step 46.
      <br/>
      The move category command allows a category to be moved to another location within the class hierarchy.
    </p>
    <p num="28">
      If the user-selected command is not a move-category command, at step 48 it is determined if the user-selected command is a delete category command.
      <br/>
      If the user-selected command is a delete category command, the delete category command is performed at step 50.
      <br/>
      The delete category command deletes a category and any subtree.
      <br/>
      This command is not available at the root level.
    </p>
    <p num="29">
      If the user-selected command is not a delete category command, at step 52 it is determined if the user-selected command is an edit category command.
      <br/>
      If the user-selected command is determined to be an edit category command, the edit category command is performed at step 54.
      <br/>
      The edit category command allows a category to be renamed.
    </p>
    <p num="30">
      If the user-selected command is not an edit category command, at step 56 it is determined if the user-selected command is a display category command.
      <br/>
      If the user-selected command is determined to be a display category command, the display category command is performed at step 58.
      <br/>
      This command displays node information corresponding to a particular category.
      <br/>
      According to one embodiment of the present invention, ParentID and LinkID information are not displayed.
      <br/>
      If the user-selected command is not a display category command, the process category command routine is completed and the program returns to the main loop of FIG. 2.
      <br/>
      One of ordinary skill in the art will recognize that steps 36-58 may performed in an alternate order.
    </p>
    <p num="31">
      According to an embodiment of the present invention, the category definition for each leaf category in the class hierarchy is stored in a terms database.
      <br/>
      The terms database comprises descriptive terms and portions of documents defining all leaf categories.
      <br/>
      Each of the descriptive terms include a reference corresponding to at least one leaf category.
      <br/>
      Similarly, each of the portions of documents include a reference corresponding to at least one leaf category, document name, type of document, fields, or portions, included within the document (i.e., synopsis), and indexing information indicating which fields, or portions, are to be extracted during indexing.
      <br/>
      Therefore, a category definition may be defined by different portions of documents depending upon the type of each document.
    </p>
    <p num="32">
      Referring now to FIG. 4, a flow diagram of the process terms command procedure 32 shown in FIG. 2 according to one embodiment of the present invention is presented.
      <br/>
      If the user-selected command is determined at step 60 to be an add terms command, the add terms command is performed at step 62.
      <br/>
      The "add terms" command allows terms or portions of documents to be added to the category definition of a particular category.
      <br/>
      According to an embodiment of the present invention, the category must comprise a leaf category.
      <br/>
      A user can add a term from the initial set of terms, or add additional user-defined terms or document portions to an appropriate category.
      <br/>
      Multiple terms separated by commas can be entered.
      <br/>
      A confirmation dialog is presented before a term is added or deleted.
      <br/>
      Terms of a branch node may be edited if the only type of sub-nodes are "see also" links.
      <br/>
      This command provides a user with the ability to weight the descriptive terms which define a category.
      <br/>
      Terms, as well as each hand-classified document portion, can be given different weights.
      <br/>
      This is performed by creating multiple copies of a selected term or hand-classified document portion within the terms database.
    </p>
    <p num="33">
      If the user-selected command is not an add terms command, it is next determined if the user-selected command is a view terms command at step 64.
      <br/>
      If the user-selected command is a view terms command, the view terms command is performed at step 66.
      <br/>
      The "view terms" command allows a user to view the category definition of a particular category.
      <br/>
      This command is available only at the root node.
      <br/>
      This command is used to display all terms according to selection criteria.
      <br/>
      For example, a user may display the terms entered by anyone or display the terms entered by a user.
      <br/>
      If the user-selected command is not a view terms command, the process terms command procedure is complete and the program returns to the main loop of FIG. 2.
      <br/>
      One of ordinary skill in the art will recognize that steps 60-66 may performed in an alternate order.
    </p>
    <p num="34">Method for Classifying a Document within the Class Hierarchy</p>
    <p num="35">
      Once the class hierarchy has been created, documents may be classified within the class hierarchy.
      <br/>
      According to the embodiments of the present invention, a document is classified based on content within the categories within the class hierarchy.
      <br/>
      All documents entered into the system are classified within one or more categories.
      <br/>
      The disclosed method for classification results in correct placement of documents by the classifer approximately 80% of the time.
    </p>
    <p num="36">
      Referring now to FIG. 5, a document directory hierarchy 68 according to one embodiment of the present invention is shown.
      <br/>
      The document directory hierarchy 68 comprises a plurality of document directories 70.
      <br/>
      Each of the directories 70 corresponds to a category within the class hierarchy.
      <br/>
      According to an embodiment of the present invention, each of the document directories 70 is equivalent to a category NodeID 72 of the corresponding category.
      <br/>
      Once a document 74 is classified within the class hierarchy, the document 74 is stored within the document directory 68 as shown.
    </p>
    <p num="37">
      Referring now to FIG. 6, a flow diagram of the main procedure utilized in creation of the document directory hierarchy according to one embodiment of the present invention is shown.
      <br/>
      Initially, at step 76, a terms file is created for each category within the class hierarchy.
      <br/>
      A category definition for each leaf node is extracted from the terms database and stored in a terms file within the category directory in the class hierarchy.
      <br/>
      Therefore, each terms file will contain all terms and portions of documents defining the particular category.
    </p>
    <p num="38">
      Next, at step 78, a path-to-name listing containing a directory path to category name translation for each directory within the class hierarchy is created and stored in a translation file.
      <br/>
      The categories are extracted from the class hierarchy database by traversing the class hierarchy from the root, finding all the children successively until a leaf node is hit.
      <br/>
      This process is repeated for all children.
      <br/>
      Each directory within the directory hierarchy comprises a directory name equivalent to the NodeID of the corresponding category.
    </p>
    <p num="39">
      Next, at step 80, indexing via Fulcrum is performed.
      <br/>
      Since each leaf node initially contains only performs the one term document (herein after called a "term file") indexing initially is performed on the terms files.
      <br/>
      Fulcrum extracts the terms from each term file and weighs each term according to frequency of occurrence.
      <br/>
      Traversing subdirectories is standard for the Fulcrum search engine.
      <br/>
      Fulcrum is used to index the 0 node, or root directory, which results in indexing of each subdirectory within the 0 node, creating a zero node index.
      <br/>
      Then, for each term within all term files, Fulcrum creates a term vector for each of the most common terms of the document, and corresponding positioning information.
      <br/>
      Indexing creates an index file which contains all term vectors.
    </p>
    <p num="40">
      Next, a document vector is created at step 82 for a document to be classified.
      <br/>
      The document vector is created via Fulcrum to allow classification through comparison with document vectors created in step 80.
    </p>
    <p num="41">
      Next, at step 84, a text search is performed within the class hierarchy to classify a document.
      <br/>
      The document to be classified is compared against all leaf node data to determine the appropriate category placement for the document.
      <br/>
      This s performed by comparing document vectors to the term vectors.
      <br/>
      The document vector created in step 82 is compared via Fulcrum to the term vectors created during the indexing step 80 to determine appropriate category placement.
      <br/>
      As a result, Fulcrum returns a relevance ranking.
      <br/>
      A top percentage of the ranking are utilized to determine appropriate categories for the document.
      <br/>
      This relevance percentage is configurable within the system.
      <br/>
      The document matches one or more categories if it meets the user-defined criteria, or configured relevance percentage.
      <br/>
      A result of the search is a list of matching category names.
    </p>
    <p num="42">
      At step 86, if the document does not match any of the categories, the system administrator is notified at step 88.
      <br/>
      If, however, the document meets the user-defined criteria, a matching directory path within the class hierarchy is obtained at step 90 for one of the matching category names utilizing the path-to-name translation file.
    </p>
    <p num="43">
      Next, any necessary directories corresponding to the matching directory path are created within the document directory hierarchy at step 92.
      <br/>
      Therefore, the directory structure within the class hierarchy will not necessarily be equivalent to that of the document directory hierarchy.
      <br/>
      As a result, only directories containing documents will be created within the document directory hierarchy.
      <br/>
      Alternatively, a directory structure equivalent to that of the class hierarchy may be created in a prior step.
    </p>
    <p num="44">
      Next, at step 94, the document is added to a leaf directory within the document directory hierarchy corresponding to the matching directory path.
      <br/>
      According to an embodiment of the present invention, the document is symbolically linked via Unix to the directory corresponding to the matching category.
    </p>
    <p num="45">
      At step 96, it is determined whether there are more matching directory paths to which the document must be linked.
      <br/>
      If there are more matching directory paths, a matching directory path for the next matching category is retrieved at step 90, and the loop is repeated.
    </p>
    <p num="46">
      Once the document has been linked within the document directory hierarchy, more documents may be classified by a user at step 98.
      <br/>
      When no more categories meet the user-defined criteria, more documents may be classified by a user.
      <br/>
      When all documents have been classified, each directory within the document directory hierarchy is indexed at step 100.
      <br/>
      When a branch node is indexed, all documents in sub-nodes of that node are indexed.
      <br/>
      Thus, only indexes corresponding to modified directories and the parent nodes of the modified directories will be updated.
      <br/>
      Alternatively, only modified directories and any parent nodes of the modified directories may be indexed.
      <br/>
      If there are more documents to classify at step 98, a document vector is created at step 82 and the loop is repeated.
    </p>
    <p num="47">Method for Searching the Document Directory Hierarchy</p>
    <p num="48">
      Referring now to FIG. 7, a flow diagram illustrating a method for searching the document directory hierarchy according to an embodiment of the present invention is shown.
      <br/>
      According to one embodiment of the present invention, two search methods are provided for searching the document directory hierarchy in response to a user query.
      <br/>
      According to a first method, an undirected search, a user query may comprise one or more search terms.
      <br/>
      In addition, after search results are obtained, the user can modify the original search terms to further limit the search.
      <br/>
      According to a second method, a directed search, a user query may comprise one or more search terms and a selected category to provide a more limited search.
      <br/>
      Once results are obtained, the user can then select one or more categories or modify the search terms to run a more limited search.
      <br/>
      According to an embodiment of the present invention, the user specifies a number of documents desired.
    </p>
    <p num="49">
      At step 102, a user query is obtained.
      <br/>
      The user query comprises a number of documents desired and one or more search terms.
      <br/>
      In addition, the user query may include a user selected category.
    </p>
    <p num="50">
      Next, at step 104, if the user query includes a user selected category, a directed search is performed.
      <br/>
      At step 106, the search terms are compared to each of the relevant document vectors created by the document indexing of the document directory hierarchy.
      <br/>
      Since the search is directed, the relevant document vectors are the document vectors within the index corresponding to the desired category.
    </p>
    <p num="51">
      At step 108, a list of document directory paths is obtained through Fulcrum.
      <br/>
      Each of the document directory paths includes a matching document name and a directory path corresponding to a matching document.
      <br/>
      The relevant documents are ranked according to relevance using a statistical ranking provided by Fulcrum.
      <br/>
      According to one embodiment of the present invention, the user-specified number of document directory paths which are most relevant are selected.
      <br/>
      Then, matching category names are obtained at step 110.
    </p>
    <p num="52">
      According to the directed search, the documents are grouped within the matching category names at step 112.
      <br/>
      Next, information corresponding to each document is displayed by category at step 114.
      <br/>
      According to an embodiment of the present invention, the document information includes a synopsis and document link.
      <br/>
      Upon completion of the directed search, a user may choose to quit at step 116.
      <br/>
      If the user does not choose to quit, the user enters another user query at step 102 and the loop is repeated.
    </p>
    <p num="53">
      If at step 104, if the user query does not include a user selected category, an undirected search is performed.
      <br/>
      At step 118, the search terms are compared to each of the relevant document vectors created by the document indexing of the document directory hierarchy.
      <br/>
      Since the search is undirected, the relevant document vectors are the document vectors within the zero node index.
    </p>
    <p num="54">
      At step 120, a list of document directory paths is obtained through Fulcrum.
      <br/>
      Each of the document directory paths includes a matching document name and a directory path corresponding to a matching document.
      <br/>
      The relevant documents are ranked according to relevance using a statistical ranking provided by Fulcrum.
      <br/>
      Then, matching category names are obtained at step 110.
    </p>
    <p num="55">
      According to the undirected search, all relevant category names obtained in step 110 are sorted by relevance at step 122.
      <br/>
      Duplicate category names are removed from each of the sorted relevant category names, and the unique sorted relevant category names are displayed at step 124.
      <br/>
      Upon completion of the undirected search, a user may choose to quit at step 116.
      <br/>
      If the user does not choose to quit, the user enters another user query at step 102 and the loop is repeated.
      <br/>
      Therefore, the user may select appropriate categories, alter the search terms, and re-run the search.
    </p>
    <p num="56">
      Referring now to FIG. 8, the method for retrieving matching category names 110 corresponding to directory paths shown in FIG. 7 according to one embodiment of the present invention is presented.
      <br/>
      At step 126, a matching document directory path is obtained from the matching document directory paths.
      <br/>
      Next, at step 128, a document name is removed from the document directory path to obtain a directory path.
      <br/>
      Next, at step 130, a corresponding category name is obtained by performing a search, or look up, for the directory path in the path-to-name listing to obtain a category name.
      <br/>
      At step 132, if there are more matching document paths, the loop is repeated at step 126.
      <br/>
      However, if none of the matching document paths remain, each of the matching category names have been retrieved.
    </p>
    <p num="57">
      Referring now to FIG. 9, a block diagram of an embodiment of a computer system 134 implementing the present invention is shown.
      <br/>
      According to this embodiment, the present invention is stored in a main memory 136 or a secondary memory 138 of the computer system 134 for use by a processor 140.
      <br/>
      The computer system 134 may be connected to a computer network 142 through transmission lines 144.
      <br/>
      Those of ordinary skill in the art will readily recognize that the present invention may also be used in a standalone computer system, which is by definition not part of a computer network.
    </p>
    <p num="58">Alternative Embodiments</p>
    <p num="59">
      According to an alternative embodiment, the search may be performed on the index created from the terms files within the class hierarchy rather than the index created from the documents in the document directory hierarchy.
      <br/>
      Although this method is more efficient than other embodiments, it allows a category which contains no documents to be displayed to the user.
      <br/>
      Since the user may select a category which contains no documents, this may be confusing to the user.
    </p>
    <p num="60">
      According to another alternative embodiment, the search may be performed on the index created from the terms files within the class hierarchy in addition to the index created from the documents.
      <br/>
      This would be helpful to find related categories of information.
    </p>
    <p num="61">
      Although illustrative embodiments and applications of this invention are shown and described herein, many variations and modifications are possible which remain within the concept, scope, and spirit of the invention, and these variations would become clear to those of skill in the art after perusal of this application.
      <br/>
      The invention, therefore, is not to be limited except in the spirit of the appended claims in light of their full scope of equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for classifying a document based on content within a class hierarchy, the method comprising:</claim-text>
      <claim-text>initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; displaying the class hierarchy; accepting a user-selected command for manipulating the class hierarchy; processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing the category command further comprising:</claim-text>
      <claim-text>- storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; - storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; - storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; - storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; - storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; creating a class hierarchy by providing a plurality of category nodes stored in a tree data structure within a memory, each of said plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms; creating a plurality of terms files, each of said plurality of terms files corresponding to one of said plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; creating one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms file according to frequency of occurrence in the corresponding terms file; creating a document vector for the document, said document vector containing a weight assigned to the terms of the document according to frequency of occurrence; providing a relevance ranking between said terms files and said document by comparing said document vector with said one or more term vectors;</claim-text>
      <claim-text>and storing said document within said document directory hierarchy at a location corresponding to a category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, further including a step of building a path-to-name translation listing containing a directory path and category name for at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1, wherein the step of storing further includes a step of defining the location according to a directory path within a path-to-name translation listing which corresponds to the category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, wherein the step of providing at least one relevance ranking includes using the Fulcrum (tm)  indexing application.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A method for classifying a document based on content within a class hierarchy, the class hierarchy comprising a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms, the method comprising: initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; displaying the class hierarchy; accepting a user-selected command for manipulating the class hierarchy; processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing the category command further comprising: - storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; - storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; - storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; - storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; - storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; building a path-to-name translation listing containing each category name and unique directory pair for each of the plurality of category nodes; indexing the class hierarchy using Fulcrum to create an index file containing term vectors corresponding to the plurality of terms files; classifying at least one document within a document directory hierarchy using said term vectors;</claim-text>
      <claim-text>and indexing the document directory hierarchy using Fulcrum.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method according to claim 8, wherein the step of creating is performed for each one of the plurality of category nodes defined as a lead node.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method according to claim 8, the step of creating further comprising the following steps: retrieving a set of defining terms for one of the plurality of category nodes; forming a terms file within the unique directory in the class hierarchy corresponding to the one of the plurality of category nodes;</claim-text>
      <claim-text>and storing the set of defining terms within the terms file.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method according to claim 8, the step of classifying further comprising the following steps: creating a document vector for a document to be classified within the class hierarchy; searching the class hierarchy for the term vectors which are relevant to the document to determine appropriate categorization of the document, the step of searching if successful returning a list of matching category names, and otherwise notifying a system administrator that the step of searching was unsuccessful;</claim-text>
      <claim-text>and storing the document in directories corresponding to the matching category names if the step of searching is successful.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method according to claim 11, wherein the step of searching comprises: comparing the document vector to the term vectors using Fulcrum, the step of comparing returning a list of matching categories within the class hierarchy according to user-defined criteria, the list of matching categories corresponding to the at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method according to claim 11, the step of storing further comprising the following steps: retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing; creating directories within the document directory hierarchy corresponding to the directory path if not already existing within the document directory hierarchy;</claim-text>
      <claim-text>and adding the document to a leaf directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method according to claim 13, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method according to claim 11, the step of storing further comprising the following steps: creating a directory within the document directory hierarchy corresponding to each of the unique directories within the class hierarchy; retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing;</claim-text>
      <claim-text>and adding the document to a directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method according to claim 15, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 8, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 8, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The method of claim 8, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. A computer system for classifying a document comprising: a processor;</claim-text>
      <claim-text>and a memory having stored therein the following: - means for initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; - means for displaying the class hierarchy; - accepting a user-selected command for manipulating the class hierarchy; - means for processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing means further comprising:</claim-text>
      <claim-text>-  means for storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; -  means for storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; -  means for storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; -  means for storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; -  means for storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; means for creating a class hierarchy having a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms; means for creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; means for creating one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms file according to frequency of occurrence in the corresponding terms file; means for building a path-to-name translation listing containing a directory path and category name for each of the plurality of category nodes; an indexing means for providing a relevance ranking between the terms files and the document by comparing the document vector with the at least one term vector;</claim-text>
      <claim-text>and means for storing the document within the document directory hierarchy at a location corresponding to a category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The computer system of claim 20, further including means for building a path-to-name translation listing containing a directory path and category name for at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The computer system of claim 20, wherein the means for storing further includes means for defining the location according to a directory path within a path-to-name translation listing which corresponds to the category node having a term file which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The computer system of claim 20, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The computer system of claim 20, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The computer system of claim 20, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. A computer system for classifying a document based on content within a class hierarchy, the class hierarchy comprising a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms, the computer system comprising: a processor;</claim-text>
      <claim-text>and a memory having stored therein the following: - means for initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; - means for displaying the class hierarchy; - means for accepting a user-selected command for manipulating the class hierarchy; - means for processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing means further comprising: -  means for storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; -  means for storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; -  means for storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; -  means for storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; -  means for storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; means for creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; means for making one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms file according to the frequency of occurrence in the corresponding terms file; means for making a document vector for the document, said document vector containing a weight assigned to the terms of the document according to frequency of occurrence, means for building a path-to-name translation listing containing each category name and unique directory pair for each of the plurality of category nodes; means for indexing the class hierarchy using Fulcrum to create an index file containing term file vectors corresponding to the plurality of terms files; means for classifying at least one document within a document directory hierarchy using the term file vectors;</claim-text>
      <claim-text>and means for indexing the document directory hierarchy using Fulcrum.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The computer system according to claim 26, wherein the means for creating is performed for each one of the plurality of category nodes being a leaf node.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The computer system of claim 27, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The computer system according to claim 26, the means for creating further comprising: means for retrieving a set of defining terms for one of the plurality of category nodes; means for forming a terms file within the unique directory in the class hierarchy corresponding to the one of the plurality of category nodes;</claim-text>
      <claim-text>and means for storing the set of defining terms within the terms file.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The computer system according to claim 26, the means for classifying further comprising: means for creating a document vector for a document to be classified within the class hierarchy; means for searching the class hierarchy for the terms file vectors which are relevant to the document to determine appropriate categorization of the document, the step of searching if successful returning a list of matching category names, and otherwise notifying a system administrator that the step of searching was unsuccessful;</claim-text>
      <claim-text>and means for storing the document in directories corresponding to the matching category names if the step of searching is successful.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The computer system according to claim 30, wherein the means for searching comprises: means for comparing the document vector to the term vectors using Fulcrum, the step of comparing returning a list of matching categories within the class hierarchy according to the user-defined criteria, the list of matching categories corresponding to the at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The computer system according to claim 30, the means for storing further comprising: means for retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing; means for creating directories within the document directory hierarchy corresponding to the directory path if not already existing within the document directory hierarchy;</claim-text>
      <claim-text>and means for adding the document to a leaf directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The computer system according to claim 32, wherein the means for adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The computer system according to claim 30, the means for storing further comprising: means for creating a directory within the document directory hierarchy corresponding to each of the unique directories within the class hierarchy; means for retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing;</claim-text>
      <claim-text>and means for adding the document to a directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The computer system according to claim 34, wherein the means for adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The computer system of claim 26, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. The computer system of claim 26, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. An article of manufacture, comprising: a computer usable medium having a computer readable program code means embodied therein for classifying a document based on content within a class hierarchy, the computer readable program code means in the article of manufacture comprising: - computer-readable program means for initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; - computer-readable program means for displaying the class hierarchy; - computer-readable program means for accepting a user-selected command for manipulating the class hierarchy; - computer-readable program means for processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing the category command further comprising: -  computer-readable program means for storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; -  computer-readable program means for storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; -  computer-readable program means for storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; -  computer-readable program means for storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; computer-readable program means for storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type;</claim-text>
      <claim-text>computer-readable program means for creating the class hierarchy by providing a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; computer-readable program means for creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms; computer readable program means for making one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms file according to frequency of occurrence in the corresponding terms file; computer readable program means for creating a document vector for the document, said document vector containing a weight assigned to the terms of the document according to frequency of occurrence, computer-readable program means for providing a relevance ranking between the terms files and the document by comparing the document vector with said one or more term vectors;</claim-text>
      <claim-text>and computer-readable program means for storing the document within the document directory hierarchy at a location corresponding to a category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="39">
      <claim-text>39. The computer program product of claim 38, further including computer-readable program means for building a path-to-name translation listing containing a directory path and category name for at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="40">
      <claim-text>40. The computer program product of claim 38, wherein computer-readable program means for providing a relevance ranking includes: computer-readable program means for creating at least one term file vector by indexing at least one of the plurality of terms files within the class hierarchy;</claim-text>
      <claim-text>and computer-readable program means for creating a document vector by indexing a document which is selected for classification within a document directory hierarchy.</claim-text>
    </claim>
    <claim num="41">
      <claim-text>41. The computer program product of claim 38, wherein the computer-readable program means for storing further includes computer-readable program means for defining the location according to a directory path within a path-to-name translation listing which corresponds to the category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="42">
      <claim-text>42. The article of manufacture of claim 38, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="43">
      <claim-text>43. The article of manufacture of claim 38, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="44">
      <claim-text>44. The article of manufacture of claim 38, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="45">
      <claim-text>45. A computer-readable medium recording software, the software disposed on a computer to perform a method for classifying a document based on content within a class hierarchy, the class hierarchy comprising a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms, the method comprising: initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; displaying the class hierarchy; accepting a user-selected command for manipulating the class hierarchy; processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing the category command further comprising: - storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; - storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; - storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; - storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; - storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; making one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms file according to frequency of occurrence in the corresponding terms file; building a path-to-name translation listing containing each category name and unique directory pair for each of the plurality of category nodes; indexing the class hierarchy using Fulcrum to create an index file containing term file vectors corresponding to the plurality of terms files; classifying at least one document within a document directory hierarchy using terms vectors;</claim-text>
      <claim-text>and indexing the document directory hierarchy using Fulcrum.</claim-text>
    </claim>
    <claim num="46">
      <claim-text>46. The computer-readable medium according to claim 45, wherein the step of creating is performed for each one of the plurality of category nodes being a leaf node.</claim-text>
    </claim>
    <claim num="47">
      <claim-text>47. The computer-readable medium according to claim 45, the step of creating further comprising the following steps: retrieving a set of defining terms for one of the plurality of category nodes; forming a terms file within the unique directory in the class hierarchy corresponding to the one of the plurality of category nodes;</claim-text>
      <claim-text>and storing the set of defining terms within the terms file.</claim-text>
    </claim>
    <claim num="48">
      <claim-text>48. The computer-readable medium according to claim 45, the step of classifying further comprising the following steps: creating a document vector for a document to be classified within the class hierarchy; searching the class hierarchy for the terms vectors which are relevant to the document to determine appropriate categorization of the document, the step of searching if successful returning a list of matching category names, and otherwise notifying a system administrator that the step of searching was unsuccessful;</claim-text>
      <claim-text>and storing the document in directories corresponding to the matching category names if the step of searching is successful.</claim-text>
    </claim>
    <claim num="49">
      <claim-text>49. The computer readable medium according to claim 48, wherein the step of searching comprises: comparing the document vector to the term vectors using Fulcrum, the step of comparing returning a list of matching categories within the class hierarchy according to user-defined criteria, the list of matching categories corresponding to the at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="50">
      <claim-text>50. The computer-readable medium according to claim 48, the step of storing further comprising the following steps: retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing; creating directories within the document directory hierarchy corresponding to the directory path if not already existing within the document directory hierarchy;</claim-text>
      <claim-text>and adding the document to a leaf directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="51">
      <claim-text>51. The computer-readable medium according to claim 50, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="52">
      <claim-text>52. The computer-readable medium according to claim 48, the step of storing further comprising the following steps: creating a directory within the document directory hierarchy corresponding to each of the unique directories within the class hierarchy; retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing;</claim-text>
      <claim-text>and adding the document to a directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="53">
      <claim-text>53. The computer-readable medium according to claim 52, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="54">
      <claim-text>54. The computer-readable medium recording software of claim 45, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="55">
      <claim-text>55. The computer-readable medium recording software of claim 45, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="56">
      <claim-text>56. The computer-readable medium recording software of claim 45, wherein each of said contiguous multi-term portions is 48 words or longer.</claim-text>
    </claim>
    <claim num="57">
      <claim-text>57. A computer data signal embodied in a carrier wave and representing sequences of instructions which, when executed by a processor, cause said processor to classify a document based on content within a class hierarchy, by performing the following steps: initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; displaying the class hierarchy; accepting a user-selected command for manipulating the class hierarchy; processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing the category command further comprising: - storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; - storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; - storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; - storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; - storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type;</claim-text>
      <claim-text>creating the class hierarchy by providing a plurality of category nodes stored in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms; making one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms files according to frequency of occurrence in the corresponding terms file; providing a relevance ranking between the term vectors and the document by comparing said document vector with the at least one term vector;</claim-text>
      <claim-text>and storing the document within the document directory hierarchy at a location corresponding to a category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="58">
      <claim-text>58. The computer data signal of claim 57, further including computer-readable program means for building a path-to-name translation listing containing a directory path and category name for at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="59">
      <claim-text>59. The computer data signal of claim 57, wherein the computer-readable program means for providing a relevance ranking includes: computer-readable program means for creating at least one term file vector by indexing at least one of the plurality of terms files within the class hierarchy;</claim-text>
      <claim-text>and computer-readable program means for creating a document vector by indexing a document which is selected for classification within a document directory hierarchy.</claim-text>
    </claim>
    <claim num="60">
      <claim-text>60. The computer data signal of claim 57, wherein the step of storing further includes a step of defining the location according to a directory path within a path-to-name translation listing which corresponds to the category node having a term vector which has a relevance ranking that matches a selected criteria.</claim-text>
    </claim>
    <claim num="61">
      <claim-text>61. The computer data signal of claim 57, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="62">
      <claim-text>62. The computer data signal of claim 57, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="63">
      <claim-text>63. The computer data signal of claim 57, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
    <claim num="64">
      <claim-text>64. A computer data signal embodied in a carrier wave comprising: means for initializing the class hierarchy, the class hierarchy having a root category node within a tree data structure, the root category node having a user-defined category name; means for displaying the class hierarchy; means for accepting a user-selected command for manipulating the class hierarchy; means for processing a category command in response to the user-selected command having a first predefined state, causing the class hierarchy to contain a plurality of category nodes, said processing means further comprising: - means for storing a category name in one of the plurality of category nodes, wherein each of the plurality of category nodes corresponds to a unique directory; - means for storing a NodeID within one of the plurality of category nodes, the NodeID defining the unique directory; - means for storing a nodetype within one of the plurality of category nodes, the nodetype when having a predefined type allowing a new category node to be added to a selected one of the plurality of category nodes, and otherwise preventing the new category node from being added to the selected one of the plurality of category nodes; - means for storing a ParentID within one of the plurality of category nodes, the ParentID indicating a NodeID of a parent category node; - means for storing a LinkID within a first one of the plurality of category nodes, the LinkID indicating a NodeID of a second one of the plurality of category nodes when the nodetype is of a predefined type; means for creating a class hierarchy by providing a plurality of category nodes in a tree data structure within a memory, each of the plurality of category nodes having a category name corresponding to a unique directory and a set of defining terms; means for creating a plurality of terms files, each of the plurality of terms files corresponding to one of the plurality of category nodes and including a corresponding set of defining terms and one or more document fragments stored under said one of said plurality of category nodes, said set of defining terms including a term corresponding to one of said plurality of category nodes and said one or more document fragments including a reference to one or more documents and indexing information indicating contiguous multi-term portions of said documents to be extracted during indexing, said set of defining terms and said document fragments together providing a definition of files to be contained in said unique directory referenced by said one of said plurality of category nodes; means for creating one or more term vectors for each of said terms files, each of said term vectors containing a weight assigned to each of one or more common terms of the corresponding terms files according to frequency of occurrence in the corresponding terms file; means for creating a path-to-name translation listing containing each category name and unique directory pair for each of the plurality of category nodes; means for indexing the class hierarchy using Fulcrum to create an index file containing term vectors corresponding to the plurality of term vectors; means for classifying at least one document within a document directory hierarchy using the term vectors;</claim-text>
      <claim-text>and means for indexing the document directory hierarchy using Fulcrum.</claim-text>
    </claim>
    <claim num="65">
      <claim-text>65. The computer data signal according to claim 64, wherein the step of creating is performed for each one of the plurality of category nodes being a leaf node.</claim-text>
    </claim>
    <claim num="66">
      <claim-text>66. The computer data signal according to claim 64, the step of creating further comprising the following steps: retrieving a set of defining terms for one of the plurality of category nodes; forming a terms file within the unique directory in the class hierarchy corresponding to the one of the plurality of category nodes;</claim-text>
      <claim-text>and storing the set of defining terms within the terms file.</claim-text>
    </claim>
    <claim num="67">
      <claim-text>67. The computer data signal according to claim 64, the step of classifying further comprising the following steps: creating a document vector for a document to be classified within the class hierarchy; searching the class hierarchy for the terms vectors which are relevant to the document to determine appropriate categorization of the document, the step of searching if successful returning a list of matching category names, and otherwise notifying a system administrator that the step of searching was unsuccessful;</claim-text>
      <claim-text>and storing the document in directories corresponding to the matching category names if the step of searching is successful.</claim-text>
    </claim>
    <claim num="68">
      <claim-text>68. The computer data signal according to claim 67, wherein the step of searching comprises: comparing the document vector to the term vectors using Fulcrum, the step of comparing returning a list of matching categories within the class hierarchy according to user-defined criteria, the list of matching categories corresponding to the at least one of the plurality of category nodes.</claim-text>
    </claim>
    <claim num="69">
      <claim-text>69. The computer data signal according to claim 67, the step of storing further comprising the following steps: retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing; creating directories within the document directory hierarchy corresponding to the directory path if not already existing within the document directory hierarchy;</claim-text>
      <claim-text>and adding the document to a leaf directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="70">
      <claim-text>70. The computer data signal according to claim 69, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="71">
      <claim-text>71. The computer data signal according to claim 67, the step of storing further comprising the following steps: creating a directory within the document directory hierarchy corresponding to each of the unique directories within the class hierarchy; retrieving a directory path corresponding to one of the matching category names utilizing the path-to-name translation listing;</claim-text>
      <claim-text>and adding the document to a directory within the document directory hierarchy corresponding to the retrieved directory path.</claim-text>
    </claim>
    <claim num="72">
      <claim-text>72. The computer data signal according to claim 71, wherein the step of adding comprises linking the document to the directory.</claim-text>
    </claim>
    <claim num="73">
      <claim-text>73. The computer data signal of claim 64, wherein each of said contiguous multi-term portions is one sentence or longer.</claim-text>
    </claim>
    <claim num="74">
      <claim-text>74. The computer data signal of claim 64, wherein each of said contiguous multi-term portions is one paragraph or longer.</claim-text>
    </claim>
    <claim num="75">
      <claim-text>75. The computer data signal of claim 64, wherein each of said contiguous multi-term portions is 25 words or longer.</claim-text>
    </claim>
  </claims>
</questel-patent-document>