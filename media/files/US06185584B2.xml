<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185584B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185584</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185584</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="25181899" extended-family-id="42097995">
      <document-id>
        <country>US</country>
        <doc-number>08801726</doc-number>
        <kind>A</kind>
        <date>19970212</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08801726</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43150619</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>80172697</doc-number>
        <kind>A</kind>
        <date>19970212</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08801726</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/21        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>21</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>715201000</text>
        <class>715</class>
        <subclass>201000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>707999202</text>
        <class>707</class>
        <subclass>999202</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>707999204</text>
        <class>707</class>
        <subclass>999204</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/21</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>21</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99953</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99953</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99955</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99955</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>2</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>4</number-of-drawing-sheets>
      <number-of-figures>4</number-of-figures>
      <image-key data-format="questel">US6185584</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and system for version management and archiving of electronic articles</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>KULAKOWSKI JOHN E</text>
          <document-id>
            <country>US</country>
            <doc-number>4575827</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4575827</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>CROUSE DONALD D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5764972</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5764972</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>MILLER WILLIAM A</text>
          <document-id>
            <country>US</country>
            <doc-number>5832520</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5832520</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>BALL THOMAS J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5860071</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5860071</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Douglis, F and Ball, T. "Tracking and Viewing Changes on the Web" USENIX Technical Conference, Jan. 1996, pp. 165-176.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Synopsys, Inc.</orgname>
            <address>
              <address-1>Mountain View, CA, US</address-1>
              <city>Mountain View</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SYNOPSYS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Paik, Young</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Lewis, Julie</name>
            <address>
              <address-1>Fremont, CA, US</address-1>
              <city>Fremont</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Kaul, Janet M.</name>
            <address>
              <address-1>Santa Clara, CA, US</address-1>
              <city>Santa Clara</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Wagner, Murabito &amp; Hao LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Choules, Jack</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system and method for automated electronic document maintenance/deletion of articles in an electronic document system.
      <br/>
      In one embodiment, the present invention determines whether the contents of an electronic copy of an article are accurately reflected in metadata corresponding to the electronic copy of the article.
      <br/>
      In the present embodiment, the electronic copy of the article is believed to be located within an electronic document system.
      <br/>
      Next, provided metadata corresponding to the electronic copy of the article does not exist, the present embodiment creates metadata corresponding to the electronic copy of the article.
      <br/>
      Provided that the electronic copy of the article can not be located within the electronic document system, the present invention deletes any metadata corresponding to the electronic copy of the article.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>TECHNICAL FIELD</heading>
    <p num="1">
      This invention relates to electronic document management.
      <br/>
      Specifically, the present invention relates to maintaining articles in and deleting articles from an electronic document management system.
    </p>
    <heading>BACKGROUND ART</heading>
    <p num="2">
      The Internet, including the World Wide Web (hereinafter the Web), makes a large amount of information accessible to anyone connected to the Internet.
      <br/>
      In order to access the Internet, a user typically subscribes to an on-line service provider.
      <br/>
      Using, for example, a modem coupled to a computer, the user contacts the service provider who, in turn, connects the user to the Internet.
      <br/>
      Once the user is coupled to the Internet, the user is said to be "on-line" (a user who is not on-line is referred to as being "off-line").
      <br/>
      When on-line, the user is able to access numerous resources available through conduits such as, for example, the Web.
    </p>
    <p num="3">
      The Web is comprised of voluminous linked "sites".
      <br/>
      Various linked Web sites contain information of virtually innumerable type, style, and content.
      <br/>
      Web sites are often comprised of a plurality of Web documents referred to as Web pages.
      <br/>
      In general, the layout language for a Web document is Hypertext Markup Language (HTML).
      <br/>
      Web documents are stored in HTML format in association with "server" software on remote servers.
      <br/>
      A Web document is given a "Uniform Resource Locator" (URL) which is essentially an address path identifying the server which hosts the desired document plus the location of the document on the server.
      <br/>
      Using a "browser" software, an end-user can send a request from a client computer to access a document stored at a particular URL.
      <br/>
      Browser software such as Netscape (tm)  Navigator, of Netscape Communications Corporation of Mountain View, Calif., is well known and widely available.
      <br/>
      When the server receives the user's request, it sends the requested HTML Web document to the client where the document can be displayed.
      <br/>
      The communications protocol used in making such a request and in transferring Web documents is "Hypertext Transfer Protocol" (HTTP).
      <br/>
      For more information about the Web, see for example T. Berners-Lee, R. Cailliau, A. Loutonen, H. F. Nielsen, and A. Secret, "The World Wide Web," Communications of the ACM, vol. 37(8), August 1994.
    </p>
    <p num="4">
      In addition to the Internet, other "limited access on-line" information retrieval systems such as "Intranet" systems also exist.
      <br/>
      An Intranet system operates in a manner similar to the manner in which a conventional Internet system operates.
      <br/>
      However, access to the Intranet is controlled/restricted, for example, to a specific user group, or to users accessing the Intranet from specified locations.
      <br/>
      In a business environment, for example, an Intranet system containing information relevant to a particular business may only be accessed from terminals present on the grounds of the business.
      <br/>
      In so doing, it is presumed that the business' information will only be accessed by employees.
      <br/>
      Similarly, access to the Intranet can be limited only to users knowing, for example, a specific password.
      <br/>
      Thus, the business' Intranet system is not available to the general public.
      <br/>
      Like the Internet, information contained in an Intranet system is frequently arranged in Web sites comprised of various linked Web pages.
    </p>
    <p num="5">
      Although Internet and Intranet systems conveniently provide information to various users, maintaining articles within or deleting articles from an Internet or Intranet system is often a complex and time-consuming task.
      <br/>
      Maintaining or updating an article typically involves verifying that the correct metadata records exist for a given article, verifying that an article exists for a given metadata record.
      <br/>
      Internet and Intranet maintenance further includes determining whether the most current version of an article is contained within the Internet or Intranet system, and insuring that articles are properly archived.
      <br/>
      For purposes of the present application, archiving refers to removing an article from active retrieval, or requiring special retrieval commands to any Internet or Intranet system, including search engines.
      <br/>
      In addition to maintaining articles, it is often necessary to delete articles from an Internet or Intranet system.
      <br/>
      Deleting an article from an Internet or Intranet system often requires contacting the content creator.
      <br/>
      In many instances, contacting the content creator is not an simple task for the average Internet or Intranet user.
      <br/>
      Thus, it can be quite difficult for the average Internet or Intranet user to maintain/update articles in or delete articles from an Internet or Intranet system.
      <br/>
      Because it is so difficult for users to maintain and/or delete articles, many Internet or Intranet systems have one or more persons solely dedicated to performing such tasks.
      <br/>
      Such persons are commonly referred to as webmasters.
      <br/>
      As a result of requiring a webmaster or webmasters, conventional Internet and Intranet systems have substantial additional cost associated therewith.
    </p>
    <p num="6">
      Thus, a need exists for a method and system which efficiently allows a user to evaluate the status of articles in an Internet or Intranet system.
      <br/>
      A further need exists for a method and system for efficiently archiving articles in an Internet or Intranet system.
      <br/>
      Yet another need exists for a system and method which allows a user to readily delete articles from an Internet or Intranet system.
    </p>
    <heading>DISCLOSURE OF THE INVENTION</heading>
    <p num="7">The present invention provides a method and system which efficiently allows a user to evaluate the status of articles in an Internet or Intranet system; a method and system for efficiently archiving articles in an Internet or Intranet system; and a system and method which allows a user to readily delete articles from an Internet or Intranet system.</p>
    <p num="8">
      Specifically, in one embodiment, the present invention determines whether the contents of an electronic copy of an article are accurately reflected in metadata corresponding to the electronic copy of the article.
      <br/>
      In the present embodiment, the electronic copy of the article is believed to be located within an electronic document system.
      <br/>
      Next, provided metadata corresponding to the electronic copy of the article does not exist, the present embodiment creates metadata corresponding to the electronic copy of the article.
      <br/>
      Provided that the electronic copy of the article can not be located within the electronic document system, the present invention deletes any metadata corresponding to the electronic copy of the article.
    </p>
    <p num="9">
      In another embodiment, the present invention receives an article version identifier.
      <br/>
      The article version identifier is associated with one of a plurality of versions of an electronic copy of an article.
      <br/>
      Each of the plurality of versions of the electronic copy of the article is contained within an electronic document system.
      <br/>
      Next, the present invention archives those electronic copies of the article which are not associated with the article version identifier.
      <br/>
      After the archiving step, the present invention updates metadata associated with the archived versions of the article, such that the updated metadata indicates which of the plurality of the versions of the electronic copy of the article are archived.
    </p>
    <p num="10">
      In yet another embodiment, the present invention receives a request to delete an electronic copy of an article from an electronic document system.
      <br/>
      The present invention then forwards the request to delete the electronic copy of the article to a delete site.
      <br/>
      At the delete site, the present invention generates a formatted request to delete the electronic copy of the article.
      <br/>
      Next, the present invention forwards the formatted request to delete the electronic copy of the article to the content creator of the article.
      <br/>
      After receiving a response to the formatted request from the content creator of the article, the present invention deletes the electronic copy of the article from the electronic document system.
    </p>
    <p num="11">Thus, the present invention provides a method and system which efficiently allows a user to evaluate the status of articles in an Internet or Intranet system; a method and system for efficiently archiving articles in an Internet or Intranet system; and a system and method which allows a user to readily delete articles from an Internet or Intranet system.</p>
    <p num="12">These and other objects and advantages of the present invention will no doubt become obvious to those of ordinary skill in the art after having read the following detailed description of the preferred embodiments which are illustrated in the various drawing figures.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="13">
      The accompanying drawings, which are incorporated in and form a part of this specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention:
      <br/>
      FIG. 1 is a schematic diagram of an exemplary computer system used as a part of an automated electronic document maintenance/deletion (AEDMD) system in accordance with the present invention.
      <br/>
      FIG. 2 is a flow chart illustrating steps performed by one embodiment of the present AEDMD system in accordance with the present claimed invention.
      <br/>
      FIG. 3 is a flow chart illustrating steps performed by another embodiment of the present AEDMD system in accordance with the present claimed invention.
      <br/>
      FIG. 4 is a flow chart illustrating steps performed by still another embodiment of the present AEDMD system in accordance with the present claimed invention.
    </p>
    <heading>BEST MODE FOR CARRYING OUT THE INVENTION</heading>
    <p num="14">
      Reference will now be made in detail to the preferred embodiments of the invention, examples of which are illustrated in the accompanying drawings.
      <br/>
      While the invention will be described in conjunction with the preferred embodiments, it will be understood that they are not intended to limit the invention to these embodiments.
      <br/>
      On the contrary, the invention is intended to cover alternatives, modifications and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims.
      <br/>
      Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention.
      <br/>
      However, it will be obvious to one of ordinary skill in the art that the present invention may be practiced without these specific details.
      <br/>
      In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.
    </p>
    <p num="15">
      Some portions of the detailed descriptions which follow are presented in terms of procedures, logic blocks, processing, and other symbolic representations of operations on data bits within a computer memory.
      <br/>
      These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art.
      <br/>
      In the present application, a procedure, logic block, process, etc., is conceived to be a self-consistent sequence of steps or instructions leading to a desired result.
      <br/>
      The steps are those requiring physical manipulations of physical quantities.
      <br/>
      Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a computer system.
      <br/>
      It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.
    </p>
    <p num="16">
      It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities.
      <br/>
      Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the present invention, discussions utilizing terms such as "receiving," "determining," "forwarding," "deleting," "archiving," or the like, refer to the actions and processes of a computer system, or similar electronic computing device.
      <br/>
      The computer system or similar electronic computing device manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission, or display devices.
      <br/>
      The present invention is also well suited to the use of other computer systems such as, for example, optical and mechanical computers.
    </p>
    <heading>COMPUTER SYSTEM ENVIRONMENT OF THE PRESENT INVENTION</heading>
    <p num="17">
      With reference now to FIG. 1, portions of the present automated electronic document maintenance/deletion (AEDMD) system are comprised of computer-readable and computer-executable instructions which reside, for example, in computer-usable media of a computer system.
      <br/>
      FIG. 1 illustrates an exemplary computer system 100 used as a part of an AEDMD system in accordance with the present invention.
      <br/>
      It is appreciated that system 100 of FIG. 1 is exemplary only and that the present invention can operate within a number of different computer systems including general purpose computers systems, embedded computer systems, and stand alone computer systems specially adapted for automatic system error analysis.
    </p>
    <p num="18">
      System 100 of FIG. 1 includes an address/data bus 102 for communicating information, and a central processor unit 104 coupled to bus 102 for processing information and instructions.
      <br/>
      System 100 also incudes data storage features such as a computer usable volatile memory 106, e.g. random access memory (RAM), coupled to bus 102 for storing information and instructions for central processor unit 104, computer usable non-volatile memory 108, e.g. read only memory (ROM), coupled to bus 102 for storing static information and instructions for the central processor unit 104, and a data storage device 110 (e.g., a magnetic or optical disk and disk drive) coupled to bus 102 for storing information and instructions.
      <br/>
      A signal input output comm device 112 (e.g. a modem) coupled to bus 102 is also included in system 100 of FIG. 1.
      <br/>
      System 100 of the present AEDMD embodiment also includes an optional alphanumeric input device 114 including alphanumeric and function keys is coupled to bus 102 for communicating information and command selections to central processor unit 104.
      <br/>
      System 100 also optionally includes a cursor control device 116 coupled to bus 102 for communicating user input information and command selections to central processor unit 104.
      <br/>
      System 100 of the present embodiment also includes an optional display device 118 coupled to bus 102 for displaying information.
    </p>
    <p num="19">
      Display device 118 of FIG. 1, utilized with the present AEDMD system, may be a liquid crystal device, cathode ray tube, or other display device suitable for creating graphic images and alphanumeric characters recognizable to a user.
      <br/>
      Optional cursor control device 116 allows the computer user to dynamically signal the two dimensional movement of a visible symbol (cursor) on a display screen of display device 118.
      <br/>
      Many implementations of cursor control device 116 are known in the art including a trackball, mouse, touch pad, joystick or special keys on alphanumeric input device 114 capable of signaling movement of a given direction or manner of displacement.
      <br/>
      Alternatively, it will be appreciated that a cursor can be directed and/or activated via input from alphanumeric input device 114 using special keys and key sequence commands.
      <br/>
      The present invention is also well suited to directing a cursor by other means such as, for example, voice commands.
      <br/>
      A more detailed discussion of the present AEDMD system and the steps performed by the AEDMD system is found below.
    </p>
    <heading>GENERAL DESCRIPTION OF THE AUTOMATIC SYSTEM ERROR ANALYSIS SYSTEM OF THE PRESENT INVENTION</heading>
    <p num="20">
      With reference next to FIG. 2, a flow chart 200 of steps used by one embodiment of the present AEDMD system is shown.
      <br/>
      Flow chart 200 includes processes of the present AEDMD system which are comprised of computer-readable and computer-executable instructions.
      <br/>
      The computer-readable and computer-executable instructions reside, for example, in data storage features such as computer usable volatile memory 106 and/or computer usable non-volatile memory 108.
      <br/>
      The computer-readable and computer-executable instructions are used to control, for example, the operation and functioning of central processor unit 104.
      <br/>
      In step 201, the present invention receives an article version identifier.
      <br/>
      As an example, the present embodiment receives from a user of the present invention, the version number of the most recent version of an article.
      <br/>
      In the present embodiment, it will be understood that the electronic document system may contain several versions of the same article.
      <br/>
      As an example, a newer version of an article may contain revisions, additions, deletions, and the like which are not found in an older version of the article.
      <br/>
      For purposes of the present application, the electronic document system is comprised, for example, of the Internet or an Intranet.
      <br/>
      However, the present invention is also well suited to use with various other types of electronic document systems.
    </p>
    <p num="21">
      As shown in step 202, the present invention then determines which of a plurality of versions of the article is associated with the article version identifier.
      <br/>
      In the above example, the most recent version of the article is associated with the article version identifier.
    </p>
    <p num="22">
      At step 204, the present embodiment of the invention determines, for each of the plurality of versions of the article, whether each respective version is older than the version associated with the received version identifier.
      <br/>
      In the present example, the present invention would find that all existing versions, except for the most recent version, would be older than the version associated with the received version identifier.
    </p>
    <p num="23">
      As shown in step 206, the present embodiment archives every version which is older than the version of the article associated with the article version identifier.
      <br/>
      The present embodiment places the archived versions of the article into an archive file.
    </p>
    <p num="24">
      Next, at step 208, the present embodiment updates the metadata (e.g. identifying information such as the title, content, and the like) associated with the archived versions of the article to indicate that the versions have been archived.
      <br/>
      Thus, a user seeking to access an older archived version of the article will be informed that the version has previously been archived.
      <br/>
      The present embodiment is, however, well suited to allowing the user to access archived versions of the desired article.
      <br/>
      Additionally, the present embodiment is also well suited to entering metadata of the article into, for example, a relational database management system, a flat file database, or other database system.
      <br/>
      As shown in step 204, when an article version is not older than the article associated with the received article version identifier, the present embodiment skips steps 206 and 208.
      <br/>
      Also, the present embodiment is well suited to initiating the steps of flow chart 200, based upon any one of numerous conditions.
      <br/>
      For example, the present invention is well suited to periodically automatically archiving all but the most recent version of the plurality of versions of the article.
      <br/>
      The present embodiment is further well suited to automatically archiving all but the most recent version of the plurality of versions of the article when the plurality of versions of the article exceeds a predetermined quantity.
      <br/>
      In yet another embodiment, the present invention automatically archives all but the most recent version of the plurality of versions of the article when prompted to do so by a user.
    </p>
    <p num="25">
      An example of computer-readable and computer-executable instructions for performing the present embodiment are given below.
      <br/>
      As mentioned above, such computer-readable and computer-executable instructions reside, for example, in data storage features such as computer usable volatile memory 106 and/or computer usable non-volatile memory 108 of FIG. 1.
    </p>
    <p num="26">
      --
      <br/>
      -- - � /usr/local/bin/sybper1
      <br/>
      -- $cc= "jmk ypaik";
      <br/>
      -- $debug = 1;
      <br/>
      -- --- These are temporary
      <br/>
      -- sub log +
      <br/>
      --      print ("@_" ) ;
      <br/>
      -- }
      <br/>
      -- sub fatal +
      <br/>
      --      die ("@_" ) ;
      <br/>
      -- }
      <br/>
      -- sub error +
      <br/>
      --      warn ( "@_") ;
      <br/>
      -- }
      <br/>
      -- - Set up some initial parameters
      <br/>
      -- $ .vertline. =1;
      <br/>
      -- $ENV (`DSQUERY`) = "SYB_PROD01";
      <br/>
      -- $sourcefile="/home/solvitsub/dbase/source_descriptions";
      <br/>
      -- chop ($user= `whoami`);
      <br/>
      -- -  Get the info for which files to archive
      <br/>
      -- if ($-ARGV � = 2) +
      <br/>
      --      die ( "
      <br/>
      --      usage: $0 endversion toolabbreviation origin.backslash.n  where:
      <br/>
      --  origin is + in .vertline. ex } .backslash.n");
      <br/>
      -- }
      <br/>
      -- &amp;load_sources;
      <br/>
      -- ($version_to, $product_code, $origin) = @ARGV;
      <br/>
      -- @archfiles=&amp;archive_list (@ ARGV);
      <br/>
      -- @archfiles=&amp;archive_list (@ ARGV);
      <br/>
      -- foreach $archfile (@archfiles) +
      <br/>
      --      next if ($archfile = .about. /_deleted/) ;
      <br/>
      --      next if ($archfile = .about. /Archive/);
      <br/>
      --      ($doc_id) = $archfile = .about. /.backslash./(� .backslash./�+)$/;
      <br/>
      --      ($source) = $archfile = .about./.backslash./(�
      <br/>
      --  .backslash./�+).dagger./$doc_id$/;
      <br/>
      --      $body ($source). = "Archive: $doc_id.backslash.n";
      <br/>
      -- }
      <br/>
      -- $subj = "Archived SOLV-IT� articles";
      <br/>
      -- foreach $key (keys %body) +
      <br/>
      --      &amp;mail_off( "key-$origin", $user, $subj, "$body +$key} ) .backslash.n",
      <br/>
      --  " " ) ;
      <br/>
      -- - print   " ($to, $user, $subj, $body +$key} ) .backslash.n";
      <br/>
      -- }
      <br/>
      -- print "Done .backslash.n";
      <br/>
      -- exit 0;
      <br/>
      -- sub archive_list +
      <br/>
      --      local ($origin, $version_to, $product_code) = @_;
      <br/>
      --      local (@results, @out) = ( ) ;
      <br/>
      --      $dbproc=&amp;dblogin ("solvit", "solvit");
      <br/>
      --      &amp;dbuse ($dbproc, "solvit" ) ;
      <br/>
      --      &amp;dbcmd ($dbproc, "solvit_metadata_archive .backslash. "
      <br/>
      --  $origin.backslash.", .backslash." $version_to.backslash.",
      <br/>
      --      .backslash." $product_co
      <br/>
      -- de.backslash." ");
      <br/>
      --      &amp;dbsqlexec($dbproc) ;
      <br/>
      --      &amp;dbresults($dbproc) ;
      <br/>
      --      while (@results = &amp;dbnextrow ($dbproc)) +
      <br/>
      --        for  $i  (0..$-results) +
      <br/>
      --              $results �$i� = .about. s/ .backslash. s + / / g;
      <br/>
      --        }
      <br/>
      --        @out= (@out, @results) ;
      <br/>
      -- }
      <br/>
      -- &amp;dbclose ($dbproc) ;
      <br/>
      -- return @out;
      <br/>
      -- }
      <br/>
      -- sub load_sources +
      <br/>
      --      open (SOURCEFILE, $sourcefile) .vertline. .vertline. die ("This
      <br/>
      --  program must be run on tiedye") ;
      <br/>
      --      @lines=&lt;SOURCEFILE&gt;;
      <br/>
      --      close (SOURCEFILE) ;
      <br/>
      --      foreach $n (0..$- lines) +
      <br/>
      --        if   ($lines �$n� = .about. /  name: .backslash. s* ( �
      <br/>
      --  .backslash.s� + ) .backslash. s * /) +
      <br/>
      --             ($source) = $1;
      <br/>
      --             ($abrv ($source} ) =$lines �$n+1� = .about. /  abbrev:
      <br/>
      --  .backslash. s * ( � .backslash.s*/;
      <br/>
      --        }
      <br/>
      --      }
      <br/>
      -- }
      <br/>
      -- sub mail_off +
      <br/>
      --      local ($to, $from, $subj, $cont, $cc) =@_;
      <br/>
      --      if ($debug==1) +
      <br/>
      --        print  "To: $to.backslash.n";
      <br/>
      --        print  "From: $from .backslash.n";
      <br/>
      --        print  "Ce: ypaik.backslash..backslash.n";
      <br/>
      --        print  "Subject: $subj.backslash.n.backslash.n";
      <br/>
      --        print  "$cont.backslash.n";
      <br/>
      -- }
      <br/>
      -- else   +
      <br/>
      --      open (MAIL, " .vertline. /usr / lib / sendmail -oi -t" ) .vertline.
      <br/>
      --  .vertline. die ( "Can't send mail.backslash.n");
      <br/>
      --      print MAIL "To: $to.backslash.n" ;
      <br/>
      --      print MAIL "From: $from .backslash.n " ;
      <br/>
      --      print MAIL "Cc: ypaik.backslash.n";
      <br/>
      --      print MAIL "Subject: $subj.backslash.n.backslash.n" ;
      <br/>
      --      print MAIL "$cont.backslash.n ";
      <br/>
      --      close (MAIL) ;
      <br/>
      --      }
      <br/>
      -- }
    </p>
    <p num="27">
      With reference next to FIG. 3, a flow chart 300 of steps used by another embodiment of the present AEDMD system is shown.
      <br/>
      Flow chart 300 includes processes of the present AEDMD system which are comprised of computer-readable and computer-executable instructions.
      <br/>
      The computer-readable and computer-executable instructions reside, for example, in data storage features such as computer usable volatile memory 106 and/or computer usable non-volatile memory 108.
      <br/>
      The computer-readable and computer-executable instructions are used to control, for example, the operation and functioning of central processor unit 104.
      <br/>
      In step 302, the present invention receives a request to delete an article.
      <br/>
      The request is generated, for example, by a user who wishes purge the electronic document system of unnecessary or outdated articles.
    </p>
    <p num="28">
      At step 304, the present embodiment of the present AEDMD system determines if the request to delete is from the content creator of the article desired to be deleted.
      <br/>
      If so, the present embodiment immediately deletes the article from the electronic document system as shown in step 306.
      <br/>
      If the request to delete the article does not come from the content creator, the present embodiment then proceeds to step 308.
    </p>
    <p num="29">
      As shown in step 308, the present embodiment forwards the request to delete to a delete site.
      <br/>
      In the present embodiment, the request to delete is forwarded by the present embodiment to a URL or e-mail address associated with the delete site.
    </p>
    <p num="30">
      Referring next to step 310, at the delete site, the present embodiment formats the request to delete.
      <br/>
      Specifically, the present invention restructures the request to delete by adding the electronic address of the user initially generating the request to delete and by including instructions on how to respond to the request to delete.
      <br/>
      Although such formatting steps are performed by the present embodiment, the present invention is also well suited to formatting the request to delete in various other manners.
    </p>
    <p num="31">
      At step 312, the present embodiment then forwards the formatted request to delete to the content creator.
      <br/>
      In the present embodiment, the request to delete is forwarded by the present embodiment to a URL or e-mail address associated with the content creator.
    </p>
    <p num="32">
      At step 314, upon receiving an affirmative response from the content creator, the present embodiment then removes the article from the electronic document system.
      <br/>
      A typical affirmative response from the content creator simply indicates that the article is no longer needed in the electronic document system.
      <br/>
      Although a response from the content creator is employed in the present embodiment, the present invention is also well suited to simply notifying the content creator that an article is going to be or has already been deleted by the invention described in FIG. 3.
    </p>
    <p num="33">
      As shown in step 316, the present invention then deletes the article indicated in the request to delete.
      <br/>
      Additionally, the present invention also deletes the metadata associated with the deleted article.
      <br/>
      Finally, a notice of the deletion is sent to selected parties.
      <br/>
      In the present embodiment, these selected parties include, but are not limited to, the author of the article, the requester of the deletion, a knowledgeable manager, and/or a reviewer (if applicable).
      <br/>
      As a result, the present embodiment not only removes an undesired article, but also updates metadata to reflect the fact that the article has been removed from the electronic document system.
    </p>
    <p num="34">
      With reference next to FIG. 4, a flow chart 400 of steps used by yet another embodiment of the present AEDMD system is shown.
      <br/>
      Flow chart 400 includes processes of the present AEDMD system which are comprised of computer-readable and computer-executable instructions.
      <br/>
      The computer-readable and computer-executable instructions reside, for example, in data storage features such as computer usable volatile memory 106 and/or computer usable non-volatile memory 108.
      <br/>
      The computer-readable and computer-executable instructions are used to control, for example, the operation and functioning of central processor unit 104.
      <br/>
      In step 402, the present invention examines the contents of existing articles and corresponding metadata residing within an electronic document system and/or database.
    </p>
    <p num="35">
      At step 404, the present embodiment then determines whether any metadata exists for the examined articles.
      <br/>
      If no metadata exists for an article residing within the electronic document system, the present embodiment proceeds to step 406.
    </p>
    <p num="36">
      At step 406, where no metadata exists for an article residing within the electronic document system, the present embodiment creates metadata for the examined article or articles.
      <br/>
      Thus, the present embodiment updates the electronic document system to properly include corresponding metadata for every article in the electronic document system.
    </p>
    <p num="37">If at step 404, metadata does exist for the articles residing within the electronic document system, the present embodiment proceeds to step 408.</p>
    <p num="38">
      At step 408, the present invention determines whether articles exist for examined metadata.
      <br/>
      If no article can be located for examined metadata, the present embodiment proceeds to step 410.
    </p>
    <p num="39">
      As shown in step 410, when no article can be located for examined metadata, the present embodiment deletes the metadata from the electronic document system.
      <br/>
      In so doing, the present invention automatically updates articles and metadata from an electronic document system.
    </p>
    <p num="40">
      The present AEDMD system is also able to use the various above-described embodiments in conjunction with each other.
      <br/>
      In so doing, the present invention provides substantial versatility and numerous options for, archiving, deleting, and updating articles of an electronic document system.
    </p>
    <p num="41">Thus, the present invention provides a method and system which efficiently allows a user to evaluate the status of articles in an Internet or Intranet system; a method and system for efficiently archiving articles in an Internet or Intranet system; and a system and method which allows a user to readily delete articles from an Internet or Intranet system.</p>
    <p num="42">
      The foregoing descriptions of specific embodiments of the present invention have been presented for purposes of illustration and description.
      <br/>
      They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, and obviously many modifications and variations are possible in light of the above teaching.
      <br/>
      The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.
      <br/>
      It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A computer-usable medium having computer-readable program code embodied therein for causing a computer to perform the electronic article updating steps of:</claim-text>
      <claim-text>a) receiving an article version identifier, said article version identifier associated with one of a plurality of versions of an electronic copy of an article, said plurality of versions of said electronic copy of said article contained within the Internet or an Intranet; b) archiving electronic copies of said article which are not associated with said article version identifier, wherein said archiving of said electronic copies further comprises automatically archiving all but a most recent version of said plurality of versions of slid electronic copy of said article when said plurality of versions of said article exceeds a predetermined quantity;</claim-text>
      <claim-text>and c) updating metadata associated with said electronic copies of said article which are not associated with said article version identifier, said updated metadata indicating which of said plurality of said versions of said electronic copy of said article are archived, and indicating that said electronic copies of said article which are not associated with said article version identifier and which have been archived are located in an archive file.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A computer-usable medium having computer-readable program code embodied therein for causing a computer to perform the steps of: a) determining whether contents of an electronic copy of an article are accurately reflected in metadata corresponding to said electronic copy of said article, said electronic copy of said article believed to be located within the Internet or an Intranet, and automatically determining whether contents of said electronic copy of said article are accurately reflected in metadata corresponding to said electronic copy of said article when the quantity of articles in said Internet or Intranet exceeds a predetermined quanity; b) provided said metadata corresponding to said electronic copy of said article does not exist, creating said metadata corresponding to said electronic copy of said article;</claim-text>
      <claim-text>and c) provided said electronic copy of said article can not be located within said Internet or Intranet, deleting said metadata corresponding to said electronic copy of said article, wherein steps a), b), and c) are performed without requiring substantial user intervention.</claim-text>
    </claim>
  </claims>
</questel-patent-document>