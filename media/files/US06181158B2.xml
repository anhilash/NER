<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181158B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181158</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181158</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="27409264" extended-family-id="41947799">
      <document-id>
        <country>US</country>
        <doc-number>09018277</doc-number>
        <kind>A</kind>
        <date>19980204</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09018277</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43163695</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>1827798</doc-number>
        <kind>A</kind>
        <date>19980204</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09018277</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>84732697</doc-number>
        <kind>A</kind>
        <date>19970423</date>
        <priority-linkage-type>2</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1997US-08847326</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>US</country>
        <doc-number>56975895</doc-number>
        <kind>A</kind>
        <date>19951208</date>
        <priority-linkage-type>B</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1995US-08569758</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="4">
        <country>US</country>
        <doc-number>37576395</doc-number>
        <kind>A</kind>
        <date>19950120</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="4">
        <doc-number>1995US-08375763</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H03K  19/177       20060101A N20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>177</subgroup>
        <classification-value>N</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H03K  19/173       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>173</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>326038000</text>
        <class>326</class>
        <subclass>038000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>326046000</text>
        <class>326</class>
        <subclass>046000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>365240000</text>
        <class>365</class>
        <subclass>240000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H03K-019/177H6</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177H6</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H03K-019/173C2</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>173C2</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>H03K-019/177H</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177H</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>H03K-019/177H3</text>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>019</main-group>
        <subgroup>177H3</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/17772</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>17772</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/1737</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>1737</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/17748</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>17748</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03K-019/1776</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>K</subclass>
        <main-group>19</main-group>
        <subgroup>1776</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>5</number-of-claims>
    <exemplary-claim>4</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>4</number-of-drawing-sheets>
      <number-of-figures>6</number-of-figures>
      <image-key data-format="questel">US6181158</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Configuration logic to eliminate signal contention during reconfiguration</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>CARTER WILLIAM S</text>
          <document-id>
            <country>US</country>
            <doc-number>4758985</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4758985</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>LENOSKI DANIEL E</text>
          <document-id>
            <country>US</country>
            <doc-number>4899307</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4899307</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>MATSUMURA TETSUYA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4961169</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4961169</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>MAENO HIDESHI</text>
          <document-id>
            <country>US</country>
            <doc-number>4969126</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4969126</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>FILLIMAN PAUL D</text>
          <document-id>
            <country>US</country>
            <doc-number>5255220</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5255220</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>ASATO CREIGTON S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5291457</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5291457</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>CHEUNG EDMOND Y, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5770951</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5770951</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>LIPP ROBERT J</text>
          <document-id>
            <country>US</country>
            <doc-number>4975640</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4975640</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>MURAYAMA JIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5282234</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5282234</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>FUJISAWA YOSHIMITU</text>
          <document-id>
            <country>US</country>
            <doc-number>5363424</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5363424</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>NEC CORP</text>
          <document-id>
            <country>JP</country>
            <doc-number>H0227597</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP02027597</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>IBM Technical Disclosure, vol. 28, No. 1, Jun. 1985, pp. 44-46.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation-in-part>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>84732697</doc-number>
              <kind>A</kind>
              <date>19970423</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5770951</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation-in-part>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>56975895</doc-number>
              <kind>A</kind>
              <date>19951208</date>
            </document-id>
            <parent-status>ABANDONED</parent-status>
          </parent-doc>
        </relation>
      </continuation>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>37576395</doc-number>
              <kind>A</kind>
              <date>19950120</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5592105</doc-number>
              <kind>A</kind>
              <date>19950107</date>
            </document-id>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Xilinx, Inc.</orgname>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>XILINX</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Cheung, Edmond Y.</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Erickson, Charles R.</name>
            <address>
              <address-1>Fremont, CA, US</address-1>
              <city>Fremont</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Bever, Hoffman &amp; Harms, LLP</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Harms, Jeanette S.</name>
          </addressbook>
        </agent>
        <agent sequence="3" rep-type="agent">
          <addressbook lang="en">
            <name>Cartier, Lois D.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Santamauro, Jon</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A structure for providing clearing/programming includes a plurality of synchronous flip-flops, and a plurality of associated two-input multiplexers.
      <br/>
      A control signal in a first logic state provided to the multiplexers provides a first signal propagation direction through the flip-flops, whereas the control signal in a second logic state provides a second signal propagation direction through the flip-flops.
      <br/>
      One method for clearing and programming a programmable logic device includes arranging a plurality of memory cells in sets, clearing the sets in a first spatial sequence, and programming the sets in a second spatial sequence.
      <br/>
      Sets of memory cells could include columns of memory cells, each column having an associated storage element.
      <br/>
      In this manner, a plurality of columns of memory cells can be cleared or programmed in any predetermined order.
      <br/>
      Thus, a method for programming a logic device may include programming a plurality of columns of memory cells in a first direction, and then programming a another plurality of columns of memory cells in a second direction.
      <br/>
      A reverse order is preferably used for clearing that logic device.
      <br/>
      Note that within one plurality of columns, any spatial sequence could be provided.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>RELATED APPLICATIONS</heading>
    <p num="1">
      The present application is a continuation-in-part application of Ser.
      <br/>
      No. 08/847,326, filed Apr. 23, 1997, now U.S. Pat. No. 5,770,951, which is a file wrapper continuation of Ser.
      <br/>
      No. 08/569,758, filed Dec. 8, 1995 , abandoned, which is a divisional of Ser.
      <br/>
      No. 08/375,763, filed Jan. 20, 1995 , issued as U.S. Pat. No. 5,592,105 on Jan. 7, 1997.
    </p>
    <heading>FIELD OF THE INVENTION</heading>
    <p num="2">
      1.
      <br/>
      Background of the Invention
    </p>
    <p num="3">The present invention relates to configuration logic, and in particular to configuration logic to eliminate signal contention during reconfiguration.</p>
    <p num="4">
      2. Description of the Related Art Configuration logic is well known in the art of programmable logic devices (PLDs).
      <br/>
      FIG. 1 illustrates a simple multiplexer 10 having three input signals I1, I2, and I3.
      <br/>
      Configuration memory cells 1, 2, and 3 provide their stored values to transistors T1, T2, and T3, respectively.
      <br/>
      Typically, memory cells 1, 2, and 3 comprise static random access memory (SRAM) cells which are well known in the art.
      <br/>
      To avoid signal contention on multiplexer output line 7, only one transistor is turned on at any one time.
    </p>
    <p num="5">
      FIG. 2 illustrates another multiplexer 20 having six input signals I1-I6.
      <br/>
      Configuration memory cells 1, 2, 3, and 4 provide their stored values to transistors T1A/T1B, T2A/T2B, T3A/T3B, and T4A/T4B, respectively.
      <br/>
      To avoid signal contention on multiplexer output line 7, only three transistors are turned on at any one time.
      <br/>
      Specifically, only two transistors of transistors TlA/TlB, T2A/T2B, and T3A/T3B are conducting at a time, and either transistor T4A or transistor T4B is conducting.
    </p>
    <p num="6">
      Before configuration of multiplexers 10 and 20, one input signal must be designated as the default input signal (i.e. the designated signal provided to output line 7).
      <br/>
      This designation ensures that there are no floating gates in inverter 5 and no undefined state for inverter 6, thereby ensuring the PLD is initially configured to a known state.
      <br/>
      In a typical PLD, all memory cells are initialized to logic zeros.
      <br/>
      To designate the default input signal in multiplexer 10, the signal of memory cell 1 is inverted, thereby ensuring that transistor T1 is conducting after initialization.
      <br/>
      Thus, signal I1 is designated the default input signal.
      <br/>
      Similarly to designate the default input signal in multiplexer 20, one signal from memory cell 4 and the signal of memory cell 1 are inverted.
      <br/>
      Thus, signal I1 is also designated the default input signal in multiplexer 20.
    </p>
    <p num="7">
      If a user desires input signal I3 (or I2) to be the signal provided on output line 7, transistor T1 must be turned off before transistor T3 (or T2) is turned on.
      <br/>
      Thus, memory cell 1 must be programmed no later than memory cells 2 and 3.
      <br/>
      However, before another configuration pattern can be implemented, all memory cells must be set to zero (referred to as memory initialization).
    </p>
    <p num="8">
      In a PLD configuration, the memory cells are typically arranged in groups.
      <br/>
      During memory initialization, memory cells are set to zero in a systematic manner, typically group by group progressing from right to left (commonly referred to as "housecleaning").
      <br/>
      Because the memory cells associated with the default signals (i.g. the memory cells having associated inverters) are positioned to the right of the other memory cells (see FIGS. 1 and 2), this memory initialization results in signal contention.
      <br/>
      For example, referring to FIG. 1, memory cell 1 if set to zero turns on transistor T1 which then begins to conduct before memory cell 3 is set to zero.
      <br/>
      Thus, both transistors T1 and T3 are conducting during the same period, thereby creating a signal contention on output 7.
    </p>
    <p num="9">
      One solution to this contention problem is to force all input signals to zero when a memory initialization occurs.
      <br/>
      However, this solution disadvantageously adds logic to the PLD, thereby significantly increasing the silicon area required for the PLD.
      <br/>
      Moreover, the added logic decreases performance of the PLD itself.
    </p>
    <p num="10">
      Another solution is to disconnect all lines from all drivers when memory initialization occurs.
      <br/>
      As is well known in the art, a signal on output line 7 subsequently drives other circuits and devices in the PLD.
      <br/>
      To avoid signal contention, a pass transistor T5 (shown for illustration in FIG. 1) must be placed on output line 7, thereby allowing output line 7 to be disconnected (by providing a logic zero signal 11) during memory initialization.
      <br/>
      However, this solution also adds logic to the PLD which undesirably increases the silicon required to implement the PLD.
      <br/>
      Additionally, this added logic significantly deteriorates the performance of the PLD.
    </p>
    <p num="11">Therefore, a need arises for a configuration method and structure which prevents signal contention during memory initialization without adversely affecting either silicon area or PLD performance.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="12">
      In accordance with one embodiment of the present invention, a structure for providing the clearing and/or programming includes a plurality of synchronous storage elements and a plurality of associated two-input multiplexers.
      <br/>
      A control signal in a first logic state provided to the multiplexers provides a first signal propagation direction through the storage elements and the control signal in a second logic state provided to the multiplexers provides a second signal propagation direction through the storage elements.
      <br/>
      In one embodiment, the storage elements are flip-flops, wherein a multiplexer selectively provides (1) a signal from the Q-output terminal of a first flip-flop, or (2) a signal from the Q-output terminal of a second flip-flop or a token signal.
    </p>
    <p num="13">
      One method for clearing and programming a programmable logic device includes arranging a plurality of memory cells in sets, clearing the sets in a first spatial sequence, and programming the sets in a second spatial sequence, wherein the first spatial sequence is different than the second spatial sequence.
      <br/>
      In one case, the spatial sequence is a linear progression across the device.
      <br/>
      A spatial sequence during programming which is the reverse order of the spatial sequence during clearing prevents signal contention.
      <br/>
      Thus, the present invention provides the flexibility of clearing or programming sets of memory cells in predetermined areas of the device before other areas.
    </p>
    <p num="14">
      In accordance with another embodiment of the present invention, sets of memory cells could include columns of memory cells, each column having an associated storage element.
      <br/>
      In this manner, a plurality of columns of memory cells can be cleared or programmed in any predetermined order.
      <br/>
      Thus, a method for programming a logic device may include programming a plurality of columns of memory cells in a first direction, and then programming another plurality of columns of memory cells in a second direction.
      <br/>
      A reverse order is preferably used for clearing that logic device.
      <br/>
      Note that within one plurality of columns, any spatial sequence could be provided.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="15">
      FIG. 1 illustrates a simple multiplexer having three input signals.
      <br/>
      FIG. 2 shows another multiplexer having six input signals.
      <br/>
      FIG. 3 shows an illustrative configuration logic structure for a field programmable gate array.
      <br/>
      FIG. 4 illustrates a configuration logic structure in accordance with the present invention.
      <br/>
      FIG. 5A illustrates spatial sequences for clearing and programming a plurality of memory cells.
      <br/>
      FIG. 5B illustrates a method of programming a set of memory cells in first direction and programming another set of memory cells in a second direction.
    </p>
    <heading>DETAILED DESCRIPTION OF THE DRAWINGS</heading>
    <p num="16">
      FIG. 3 illustrates a typical configuration memory circuit 300 for a PLD.
      <br/>
      Circuit 300 includes a memory cell array organized into sets of memory cells (i.e. sets 306A and 306B).
      <br/>
      Sets 306A and 306B of memory cells are coupled to associated access lines 308A and 308B, respectively.
      <br/>
      A token register 309, which includes a plurality of D flip-flops 309A and 309B, is positioned in the middle of the memory cell array.
      <br/>
      To configure the memory array, the following steps are provided.
    </p>
    <p num="17">
      In the first step, all configuration bits for the memory cells in set 306A (which are coupled to access line 308A) are loaded in data register 303 via configuration data line 301 and data register clock line 302.
      <br/>
      Specifically, a signal on data register clock line 302 clocks each stored configuration bit into the D-input terminal of the next flip-flop 303.
      <br/>
      For example, during one clock cycle, a stored bit on the D-input terminal of flip-flop 303A is transferred to its Q-output terminal which in turn is transferred to the D-input terminal of flip-flop 303B.
      <br/>
      Detect circuitry (not shown) determines when all configuration bits have been loaded, i.e. when the configuration bit for memory cell 306A on data line 307D is stored in flip-flop 303D.
    </p>
    <p num="18">
      In the second step, a logic one signal is provided on token line 304 to the D-input terminal of flip-flop 309A.
      <br/>
      Token clock 305 clocks that logic one signal to the Q-output terminal of flip-flop 309A which is then transferred to the D-input terminal of 309B.
      <br/>
      Assuming that the access enable (AE) signal is active (i.e. in this embodiment a logic one signal) on line 310, the logic one signal is provided on access line 308A via logic circuitry 311, thereby accessing all memory cells 306A.
      <br/>
      At this point, the signals stored in flip-flops 303A-303D program memory cells 306A from data lines 307A-307D, respectively.
    </p>
    <p num="19">
      In the third step, an inactive access enable (AE) signal is provided on line 310, thereby preventing any memory cells 306A from being accessed.
      <br/>
      Then, all configuration bits for the memory cells of set 306B (which are coupled to access line 308B) are loaded in data register 303 via configuration data line 301 and data register clock line 302 in the same manner described above for memory cells 306A.
    </p>
    <p num="20">
      The next signal provided on token line 304 (and all subsequent signals if circuit 300 includes a larger array of memory cells) is a logic zero signal.
      <br/>
      In this manner, after the next clock signal and an enabling access enable (AE) signal is provided on token clock line 305 and access enable line 310, respectively, only the memory cells of set 306B are accessed (i.e. receive a logic one signal) via access line 308B.
      <br/>
      At this point, the signals stored in flip-flops 303A-303D program memory cells 306B from data lines 307A-307D, respectively.
      <br/>
      Thus, as shown in FIG. 3, the configuration bits for circuit 300 are loaded by sets of memory cells, progressing right to left.
      <br/>
      Note that although only a 4 * 2 memory cell array is shown, the same method is typically used for arrays of larger dimensions.
    </p>
    <p num="21">
      In accordance with the present invention and referring to FIG. 4, token register 409 includes flip-flops 409A-409C having associated multiplexers 411A-411C, respectively.
      <br/>
      Note that flip-flops 409A-409C are coupled to logic circuitry (which receives an access enable signal) (not shown) as well as to a plurality of access lines in the memory cell array (i.e. each flip-flop output line is coupled to a respective access line, but is not shown for simplicity).
      <br/>
      In this embodiment, a multiplexer selectively provides (1) a signal from the Q-output terminal of a first adjacent flip-flop, or (2) a signal from the Q-output terminal of a second adjacent flip-flop or a token signal.
      <br/>
      For example, multiplexer 411B selectively provides a signal from the Q-output terminal of adjacent flip-flop 409A or a signal from the Q-output terminal of another adjacent flip-flop 409C.
      <br/>
      Multiplexers 411A and 411C, associated with the end flip-flops of register 409, receive signals from their adjacent flip-flops and token signals on lines 404A and 404B, respectively.
    </p>
    <p num="22">
      A signal provided on line 410 determines whether a signal provided on token line 404A or token line 404B is clocked through register 409.
      <br/>
      For example, in one embodiment of the present invention, if a logic one signal is provided on line 410, then the signal on token line 404A is transferred from right to left as described above in reference to FIG. 3.
      <br/>
      However, if a logic zero signal is provided on line 410, then the token signal (i.e. a logic one signal) provided on token line 404B is transferred to the D-input terminal of 409C.
      <br/>
      During the next clock cycle that token signal is transferred to the Q-output terminal of flip-flop 409C and subsequently to the D-input terminal of flip-flop 409B via multiplexer 411B.
      <br/>
      During a next clock cycle that token signal is transferred to the Q-output terminal of flip-flop 409B and subsequently to the D-input terminal of flip-flop 409A via multiplexer 411A.
      <br/>
      Thus, sets of memory cells are accessed and configured in a direction from left to right.
    </p>
    <p num="23">
      Multiplexers 411 occupy relatively little space in token register 409 and, thus, do not significantly increase silicon area.
      <br/>
      Moreover, multiplexers 411 are not built into any user programmable circuits and thus do not adversely affect performance of the user's circuit.
    </p>
    <p num="24">
      Note that although FIG. 4 illustrates flip-flop 409B as being located between flip-flops 409A and 409C, the actual physical locations are arbitrary.
      <br/>
      Thus, flip-flop 409B could be physically located to the left of flip-flop 409C.
      <br/>
      As shown in FIG. 5A, the memory cell sets associated with register 409 could be cleared in spatial sequence 501, 502, and 503, then programmed in spatial sequence 504, 505, and 506 (reverse order), thereby preventing signal contention during reconfiguration.
      <br/>
      Assuming that flip-flop 409B is physically located between flip-flops 409A and 409C, the spatial sequence is a linear progression across the device.
    </p>
    <p num="25">
      Those skilled in the art will also recognize that sets of memory cells could include columns of memory cells, each column having an associated storage element.
      <br/>
      Therefore, columns of memory cells can be cleared or programmed in any predetermined order.
      <br/>
      Thus, referring to FIG. 5B, a method for programming a logic device may include programming at least one set (columns 550) of memory cells in a first direction, and programming at least one other set (columns 551) in a second direction.
      <br/>
      A reverse order is preferably used for clearing that logic device.
    </p>
    <p num="26">
      Although the present invention is described in reference to only one embodiment, those skilled in the art will recognize variations in the structure of the token register and in the method of propagating the token signal thorough the token register.
      <br/>
      The present invention is set forth in the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4.</claim-text>
      <claim-text>A method for programming a logic device including the steps of: arranging a first plurality of memory cells in a first set; arranging a second plurality of memory cells in a second set; programming the first plurality of memory cells in a first spatial sequence;</claim-text>
      <claim-text>and programming the second plurality of memory cells in a second spatial sequence, wherein said first spatial sequence is different than said second spatial sequence.</claim-text>
      <claim-text>1. A method for clearing and programming a logic device including the steps of:</claim-text>
      <claim-text>arranging a plurality of memory cells in sets; clearing said sets in a first spatial sequence;</claim-text>
      <claim-text>and programming said sets in a second spatial sequence, wherein said first spatial sequence is different than said second spatial sequence.</claim-text>
      <claim-text>2. The method of claim 1 wherein the second spatial sequence is the reverse order of the first spatial sequence.</claim-text>
      <claim-text>3. A method for clearing and programming a logic device including the steps of: arranging a plurality of memory cells in sets; clearing said sets in a first direction;</claim-text>
      <claim-text>and programming said sets in a second direction, wherein said first direction is different than said second direction.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method for clearing a logic device including the steps of: arranging a first plurality of memory cells in a first set; arranging a second plurality of memory cells in a second set; clearing the first plurality of memory cells in a first spatial sequence;</claim-text>
      <claim-text>and clearing the second plurality of memory cells in a second spatial sequence, wherein said first spatial sequence is different than said second spatial sequence.</claim-text>
    </claim>
  </claims>
</questel-patent-document>