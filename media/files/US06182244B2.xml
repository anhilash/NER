<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182244B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182244</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182244</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25453947" extended-family-id="42109112">
      <document-id>
        <country>US</country>
        <doc-number>08926953</doc-number>
        <kind>A</kind>
        <date>19970910</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08926953</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165776</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>92695397</doc-number>
        <kind>A</kind>
        <date>19970910</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08926953</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  11/36        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>36</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714038100</text>
        <class>714</class>
        <subclass>038100</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>712227000</text>
        <class>712</class>
        <subclass>227000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>714045000</text>
        <class>714</class>
        <subclass>045000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>714E11212</text>
        <class>714</class>
        <subclass>E11212</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-011/36B5</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>011</main-group>
        <subgroup>36B5</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-011/3636</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>11</main-group>
        <subgroup>3636</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>14</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>2</number-of-figures>
      <image-key data-format="questel">US6182244</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">System and method for automatically initiating a tracing facility and dynamically changing the levels of tracing currently active</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HIRTLE ALLEN C</text>
          <document-id>
            <country>US</country>
            <doc-number>4205370</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4205370</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>YORK HAROLD L</text>
          <document-id>
            <country>US</country>
            <doc-number>4462077</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4462077</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>REAM EDWARD K</text>
          <document-id>
            <country>US</country>
            <doc-number>4802165</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4802165</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>MASUDA SATOSHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4954942</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4954942</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>ANDREWS PAUL N</text>
          <document-id>
            <country>US</country>
            <doc-number>5067073</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5067073</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>COBB PAUL R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5119377</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5119377</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>AOSHIMA TOSHIHISA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5210859</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5210859</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>SITES RICHARD L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5764885</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5764885</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>PRICE WILLIAM CHANDLER, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>3659272</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3659272</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>FURGERSON DONALD F</text>
          <document-id>
            <country>US</country>
            <doc-number>4533997</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4533997</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>ALDERSON GRAHAM R</text>
          <document-id>
            <country>US</country>
            <doc-number>5347649</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5347649</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>BORCHARDT EDWARD K, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5513317</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5513317</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Bankemper, Michael Francis</name>
            <address>
              <address-1>Tucson, AZ, US</address-1>
              <city>Tucson</city>
              <state>AZ</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Ratliff, James Mitchell</name>
            <address>
              <address-1>Benson, AZ, US</address-1>
              <city>Benson</city>
              <state>AZ</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Ward, Ronald Preston</name>
            <address>
              <address-1>Tucson, AZ, US</address-1>
              <city>Tucson</city>
              <state>AZ</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Wood, Michael William</name>
            <address>
              <address-1>Oakwood Grove, GB</address-1>
              <city>Oakwood Grove</city>
              <country>GB</country>
            </address>
          </addressbook>
          <nationality>
            <country>GB</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Pagel, Donald J.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Le, Dieu-Minh T.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method for collecting information about the operating condition of a computer system.
      <br/>
      The method comprises the steps of running a first trace program that collects information about the operating condition of the computer and, in response to the detection of an error in the operating condition of the data storage system by the first program, determining whether a first flag is on or off.
      <br/>
      The first flag indicates whether or not a second trace program should be run.
      <br/>
      If the first flag is on, the second program is run.
      <br/>
      The second trace program is designed to collect different information about the operating condition of the computer system than the first trace program collects.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>TECHNICAL FIELD</heading>
    <p num="1">The present invention relates to a trace facility used to troubleshoot a software-controlled system and more particularly to a trace facility that automatically collects different amounts of information depending on the particular situation.</p>
    <heading>BACKGROUND ART</heading>
    <p num="2">
      It is well-known in the art to monitor the operating condition of a computer system through the use of a troubleshooting program known as a trace program.
      <br/>
      Typically, a standard set of trace entries will resolve the majority of problems encountered in the operation of the computer system.
      <br/>
      However, the creation of a trace entry requires a certain amount of memory in the central processing unit (CPU) of the system.
      <br/>
      Hence, in order to minimize the amount of CPU memory utilized by the standard trace program, the size of trace programs is usually kept small.
      <br/>
      This limits the type of information that can be collected by the standard trace program.
      <br/>
      Additionally, a larger trace program would slow down the performance of the operating system of the computer system.
    </p>
    <heading>SUMMARY OF THE PRESENT INVENTION</heading>
    <p num="3">
      Briefly, the present invention comprises a method for collecting information about the operating condition of a computer system.
      <br/>
      The method comprises the steps of running a first (or standard) trace program that collects information about the operating condition of the computer and, in response to the detection of an error by the first program, determining whether a first flag is on or off.
      <br/>
      The first flag indicates whether or not a second (or enhanced) trace program should be run.
      <br/>
      If the first flag is on, the second program is run.
      <br/>
      The second trace program is designed to collect different information about the operating condition of the computer system than the first trace program collects.
    </p>
    <p num="4">
      Additional levels of information about the operating condition of the computer system can be obtained through the use of a second or additional flags, with each of the additional flags being linked to additional trace programs which provide different types of information about the operating condition of the computer system.
      <br/>
      The flags can be turned off either manually, through commands issued by an operator, or automatically in response to predetermined events recognized by the software.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="5">
      FIG. 1 is a schematic diagram of a computer system that utilizes a trace facility according to the present invention; and
      <br/>
      FIG. 2 is a flowchart that illustrates the trace facility according to the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="6">
      FIG. 1 illustrates a mainframe computer 10 that is accessible by a user 14 using a workstation 18.
      <br/>
      The mainframe computer 10 is connected to at least one peripheral device 22, such as a data storage device.
      <br/>
      Generally, a plurality of the devices 22 are connected to the computer 10.
      <br/>
      In the preferred embodiment, the computer 10 is a machine like an IBM S/390 computer operating under IBM's Data Facility Storage Management Subsystem (DFSMS) environment, and the device 22 is a tape drive.
      <br/>
      In other embodiments, other computer systems can be used as the computer 10, other operating environments can be used and other types of devices can be substituted for the device 22. such as an optical disk drive or a direct access storage device.
    </p>
    <p num="7">
      FIG. 2 is a flowchart that illustrates the method of the present invention.
      <br/>
      In block 30, a trace point in the system software is encountered.
      <br/>
      Block 34 indicates that a standard trace program is executed.
      <br/>
      The standard trace program is a program that collects information about the operating condition of the data storage system, generally for the purpose of providing information that can be used to troubleshoot or debug software and/or hardware.
    </p>
    <p num="8">
      Block 38 indicates that when the standard trace program is running, occasionally, information about one or more types of predetermined conditions may be detected.
      <br/>
      For example, the information could be a type of error message.
      <br/>
      Alternatively, it could be information indicative of an unusual event like a larger than normal number of records or some other occurrence.
      <br/>
      If a predetermined condition is not detected at block 38, then the standard trace program executes normally and is exited as indicated by block 42.
    </p>
    <p num="9">
      Block 46 indicates that if one of the predetermined conditions is detected in block 38, then a first flag (flag A) is checked.
      <br/>
      If flag A is not on, then block 50 indicates that a second flag (flag B).
      <br/>
      If flag B is not on, then the program returns to its normal execution pathway through block 42.
      <br/>
      In the preferred embodiment, at this point the standard trace program will have finished executing.
      <br/>
      However, in other embodiments, the standard trace program could still need to finish executing.
      <br/>
      It should also be noted that in alternative embodiments, flag B could be deleted so that if flag A is not on, the program returns to its normal execution pathway through block 42.
      <br/>
      Additionally, after flap B, there could be "N" number of additional flags that are checked for "on" or "off" status in the same way that flags A and B are checked.
      <br/>
      Typically, the flags are turned on and off with a single bit of code.
      <br/>
      However, other techniques for controlling the flags can be used.
    </p>
    <p num="10">
      If block 46 indicates that flag A is on, then an enhanced trace program is executed at block 54.
      <br/>
      The enhanced trace program is similar to the standard trace program in that it is a program that collects information about the operating condition of the data storage system, generally for the purpose of providing information that can be used to troubleshoot or debug software and/or hardware.
      <br/>
      However, the enhanced trace program collects more information than the standard trace program.
      <br/>
      In other words, the purpose of the enhanced trace program is to collect more detailed information about the operating condition of the data storage system when the predetermined condition is detected by the standard trace program.
    </p>
    <p num="11">
      The purpose of the flags A and B (and possibly "N" additional flags) is to allow more detailed trace information to be collected without permanently degrading the performance of the operating system.
      <br/>
      Because of the increased number of instructions associated with the enhanced trace programs, the performance of the operating system would be degraded if the enhanced trace programs ran continuously.
      <br/>
      Therefore, the flags A through N are used so that the enhanced trace programs are only turned on when they are needed or at certain predetermined intervals.
    </p>
    <p num="12">Example 1, below, compares a standard trace program and an enhanced trace program for an input/output (I/O) event.</p>
    <p num="13">EXAMPLE 1</p>
    <p num="14">Standard I/O Trace: Lock; Get Record; Unlock.</p>
    <p num="15">Enhanced I/O Trace: Lock; Prepare Key GE Shared; Point to Record; Get Record; Decompress Record; Retrieve from Buffer; Journal Put; Update Control Record; Commit Journal Update; Unlock; End Request.</p>
    <p num="16">
      Block 58 illustrates that after the enhanced trace program has collected some or all of the desired information, the information is stored for future use.
      <br/>
      In the preferred embodiment, the information is initially written into a trace-wrap buffer.
      <br/>
      When a predetermined number of records are present in the trace-wrap buffer, the records are written to a permanent trace file on a direct access storage device (DASD).
      <br/>
      Subsequently, the end user archives the records in the permanent trace file on a tape drive.
      <br/>
      Of course, other storage methodologies could be used.
    </p>
    <p num="17">
      Block 62 indicates that after the enhanced trace program has been executed, a trace criteria is examined to determine if the flag for the enhanced trace program should be turned off.
      <br/>
      In the preferred embodiment, the trace criteria is a period of time that indicates how long the enhanced trace program has been executing.
      <br/>
      For example, if a specified enhanced trace program has been executing for thirty minutes, the relevant flag will be turned off, thereby stopping the specified enhanced trace program from executing on the next cycle of the operating system.
      <br/>
      In other embodiments, other trace criteria could be used.
      <br/>
      For example, the number of times the enhanced trace program has executed is an acceptable trace criteria for use at block 62.
    </p>
    <p num="18">
      Block 66 indicates that if the trace criteria from block 62 is satisfied, then the flag is turned off.
      <br/>
      If the trace criteria has not been satisfied, then the flag remains on and the enhanced trace program exits to the operating system through block 42.
      <br/>
      Because the flag is still on, the enhanced trace program will execute again if block 46 is encountered.
    </p>
    <p num="19">
      With respect to blocks 46 and 50, it should be noted that the flags A and B (and N other flags, if relevant) can be turned on either manually or automatically.
      <br/>
      In the preferred embodiment, the flags A through N are turned on automatically when a particular type of error situation is encountered by the operating system.
      <br/>
      This is referred to as dynamic activation of the enhanced trace program.
      <br/>
      For example, code associated with block 38 can automatically turn on one or more of the flags A through N. Alternatively, the flags A through N can be turned on manually by a command issued by the user 14 from the workstation 18.
    </p>
    <p num="20">
      With respect to block 54, in the preferred embodiment there are two types of enhanced trace programs that can be utilized.
      <br/>
      The first type is referred to as a zone program.
      <br/>
      With zone programs, the same enhanced trace program is run regardless of which of the flags A through N initiates the enhanced trace program.
      <br/>
      In other words, the flags A through N are positioned at various locations or zones throughout the operating system.
      <br/>
      Whenever an active flag A-N is encountered, the same enhanced trace program is run.
    </p>
    <p num="21">
      The second type of enhanced trace program is referred to as a level program.
      <br/>
      With level programs, a different enhanced trace program is activated by each of the flags A through N. Flag A activates enhanced trace program A; flag B activates enhanced trace program B; and flag N activates enhanced trace program N. Each of the enhanced trace programs A through N differ in some respect, such as the amount or type of information that is collected about the operating condition of the data storage system.
      <br/>
      So, for example, enhanced trace program A might collect more data about an I/O error than the standard trace program, and enhanced trace program B would collect more data about the I/O error than enhanced trace program A. The use of level programs allows different amounts or types of data to be collected depending on the nature of the problem.
    </p>
    <p num="22">
      In block 54, the phrase "enhanced trace program N" is used to indicate that the enhanced trace program can be either the zone type, in which case N is the same for each of the flags A through N, or the level type, in which case N corresponds to the flag the activates the enhanced trace program.
      <br/>
      Similarly, the "N" in block 66 is related to the zone or level flag that activates the enhanced trace program.
      <br/>
      As mentioned previously, the flags for zone or level programs can be activated either dynamically or manually.
    </p>
    <p num="23">The steps involved in the method of a preferred embodiment of the present invention can be summarized as follows:</p>
    <p num="24">EXAMPLE 2</p>
    <p num="25">
      1.
      <br/>
      Running a first program that collects information about the operating condition of a data storage system;
    </p>
    <p num="26">
      2.
      <br/>
      In response to the detection of an error in the operating condition of the data storage system by the first program, checking a first flag to determine if a second program should be run;
    </p>
    <p num="27">
      3.
      <br/>
      Running the second program if the first flag indicates that the second program should be run, the second program being designed to collect different information about the operating condition of the data storage system than the first program collects;
    </p>
    <p num="28">
      4.
      <br/>
      If the first flag indicates that the second program should not be run, checking a second flag to determine if the second program should be run;
    </p>
    <p num="29">
      5.
      <br/>
      Running the second program if the second flag indicates that the second program should be run;
    </p>
    <p num="30">
      6.
      <br/>
      If the second program is run, storing at least some of the information collected by the second program;
    </p>
    <p num="31">
      7.
      <br/>
      Checking a predetermined parameter to determine if one or more of the flags should be turned off; and
    </p>
    <p num="32">
      8.
      <br/>
      Returning to the operating system if the second program is not run or if the second program is finished running.
    </p>
    <p num="33">
      It should be appreciated that the processes illustrated in Examples 1 and 2 and in FIG. 2, represent functions that are implemented in software.
      <br/>
      There are many ways to write computer code that will allow these functions to be implemented as is known by those skilled in the art.
    </p>
    <p num="34">
      Although the present invention has been described in terms of the presently preferred embodiment, it is to be understood that such disclosure is not to be interpreted as limiting.
      <br/>
      Various alterations and modifications will no doubt become apparent to those skilled in the art after having read the above disclosure.
      <br/>
      Accordingly, it is intended that the appended claims be interpreted as covering all alterations and modifications as fall within the true spirit and scope of the invention.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for gathering trace information from a data storage system comprising:</claim-text>
      <claim-text>while system software is running on a computer, executing a first trace program that collects information about the operating condition of a data storage system associated with the computer, the first trace program being activated when a trace point in the system software is encountered; in response to the detection of a predetermined condition in the operating condition of the data storage system by the first trace program, determining whether a first flag is on or off, the first flag indicating that a second trace program should be executed if the first flag is on and that the second trace program should not be executed if the first flag is off;</claim-text>
      <claim-text>and executing the second trace program if the first flag is on, the second trace program being designed to collect more detailed information about the operating condition of the data storage system than the first trace program collects.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 further comprising: if the first flag is on, turning off the first flag after the occurrence of a predetermined event.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2 wherein the predetermined event is the passage of an amount of time.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 2 wherein the predetermined event is a number of times that the second program has been executed.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1 wherein the data storage system is a system that manages removable media drives for mainframe computers.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1 further comprising: if the first flag is off, determining whether a second flag is on or off, the second flag indicating that a third trace program should be run if the second flag is on and that the third trace program should not be run if the second flag is off;</claim-text>
      <claim-text>and executing the third trace program if the second flag is on, the third trace program being designed to collect different information about the operating condition of the data storage system than either the first trace program or the second trace program collects.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6 further comprising: if the second flag is on, turning off the second flag after the occurrence of a predetermined event.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7 wherein the predetermined event is the passage of an amount of time.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 7 wherein the predetermined event is a number of times that the third program has been executed.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 1 further comprising: storing the information collected by the second trace program in the memory of the computer.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 1 wherein the first flag is turned on automatically in response to a predetermined event.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 1 further comprising: if the first flag is off, determining whether a second flag is on or off, the second flag indicating that the second trace program should be run if the second flag is on and that the second trace program should not be run if the second flag is off;</claim-text>
      <claim-text>and executing the second trace program if the second flag is on.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A system for gathering trace information from a data storage system comprising: a computer; a plurality of data storage devices connected to the computer; a first trace program running on the computer for collecting information about the operating condition of one or more of the plurality of data storage devices; a second trace program stored on the computer that collects different information about the operating condition of the plurality of data storage devices than the first trace program when the second trace program is running;</claim-text>
      <claim-text>and first flag means for indicating that the second trace program should be run if the first flag is on and that the second trace program should not be run if the first flag is off, the first trace program checking whether the first flag means is on or off when the first trace programs detects an error in the operating condition of one or more of the data storage devices.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The system of claim 13 wherein the plurality of data storage devices comprise tape drives.</claim-text>
    </claim>
  </claims>
</questel-patent-document>