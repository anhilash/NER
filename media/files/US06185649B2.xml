<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185649B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185649</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185649</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="22165775" extended-family-id="42113738">
      <document-id>
        <country>US</country>
        <doc-number>09081693</doc-number>
        <kind>A</kind>
        <date>19980519</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09081693</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43172071</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>8169398</doc-number>
        <kind>A</kind>
        <date>19980519</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09081693</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  13/42        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>42</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714040000</text>
        <class>714</class>
        <subclass>040000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>341094000</text>
        <class>341</class>
        <subclass>094000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-013/42C1S</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>013</main-group>
        <subgroup>42C1S</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-013/4217</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>4217</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>6</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>1</number-of-drawing-sheets>
      <number-of-figures>3</number-of-figures>
      <image-key data-format="questel">US6185649</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">System for correcting an illegal addressing signal by changing a current bit from one to zero if a bit immediately left adjacent to the current bit is zero</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>D ANGIO ALDO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4658399</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4658399</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>HONG JU-HI J</text>
          <document-id>
            <country>US</country>
            <doc-number>4677627</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4677627</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>LIU KUO-HUI</text>
          <document-id>
            <country>US</country>
            <doc-number>5023612</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5023612</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>MCNESBY JOHN B, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5235603</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5235603</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>GORSHE STEVEN S</text>
          <document-id>
            <country>US</country>
            <doc-number>5510786</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5510786</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>ALFERNESS MERWIN H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5611065</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5611065</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>SHIFFER II JAMES D</text>
          <document-id>
            <country>US</country>
            <doc-number>5287321</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5287321</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>LEE YOUNG W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5377264</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5377264</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>WALKER WILLIAM J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5555250</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5555250</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>KOWERT ROBERT C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5649129</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649129</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>KLEIN DEAN A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5649162</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649162</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Toshiba America Electronic Components, Inc.</orgname>
            <address>
              <address-1>Irvine, CA, US</address-1>
              <city>Irvine</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>TOSHIBA AMERICA ELECTRONIC COMPONENTS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Lo, John M.</name>
            <address>
              <address-1>Fremont, CA, US</address-1>
              <city>Fremont</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Smith, Andrew V.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Lee, Thomas C.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An apparatus and a method detect and automatically correct an illegal address in a peripheral connect interface bus addressing scheme.
      <br/>
      The value of a current bit is read.
      <br/>
      The value of a bit immediately left adjacent of the current bit is read.
      <br/>
      A value of 0 is outputted as the current bit in the event the value of the current bit is 1 and the value of the left adjacent bit is 0.
      <br/>
      In one specific embodiment, the apparatus employs a multiplexer and a single-bit register with a feedback as a one bit detection and correction circuit.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention relates to a peripheral connect interface (PCI) addressing scheme, and more particularly, to an auto detection and correction logic for a PCI bus addressing scheme.</p>
    <p num="3">2. Description of Related Art</p>
    <p num="4">
      A PCI bus interfaces a master to a number of slave peripheral devices through the PCI bus.
      <br/>
      Each of the peripheral devices has an associated base address register, typically 32 bits in length.
      <br/>
      The PCI convention specifies that if the peripheral device has a certain amount of memory that is addressable, the master loads an address signal, of is a particular format, into the base address register.
    </p>
    <p num="5">
      FIG. 1 is a table of specified base address signals according to the amount of memory available under PCI convention.
      <br/>
      For example, if all 4 gigabytes (32 bits) of memory are available, the base address register is loaded with all 32 bits each with a value of "0" or "0 . . . 0." If there are two gigabytes of memory available, the first or left most bit is denoted "1" followed by all 31 bits of "0"s.
      <br/>
      Thus, if two gigabytes of memory are available, the base address register is loaded with "1 0 0 . . . 0." If only one gigabyte of memory is available, then the two left most bits are denoted "1" and followed by all "0"s, thereby loading the base address register with "1 1 0 0 . . . 0."
    </p>
    <p num="6">
      Sometimes the base address register may be loaded with an illegal address.
      <br/>
      One type of illegal address is an out of range address or an address of the wrong size.
      <br/>
      For example, an address 16 bits in length is an illegal address.
      <br/>
      Prior art to correct and illegal address have included U.S. Pat. Nos. 5,555,250; 5,649,162; 5,649,129; 5,337,264; and 5,287,321.
    </p>
    <p num="7">
      Another type of illegal address is an address of the correct size, but illegal in that the address violates PCI convention.
      <br/>
      For example, an address such as "1 1 0 1 0 0 . . . 0" is an illegal address because a "1" is to the right of a "0".
      <br/>
      According to PCI convention, a "0" may not be the left adjacent bit of a "1".
    </p>
    <p num="8">
      There are a number of methods for detecting an illegal address.
      <br/>
      For example, an out of range address may be detected with a detection scheme that uses combinatorial logic.
      <br/>
      However, currently there is no apparatus or method for detecting an illegal addresses, that violates the PCI convention, as described, above, and corrects it.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="9">
      The present invention is a method and apparatus that automatically corrects any illegal address that is to be loaded to a base address register.
      <br/>
      In accordance with the present invention, a current bit is read.
      <br/>
      If the current bit is "0," the address is legal regardless of the value of the left adjacent bit.
      <br/>
      However, if the current bit is "1," the addressing scheme reads the left adjacent bit to determine if the address is legal.
      <br/>
      If the left adjacent bit is "1," the address is legal.
      <br/>
      However, if the left adjacent bit is "0," the address is illegal and the current bit is corrected to "0."
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="10">
      The invention will be better understood by reference to the attached figures in which:
      <br/>
      FIG. 1 is a table of address signals for a base address register of 32 bits, according to PCI convention.
      <br/>
      FIG. 2 is a block diagram of a system showing the interface between a master, a PCI controller, and the PCI bus.
      <br/>
      FIG. 3 is a schematic diagram of a circuit using a multiplexer with a single-bit register.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="11">
      Referring to FIG. 2, there is shown a 32-bit base address register 14 in a PCI controller 12.
      <br/>
      A PCI bus 16 interfaces the PCI controller 12 to a master 18.
      <br/>
      A local bus 24 interfaces the PCI controller 12 to a microprocessor 20 and memory 22.
      <br/>
      The PCI base address register 14 can be loaded with an address signal by the microprocessor 20.
      <br/>
      The address signal stored in the register 14 is then used by the master 18.
      <br/>
      The PCI controller 12 also includes a circuit 10 of the present invention.
      <br/>
      The circuit 10 receives the address signals from the local bus 24 and corrects an illegal address prior to storing it in the base address register 14.
    </p>
    <p num="12">
      In the method of the present invention, the circuit 10 reads a value of a current bit, e.g. bit 0, the right-most bit.
      <br/>
      The circuit 10 also reads a value of a bit immediately to the left and adjacent to the current bit.
      <br/>
      Thus, for example, if the current bit is bit 0, the circuit 10 would then read the value of bit 1.
      <br/>
      Finally, the circuit 10 would change the value of the current bit, e.g. bit 0, to the value of 0, if the value of bit 0 from the local bus 24 is 1, and the value of the left adjacent bit is 0.
      <br/>
      Otherwise, the circuit 10 would load the value of the current bit received from the local bus 24 into the base register 14, without changing it.
    </p>
    <p num="13">
      While the method has been described with regard to the reading of a current bit and its left adjacent bit, the method of the present invention can also be practiced in a two-step process.
      <br/>
      The current bit can be read and if the value is 0, then that value is stored in the base register 14.
      <br/>
      If the value is 1, then the circuit 10 reads the value of the left adjacent bit.
      <br/>
      If the value of the left adjacent bit is 1, then the current bit is stored in the base register 14.
      <br/>
      If the value of the left adjacent bit is 0, then the value of the current bit is changed to 0 and is then stored in the base register 14.
    </p>
    <p num="14">
      One apparatus 10 to accomplish the foregoing is shown in FIG. 3.
      <br/>
      FIG. 3 is a schematic block diagram of a hardware representation of the present invention to detect and to correct one bit.
      <br/>
      The circuit shown in FIG. 3 was generated using software written in the verilog language, a standard IEEE language for design of hardware.
      <br/>
      A copy of the software program used to generate the hardware description of the present invention is as follows:
    </p>
    <p num="15">
      --
      <br/>
      --      /***************************************************
      <br/>
      --      * Auto Correction BAR size register bit - AutoECC (R/W)
      <br/>
      --      ***************************************************/
      <br/>
      --      module AutoECC(iReset, iClk,
      <br/>
      --       iResetValue, iLeftBit, iWrByte, iDataIn, oQ);
      <br/>
      --      input iReset, iClk, iResetValue, iWrbyte, iLeftBit, iDataIn;
      <br/>
      --      output     oQ;
      <br/>
      --      reg       oQ;
      <br/>
      --      // R/W bit
      <br/>
      --      always @ (posedge iClk)
      <br/>
      --       if (iReset)
      <br/>
      --        oQ &lt;= iResetValue; // Power on default value
      <br/>
      --       else
      <br/>
      --        casex(+iWrByte, iLeftBit, oQ})
      <br/>
      --         3'b000: oQ&lt;=oQ;     // Keep the value
      <br/>
      --         3'b001: oQ&lt;=1'b0;    // correct to `1`
      <br/>
      --         3'b01x: oQ&lt;=oQ;     // ok
      <br/>
      --         3'b1xx: oQ&lt;=iDataIn;  // load new value
      <br/>
      --        endcase
      <br/>
      --      endmodule
    </p>
    <p num="16">A conventional Hardware description language compiles the foregoing program to generate the schematic diagram shown in FIG. 3.</p>
    <p num="17">
      In FIG. 3, the circuit 10 comprises a multiplexer 1 which determines whether the current bit needs to be corrected and corrects it if it is an illegal value.
      <br/>
      The multiplexer 1 has four inputs (I1, I2, I3 &amp; I4).
      <br/>
      I1 is the current bit and is the output of the circuit 10.
      <br/>
      I2 is held at ground.
      <br/>
      Thus if I2 is selected a "0" is inputted into the multiplexer 1.
      <br/>
      I3 is also the current bit and is also the output of the circuit 10.
      <br/>
      I4 is the initial value loaded into the multiplexer 1 by the microprocessor 20.
      <br/>
      The output of the multiplexer 1 is stored in a register 2.
    </p>
    <p num="18">
      The four inputs of the multiplexer 1 are selected by the selection lines S1 and S2.
      <br/>
      The two lines S1 and S2 can select four possible inputs to the multiplexer 1.
      <br/>
      The selection line S3 is the load signal.
      <br/>
      When S3 is active, it causes the value on I4 to be loaded through the multiplexer 1 and into the input 5 of the register 2 to be stored in the register 2.
      <br/>
      On the next clock cycle, the output of the register 2 is then routed back as I1 and I3 inputs to the multiplexer 1.
      <br/>
      In addition, the output of the register 2 is used as the control signal S1.
      <br/>
      The control signal S2 is the output of the register 2 from an adjacent left bit.
    </p>
    <p num="19">
      In the operation of the circuit 10, the multiplexer 1 simply outputs the current bit if the multiplexer 1 selects as the output either input line I1 or input line I3.
      <br/>
      If input line I1 or input line I3 is selected as the output, the current bit is output from the multiplexer 1 and then entered as the input 5 to the single-bit register 2.
      <br/>
      I1 and I3 are selected when the bit patterns are "1X" or "00" which are legal values and therefore are stored back to itself.
      <br/>
      If S2 is "0" and S1 is "1", then this represents an illegal value of "01".
      <br/>
      In that event, the combination of S1 and S2 selects input line I2, which causes a value of "0", to be loaded through the multiplexer 2, and stored in the register 2.
      <br/>
      All other combinations of S1 and S2 causes either I1 or I3 to be loaded back into the register 2, i.e. no change is made to the value of the register 2.
    </p>
    <p num="20">
      The multiplexer 1 selects input line I1 if the current bit, S1, is "0" and the left bit, S2, is also "0," which is input via selection line S2.
      <br/>
      A "0 0" combination is legal according to PCI convention.
      <br/>
      Consequently, the multiplexer 1 outputs "0" to the single-bit register 2 because it selects input line I1, which is the current bit, "0."
    </p>
    <p num="21">
      Input line I3 is selected if the left bit, S2, is "1," regardless of the value of the current bit, S1.
      <br/>
      As long as the left bit from selection line S2 is "1," the current bit does not need to be corrected according to PCI convention.
      <br/>
      The multiplexer 1 outputs the value of the current bit to the single-bit register 2 because it selects input line I3, which is the value of the current bit.
    </p>
    <p num="22">
      If the value of the current bit from selection line S1 is "1" and the value of the left bit from selection line S2 is "0," then such a "0 1" combination is illegal according to PCI convention.
      <br/>
      The multiplexer 1 will automatically correct the current bit to a "0" by selecting input line I2 to output to the single-bit register 2.
      <br/>
      Input line I2 is connected to ground 6, which has a value of "0." Thus, the output to the single-bit register is "0," correcting the current bit to "0."
    </p>
    <p num="23">
      As previously discussed, the circuit shown in FIG. 3 detects and corrects one bit.
      <br/>
      For a circuit to detect and to correct 32 bits, 32 circuits of the type shown in FIG. 3 would be required.
      <br/>
      Furthermore, there are several manners to operate such a 32 bit circuit.
      <br/>
      Let us assume that the bit pattern received by the circuit is:
    </p>
    <p num="24">
      1 1 . . . 1 1 0 1 1 0 1 1 0 0
      <br/>
      31 30 . . . 9 8 7 6 5 4 3 2 1 0
    </p>
    <p num="25">
      where the numbers under the bit pattern of "11 . . . 1101101100" indicate bit position.
      <br/>
      Based upon the foregoing discussion, it can be seen that bits located at positions 6, 5, 3, and 2 are in error and should all be corrected to "0".
      <br/>
      There are two ways to correct this.
    </p>
    <p num="26">
      First, if each of the bit detection and correction circuit shown in FIG. 3 operates synchronously, i.e. detect and correct in response to a clock signal, then the correction of the above bit pattern would require two clock cycles.
      <br/>
      In the first clock cycle, the circuits would analyze from left-to-right (or from higher order bit position to lower order bit position), and detect and correct bits located at positions 6 and 3.
      <br/>
      The resultant bit pattern would be:
      <br/>
      1 1 . . . 1 1 0 0 1 0 0 1 0 0
      <br/>
      31 30 . . . 9 8 7 6 5 4 3 2 1 0
    </p>
    <p num="27">The second clock cycle would detect and correct bits located at positions 5 and 2, again, proceeding from left to right (or from higher order bit position to lower order bit position).</p>
    <p num="28">Alternatively, using combinatorial logic, and with appropriate delay, the bit pattern can be detected and corrected asynchronously.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>An apparatus to correct an illegal addressing signal comprising:</claim-text>
      <claim-text>means for reading a value of a current bit; means for reading a value of a left adjacent bit of said current bit;</claim-text>
      <claim-text>and means for outputting a value of 0 as said current bit in the event said value of said current bit is 1 and said value of said left adjacent bit is 0.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The apparatus of claim 1 further comprising: means for outputting said value of said current bit as said current bit for all other values of said current bit and said left adjacent bit.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. An apparatus to correct an illegal addressing signal comprising: a multiplexer; a single-bit register; a first selection line connecting an output of said single-bit register with the multiplexer; a first input line connecting the single-bit register with the multiplexer; a third input line connecting the single-bit register with the multiplexer; a second input line connected to ground having a level of 0; a fourth input line for supplying input data to said multiplexer; a second selection line connecting an output of an adjacent single bit register with the multiplexer;</claim-text>
      <claim-text>and an output line connecting the multiplexer with the single-bit register.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The apparatus claim 3 wherein: the first selection line for supplying a first value of a current bit from the single-bit register to the multiplexer; the first input line for supplying the first value of the current bit from the single-bit register to the multiplexer; the third input line for supplying the first value of the current bit from the single-bit register to the multiplexer; the second selection line for supplying a value of a left adjacent single bit register to the multiplexer wherein the left adjacent bit is a left adjacent bit of the current bit;</claim-text>
      <claim-text>and the output line for supplying a second value of the current bit from the multiplexer to the single-bit register.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A method for correcting an illegal addressing signal comprising the steps of: inputing a current bit from a single-bit register to a multiplexer via a first selection line; inputing the current bit from the single-bit register to the multiplexer via a first input line and a third input line; inputing a left bit to the multiplexer via a second selection line, the left bit being a left adjacent bit of the current bit; inputing a value of 0 to the multiplexer via a second input line; selecting an input from the input lines for an output based on the inputs from the first and second selection lines;</claim-text>
      <claim-text>and sending the output to the single-bit register.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5, wherein the selecting step comprises the steps of: selecting a value from the second input line if the current bit is 1 and the left bit is 0.</claim-text>
    </claim>
  </claims>
</questel-patent-document>