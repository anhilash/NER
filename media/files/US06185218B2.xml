<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185218B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185218</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185218</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25443910" extended-family-id="42113220">
      <document-id>
        <country>US</country>
        <doc-number>08920533</doc-number>
        <kind>A</kind>
        <date>19970829</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08920533</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171328</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>92053397</doc-number>
        <kind>A</kind>
        <date>19970829</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08920533</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04L  12/28        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>28</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  29/06        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04L  29/08        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>08</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>H04L  29/12        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>370405000</text>
        <class>370</class>
        <subclass>405000</subclass>
      </main-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/12018</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12018</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2856</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2856</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/2872</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>2872</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/06</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/12009</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12009</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-061/10</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>61</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131025</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/14</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>14</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/28</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>28</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/2842</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>2842</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/34</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>34</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="11">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/16</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="12">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/163</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>163</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="13">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/329</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>329</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>30</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6185218</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Communication method and apparatus for use in a computing network environment having high performance LAN connections</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>TSUKAKOSHI MASATO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5086426</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5086426</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>BRITTON KATHRYN H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5491693</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5491693</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>CALLON ROSS W</text>
          <document-id>
            <country>US</country>
            <doc-number>5583862</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5583862</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>ROSTOKER MICHAEL D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5640399</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5640399</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>SISTANIZADEH KAMRAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5790548</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5790548</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>SUZUKI HIROSHI</text>
          <document-id>
            <country>US</country>
            <doc-number>5796736</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5796736</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>ITO YUJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5802316</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5802316</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>REKHTER YAKOV</text>
          <document-id>
            <country>US</country>
            <doc-number>5917820</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5917820</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>SAITO SHUICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5920567</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5920567</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>BARE BALLARD C</text>
          <document-id>
            <country>US</country>
            <doc-number>5920699</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5920699</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>VARGHESE GEORGE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5963556</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963556</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>BENJAMIN JAY H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4677588</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4677588</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>TAKATS GILBERT</text>
          <document-id>
            <country>US</country>
            <doc-number>5237659</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5237659</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>CALLON ROSS W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5430727</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5430727</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>GAGLIARDI UGO O, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5442630</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5442630</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>YASREBI MEHRAD</text>
          <document-id>
            <country>US</country>
            <doc-number>5463625</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5463625</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>GAGNE BRUCE N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5473608</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5473608</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>HWANG DAVID K</text>
          <document-id>
            <country>US</country>
            <doc-number>5475601</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5475601</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>YASREBI MEHRAD</text>
          <document-id>
            <country>US</country>
            <doc-number>5596579</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5596579</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Ratcliff, Bruce H.</name>
            <address>
              <address-1>Red Hook, NY, US</address-1>
              <city>Red Hook</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Valley, Stephen R.</name>
            <address>
              <address-1>Valatie, NY, US</address-1>
              <city>Valatie</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Wojnicki, Jr., Andrew J.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Neff, Lily</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Pham, Chi H.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method and apparatus for establishing communication between a first initiating host and a second communicating host in a computing environment having a gateway device.
      <br/>
      The gateway device is electronically connected from one side to a plurality of initiating hosts and on another side to at least one local area network, further connecting a plurality of receiving hosts to said gateway device.
      <br/>
      During an initialization step, all connected hosts and the local area network(s) is identified and their addresses and information obtained and stored in a port-sharing table in a memory location accessible to the gateway device.
      <br/>
      Upon receipt of a special command for establishing communication between a first initiating host and a second receiving host, all information required for establishing of a successful communication between the two hosts is then obtained from the port-sharing table.
      <br/>
      In an alternate embodiment of the present invention the computing network environment uses Multi-path channel communication protocol.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF INVENTION</heading>
    <p num="1">The present invention is generally directed to an expanded control command interface that can support network connections to gateway devices without dealing with configuration complexities.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      Personal computers are gaining widespread popularity as the state of technology is improving.
      <br/>
      Over the past few decades, their utilization has profilerated both for personal purposes and for use in business and scientific communities.
      <br/>
      Establishing good computing communications have become a necessity as individual users try to connect to one another for exchange of information, and to larger computers to take advantage of their higher processing capabilities.
      <br/>
      This need to communicate between different computing hosts or nodes have evolved into the creation of distributed networks.
      <br/>
      A distributed network is an aggregate of individual systems that are connected to one another electronically.
      <br/>
      Distributed networks can be organized in a number of ways, either remotely extending over great distances using wide area networks or WANs, or locally through the use of a Local Area Network, better known as a LAN.
    </p>
    <p num="3">
      A LAN usually consists of a number of nodes or hosts located within an office, a building or at other close proximations.
      <br/>
      Being a type of a distributed network, a LAN loosely couples processors and workstations.
      <br/>
      Generally, workstations on a LAN do not share a central memory but do share common servers.
      <br/>
      In this way a LAN increases the power and flexibility of workstations by enabling them to access shared data without jeopardizing the security of each individual resource.
    </p>
    <p num="4">
      A LAN system that has been in wide use in recent years is produced by Novell, Inc. of Provo, Utah.
      <br/>
      In a Novell system, a LAN device driver is implemented on top of the local operating systems to be coupled and device driver commands at the LAN workstations are directed to and from the workstations onto the LAN to the target servers.
    </p>
    <p num="5">
      As networks have grown and particularly as LANs have come into widespread use, many businesses and organizations have faced the necessity of interconnecting and managing a confederation of networks and LANs.
      <br/>
      Each network itself can in turn comprises of a plurality of logical networks which in turn run independent and different networking protocols.
      <br/>
      The challenge has not become only to interconnect local area networks to one another, but to do so and still provide remote server access through WANs or other devices.
    </p>
    <p num="6">
      Three basic methods are now available to interconnect both local and remote area networks to one another as to provide wide used access and remote information exchange capabilities.
      <br/>
      These three methods are 1) bridges or data-link devices that connect similar networks together; 2) routers that perform routing services by maintaining a routing table in each host; and 3) gateway devices that carry out protocol conversions and other connectivity functions.
      <br/>
      Typically, a device driver for the gateway is provided with modems or other physical ports that can be linked to switched communication WANS.
    </p>
    <p num="7">
      A gateway facility allows the interconnection of multiple independently controlled communication networks to one another in a way that logical units in the network can communicate with one another without any changes to the network.
      <br/>
      A logical network runs a single networking protocol, but a processing organization can be composed of a dozen of logical networks running six or seven networking protocols.
      <br/>
      A gateway provides transparent interconnection of these single networking protocols, so that a single multiport transport network is formed.
    </p>
    <p num="8">
      In the existing mechanisms, gateway devices are implemented on top of the LAN device drivers as a switched communications device interface.
      <br/>
      The user initialization of the communication link-up procedure redirects the user hardware commands to the gateway.
      <br/>
      The communications interface in the gateway driver then institutes and maintains the switched communications link, diverting hardware resources of the driver to do so.
      <br/>
      The connection and access procedures are then executed using the gateway ports and modems in order to link the user's system with the switched communications network.
      <br/>
      A remote connection is established through the LAN/WAN which sets up a point to point configuration through the port along the communication line between the user and the communications device in use.
    </p>
    <p num="9">
      The procedure described above have many complexities associated with it.
      <br/>
      The complexities connected with the configuration assessment of gateway devices is an on-going concern of the designers of such devices today.
      <br/>
      These configuration concerns contributes to many limitations that exist with today gateway devices.
      <br/>
      These limitations often make the interconnection of networks running different protocols non-transparent.
      <br/>
      Because many of the present gateways are transport layer protocol-specific, it is possible that a gateway cannot interconnect a network running for example a TCP/IP protocol and a network running the SNA protocol.
      <br/>
      Furthermore, a variety of gateway devices have been developed which connect TCP/IP to different operating system and give connectivity to the LAN/WAN environments, but each time the configuration has to be redefined and reassessed before connectivity is accomplished successfully.
      <br/>
      Furthermore, each gateway device can usually implement only a subset of the TCP/IP functions.
      <br/>
      Most currently existing gateway devices do not support many of the TCP/IP functions and performance problems have been encountered due to increased bandwidth of the LAN/WAN arenas.
      <br/>
      One of the communication protocols used to communicate with the gateway is LCS or LAN Channel Station.
      <br/>
      A control command interface exists in the LCS protocol that requires all the configuration information to be set prior to the TCP/IP connect sequence.
      <br/>
      Nonetheless, the control interface does not have a command sequence to enable the use of the TCP/IP functions which have been implemented in the gateway devices.
      <br/>
      To reduce the complexity of configuring gateway devices, an expanded control command interface is needed.
    </p>
    <p num="10">This application is being filed with the following related applications on the same date--attorney dockets: P09-97-097; P09-97-098; P09-97-127; P09-97-128; P09-97-129; P09-97-130; P09-97-140; P09-97-141; P09-97-142; and P09-97-143; and P09-97-144.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="11">
      A method and apparatus for establishing communication between a first initiating host and a second communicating host in a computing environment having a gateway device.
      <br/>
      The gateway device is electronically connected from one side to a plurality of initiating hosts and on another side to at least one local area network, where the local area network further electrically connects a plurality of receiving hosts to said gateway device.
      <br/>
      During the initialization, all connected hosts and the local area network(s) is identified and all their information and addresses are obtained so that this information can be stored in the form of a port-sharing table in a memory location accessible to the gateway device.
      <br/>
      Upon receipt of a special command for establishing communication between a first initiating host and a second receiving host, all information required for establishing of a successful communication between the two hosts is then obtained from the port-sharing table.
      <br/>
      In an alternate embodiment of the present invention the computing network environment uses Multi-path channel communication protocol.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="12">
      The subject matter which is regarded as the invention is particularly pointed out and distinctly claimed in the concluding portion of the specification. The invention, however, both as to organization and method of practice, together with further objects and advantages thereof, may best be understood by reference to the following description taken in connection with the accompanying drawings in which:
      <br/>
      FIG. 1 is a block diagram illustration of a computing environment;
      <br/>
      FIG. 2 is another block diagram illustration of a computing environment having a gateway device and a plurality of hosts;
      <br/>
      FIG. 3 is another illustration of the block diagram shown in FIG. 2 with arrows indicating the existing flow of information;
      <br/>
      FIG. 4 is another illustration of the block diagram shown in FIG. 2 with arrows indicating the flow of information according to one embodiment of the present invention;
      <br/>
      FIG. 5 is yet another block diagram illustration of a computing environment providing different functions as supported by the environment;
      <br/>
      FIG. 6 is an illustration of blocks of data grouped together; and
      <br/>
      FIGS. 7A and 7B is an illustration of data flow to and from the gateway device.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="13">
      FIG. 1 is an illustration of an example showing the connection of large computing network environment, such as one provided by a large mainframe computer, to a Local Area Network (LAN) and the Internet.
      <br/>
      The large rectangle in FIG. 1 shown at 100 is a computing network environment such as an IBM S/390 computer.
      <br/>
      The operating system(s) for the computing environment is shown as 110 and can be one of many available operating systems such as OS/390 or MVS/ESA.
      <br/>
      At the next layer, shown at 120, the software products and applications reside, some examples being DB2, TSO, CICS, and IMS.
      <br/>
      The Common Gateway Interface or CGI is shown at 130 and interfaces with the communication devices such as an IBM Internet Connection Server, to access VTAM (shown at 142), TCP/IP (shown at 144), IPX (shown at 146) or other similar communication protocols.
      <br/>
      The network connection to the LAN and/or Internet (shown at 160-174) can be accomplished by means of any indicated communications controller or such as an Open Systems Adapter connection, hereinafter OSA.
      <br/>
      The network connection from the computing environment servers can be a channel (150) or an integrated platform (155) connection.
      <br/>
      An Open System Adapter or an OSA shown at 158 is an integrated connectivity platform and a product of IBM Corp. of Armonk. OSA provides direct attachment to token ring (shown at 172), ethernet (shown at 174), FDDI's or fiber distributed data interfaces, and ATM (not shown).
      <br/>
      Multiple host systems can be accessed from a single workstation through a single OSA LAN/WAN port.
      <br/>
      Integrated on the OSA card is a channel adapter, a control unit and LAN adapters.
      <br/>
      OSA supports a variety of communication protocols, namely SNA/APPN, TCP/IP and IPX.
      <br/>
      OSA allows the sharing of applications and/or LAN ports among logical partitions.
    </p>
    <p num="14">
      There are many protocols used to connect the communication stacks, for example an MVS TCP/IP Stack to a channel attached platform or an integrated platform such as the OSA.
      <br/>
      One such platform protocol is known as an LCS or LAN Channel Station.
      <br/>
      LCS provides an efficient method of transferring data across the I/O subsystems by blocking multiple LAN frames together in one common chain.
      <br/>
      In the following sections, the teachings of the present invention may be described in reference with a system using OSA and LCS to communicate with the MVS operating system in a setup using TCP/IP.
      <br/>
      However, the workings of the present invention is not limited to the use of OSA, LCS, TCP/IP and MVS and any such reference will be used for demonstrative purposes only.
    </p>
    <p num="15">
      A variety of gateway devices have been developed which connect to TCP/IP and give connectivity to LAN/WAN environment.
      <br/>
      In the existing systems, when a host is communicating with a LAN or other similar networks a Media Access Control Header, also known as a MAC Header, along with the LAN type, has to be first established so that the host and the LAN understand what kind of device and at what address the communication is being determined to address the particular needs of one another.
      <br/>
      Building a MAC header is not an easy task.
      <br/>
      In a large communicating environment, each time the host and LAN devices communicate a MAC Header has to be created which can be both inefficient in terms of time and memory consumption.
      <br/>
      Each time communication is to be established information including the device(s) address on both the sending and receiving ends, MAC header, LAN type, device type, protocol versioning and the like has to be exchanged.
      <br/>
      This process requires substantial spending of both time and memory.
      <br/>
      The present invention, however, introduces a concept which makes the formation of MAC headers and providing of such aforementioned information each time between the initiating host and receiving device obsolete.
      <br/>
      This will save latency, memory capacity and introduces efficiency on memory moves especially on the initiating host's side.
      <br/>
      The host no longer has a requirement to know any LAN/WAN specific information.
    </p>
    <p num="16">
      FIG. 2 depicts one embodiment of the present invention.
      <br/>
      Originating hosts A and B shown at 210 and 212 are connected to a gateway device, preferably an integrated gateway device such as an OSA and shown at 220.
      <br/>
      The destination hosts C and D shown at 240 and 242 are also connected via the LAN shown at 230 to the gateway device.
      <br/>
      In the existing systems when originating hosts A and B try to establish communication with destination hosts C and D, the appropriate MAC Header has to be formed first for each communication.
      <br/>
      Another existing limitation in the present system is that if host A is trying to communicate with host B, the information has to travel from host A into the gateway device and onto the LAN as depicted by the arrows shown in FIG. 3 at 350 before being transformed to Host B. The present invention, however, provides for a technique so that the information from Host A can be provided to Host B without going to the LAN at all as depicted in FIG. 4 and indicated by the arrows shown at 460.
    </p>
    <p num="17">
      In the present invention whenever each host gets connected to the gateway device, it sends the required address information as an configuration command to the gateway device during an initial handshaking at the onset of establishing communication with the gateway device.
      <br/>
      It is the gateway device itself that uses the configuration command and controls the communication from that point on.
      <br/>
      Referring back to FIG. 2, destination hosts C and D continuously are aware of the IP addresses and requirements of the gateway device.
      <br/>
      Destination hosts C and D obtain the destination MAC addresses of initiating hosts A and B directly from the gateway device, not from Hosts A and B. Hosts A and B have no knowledge of the media specific information or address resolution.
      <br/>
      Hosts C and D only know about the gateway device address.
      <br/>
      In other words hosts C and D only know hosts A and B through the gateway device.
      <br/>
      The same is true about hosts A and B in that they are not aware of independent existence of C and D except through the use of the gateway device.
      <br/>
      As a consequence, there is no need to define the type of device or the LAN type and protocol versioning each time the communication is being established.
      <br/>
      In the present invention there are tables existing in the gateway device that are used to make the device aware of all the host/LAN/WAN connections and their special needs.
      <br/>
      Every time, for example host A is trying to communicate with host C, the gateway device searches in its table of addresses to find the address of A and C so that communication is carried out successfully.
      <br/>
      But the gateway device is also aware, through the use of its previously stored information of the type of LAN that is connected to device C, any limitations and particular needs that device C has as well as the type of communication protocol needed for device A to communicate with device C. Every time a LAN or host is being newly added, the present invention through an initialization step introduces the device and stores any pertinent information that is needed for further communications.
      <br/>
      From that point on, once the host becomes connected to the gateway device, the gateway device remains aware of all its requirements.
      <br/>
      The gateway device also checks the availability and existence of the device connections and their workability, at intervals to monitor and ensure that the device is still available.
      <br/>
      If the device is no longer in use, the gateway device makes the appropriate alterations to the table(s) in question.
    </p>
    <p num="18">
      In the existing systems there is a configuration file attached to each communication platform that controls all configuration information.
      <br/>
      It is the responsibility of the user to keep this configuration file updated.
      <br/>
      Any new addition or deletion of hosts must be inputted by the user and there is no way that modifications and alterations can be handled automatically.
      <br/>
      The present invention, however, as explained earlier dynamically and automatically handles alterations, additions and modifications to the configuration through the use of commands explained in detail below and through the use of specially accessed tables.
    </p>
    <p num="19">
      FIG. 5 is an illustration of the workings of the present invention as explained by one embodiment.
      <br/>
      The host and its operating system and applications is shown at 500 and 501 respectively.
      <br/>
      The IP protocols are shown at 502 (IP) and TCP and UDP at 504 and 506, respectively.
      <br/>
      The TCP/IP or UDP/IP functions available are shown at 550--ARP, 552--Inbound TCP checksum, 554--IP fragmentation/reassembly, 556--broadcast filtering, 558--IP multicast, 560--Inbound UDP checksum and 562--IP version support (Version 6 is used as way of example).
      <br/>
      The communication protocol options presented at 550-562 are merely for demonstration purposes and it is possible to add or modify this list according to each particular setup and mechanism.
      <br/>
      For example in an alternate embodiment of the invention described below, SAP and RIP functions are among the functions that are supported.
      <br/>
      The LAN connection is shown at 580 and the gateway connection at 530.
    </p>
    <p num="20">
      In such setups, usually a control command interface exists in the gateway device to allow TCP/IP or other protocols to connect to the gateway device in order to begin data transfers.
      <br/>
      However, this control command interface requires all the configuration information to be set prior to the TCP/IP connect sequence.
      <br/>
      Furthermore, the control interface does not have a command sequence to enable the use of the TCP/IP functions which have been implemented in the gateway device.
      <br/>
      The TCP/IP program product running on such operating systems as MVS and VM/VSE have been developed by a number of companies.
      <br/>
      But many of today's TCP/IP implementations have encountered performance problems due to the increased bandwidth of the LAN/WAN arenas.
      <br/>
      To try and improve the MVS and other similar operating system's performance using TCP/IP or other communication protocols, various TCP/IP functions have been identified which could better be implemented in a gateway device which has LAN/WAN connectivity.
      <br/>
      Some of these functions include ARP assist, TCP and IP checksum calculations, broadcast filtering and IP fragmentation and reassembly.
      <br/>
      To reduce the complexity of configuring the gateway devices, the present invention introduces an expanded control command interface.
      <br/>
      This will allow gateway devices to implement most TCP/IP functions and provide means for determining which TCP/IP functions are supported by the gateway device, if any.
    </p>
    <p num="21">
      The present invention provides for an expanded control command interface to reduce the complexity of gateway device configurations and address the limitations caused by providing a MAC header.
      <br/>
      A new subset of control commands have been developed which can be used to reduce such configuration complexities.
      <br/>
      These fall into three basic categories.
    </p>
    <p num="22">
      The Set IP Address function basically sets up the IP address at STARTUP time, instead of configuration time.
      <br/>
      In this way each time a TCP/IP session has to be initialized, configuration needs not to be reestablished, therefore reducing the complexity of configuring the device and dynamically configuring the new IP sessions.
    </p>
    <p num="23">
      Query IP Assist function allows the TCP-UDP/IP to query the channel attached device to determine which TCP-UDP/IP functions are implemented in the device.
      <br/>
      This will allow the ability to determine which functions if any it wishes to use on the gateway device.
      <br/>
      So referring back to FIG. 1, all functions shown at 150-162 may not be available.
      <br/>
      Rather only a subset of 150, 152 and 154 may be available.
      <br/>
      If the user requires the IP multicast, for example, which is not available the Query IP Assist will allow the user to determine this before further processing time is wasted.
      <br/>
      Because of its flexibility, the Query IP Assist function can be selected as desired to either work in conjunction with the SET IP Address function or with SET IP Assist function.
    </p>
    <p num="24">
      The Set IP Assist function will tell the channel attached device which TCP-UDP/IP functions are supported and available to be activated.
      <br/>
      This allows TCP-UDP/IP to individually select which functions it desires to use.
      <br/>
      Referring back to FIG. 1, the user may only want to select broadcast filtering for example from the menu of available functions shown at 152-162.
    </p>
    <p num="25">
      As a consequence, as explained earlier, since the hosts really only know each other through the gateway device, and the gateway device through its port-sharing tables controls and monitors all the configuration information, when Host A wants to communicate with Host B, (FIGS. 2-4), Host A's data does not require to go all the way to the LAN before being transmitted to Host B as in the existing systems.
      <br/>
      Routing between A and B is direct and without the extra step of involving the LAN.
      <br/>
      This routing mechanism can be implemented in a loosely coupled environment, such as a Sysplex, for sending any type of data between any two hosts and especially without involving any LAN/WAN connections.
    </p>
    <p num="26">Set IP Address</p>
    <p num="27">
      The Set IP Address command is used to associate an IP address with a specific user session.
      <br/>
      The command is initiated by the user.
      <br/>
      Once the command is received, the gateway device quickly searches its existing port-sharing tables to see if the particular IP address is included or not.
      <br/>
      If there is a match found, that means that the particular device has been formerly identified.
      <br/>
      A complete IP data match also indicates that there are no alterations or modifications to be made.
      <br/>
      However if no matches are found for the IP address, the information concerning the particular IP address, the application using the gateway device from the particular host and the information concerning the port type and subnet mask is obtained from the IP datagram and configuration information and used to build a new entry in the port-sharing table to be used for all future communications.
      <br/>
      The MTU or maximum transmission Unit size is also determined.
      <br/>
      The MTU is the maximum data size allowable for processing.
    </p>
    <p num="28">
      The following tables depicts the information that is obtained from the IP datagram and configuration information, and the information returned to the host and/or established to be used for future communications.
      <br/>
      FIGS. 7A and 7B show this exchange of information flow to and from the gateway.
      <br/>
      While FIG. 7A shows this exchange for the following tables represented in this section, FIG. 7B is a similar counterpart showing the flow for the alternate embodiment as described below.
    </p>
    <p num="29">Table 1A is composed of the information obtained at the onset of SETIP Address command and Table 1B comprises of the returned information.</p>
    <p num="30">
      -- TABLE 1A
      <br/>
      -- SETIP Command Structure
      <br/>
      --   (Chemical Structure image '1' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnn -    Sequence Number Field - two byte field containing a S/390
      <br/>
      --           integer sequence counter.
      <br/>
      Each command initiator maintains its
      <br/>
      --  own
      <br/>
      --           sequence count, which starts at zero for the first command, and
      <br/>
      --  is
      <br/>
      --           serially incremented (by one) for each subsequent command.
      <br/>
      The
      <br/>
      --           response string will contain the same sequence number echoed
      <br/>
      --  back.
      <br/>
      -- LT -      Adapter type code - one byte field indicating the adapter type
      <br/>
      --  code.
      <br/>
      --                1 = Ethernet
      <br/>
      --                2 = Token Ring
      <br/>
      --                7 = FDDI
      <br/>
      -- LN -      Relative adapter number - one byte field indicating the relative
      <br/>
      --  adapter
      <br/>
      --           number.
      <br/>
      -- VER -     2 byte field - version supported for this command (valid entries
      <br/>
      --  are
      <br/>
      --           4 (IP V4) or 6 (IP V6)).
      <br/>
      -- CNT -     Count Field - 2 byte field (unsigned integer) contains the number
      <br/>
      --  of
      <br/>
      --           parameters that are included in the command data field.
      <br/>
      -- IP Addr - IP address of the connection.
      <br/>
      This is a 4 or 16 byte field
      <br/>
      --  depending
      <br/>
      --           on the value of the version id. (V4 = 4 bytes, V6 = 16 bytes).
      <br/>
      -- Netmask - The TCP/IP Netmask of this connection.
      <br/>
      This is a 4 or 16 byte
      <br/>
      --  field
      <br/>
      --           depending on the value of the version id. (V4 = 4 bytes, V6 = 16
      <br/>
      --  bytes).
      <br/>
      -- MTU -     The Maximum transmittal unit size (MTU) of this connection.
      <br/>
      This
      <br/>
      --  a
      <br/>
      --           4 byte field stating the max frame size that can be transmitted
      <br/>
      --  on this
      <br/>
      --           LAN/WAN segment.
    </p>
    <p num="31">
      -- TABLE 1B
      <br/>
      -- SETIP Reply Structure
      <br/>
      --   (Chemical Structure image '2' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -   Sequence Number Field - two byte field containing a S/390
      <br/>
      --           integer sequence counter.
      <br/>
      Each command initiator maintains
      <br/>
      --           its own sequence count, which starts at zero for the first
      <br/>
      --           command, and is serially incremented (by one) for each
      <br/>
      --           subsequent command.
      <br/>
      The response string will contain the
      <br/>
      --           same sequence number echoed back.
      <br/>
      -- RC -      Command return code. 2 byte fieid indicating the return code
      <br/>
      --           status.
      <br/>
      --           RC values:
      <br/>
      --   (Chemical Structure image '3' not included in text)
      <br/>
      -- LT -      Adapter type code - one byte field indicating the adapter
      <br/>
      --           type code.
      <br/>
      --               1 = Ethernet
      <br/>
      --               2 = Token Ring
      <br/>
      --               7 = FDDI
      <br/>
      -- LN -      Relative adapter number - one byte field indicating the
      <br/>
      --           relative adapter number.
      <br/>
      -- VER -     2 byte field - version supported for this command (valid
      <br/>
      --           entries are 1 (SNA), 4 (IP V4), or 6 (IP V6)).
      <br/>
      -- ASTS -    16 bit field - TCP/IP Assists supported (information valid
      <br/>
      --           only in reply frames).
      <br/>
      The bit flelds are defined as follows
      <br/>
      --           (bit on signifies supported)
      <br/>
      --           Assist List:
      <br/>
      --               Arp Processing-              bit0 (0x0001)
      <br/>
      --               Inbound Checksum Support-    bit 1 (0x0002)
      <br/>
      --               Outbound Checksum Support-   bit 2 (0x0004)
      <br/>
      --               IP Fragmentation/Reassembly- bit 3 (0x0008)
      <br/>
      --               Filtering-                   bit 4 (0x0010)
      <br/>
      --               IP V6 Support-               bit 5 (0x0020)
      <br/>
      -- ASTE -    16 bit fieId TCP/IP Assists Enabled (information valid only
      <br/>
      --           in reply frames).
      <br/>
      -- CNT -     Count Field - 2 byte field (unsigned integer) contains the
      <br/>
      --           number of parameters that are included in the command
      <br/>
      --           data field.
      <br/>
      -- DATA -    RC code dependent data.
    </p>
    <p num="32">QIPASST--Query IP Assist Function</p>
    <p num="33">
      One of the commands provided by the present invention is a SET IP Assist.
      <br/>
      The IP Assist command designed for high performance LAN/WAN connections allows the dynamic configuration of IP functions in gateway devices and enables virtual IP addressing.
      <br/>
      TCP-UDP/IP will use this command to query the channel or integrated platform which TCP-UDP/IP functions on the device are available.
      <br/>
      This allows TCP-UDP/IP to individually select which functions it desires to use.
      <br/>
      The SET IP Assist (SETASSTPARMS) function allows TCP/IP to support multiple devices which in turn can support multiple levels of IP Assist functions.
      <br/>
      TCP/IP can specify different IP functions for each configured IP address with the SET IP ASSIST function.
      <br/>
      This adds considerable flexibility to TCP/IP.
      <br/>
      Special IP ASSISTs which are more useful for specific IP addresses configured for Web Serving can specify specific IP ASSISTs which are designed for Web Serving.
    </p>
    <p num="34">
      FIG. 5 provides some of the functions supported and used by TCP/IP and on the OSA platform.
      <br/>
      These assist functions include ARP, Inbound Checksum, Outbound Checksum and IP Fragmentation/Reassembly.
      <br/>
      The IP Assist functions are designed to shorten the Host code path length and improve the performance of TCP/IP.
      <br/>
      By providing a command which can be used to query the communication adapters, individual IP sessions which run through the adapter can be setup to use the fast path and the other IP sessions can use the normal path.
      <br/>
      Again a list of the functions available is kept on the port-sharing table and those that become available or unavailable are masked off appropriately.
      <br/>
      In this way it is easy to determine at once which functions are supported by the system at any one time very efficiently.
      <br/>
      The following tables highlight the information originally obtained (Table 2A) and information relayed back to the host (Table 2B).
      <br/>
      Note that the information provided in FIG. 5 highlighting OSA supported functions ARP, Inbound Checksum, Outbound Checksum and IP Fragmentation/Reassembly are only for demonstration purposes.
      <br/>
      The set of functions can be customized to include more or less elements selectively as applications require.
    </p>
    <p num="35">
      -- TABLE 2A
      <br/>
      -- QIPASST Command Structure
      <br/>
      --   (Chemical Structure image '4' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -   Sequence Number Field - two byte field containing a S/390
      <br/>
      --           integer sequence counter.
      <br/>
      Each command initiator maintains
      <br/>
      --           its own sequence count, which starts at zero for the first
      <br/>
      --           command, and is serially incremented (by one) for each
      <br/>
      --           subsequent command.
      <br/>
      The response string will contain the
      <br/>
      --           same sequence number echoed back.
      <br/>
      -- LT -      Adapter type code - one byte field indicating the adapter
      <br/>
      --           type code.
      <br/>
      --               1 = Ethernet
      <br/>
      --               2 = Token Ring
      <br/>
      --               7 = FDDI
      <br/>
      -- LN -      Relative adapter number - one byte field indicating the
      <br/>
      --           relative adapter number.
      <br/>
      -- VER -     2 byte field - version supported for this command (valid
      <br/>
      --           entries are 4 (IP V4), or 6 (IP V6)).
    </p>
    <p num="36">
      -- TABLE 2B
      <br/>
      -- FIG. 7-15 QUERYIP Reply Command Structure
      <br/>
      --   (Chemical Structure image '5' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -   Sequence Number Field - two byte field containing a S/390
      <br/>
      --           integer sequence counter.
      <br/>
      Each command initiator maintains
      <br/>
      --           its own sequence count, which starts at zero for the first
      <br/>
      --           command, and is serially incremented (by one) for each
      <br/>
      --           subsequent command.
      <br/>
      The response string will contain the
      <br/>
      --           same sequence number echoed back.
      <br/>
      -- RC -      Command return code. 2 byte field indicating the return code
      <br/>
      --           status.
      <br/>
      --           RC values:
      <br/>
      --               0x0000 = Success
      <br/>
      --               0x0001 = Command Not Supported
      <br/>
      --               0xE003 = Incorrect LAN Type or Number
      <br/>
      -- LT -      Adapter type code - one byte field indicating the adapter
      <br/>
      --           type code.
      <br/>
      --               1 = Ethernet
      <br/>
      --               2 = Token Ring
      <br/>
      --               7 = FDDI
      <br/>
      -- LN -      Relative adapter number - one byte field indicating the
      <br/>
      --           relative adapter number.
      <br/>
      -- VER -     2 byte fleld - version supported for this command (valid
      <br/>
      --           entries are 4 (IP V4) or 6 (IP V6)).
      <br/>
      -- ASTS -    16 bit fleld TCP/IP Assists supported (information valid
      <br/>
      --           only in reply frames).
      <br/>
      The bit flelds are defined as follows
      <br/>
      --           (bit on signifies supported)
      <br/>
      --           Assist List:
      <br/>
      --               Arp Processing -            bit 0 (0x0001)
      <br/>
      --               Inbound Checksum Support -  bit 1 (0x0002)
      <br/>
      --               Outbound Checksum Support - bit 2 (0x0004)
      <br/>
      --               IP Fragmentation/Reassembly - bit 3 (0x0008)
      <br/>
      --               Filtering -                 bit4 (0x0010)
      <br/>
      --               IP V6 Support -             bit 5 (0x0020)
      <br/>
      -- ASTH -    16 bit fleld - TCP/IP Assists Enabled (information
      <br/>
      --           valid only in reply frames).
    </p>
    <p num="37">SETASSTPARMS--Set IP Assist (Parameters)</p>
    <p num="38">
      The SETASSTPARMS command is used by the host IP stack and all the IP applications (i.e. TCP/IP, UDP/IP etc.) to enable the particular assists desired and to specify the parameters needed by the particular assists that are being implemented in the channel, integrated or OSA specific platforms.
      <br/>
      Examples of these parameters is the setting of the size of the ARP Cache, or the protocols that will be filtered if Broadcast Filtering is implemented.
      <br/>
      When used with an OSA adapter, the OSA adapter will just discard the broadcast packet when it has been received.
      <br/>
      The IP protocols include RIP (Routing Information Protocol, SNMP (Simple Network Management Protocol) and BGP (Border Gateway Protocol).
      <br/>
      This command allows the user not only to query about the functions that are available but to selectively pick and choose these functions.
      <br/>
      Tables 3A and 3B are representative of the information obtained and information returned respectively.
      <br/>
      Tables 3C and 3D represent some of the commands available and the responses returned.
    </p>
    <p num="39">
      -- TABLE 3A
      <br/>
      -- FIG. 7-16 SETASSTPARMS Command Structure
      <br/>
      --   (Chemical Structure image '6' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -          Sequence Number Field - two byte field containing a S/390
      <br/>
      --                  integer sequence counter.
      <br/>
      Each command initiator maintains
      <br/>
      --  its own
      <br/>
      --                  sequence count, which starts at zero for the first
      <br/>
      --  command, and is
      <br/>
      --                  serially incremented (by one) for each subsequent command.
      <br/>
      --  The
      <br/>
      --                  response string will contain the same sequence number
      <br/>
      --  echoed back.
      <br/>
      -- LT -             Adapter type code - one byte field indicating the adapter
      <br/>
      --  type code.
      <br/>
      --                      1 = Ethernet
      <br/>
      --                      2 = Token Ring
      <br/>
      --                      7 = FDDI
      <br/>
      -- LN -             Relative adapter number - one byte field indicating the
      <br/>
      --  relative adapter
      <br/>
      --                  number.
      <br/>
      -- VER -            2 byte field - version supported for this command (valid
      <br/>
      --  entries are
      <br/>
      --                  4 (IP V4) or 6 (IP V6)).
      <br/>
      -- Assist Number -
      <br/>
      --   (Chemical Structure image '7' not included in text)
      <br/>
      -- Assist Options - Assist Specific - refer to table below
      <br/>
      -- Assist Parameters - Assist Specific - refer to table below
    </p>
    <p num="40">
      -- TABLE 3B
      <br/>
      -- SETASSTPARMS Reply Command Structure
      <br/>
      --   (Chemical Structure image '8' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -   Sequence Number Field - two byte field containing a S/390
      <br/>
      --           integer sequence counter.
      <br/>
      Each command initiator maintains its
      <br/>
      --  own
      <br/>
      --           sequence count, which starts at zero for the first command, and
      <br/>
      --  is
      <br/>
      --           serially incremented (by one) for each subsequent command.
      <br/>
      The
      <br/>
      --           response string will contain the same sequence number echoed back
      <br/>
      -- RC -      Command return code. 2 byte field indicating the return code
      <br/>
      --           status.
      <br/>
      --           RC values:
      <br/>
      --               0x0000 = Success
      <br/>
      --               0x0001 = Command Not Supported
      <br/>
      --               0xE003 = Incorrect LAN Type or Number
      <br/>
      -- LT -      Adapter type code - one byte field indicating the adapter type
      <br/>
      --  code.
      <br/>
      --               1 = Ethernet
      <br/>
      --               2 = Token Ring
      <br/>
      --               7 = FDDI
      <br/>
      -- LN -      Relative adapter number - one byte field indicating the relative
      <br/>
      --  adapter
      <br/>
      --           number.
      <br/>
      -- VER -     2 byte field - version supported for this command (valid entries
      <br/>
      --  are
      <br/>
      --           4 (I PV4) or 6 (IP V6)).
      <br/>
      -- ASTS -    16 bit field - TCP/IP Assists supported (information valid only
      <br/>
      --  in reply
      <br/>
      --           frames).
      <br/>
      The bit fields are defined as follows (bit on signifies
      <br/>
      --  supported)
      <br/>
      --           Assist List:
      <br/>
      --               Arp Processing -             bit 0 (0x0001)
      <br/>
      --               Inbound Checksum Support -   bit 1 (0x0002)
      <br/>
      --               Outbound Checksum Support -  bit 2 (0x0004)
      <br/>
      --               IP Fragmentation Reassembly - bit 3 (0x0008)
      <br/>
      --               Filtering -                  bit 4 (0x0010)
      <br/>
      --               IP V6 Support -              bit 5 (0x0020)
      <br/>
      -- ASTE -    16 bit field - TCP/IP Assists Enabled (information valid only in
      <br/>
      --  reply
      <br/>
      --           frames).
      <br/>
      -- ASN -     2 byte field - Assist Number
      <br/>
      -- ASO -     2 byte field - Assist Option
      <br/>
      -- RC -      4 byte field - Return Code -
      <br/>
      --                0x00000000 - Success
      <br/>
      --               Anything else - command specific failure
      <br/>
      -- Data -    Assist specific data
    </p>
    <p num="41">
      -- TABLE 3C
      <br/>
      --                                               Assist
      <br/>
      -- Assist      Assist                            Command
      <br/>
      -- Number      Command   Assist Command Description Parameters
      <br/>
      -- ARP         0x0001    Start Assist            None
      <br/>
      -- (0x0001)    0x0002    Stop Assist             None
      <br/>
      --             0x0003    Set Number of ARP Cache 4 byte field =
      <br/>
      --                       Entries (Default = 256) number of
      <br/>
      --                                               entries
      <br/>
      --             0x0004    Query ARP Cache Table -  None
      <br/>
      --                       returns all entries in ARP
      <br/>
      --                       Cache
      <br/>
      --             0x0005    Add ARP Cache Entry     4 or 16 byte
      <br/>
      --                                               field = IP
      <br/>
      --                                               address of
      <br/>
      --                                               entry you want
      <br/>
      --                                               to add
      <br/>
      --             0x0006    Remove ARP Cache Entry  4 or 16 byte
      <br/>
      --                                               field = IP
      <br/>
      --                                               address of
      <br/>
      --                                               entry you want
      <br/>
      --                                               to remove
      <br/>
      --             0x0007    Flush ARP Table - all ARP None
      <br/>
      --                       Cache Entries are deleted
      <br/>
      -- Inbound     0x0001    Start Assist            None
      <br/>
      -- CheckSum    0x0002    Stop Assist             None
      <br/>
      -- Support     0x0003    Enable CheckSum Frame   None
      <br/>
      -- (0x0002)              Types (Bit on enables
      <br/>
      --                       feature)
      <br/>
      --                      Bit 0 - Enable IP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bit 1 - Enable ICMP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bit 2 - Enable UDP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bit 3 - Enable TCP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bits 4-31 - reserved
      <br/>
      --                                  (set to zero)
      <br/>
      -- Outbound    0x0001    Start Assist            None
      <br/>
      -- CheckSum    0x0002    Stop Assist             None
      <br/>
      -- Support     0x0003    Enable CheckSum Frame   None
      <br/>
      -- (0x0004)              Types (Bit on enables
      <br/>
      --                       feature)
      <br/>
      --                      Bit 0 - Enable IP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bit 1 - Enable ICMP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bit 2 - Enable UDP Frame
      <br/>
      --                              ChecKSumming
      <br/>
      --                      Bit 3 - Enable TCP Frame
      <br/>
      --                              CheckSumming
      <br/>
      --                      Bits 4-31 - reserved
      <br/>
      --                                  (set to zero)
      <br/>
      -- IP          0x0001    Start Assist            None
      <br/>
      -- Frag/       0x0002    Stop Assist             None
      <br/>
      -- Reassmble
      <br/>
      -- Support
      <br/>
      -- (0x0008)
      <br/>
      -- Filtering   0x0001    Start Assist            None
      <br/>
      -- Support     0x0002    Stop Assist             None
      <br/>
      -- (0x0010)    0x0003    What Frames to Filter (32 Bit None
      <br/>
      --                       field)
      <br/>
      --                       Turn bit on to enable filtering)
      <br/>
      --                      Bit 0 - ARP Frames (This
      <br/>
      --                              bit is turned on
      <br/>
      --                              automatically if the
      <br/>
      --                              ARP Assist is
      <br/>
      --                              enabled)
      <br/>
      --                      Bit 1 - RARP Frames
      <br/>
      --                      Bit 2 - ICMP Frames
      <br/>
      --                      Bit 3 - IP Frames
      <br/>
      --                      Bit 4 - IPX/SPX Frames
      <br/>
      --                      Bit 5 - RIP Frames
      <br/>
      --                      Bit 6 - BGP Frames
      <br/>
      --                      Bit 7 - UDP Frames
      <br/>
      --                      Bit 8 - TCP Frames
      <br/>
      --                      Bit 9 - SNMP Frames
      <br/>
      --                      Bit 10 - Mutlicast Frames
      <br/>
      --                      Bit 11 - BroadCast Frames
      <br/>
      --                      Bit 12-31 - Reserved
      <br/>
      -- IPV6        0x0001    Start Assist            None
      <br/>
      -- Support     0x0002    Stop Assist             None
      <br/>
      -- (0x0020)    0x0003    What Functions to Support None
      <br/>
      --                       (32 Bit field)
      <br/>
      --                       (Turn bit on to enable)
      <br/>
      --                      Bit 0 - Allow V6 Traffic
      <br/>
      --                      Bit 1 - Allow V4 Traffic
      <br/>
      --                      Bit 2 - Translate V4 to V6
      <br/>
      --                              Model
      <br/>
      --                      Bit 3 - Translate V6 to V4
      <br/>
      --                              Model
      <br/>
      --                      Bit 4 -31 - Reserved
    </p>
    <p num="42">
      -- TABLE 3D
      <br/>
      -- SETASSTPARMS Reply Command Options
      <br/>
      --
      <br/>
      --  Assist Data (Reply) -
      <br/>
      -- Assist Number Assist Command Assist Command Description
      <br/>
      --  (least significant 2 bytes)
      <br/>
      -- ARP           0x0001         Start Assist                               RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      -- (0x0001)
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
    </p>
    <p num="43">
      --               0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0003         Set Number of ARP Cache Entries (Default =
      <br/>
      --  256) RC -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --
      <br/>
      --     0x0003 - Out of Range
      <br/>
      --                                                                       Data
      <br/>
      --  - if RC = 0x0003 return
      <br/>
      --                                                                       4
      <br/>
      --  bytes - max number
      <br/>
      --                                                                       of
      <br/>
      --  entries supported
      <br/>
      --               0x0004         Query ARP Cache Table - returns all entries in
      <br/>
      --  RC -   0x0000 - Success
      <br/>
      --                              ARP Cache
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - if non failing RC -
      <br/>
      --
      <br/>
      --  returns ARP Cache Table
      <br/>
      --               0x0005         Add ARP Cache Entry                        RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - returns ARP Cache
      <br/>
      --                                                                       Entry
      <br/>
      --               0x0006         Remove ARP Cache Entry                     RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - returns ARP Cache
      <br/>
      --                                                                       Entry
      <br/>
      --               0x0007         Flush ARP Table - all ARP Cache Entries are RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --                              deleted
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      -- Inbound       0x0001         Start Assist                               RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      -- CheckSum
      <br/>
      --     0x0001 - Failed
      <br/>
      -- Support
      <br/>
      --     0x0002 - Not Supported
      <br/>
      -- (0x0002)                                                              Data
      <br/>
      --  - None
      <br/>
      --               0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0003         Enable CheckSum Frame Types (Bit on enables RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --                              feature)
      <br/>
      --     0x0001 - Failed
      <br/>
      --                              Bit 0 -Enable IP Frame CheckSumming
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                             Bit 1 - Enable ICMP Frame CheckSumming     Data
      <br/>
      --  - 4 bytes with least 4
      <br/>
      --                             Bit 2 - Enable UDP Frame CheckSumming
      <br/>
      --  significant bits representing
      <br/>
      --                             Bit 3 - Enable TCP Frame CheckSumming      what
      <br/>
      --  CheckSumming support
      <br/>
      --                             Bit 4-31 - reserved (set to zero)          is
      <br/>
      --  available
      <br/>
      -- OutBound      0x0001         Start Assist                               RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      -- CheckSum
      <br/>
      --     0x0001 - Failed
      <br/>
      -- Support
      <br/>
      --     0x0002 - Not Supported
      <br/>
      -- (0x0004)                                                              Data
      <br/>
      --  - None
      <br/>
      --               0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0003         Enable CheckSum Frame Types (Bit on enables RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --                              feature)
      <br/>
      --     0x0001 - Failed
      <br/>
      --                              Bit 0 - Enable IP Frame CheckSumming
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                             Bit 1 - Enable ICMP Frame CheckSumming     Data
      <br/>
      --  - 4 bytes with least 4
      <br/>
      --                             Bit 2 - Enable UDP Frame CheckSumming
      <br/>
      --  significant bits representing
      <br/>
      --                             Bit 3 - Enable TCP Frame CheckSumming      what
      <br/>
      --  CheckSumming support
      <br/>
      --                             Bits 4-31 - reserved (set to zero)         is
      <br/>
      --  available
      <br/>
      -- IP            0x0001         Start Assist                               RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      -- Frag/
      <br/>
      --     0x0001 - Failed
      <br/>
      -- Reassmble
      <br/>
      --     0x0002 - Not Supported
      <br/>
      -- Support                                                               Data
      <br/>
      --  - None
      <br/>
      -- (0x0008)      0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      -- Filtering     0x0001         Start Assist                               RC
      <br/>
      --  -   0x000 - Success
      <br/>
      -- Support
      <br/>
      --     0x0001 - Failed
      <br/>
      -- (0x0010)
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0003         What Frames to Filter (32 Bit field)       RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --                              (Turn bit on to enable filtering)
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                             Bit 0 - ARP Frames (This bit is turned on
      <br/>
      --  Data - 4 bytes with least 12
      <br/>
      --                                     automatically if the ARP Assist
      <br/>
      --  significant bits representing
      <br/>
      --                                     is enabled)
      <br/>
      --  what Filtering support is
      <br/>
      --                             Bit 1 - RARP Frames
      <br/>
      --  available
      <br/>
      --                             Bit 2 - ICMP Frames
      <br/>
      --                             Bit 3 - IP Frames
      <br/>
      --                             Bit 4 - IPX-SPX Frames
      <br/>
      --                             Bit 5 - RIP Frames
      <br/>
      --                             Bit 6 - BGP Frames
      <br/>
      --                             Bit 7 - UDP Frames
      <br/>
      --                             Bit 8 - TCP Frames
      <br/>
      --                             Bit 9 - SNMP Frames
      <br/>
      --                             Bit 10 - Mutlicast Frames
      <br/>
      --                             Bit 11 - BroadCast Frames
      <br/>
      --                             Bit 12-31 - Reserved
      <br/>
      -- IP V6         0x0001         Start Assist                               RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      -- Support
      <br/>
      --     0x0001 - Failed
      <br/>
      -- (0x0020)
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0002         Stop Assist                                RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --
      <br/>
      --     0x0001 - Failed
      <br/>
      --
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                                                                       Data
      <br/>
      --  - None
      <br/>
      --               0x0003         What Functions to Support (32 Bit field)   RC
      <br/>
      --  -   0x0000 - Success
      <br/>
      --                              (Turn bit on to enable)
      <br/>
      --     0x0001 - Failed
      <br/>
      --                              Bit 0 - Allow V6 Traffic
      <br/>
      --     0x0002 - Not Supported
      <br/>
      --                             Bit 1 - Allow V4 Traffic                   Data
      <br/>
      --  - 4 bytes with least 4
      <br/>
      --                             Bit 2 - Translate V4 to V6 Model
      <br/>
      --  significant bits representing
      <br/>
      --                             Bit 3 - Translate V6 to V4 Model           what
      <br/>
      --  function support is
      <br/>
      --                             Bit 4-31 Reserved
      <br/>
      --  available
    </p>
    <p num="44">Multi-Path Channels--An Alternate Embodiment</p>
    <p num="45">
      MPC or multi-path channel protocol is a highly efficient data transfer interface developed to replace LCS by IBM Corp. of Armonk, N.Y. MPC can be implemented in the TCP/IP or VTAM layer; it can also be implemented using Novell based systems.
      <br/>
      In the existing systems when Host A wants to send data to the gateway or another host, it will wait and collect all information that has to be sent in preselected sizes.
      <br/>
      This waiting and grouping of data is called "blocking".
      <br/>
      On the receiving side, this blocked data has to be "deblocked" to distinguish between the individual commands or data.
    </p>
    <p num="46">
      The existing LCS protocol provides an efficient method of transferring data across the I/O subsystem by blocking multiple LAN frames together in one long chain.
      <br/>
      However, to provide this interface the LCS protocol is required to use the host processor to copy all the LAN Media Headers and all the application data into one contiguous block before performing the data transfer across the I/O subsystem.
      <br/>
      Also the LCS must prepend each LAN frame in the block with a four byte LCS header.
      <br/>
      This header is needed by the "deblocker" application running on the channel attached platform.
      <br/>
      The "deblocker" application uses the header to remove the individual LAN frames from the LCS block and send them to the LAN.
      <br/>
      This makes very inefficient use of the host's memory and creates extra latency for the user data.
      <br/>
      The current LCS interface also requires the device drivers to build the LAN Media Headers.
      <br/>
      The data passed to LCS must be in the exact format of the data which is to be transferred to the LAN.
      <br/>
      This requires all applications using the LAN interface to know which LAN type the data is being transferred to along with the destination LAN MAC addresses.
      <br/>
      One unique device driver must be written for each LAN type to which the application is connected.
    </p>
    <p num="47">
      The MPC protocol uses a new type of "blocked" data stream known as Discontiguous Protocol Data Units or DPDUs.
      <br/>
      This new data stream interface allows the header or control information to be in a separate memory area from the user data as it is transferred to the I/O subsystem.
      <br/>
      This eliminates the need to copy all the LAN media Headers and the application data into one contiguous area.
      <br/>
      For VTAM applications, a Macro interface has been provided to use when sending data across the MPC connection.
      <br/>
      The interface allows the application to specify a buffer list.
      <br/>
      Each entry in the buffer list corresponds to one portion of the discontiguous user data.
      <br/>
      MPC uses Protocol Data Unit or PDU headers to point at the various portions of the discontiguous user data.
      <br/>
      Each PDU will contain a list of the PDU elements.
      <br/>
      Each PDU element will point to one of the entries in the buffer list.
    </p>
    <p num="48">
      To address the special needs arising from the new MPC protocol manner of handling data streams, an alternate embodiment of the present invention is required and presented here.
      <br/>
      The three command concepts explained earlier, namely SET IP Address, Query IP and Set IP Assist (parameters) are adjusted to function with the MPC's new requirement.
      <br/>
      The result is complementary functions SET IPX Address, Query IPX and SETASSTPARMS IPX.
    </p>
    <p num="49">
      Similar to SET IP Address command, the Set IPX Address command (used primarily but not exclusively with Novell's IPX communication protocol) also to associate an IP address with a specific user session.
      <br/>
      The command is initiated by the user.
      <br/>
      Once the command is received, the gateway device quickly searches its existing port-sharing tables to see if the particular IP address is included or not, and alterations, additions or modifications are made if an exact match is not found.
      <br/>
      However, in the SET IPX Address scenario the only information provided to the gateway device is the LAN port number and id.
      <br/>
      All other information including a MAC address (as one is necessary in this scenario), MTU size and even the LAN type is provided by the gateway device itself from the port-sharing tables.
      <br/>
      The following tables provide the specifics of the exchange of information between the host and the gateway device.
      <br/>
      Notice that all necessary headers including a MAC Header is either dissected or returned by the gateway device as required.
      <br/>
      Table X1 A and X1 B below shows the IPX command requirements and returned information.
    </p>
    <p num="50">
      -- TABLE X1 A
      <br/>
      -- SETIPX Command Format
      <br/>
      --   (Chemical Structure image '9' not included in text)
      <br/>
      -- Where:
      <br/>
      -- CI        SETIPX command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- LN        LAN Number to be used by IPX on the OSA Adapter
      <br/>
      -- MTU       IPX Maximum Transmission Unit for this connection.
      <br/>
      This
      <br/>
      --           is a four byte field stating the maximum frame size which
      <br/>
      --           can be transmitted on this LAN/WAN segment.
      <br/>
      A value
      <br/>
      --           of 0xFFFFFFFF implies the MTU value used will be the
      <br/>
      --           returned by OSA on the SETIPX response shown below.
    </p>
    <p num="51">
      -- TABLE X1 B
      <br/>
      -- The OSA Command Response Format is as follows:
      <br/>
      --   (Chemical Structure image '10' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnn      Sequence number matching the SETIPX request
      <br/>
      -- RC        Return code (Status) from OSA Adapter
      <br/>
      -- LT        LAN Type associated with the LAN Port selected on the
      <br/>
      --           SETIPX request
      <br/>
      -- LN        LAN Number which was specified with the SETIPX request
      <br/>
      -- MAC       MAC Address of OSA LAN Port
      <br/>
      -- MTU       Supported MTU value on the OSA adapter
    </p>
    <p num="52">
      Tables X1 C and X1 D below reflect two new sub-command functions the IPX Bind and UNBIND.
      <br/>
      Binding is a function that allows the supporting of different LAN types on one computing network environment.
      <br/>
      The Bind function allows the association of particular LAN frame types to a gateway or the physical port.
      <br/>
      Unbind function is used when a host IPX connection terminates or is shutdown.
      <br/>
      The Bind command allows one Novell IPX device driver running on the host to support multiple LAN types along with multiple frame types within a specific LAN type.
      <br/>
      Prior to this implementation, one device driver was necessary for each LAN type and each frame type within a specific LAN type.
      <br/>
      For example, one device driver can now support an Ethernet-SNAP and Ethernet-802.2 frame type.
    </p>
    <heading>IPXBIND</heading>
    <p num="53">The IPX BIND command is used to BIND a Frame Type to the OSA LAN Port.</p>
    <p num="54">The Command Format is as follows:</p>
    <p num="55">
      -- TABLE X1 C
      <br/>
      --   (Chemical Structure image '11' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C2        IPX BIND command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
      <br/>
      -- SAP       Novell's Service Advertising Protocol.
      <br/>
      This protocol is used
      <br/>
      --           by a Client machine to determine what servers are available
      <br/>
      --           on the Network.
    </p>
    <heading>IPXUNBIND</heading>
    <p num="56">
      -- TABLE X1 D
      <br/>
      --   (Chemical Structure image '12' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C3        IPX UNBIND Command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- RC        Return Code returned from OSA
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
    </p>
    <p num="57">
      Subsequent Bind and Unbind commands as reflected in tables X1 E and X1 F below are also used to add even additional information, for example additional SAP parameters.
      <br/>
      These functions are used in a manner similar to the original bind and unbind function.
    </p>
    <heading>IPXSUBBIND</heading>
    <p num="58">
      The IPX Subsequent BIND command is used to specify additional SAP information to the OSA adapter.
      <br/>
      The Subsequent BIND command may or may not immediately follow the IPX BIND command.
      <br/>
      Once the Subsequent BIND command has been processed, IPX RIP and SAP frames will be forwarded to the operating system (MVS).
    </p>
    <p num="59">The format of the IPX Subsequent BIND command is as follows:</p>
    <p num="60">
      -- TABLE X1 E
      <br/>
      --   (Chemical Structure image '13' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C4        IPX Subsequent Bind Command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- RC        Return Code returned from OSA
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
      <br/>
      -- More SAP  More SAP information
    </p>
    <heading>IPXSUBUNBIND</heading>
    <p num="61">
      -- TABLE X1 F
      <br/>
      --   (Chemical Structure image '14' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C5        IPX Subsequent UNBIND Network Command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- RC        Return Code returned from OSA
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
    </p>
    <p num="62">
      IPX Bind net command (table X1 G) reflects a command used to pass network numbers associated with the operating system to the communication platform.
      <br/>
      Once a Network Number is specified, then all IPX traffic will be allowed to flow through the IPX connection.
      <br/>
      The network number will be used to route all non-RIP and non-SAP frames to the proper IPX connection. (RIP and SAP being two functions that are supported in this embodiment.)
    </p>
    <p num="63">
      FIG. 7B shows the flow of data back and forth from the gateway device for the functions described.
      <br/>
      Below, Table X1 G shows an example of this for MVS operating system and OSA platform.
      <br/>
      IPX Unbind net, shown at table X1 H, below is similar to other unbind commands.
    </p>
    <heading>IPXBINDNET</heading>
    <p num="64">
      The IPX BIND Network Command is used to pass the IPX Network Numbers associated with the MVS Netware Stack to the OSA adapter.
      <br/>
      Once this command has been processed all IPX frames can be forwarded to the MVS IPX Stack(s).
    </p>
    <p num="65">The format of the IPX BIND Network command is as follows:</p>
    <p num="66">
      -- TABLE X1 G
      <br/>
      --   (Chemical Structure image '15' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C6        IPX BIND Network Command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- RC        Return Code returned from OSA
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
      <br/>
      -- CNT       The count of Network numbers in the Data field
      <br/>
      -- NN        IPX Network Number(s).
      <br/>
      Each Network Number is 4
      <br/>
      --           bytes is length.
      <br/>
      The CNT field indicates the
      <br/>
      --           number of Network Numbers present in this field.
    </p>
    <heading>IPXUNBINDNET</heading>
    <p num="67">
      -- TABLE X1 H
      <br/>
      --   (Chemical Structure image '16' not included in text)
      <br/>
      -- Where:
      <br/>
      -- C7        IPX UNBIND Network Command
      <br/>
      -- nnnn      Sequence Number filed
      <br/>
      -- RC        Return Code returned from OSA
      <br/>
      -- LT        LAN Type of port
      <br/>
      -- LN        LAN Number
    </p>
    <p num="68">
      The SET IPX Assist function is also similar to the IP Assist command functions in that they are both designed for high performance LAN/WAN connections and allow the dynamic configuration of IPX address in gateway devices.
      <br/>
      As stated before MPC works both with the TCP/IP and other communications protocol including NetBios as well as the Novel protocol stacks and drivers.
      <br/>
      As a consequence the number of functions available for the user is more involved.
      <br/>
      However, again through the pre-established port-sharing tables, it is determined and known to the gateway device as which functions are supported by the device.
      <br/>
      The set of functions are different in this section and RIP and SAP functions are added to the list of functions available, while other functions specified before with the exception of broadcast filtering may not be available.
    </p>
    <p num="69">Table X2 is reflective of this.</p>
    <p num="70">
      --
      <br/>
      -- Request Format
      <br/>
      --   (Chemical Structure image '17' not included in text)
      <br/>
      -- Reply Format
      <br/>
      --   (Chemical Structure image '18' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn - Sequence Number Field - two byte field containing a S/390
      <br/>
      --         Integer Sequence
      <br/>
      -- LT -    Adapter type code - one byte field indicating the adapter
      <br/>
      --         type code.
      <br/>
      --           1 = Ethernet/Fast Ethernet
      <br/>
      --           2 = Token Ring
      <br/>
      --           7 = FDDI
      <br/>
      -- LN -    Relative adapter number - one byte field indicating the
      <br/>
      --         relative adapter number.
      <br/>
      -- VER -   2 byte field - IPX Version Supported
      <br/>
      -- RC -    Command return code. 2 byte field indicating the return code
      <br/>
      --         status.
      <br/>
      --         RC values:
      <br/>
      --         0x0000 = Success
      <br/>
      --         0x0001 = Command Not Supported
      <br/>
      --         0xE003 = Incorrect LAN Type or Number
      <br/>
      -- ASTS -  16 bit field - IPX Assists supported (information valid only in
      <br/>
      --         reply frames).
      <br/>
      The bit fields are defined as follows (bit on
      <br/>
      --         signifies supported)
      <br/>
      --         Assist List:
      <br/>
      --           RIP Assist -                 bit 0 (0x0001)
      <br/>
      --           SAP Assist -                 bit 1 (0x0002)
      <br/>
      --           Frame Filtering -            bit 2 (0x0004)
      <br/>
      --           Host to Host Routing Setup - bit 3 (0x0008)
      <br/>
      --           Extended IPX Version Support - bit 4 (0x0010)
      <br/>
      --           (Bits 5-15 are reserved for future use)
      <br/>
      -- ASTE -  16 bit field - IPX Assists Enabled (information valid only in
      <br/>
      --         reply frames).
      <br/>
      -- FIG. X2 - QIPXASST - Request and Reply Command Format
    </p>
    <p num="71">
      The SETASSTPARMS IPX command is used in a similar manner to its IP counterpart.
      <br/>
      It is designed to allow the user to select among the appropriately available functions.
      <br/>
      As before, this command allows the user not only to query about the functions that are available but to selectively pick and choose these functions.
      <br/>
      Tables X3 is representative of the information obtained and information returned respectively.
    </p>
    <p num="72">
      --
      <br/>
      -- Request Format
      <br/>
      --   (Chemical Structure image '19' not included in text)
      <br/>
      -- Reply Format
      <br/>
      --   (Chemical Structure image '20' not included in text)
      <br/>
      -- Where:
      <br/>
      -- nnnnn -          Sequence Number Field - two byte field containing a S/390
      <br/>
      --  Integer
      <br/>
      --                  Sequence
      <br/>
      -- LT -             Adapter type code - one byte field indicating the adapter
      <br/>
      --  type code.
      <br/>
      --                      1 = Ethernet/Fast Ethernet
      <br/>
      --                      2 = Token Ring
      <br/>
      --                      7 = FDDI
      <br/>
      -- LN -             Relative adapter number - one byte field indicating the
      <br/>
      --  relative adapter
      <br/>
      --                  number.
      <br/>
      -- VER -            2 byte field - IPX/SPX Version supported.
      <br/>
      -- Assists Supported (ASTS) - Assist Enabled (ASTE) - 16 bit Fields
      <br/>
      --   (Chemical Structure image '21' not included in text)
      <br/>
      -- Assist Options - Assist Specific
      <br/>
      -- Assist Parameters - Assist Specific
      <br/>
      -- ASN -            2 byte field - Assist Number
      <br/>
      -- ASO -            2 byte field - Assist Option
      <br/>
      -- RC -             Command return code. 2 byte field indicating the return
      <br/>
      --  code status
      <br/>
      --                      0x0000 = Success
      <br/>
      --                      0x0001 = Command Not Supported
      <br/>
      --                      0xE003 = Incorrect LAN Type or Number
      <br/>
      -- Data -           Assist specific data
      <br/>
      -- FIG.
      <br/>
      X3 - SETIPXASSTPARMS Reply and Request Command Format
    </p>
    <p num="73">
      In closing of this section, it should be noted that the new routing mechanism suggested by the teachings of the present invention is workable for the MPC protocol as well.
      <br/>
      Again, through the port-sharing tables it is possible to route messages directly from Host A to Host B without having to access the LAN.
      <br/>
      It is as before the gateway device that controls and monitors the configurations of the host devices.
      <br/>
      As before, this routing mechanism can be implemented in a loosely coupled environment, such as a Sysplex, for sending any type of data between any two hosts and especially without involving any LAN/WAN connections.
    </p>
    <p num="74">Blocking IP Datagrams in an MPC Point-to-point Environment</p>
    <p num="75">
      FIG. 6 shows the blocking of data in the existing systems.
      <br/>
      Block Header 610 shows the start of a new data batch.
      <br/>
      Each block header 610 is usually followed by the appropriate MAC Header and LLC shown at 612 and 614.
      <br/>
      The Protocol header and the Protocol data follow as shown in 616 and 618.
      <br/>
      A new block of data is shown at 620 and 630.
      <br/>
      Usually the applications receive user data which is to be sent to the LAN in a data buffer.
      <br/>
      The applications send the user data to the protocol layer.
      <br/>
      Using MPC, the protocol layers device drivers can now build the LAN Media headers in a separate buffer area and pass a buffer list to the MPC Macro interface.
      <br/>
      MPC will then build one PDU with two PDU elements to represent the LAN frame.
      <br/>
      This design, however, also creates some inefficiencies.
      <br/>
      First, each PDU header built by the VTAM or similar protocols is lengthy, usually having a length of 28 bytes plus the PDU element headers are each 8 bytes in length, normally.
      <br/>
      This translates into a confined, usually 44 (28+8+8) header being built for each LAN frame being sent by the application.
      <br/>
      This is compared to the 4 byte LCS header associated with each LAN frame.
      <br/>
      Second, the protocol stacks must still build the LAN Media headers and be knowledgeable of the LAN Media to which the data is being transmitted.
      <br/>
      One unique Device Driver must be written on the Host to support each unique LAN type.
      <br/>
      LCS has the same requirement.
      <br/>
      Building the LAN Media headers requires the allocation of a special buffer and the moving of the LAN specific data into this buffer.
      <br/>
      MPC must also build a separate PDU element for the headers.
    </p>
    <p num="76">
      The present invention also teaches an interface layer composed of software to be placed between the protocol stacks and MPC.
      <br/>
      This layer has a timer to wait for data from the protocol stacks.
      <br/>
      As data buffers are received, a buffer list is assembled.
      <br/>
      The buffer list contains one entry for each data buffer received.
      <br/>
      After the timer expires, the buffer list is then transferred to the MPC layer.
      <br/>
      The MPC layer then places the entire buffer list which contains multiple data buffers from a protocol in one PDU.
      <br/>
      The data will be transmitted across the I/O Subsystem in one CCW chain, arriving at the channel attached processor as one "block".
    </p>
    <p num="77">
      Since the data contained inside the one "block" received from MPC code contains application data from a protocol stack, the protocol headers contain the length of each data element.
      <br/>
      The "deblocker" code running on the channel attached processor uses the length fields in the protocol headers to determine the offset of the next data element in the block.
      <br/>
      This eliminates the need for a special header to point at the next data element which is used by the LCS protocol.
    </p>
    <p num="78">
      The blocking of multiple protocol data elements in one PDU also improves the efficiency of the data transfer.
      <br/>
      In this case, only one PDU header needs to be processed for one group of "n" protocol data elements.
      <br/>
      Previously, one PDU header needed to be processed for each protocol data element.
    </p>
    <p num="79">
      To further improve the efficiency, the requirement of building LAN Media headers can also be removed with the present invention, from the protocol device drivers.
      <br/>
      The protocol device drivers just append the destination address on the local LAN as required for each specific protocol.
      <br/>
      The protocol stacks no longer need to have a unique device driver for each unique LAN connection.
      <br/>
      One device driver can now be used for all LAN connections.
      <br/>
      This requirement was removed by placing code in the channel attached platform which builds the LAN Media headers.
      <br/>
      The LAN media headers are built as the protocol data is removed from the block by the "deblocker" code.
    </p>
    <p num="80">
      While the invention has been described in detail herein in accordance with certain preferred embodiments thereof, many modifications and changes therein may be effected by those skilled in the art.
      <br/>
      Accordingly, it is intended by the appended claims to cover all such modifications and changes as fall within the true spirit and scope of the invention.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>We claim:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>In a computing environment having a plurality of hosts, a method of establishing communication between a first initiating host and a second receiving host, said computing network environment also having at least one local area network, said method comprising the steps of:</claim-text>
      <claim-text>providing a gateway device and electronically connecting said gateway device to at least one initiating host, said host(s) being potentially associated with one or more local area networks; electronically connecting said gateway device also to at least one receiving destination host, said host(s) being potentially associated with one or more local area network(s); providing in said gateway device configuration information, information used for communication, information pertaining to functions supported by said gateway device, and information pertaining to functions provided by said gateway device for each host, as said information relates to said hosts and any of their potentially associated local area networks;</claim-text>
      <claim-text>and establishing said gateway device as central point of communication between all hosts so that said destination host(s) can obtain all necessary information about said initiating host(s) directly via said gateway device without involving any of said potentially associated local area network(s).</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein said information used for communication includes communication platform, communication protocol and local area network type information.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2, wherein said communication platform is a channel attached platform.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 2, wherein said communication platform is an integrated platform.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 2, wherein said communication platform is an open systems adapter platform.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein said computing environment uses TCP/IP communication protocol.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, wherein said computing environment uses UDP/IP communication protocol.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 1, wherein a plurality of local area networks are associated with said hosts and each said local area network are of a different type and use a different communication protocol.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 8, wherein said local area network(s) are of different type with associated independent communication platforms.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 1, wherein said gateway device modifies and alters its information based on addition, deletion or disablement of said hosts and any of their associated local area networks.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 10, wherein said communication connections between said hosts and any of their associated local area networks and said gateway device is monitored by said gateway device at preselected intervals and any inactive or problematic connections are reported and appropriate modifications made.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 1, wherein one or more of said hosts are potentially connected to at least one wide area network.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 1, wherein said gateway device uses LAN Channel Station communication protocol.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 1, wherein said computer environment uses a Multi-path channel communication protocol.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 14, wherein said communication platform is an integrated platform.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 14, wherein said communication platform is an open systems adapter platform.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 14, wherein said computing environment uses Novell IPX communication protocol.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 14, wherein said computing environment uses VTAM communication protocol.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The method of claim 14, wherein any associated local area network(s) are of different type and with different and independent communication platforms.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The method of claim 14, wherein one or more of said hosts are also connected to at least one wide area network.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. In a computing environment having a plurality of hosts, an apparatus used for establishing communication between a first initiating host and a second receiving host, said computing network environment also having at least one local area network, said apparatus comprising: a gateway device electronically connected to at least one initiating host, said host(s) being potentially associated with one or more local area networks; said gateway device also being in electronic communication with at least one receiving destination host, said host(s) being potentially associated with one or more local area network(s); a central location provided in said gateway device for retaining configuration information, information used for communication, information pertaining to functions supported by said gateway device, and information pertaining to functions provided by said gateway device for each of said hosts, as said information relates to said hosts and any of their potentially associated local area networks; means for establishing said gateway device as central point of communication between all hosts so that said destination host(s) can obtain all necessary information about said initiating host(s) directly via said gateway device without involving any of said potentially associated local area network(s).</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The apparatus of claim 21, wherein said information used for communication includes communication platform, communication protocol and local area network type information.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The apparatus of claim 22, wherein said communication platform is an integrated platform.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The apparatus of claim 22, wherein said communication platform is an open systems adapter platform.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The apparatus of claim 22, wherein said computing environment uses TCP/IP communication protocol.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The apparatus of claim 21, wherein said computer environment uses a Multi-path channel communication protocol.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The apparatus of claim 26, wherein said communication platform is an integrated platform.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The apparatus of claim 26, wherein said communication platform is an open systems adapter platform.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The apparatus of claim 26, wherein said computing environment uses TCP/IP communication protocol.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The apparatus of claim 21, wherein said gateway device modifies and alters its information based on addition, deletion or disablement of said hosts and any of their associated local area networks.</claim-text>
    </claim>
  </claims>
</questel-patent-document>