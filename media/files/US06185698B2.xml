<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185698B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185698</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185698</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="22049613" extended-family-id="1321869">
      <document-id>
        <country>US</country>
        <doc-number>09063498</doc-number>
        <kind>A</kind>
        <date>19980420</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09063498</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>1371906</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>6349898</doc-number>
        <kind>A</kind>
        <date>19980420</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09063498</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04L   1/16        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>1</main-group>
        <subgroup>16</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  12/18        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>18</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04L  12/56        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>56</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714018000</text>
        <class>714</class>
        <subclass>018000</subclass>
      </main-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H04L-012/18M</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>012</main-group>
        <subgroup>18M</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H04L-045/04</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>04</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>H04L-045/16</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>16</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>H04L-045/46</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>46</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-045/46</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>46</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/185</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>185</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-012/1863</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>1863</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-045/04</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>04</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-045/16</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>T04L-012/18R</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>12</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>9</number-of-drawing-sheets>
      <number-of-figures>9</number-of-figures>
      <image-key data-format="questel">US6185698</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus using ranking to select repair nodes in formation of a dynamic tree for multicast repair</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HERZ FREDERICK S M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5754939</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5754939</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>HERZ FREDERICK S M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5835087</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5835087</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>KING MICHAEL ROY</text>
          <document-id>
            <country>US</country>
            <doc-number>5983366</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5983366</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>HERZ FREDERICK S M</text>
          <document-id>
            <country>US</country>
            <doc-number>6029195</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6029195</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Multicast Addressing Douglas E. Comer PP 281-290, 1991.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>D. Katz, RFC 2113 entitled "IP Router Alert Option", published Feb. 1997.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>Douglas E. Comer, Chapter 17, entitled "Multicast Addressing (IGMP)" in Book entitled "Internetworking with TCP/IP vol. 1 Principles, Protocols, and Architecture" 2nd Edition, published by Prentice Hall, 1991, pp. 281-290.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Sun Microsystems, Incorporated</orgname>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>SUN MICROSYSTEMS</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Wesley, Joseph</name>
            <address>
              <address-1>Quincy, MA, US</address-1>
              <city>Quincy</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Hurst, Stephen A.</name>
            <address>
              <address-1>Nashua, NH, US</address-1>
              <city>Nashua</city>
              <state>NH</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Kadansky, Miriam C.</name>
            <address>
              <address-1>Westford, MA, US</address-1>
              <city>Westford</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Hanna, Stephen R.</name>
            <address>
              <address-1>Bedford, MA, US</address-1>
              <city>Bedford</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Rosenzweig, Philip M.</name>
            <address>
              <address-1>Acton, MA, US</address-1>
              <city>Acton</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="6">
          <addressbook lang="en">
            <name>Chiu, Dah Ming</name>
            <address>
              <address-1>Acton, MA, US</address-1>
              <city>Acton</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="7">
          <addressbook lang="en">
            <name>Perlman, Radia J.</name>
            <address>
              <address-1>Acton, MA, US</address-1>
              <city>Acton</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Squires, Sanders &amp; Dempsey L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Beausoliel, Jr., Robert W.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An embodiment consistent with the present invention includes a method and apparatus for forming a multicast repair tree.
      <br/>
      The method may be performed by a data processor and comprises the steps of determining, for each of a plurality of potential heads in a multicast group, a ranking value associated with the potential head; advertising, by the potential heads to a plurality of potential receivers; prioritizing, by a potential receiver, the ranking values from the potential heads; and binding, by a potential receiver to the head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the potential head is the head.
      <br/>
      The head may also be the sender.
      <br/>
      There may be a plurality of heads.
      <br/>
      The ranking values may include "able", "unable", "willing", and "reluctant." The ranking value of a potential head may be determined in accordance with a static or a dynamic configuration.
      <br/>
      Ranking values may be determined dynamically based on ranges of system resource levels such as memory and available processor resources.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">
      The present invention relates generally to network communications.
      <br/>
      More specifically, the present invention is a method and apparatus for using ranking to select repair nodes in formation of a dynamic tree for multicast repair
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      Internet Protocol (IP) multicasting is useful for disseminating data to a large group of receivers in a network.
      <br/>
      Multicast is a form of network communication in which a transmitting node, or sender, sends a single message to multiple destinations at once.
      <br/>
      The multiple destinations are the recipients, or receivers of the message.
      <br/>
      Other methods of network communication include broadcast, in which a sender transmits to all possible recipients, and unicast, in which the sender transmits only to one specific recipient.
      <br/>
      Multicast is described in more detail in D. Comer, Internetworking with TCP/IP, Prentice Hall, 1991, Chapter 17, which is herein incorporated by reference to the extent that it is not inconsistent with the present invention.
    </p>
    <p num="3">
      A multicast sender node sends a message to a multicast address.
      <br/>
      The sender transmits the message to any receivers that are listening for messages at the same multicast address.
      <br/>
      A set of receivers listening for messages at a particular multicast address are associated with the sender and form a multicast group in which the receivers are group members.
    </p>
    <p num="4">
      As the number of receivers joining a multicast group becomes large, the sender becomes overworked and slows down as a result of having to process notifications of receipt and requests for multicast repair from group members (receivers).
      <br/>
      Multicast repair is the process of the sender resending a multicast message in response to a request for retransmission (a "repair" request) from a receiver.
      <br/>
      The increased network traffic may cause a loss of data messages due to errors and overloading in the networking equipment.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="5">
      In an embodiment consistent with the present invention, the sender sets up a hierarchical tree structure containing a plurality of receivers in which the sender is the root of the tree.
      <br/>
      The branches of the tree are repair groups.
      <br/>
      A repair group is a subset of the multicast group.
      <br/>
      The sender is the head of a first repair group.
      <br/>
      Each repair group contains a head and at least one receiver.
    </p>
    <p num="6">
      Each receiver has a ranking value corresponding to its ability to perform the duties of a head.
      <br/>
      Except for the sender, each of the heads are receivers which have a high enough ranking value to perform the duties of a head.
      <br/>
      If this ranking value is high enough, the receiver becomes a head and starts advertising for new members by sending multicast control messages containing the head's ranking value.
    </p>
    <p num="7">
      A receiver collects advertisement messages from heads which are available (for example, heads which are nearby).
      <br/>
      The receiver uses the ranking values in these advertisements to rank the heads, and then picks the most suitable head based on the ranking.
      <br/>
      The receiver then responds to the advertisement messages by sending a join request message to the head it picked.
      <br/>
      If the head rejects the receiver's membership request, the receiver sends a join request to the next most suitable head, i.e., the next highest ranked head.
      <br/>
      As some of the receivers become heads and other receivers become associated with those heads by joining groups, a hierarchical tree structure forms.
    </p>
    <p num="8">
      A receiver's ranking value can fall within at least three value ranges: (1) "unable" to serve as a head, (2) "able" to serve as a head, and (3) "willing" to serve as a head. "Willing" to serve as a head indicates that the receiver is a very good head candidate, thus ranking it higher than a head which is "able" to serve.
      <br/>
      In an embodiment consistent with the present invention, the value ranges may be represented by a point range from zero to ten, where zero represents "unable" to serve as a head, 1-9 represent "able" to serve as a head, and 10 represents "willing" to serve as a head.
      <br/>
      Additional ranking values may be added to provide greater ranking flexibility by creating multiple levels of heads.
      <br/>
      For example, a value of "reluctant" may be added to indicate a receiver which is "able" to serve but does not have as much resource capacity to serve as a receiver which is "willing" to serve.
    </p>
    <p num="9">
      The sender delegates multicast repair to the heads in the tree so that the sender provides multicast repair only to a subset of the total receivers in the multicast group.
      <br/>
      This reduces the sender's workload and enables the sender to send messages to larger multicast groups.
      <br/>
      The sender transmits multicast messages to all of the receivers at the multicast group address at a data rate which is preconfigured or dynamically determined.
      <br/>
      Receivers that have joined a group and become associated with a head may request re-transmissions of the multicast message from their associated head.
    </p>
    <p num="10">
      In accordance with an embodiment consistent with the present invention, a method and apparatus for forming a multicast repair tree performed by a data processor includes the step of determining a ranking value associated with a potential head for each of a plurality of potential heads in a multicast group.
      <br/>
      A potential head sends advertisements containing its ranking value.
      <br/>
      A plurality of potential receivers receive the advertisements.
      <br/>
      A potential receiver prioritizes the ranking values from the potential heads and binds to the head having the highest ranking value, thereby forming a group of which the potential receiver is a receiver and the potential head is the head.
      <br/>
      The head may be the sender of the multicast message.
      <br/>
      There may be a plurality of heads.
      <br/>
      There may be two or more possible ranking values including "able", "unable", "willing", and "reluctant" to perform the duties of a head.
    </p>
    <p num="11">
      In accordance with an embodiment consistent with the present invention, a method and apparatus for forming a multicast repair tree, performed by a data processor, comprises the steps of determining, for each of a plurality of potential heads, a ranking value associated with the potential head; advertising, by the potential heads to a plurality of potential receivers; prioritizing, by a potential receiver, the ranking values from the potential heads; and binding, by a potential receiver to the potential head having the highest ranking value, thereby forming a repair group of which the potential receiver is a member and the highest ranking potential head is the head.
      <br/>
      An embodiment consistent with the present invention may be implemented as a computer program product or as a computer data signal embodied in a carrier wave.
      <br/>
      In accordance with another embodiment consistent with the present invention, a method and apparatus for forming a multicast repair tree, performed by a data processor, comprises the steps of receiving a plurality of advertisements, each containing a ranking value, from the potential heads; prioritizing the ranking values from the potential heads; and binding to the potential head having the highest ranking value, thereby forming a group in which the highest ranking potential head is the head.
      <br/>
      An embodiment consistent with the present invention may be implemented as a computer program product or as a computer data signal embodied in a carrier wave.
      <br/>
      In accordance with an embodiment consistent with the present invention, a method and apparatus for forming a multicast repair tree, performed by a data processor programmed to be a potential head, comprising the steps of determining a ranking value associated with the potential head; advertising to a plurality of potential receivers in accordance with the ranking value; receiving a join message from a potential receiver; and adding the potential receiver to a group in accordance with a predetermined limit.
      <br/>
      An embodiment consistent with the present invention may be implemented as a computer program product or as a computer data signal embodied in a carrier wave.
    </p>
    <p num="12">
      Advantages of the invention will be set forth, in part, in the description that follows and in part, will be understood by those skilled in the art from the description or may be learned by practice of the invention.
      <br/>
      The advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims and equivalents.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="13">
      The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate several embodiments of the invention and, together with the description, serve to explain the principles of the invention.
      <br/>
      FIG. 1 is a diagram of a multicast repair tree in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 2 is a flow chart showing steps performed by a data processing system programmed to process multicast messages in accordance with an embodiment consistent with the present invention to disseminate and repair multicast messages.
      <br/>
      FIG. 3 is a flow chart showing steps performed by a data processing system programmed to be a potential head in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 4 is a flow chart showing steps performed by a data processing system programmed to be a potential group member in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 5 is a flow chart showing steps performed by a data processing system programmed to determine ranking in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 6 is a flow chart showing steps performed by a data processing system programmed to perform an algorithm for computing a ranking value in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 7 is a diagram showing a data processing system programmed to be a head in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 8 is a diagram showing a data processing system programmed to be a receiver in accordance with an embodiment consistent with the present invention.
      <br/>
      FIG. 9 is an exemplary format of an advertisement message packet in accordance with an embodiment consistent with the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="14">
      Reference will now be made in detail to embodiments consistent with the present invention, examples of which are illustrated in the accompanying drawings.
      <br/>
      Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.
    </p>
    <p num="15">
      FIG. 1 shows a network 100 in accordance with an embodiment consistent with the present invention and includes a sender node 102 and a plurality of receivers 118-154.
      <br/>
      Each of receivers 118-154 are part of the sender node's multicast group, as shown by multicast message path shown by arrow 116 which connects a sender 102 to each of receivers 118-154 in a multicast group.
    </p>
    <p num="16">
      Receivers 118-154 are organized in five subgroups 106-114.
      <br/>
      These subgroups are called repair groups.
      <br/>
      Each repair group includes a head and at least one receiver.
    </p>
    <p num="17">
      The following paragraphs describe the repair groups included in the multicast repair tree shown in FIG. 1.
      <br/>
      Note that all of the group members and most of the heads (except for the sender) are receiver nodes.
      <br/>
      In general, the heads are sender node 102 and receiver nodes 120, 122, 124, 132, and 140.
      <br/>
      The nodes which are only receivers (i.e., not heads) are receivers 118, 126, 128, 130, 134, 136, 138, 142, 144, 146, 148, 150, 152, and 154.
    </p>
    <p num="18">
      Group 104 contains a head 102 (which is also the sender) and group members 118, 120, 122, and 124 which are associated with head 102.
      <br/>
      Group 104 members 120, 122, and 124 are designated as heads for the next level of repair groups 106, 108, and 110, but group 104 member 118 is a not repair head and therefore does not have a group associated with it.
    </p>
    <p num="19">
      Group 106 includes a head 120 and group members 126, 128, and 130.
      <br/>
      Heads may also be group members.
      <br/>
      For example, head 120 is the head of group 106 but also is a member of group 104.
    </p>
    <p num="20">
      Group 108 includes a head 122 and group members 132, 134, and 136.
      <br/>
      Group member 132 is also the head of group 112.
      <br/>
      Group 112 includes a head 132 and receiver members 144, 146, and 148.
    </p>
    <p num="21">
      Group 110 includes a head 124 and members 138, 140, and 142.
      <br/>
      Head 124 is also a member of group 104, and group member 140 is the head of group 114.
      <br/>
      Group 114 includes a head 140 and members 150, 152, and 154.
    </p>
    <p num="22">A sender node 102 sends multicast messages to the receivers in the multicast repair tree along multicast message path 116 to receivers 118-154.</p>
    <p num="23">
      Sender 102 stores the message in a cache 176 until it receives an acknowledgment of receipt of the data packet from each of its group members, i.e., receivers 118, 120, 122, and 124.
      <br/>
      The acknowledgment of receipt may be a unicast message from each of the group members 118, 120, 122, and 124 to the sender 102 as shown by arrows 156, 157, 158, and 159 respectively.
    </p>
    <p num="24">
      Similarly, each of the other heads in the repair tree store the multicast message in data cache until receiving an acknowledgment of receipt from their respective group members.
      <br/>
      Heads 120, 122, 124, 132, and 140 store the message in a data cache 178, 180, 182, 184, and 186, respectively associated with each head.
    </p>
    <p num="25">
      After the multicast data message is sent, the head of each repair group waits for an acknowledgment of receipt from each of its group members Head 120 of group 106 waits for an acknowledgment of receipt from each of its members as shown by arrow 160 from receiver 126, arrow 161 from receiver 128, and arrow 162 from receiver 130.
      <br/>
      Head 122 of group 108 waits for acknowledgments of receipt as shown by arrows 163, 164, and 165 from receivers 132, 134, and 136, respectively.
      <br/>
      Head 124 of group 110 waits for acknowledgments of receipt as shown by arrows 166, 167, and 168 from receivers 138, 140, and 142, respectively.
      <br/>
      Head 140 of group 114 waits for acknowledgments of receipt as shown by arrows 172, 173, and 174 from receivers 150, 152, and 154, respectively.
      <br/>
      Head 132 of group 112 waits for acknowledgments of receipt as shown by arrows 169, 170, and 171 from receivers 144, 146, and 148, respectively.
    </p>
    <p num="26">
      Multicast repair is shown in group 112, in which head 132 has received a repair request from at least one of its group members 144, 146, or 148.
      <br/>
      When this happens, head 132 re-sends the multicast message which it has stored in cache 184 to each of its group members along a multicast repair path 188 shown by the dotted line arrows.
    </p>
    <p num="27">
      FIG. 2 is a flowchart 200 showing steps performed by a data processing system to process multicast messages, beginning at step 202.
      <br/>
      After the multicast repair tree is formed in step 204, a sender 102 sends a multicast data message, in step 206.
      <br/>
      More detail on the formation of the multicast tree is presented in the discussion of FIGS. 3-6. In step 208, sender 102 and heads 120, 122, 124, 132, and 140 store this multicast data message in their respective cache 176, 178, 180, 182, 184, 186.
    </p>
    <p num="28">
      In step 210, a head (including the sender which also performs as a head) waits for an event.
      <br/>
      These events are processed by each head in response to their group members and include an acknowledgment event 212 and a repair request event 218.
      <br/>
      If no other events occur, the head waits in a dormant state until it receives the next event.
      <br/>
      An acknowledgment event 212 is a notification from all of the head's group members that they have received the multicast data message.
      <br/>
      After receiving an acknowledgment event 212, the head releases the cached message in step 216.
      <br/>
      The head also may release the cached message under other circumstances, for example, if the cache fills up.
    </p>
    <p num="29">
      A repair request 218 is a request sent to the head by at least one of the group members for the head to retransmit the multicast data message.
      <br/>
      If the head receives a repair request 218 from one of its group members, the head performs multicast repair in step 220, i.e., the head retransmits the multicast data message (from the copy stored in cache) to the group.
      <br/>
      An example of multicast repair is shown by dotted-line arrows 188 in FIG. 1.
      <br/>
      The head performs multicast repair on a demand basis.
      <br/>
      After re-sending the multicast message in step 220, the head goes back to step 210 and waits for another event.
    </p>
    <p num="30">FIG. 3 is a flowchart 300 showing steps performed by a data processing system programmed to be a potential head in accordance with an embodiment consistent with the present invention, starting at step 302.</p>
    <p num="31">
      In step 303, a receiver which potentially could be a head determines its ranking value. (See FIG. 5.) The potential head, in step 304, uses the ranking value to determine whether it is able to serve as a head.
      <br/>
      The ranking value may be a bit, a flag, or any appropriate value which indicates whether a receiver is eligible to perform the duties of a head.
      <br/>
      The ranking value may be statically or dynamically configured.
      <br/>
      If the ranking value is sufficiently high, for example, if it corresponds to the level of "reluctant", "able", or "willing" to be a head, then the receiver sets its head status to TRUE in step 309, and begins to serve as a head The head then waits for an event in step 310.
      <br/>
      Otherwise, if the receiver is not able to serve as a head, the receiver simply performs the role of a normal receiver in step 306 and processing of that receiver stops at step 308.
    </p>
    <p num="32">
      Once the receiver is selected as being able to perform as a head, it waits in step 310 for an event such as a send advertisement event 312 or a receive join message event 315.
      <br/>
      An advertisement is a control message that lets potential group members know that a node is available to serve as a head.
      <br/>
      Receivers that are looking for a group to join, also known as potential group members, collect advertisement messages and use the ranking information contained in them to select a head.
      <br/>
      Head selection criteria are presented in more detail in the discussion of FIGS. 4-6. Advertisement messages are presented in more detail below in the discussion of FIG. 9.
      <br/>
      If a send advertisement event 312 occurs, the head sends an advertisement message including a ranking value in step 316, after which the head continues to wait for another event at step 310.
    </p>
    <p num="33">
      Assuming that there are receivers available which are interested in joining a group and are listening for advertisements, the head eventually receives a join message event 315 from a receiver.
      <br/>
      A join message is a request from a potential group member (receiver) to a head.
      <br/>
      A receiver selects a highest-ranked head from the heads represented by the list of advertisements that the receiver has collected.
      <br/>
      After selecting a highest-ranked head, the receiver sends a request to join that head's group.
      <br/>
      Join messages are presented in more detail in the discussion of FIG. 4.
      <br/>
      This starts the process of binding a receiver to the head's repair group.
      <br/>
      When the head receives a join message request 315, the head checks to find out if it has reached its member limit, step 318.
      <br/>
      The member limit may be any appropriate limit on the number of group members which a particular head may accommodate.
      <br/>
      The member limit typically depends on available system resources such as memory and compute power, but may be related to any appropriate criteria.
      <br/>
      A typical value for the member limit is 32 members per group head due to system resource limitations in one implementation consistent with the present invention.
    </p>
    <p num="34">
      If the member limit has been reached, the head does not accept the receiver into the group, sends the receiver a reject message in step 314, and then continues to wait for another event at step 310.
      <br/>
      If the member limit has not been reached then the head adds the new member to the group in step 320, and sends a member accept message to the new member in step 322 to inform the requesting receiver that it has become a member of the head's repair group.
      <br/>
      This completes the binding process.
      <br/>
      The receiver is now a member of the head's group and may send repair requests to the head.
      <br/>
      This receiver may also become a head and form subgroups, thereby adding branches to the tree.
    </p>
    <p num="35">
      FIG. 4 is a flowchart 400 showing steps performed by a data processing system programmed to be a potential group member (receiver) in accordance with an embodiment consistent with the present invention which starts at step 402.
      <br/>
      In step 404, the receiver initially sets a state indicating that it is not a member of any group and then waits for an event in step 406.
    </p>
    <p num="36">
      Events which occur include a timeout event 412, a received advertisement event 408, a received membership rejection event 430, and a received member acceptance message event 424.
      <br/>
      If a received advertisement event 408 occurs, the potential group member adds the advertisement to a list of received advertisements in step 410 and then returns to step 406 to wait for another event.
    </p>
    <p num="37">
      The potential group member continues to receive advertisements until a time-out event 412 occurs.
      <br/>
      The timeout value for collecting advertisements in an embodiment consistent with the present invention may be set to three times a predetermined head advertisement interval.
      <br/>
      The head advertisement interval may be set to roughly three seconds.
      <br/>
      Other values may be used for the advertisement collection interval and the head advertisement interval as appropriate to a particular application.
      <br/>
      The potential group member selects the highest-ranked heads from the list in step 414.
      <br/>
      If there is only one head with the highest rank, the receiver selects only one head.
      <br/>
      However, if multiple heads have the same highest ranking, then the receiver selects all of them in order to perform arbitration between heads having the same rank.
      <br/>
      The arbitration process is described below in the discussion of steps 414 and 415.
      <br/>
      The advertisements in the list created in step 410 contain the ranking values of the heads which are advertising.
      <br/>
      These ranking values may be stored in a data structure, such as an array or a list.
    </p>
    <p num="38">
      After selecting the highest-ranked heads in step 414, the potential group member checks if there are multiple heads with the same rank in step 415.
      <br/>
      If not, then processing continues at step 422 where a timer is reloaded with a predetermined value.
      <br/>
      The predetermined value represents an advertisement interval and corresponds to the length of time that a receiver waits for advertisements before processing them.
      <br/>
      This timer is also discussed in connection with step 432 described below.
      <br/>
      If there are multiple heads with the same rank then the potential group member selects the highest-ranked head with the closest TTL value in step 416.
      <br/>
      The head with the closest TTL value is the one requiring the fewest number of hops to reach and is based at least in part by its physical proximity to the potential group member.
      <br/>
      Step 416 is an example of a tie-breaking policy which may be specified.
      <br/>
      The potential group member determines which head has the highest ranking and in step 420, sends a join request to the highest ranking head.
      <br/>
      A timer is then reloaded with a predetermined value in step 422 after which the potential group member returns to step 406 to wait for another event.
    </p>
    <p num="39">
      In response to join request 420, the potential group member may be rejected, causing a received membership rejection event 430 to occur.
      <br/>
      After rejection, the potential group member removes the head which sent the rejection message from its list of heads in step 434, and then continues to step 414 where it selects the highest-ranked members from a list and continues processing as described above.
      <br/>
      If a potential group member receives a member acceptance message event 424, the potential group member changes its state to obtained membership in step 426, stops a timer corresponding to the wait for advertisements interval in step 432, and then determines its head status and ranking in step 428.
      <br/>
      This timer is also used in connection with step 422 described above.
      <br/>
      The potential group member then returns to step 406 and waits for another event.
    </p>
    <p num="40">
      FIG. 5 is a flowchart 500 showing steps performed by a data processing system programmed as a head or a potential head to determine a receiver's ranking value in accordance with an embodiment consistent with the present invention which starts at step 502.
      <br/>
      In step 504, the receiver determines whether its rank has been preconfigured.
      <br/>
      A receiver may be statically configured to be a head.
      <br/>
      A statically configured head may be set to always be a head or to never be a head.
      <br/>
      For example, someone who owns a particular receiver node who does not want to share the receiver's resources with the rest of the network and does not want the receiver to be used for servicing repair requests may specify that his system is never to be used as a head by setting the receiver statically to a ranking value of "unable" to be a head.
      <br/>
      If the receiver is statically configured to be a head, then its ranking value is set to "able" to serve as a head and is returned in step 508.
      <br/>
      The receiver then returns to be processed as a potential head, in step 304 of flow chart 300.
    </p>
    <p num="41">
      If the receiver is not statically configured to be a head, it can be dynamically configured to be a head.
      <br/>
      The process of determining whether a receiver is dynamically configured to be a head is performed at step 506, where the receiver computes its ranking value.
      <br/>
      Step 506 may be performed by a method such as that shown by flowchart 600 of FIG. 6.
      <br/>
      After the receiver computes its ranking value, that value is returned at step 508.
      <br/>
      The ranking value is returned to step 304 of flow chart 300.
    </p>
    <p num="42">
      FIG. 6 is a flowchart 600 showing steps performed by a data processing system programmed as a head or a potential head to determine a receiver's ranking value in accordance with an embodiment consistent with the present invention which starts at step 602.
      <br/>
      First, the head or potential head checks the amount of available memory.
      <br/>
      In step 604, the head or potential head checks whether the amount of available memory is less than 0.5 megabyte.
      <br/>
      If so, then the head or potential head sets the ranking value to be one, in step 606.
      <br/>
      If not, then the head or potential head continues to step 608 and checks whether the amount of available memory is less than 5.0 megabytes.
      <br/>
      If so, then the head or potential head sets the ranking value to be two, in step 610.
      <br/>
      If not, then the head or potential head continues to step 612 and checks whether the amount of available memory is greater than ten megabytes.
      <br/>
      If so, then the head or potential head sets the ranking value to be five in step 614.
      <br/>
      If not, then the head or potential head sets the ranking value to be four in step 616.
    </p>
    <p num="43">
      After performing any of steps 606, 610, 614, and 616, the head or potential head checks for available processing power, starting with step 618 where the head or potential head checks whether it has a fast processor.
      <br/>
      If so, then the head or potential head adds three to the current ranking value in step 620.
      <br/>
      If not, then the head or potential head returns the ranking value in step 626 and continues processing at step 304 of flowchart 300 shown in FIG. 3.
    </p>
    <p num="44">
      After adding three to the current ranking value in step 620, the head or potential head checks whether greater than 50% of the processor is available in step 622.
      <br/>
      The level of available processor power is a affected by factors including but not limited to the type of processor being used, the number of tasks the processor being executed, and how compute-intensive the tasks are.
      <br/>
      The level of available processor power may be determined by any appropriate method known to a person having ordinary skill in the art.
      <br/>
      If greater than 50% of the processor is available, then the head or potential head adds two to the current ranking value and returns the ranking value in step 626 as described above.
      <br/>
      If greater than 50% of the processor is not available in step 622, then the head or potential head simply returns the current ranking value in step 626 as described above.
      <br/>
      Determining a ranking value is not limited to checking available memory and processing power.
      <br/>
      Consistent with an embodiment of the present invention, other system resources could be checked and used for determining a ranking value, for example, network bandwidth, available disk space or other storage, and input/output loads.
    </p>
    <p num="45">
      FIG. 7 shows a computer system 700 which includes a processor 702, storage 704, which includes head software 718 programmed to perform the functions of a head, and receiver software 716 programmed to perform the functions of a receiver, a ranking value 722, a cache 717, and a list of heads 724.
      <br/>
      Computer system 700 also includes a network connection 720, an input device 708, output device 710, computer readable medium 712, and computer readable input device 714.
      <br/>
      Each of the nodes in network 100 may be a computer system such as computer system 700, connected other nodes in the network via network connection 720.
      <br/>
      Since the same node can be a receiver and also a head, head software 718 and receiver software 716 are both shown as being part of system 700 inside storage 704.
    </p>
    <p num="46">
      A person of ordinary skill in the art will understand that data processing system 700 may also contain additional information, such as input/output lines; input devices, such as a keyboard, a mouse, and a voice input device; and display devices, such as a display terminal.
      <br/>
      Input device 708 may be a floppy disk drive, CD ROM reader, or DVD reader, that reads computer instructions stored on a computer readable medium, such as a floppy disk, a CD ROM, or a DVD drive.
      <br/>
      Data processing system 700 also may include application programs, operating systems, data, etc., which are not shown in the figure for the sake of clarity.
      <br/>
      It also will be understood that data processing system 700 may also include numerous elements not shown, such as disk drives, keyboards, display devices, network connections, additional memory, additional CPUs, LANs, input/output lines, etc.
    </p>
    <p num="47">
      In the following discussion, it will be understood that the steps of methods and flow charts discussed preferably are performed by an appropriate processor 702 executing instructions stored in storage 704.
      <br/>
      It will also be understood that the invention is not limited to any particular implementation or programming technique and that the invention may be implemented using any appropriate techniques for implementing the functionality described herein.
      <br/>
      The invention is not limited to any particular programming language or operating system.
    </p>
    <p num="48">
      The instructions in storage 704 may be read from computer-readable medium 712.
      <br/>
      Execution of sequences of instructions contained in storage 704 causes processor 702 to perform the process steps described herein.
      <br/>
      In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention.
      <br/>
      Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.
    </p>
    <p num="49">
      The term "computer-readable medium" as used herein refers to any medium that participates in providing instructions to a processor for execution.
      <br/>
      Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media.
      <br/>
      Non-volatile media includes, for example, optical or magnetic disks, such as a storage device.
      <br/>
      Volatile media includes dynamic memory.
      <br/>
      Transmission media include coaxial cables, copper wire and fiber optics, including the wires that comprise a bus within a computer.
      <br/>
      Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.
    </p>
    <p num="50">Common forms of computer-readable media include, for example a floppy disk, a flexible disk, a hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tapes, any other physical medium with patterns of holes, a RAM, a PROM, an EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereafter, or any other medium from which a computer can read.</p>
    <p num="51">
      Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a processor for execution.
      <br/>
      For example, the instructions may initially be carried on a magnetic disk of a remote computer.
      <br/>
      The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem.
      <br/>
      A modem local to the computer system can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal.
      <br/>
      An infra-red detector coupled to a bus can receive the data carried in the infra-red signal and place the data on the bus.
      <br/>
      The bus carries data to main memory, from which a processor retrieves and executes the instructions.
      <br/>
      The instructions received by main memory may optionally be stored on a storage device either before or after execution by a processor.
      <br/>
      The instructions can also be transmitted via a carrier wave in a network, such as a LAN, a WAN, or the Internet.
    </p>
    <p num="52">
      FIG. 8 shows a computer system 800 which includes a processor 802, storage 804, which includes receiver software 816 programmed to perform the functions of a receiver, a ranking value 822, a cache 818, and a list of heads 822.
      <br/>
      Computer system 800 also includes a network connection 820, an input device 808, output device 810, computer readable medium 812, and computer readable input device 814.
      <br/>
      Each of the nodes in network 100 may be a computer system such as computer system 800, connected other nodes in the network via network connection 820.
      <br/>
      Since the same node can be a receiver and also a head, head software 818 and receiver software 816 are both shown as being part of system 800 inside storage 804.
    </p>
    <p num="53">
      A person of ordinary skill in the art will understand that data processing system 800 may also contain additional information, such as input/output lines; input devices, such as a keyboard, a mouse, and a voice input device; and display devices, such as a display terminal.
      <br/>
      Input device 808 may be a floppy disk drive, CD ROM reader, or DVD reader, that reads computer instructions stored on a computer readable medium, such as a floppy disk, a CD ROM, or a DVD drive.
      <br/>
      Data processing system 800 also may include application programs, operating systems, data, etc., which are not shown in the figure for the sake of clarity.
      <br/>
      It also will be understood that data processing system 800 may also include numerous elements not shown, such as disk drives, keyboards, display devices, network connections, additional memory, additional CPUs, LANs, input/output lines, etc.
    </p>
    <p num="54">
      It will be understood that the steps of methods and flow charts discussed preferably are performed by an appropriate processor 802 executing instructions stored in storage 804.
      <br/>
      It will also be understood that the invention is not limited to any particular implementation or programming technique and that the invention may be implemented using any appropriate techniques for implementing the functionality described herein.
      <br/>
      The invention is not limited to any particular programming language or operating system.
    </p>
    <p num="55">
      The instructions in storage 804 may be read from computer-readable medium 812.
      <br/>
      Execution of sequences of instructions contained in storage 804 causes processor 802 to perform the process steps described herein.
      <br/>
      In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention.
      <br/>
      Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.
    </p>
    <p num="56">
      FIG. 9 shows an example of a multicast advertisement message packet format 900 which is used in an embodiment consistent with the present invention.
      <br/>
      Packet format 900 contains a packet header 902.
      <br/>
      Packet header 902 is used for processing the advertisement message packet and includes fields indicating at least the following: a source address 906, a source address port 908, a destination address 910, and a destination port 912.
      <br/>
      These fields are included in a typical multicast message packet format.
      <br/>
      Also included in the packet header of an advertisement message are a ranking value 914 associated with the advertising head, a message type 916 indicating that the packet is an advertisement message, and a field 920 indicating a current TTL (Time to Live).
      <br/>
      The TTL is used in conjunction with the ranking value by a potential group member in picking which head is the best.
      <br/>
      The potential group member uses the number of hops to determine how far way the head is from the potential group member, and uses the TTL to determine how old the advertisement is.
      <br/>
      Better heads are closer to the potential group member and have more recent advertisements.
    </p>
    <p num="57">
      There are two kinds of multicast messages: control messages and data messages.
      <br/>
      Control messages are used for tasks such as setting up the multicast data distribution set-up (also known as a multicast repair tree) and for advertising for group members.
      <br/>
      Control messages typically contain only protocol-related information and are used for communication between nodes in the multicast data distribution set-up, for example when a receiver sends a receipt of acknowledgment to a head.
      <br/>
      Data messages contain data which the sender distributes to the receivers in the multicast group.
    </p>
    <p num="58">
      Multicast advertisement message packet format 900 is an example of a control message used in an embodiment consistent with the present invention and includes a Ranking Value field 914.
      <br/>
      Heads send out multicast advertisement messages according to packet format 900 to potential group members.
      <br/>
      Ranking Value 914 may be a bit, a flag, a signal, or any similar means for setting a value.
    </p>
    <p num="59">
      Other embodiments will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein.
      <br/>
      It is intended that the specification and examples be considered as exemplary only, with a true scope of the invention being indicated by the following claims and equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for forming a multicast repair tree, performed by a data processor, comprising the steps of:</claim-text>
      <claim-text>determining, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "reluctant"; advertising, by the potential heads to a plurality of potential receivers;</claim-text>
      <claim-text>prioritizing by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and binding, by a potential receiver to the potential head having the highest ranking value, thereby forming a repair group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method for forming a multicast repair tree, performed by a data processor, comprising the steps of: determining, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "willing"; advertising, by the potential heads to a plurality of potential receivers;</claim-text>
      <claim-text>prioritizing, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and binding, by a potential receiver to the potential head having the highest ranking value, thereby forming a repair group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method for forming a multicast repair tree, performed by a data processor, comprising the steps of: (1) determining, for each of a plurality of potential heads, a ranking value associated with the potential head, including</claim-text>
      <claim-text>- (a) determining whether the potential head has a static configuration, and - (b) determining the ranking value of the potential head in accordance with a dynamic configuration if the potential head is not statically configured to be a head; (2) advertising, by the potential heads to a plurality of potential receivers;</claim-text>
      <claim-text>prioritizing, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and (3) binding, by a potential receiver to the potential head having the highest ranking value, thereby forming a repair group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A computer data signal embodied in a carrier wave and representing sequences of instructions which, when executed by a processor, cause said processor to form a multicast repair tree, by performing the steps of: executing a first computer program to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable", and "reluctant"; executing the first computer program to advertise, by the potential heads, to a plurality of potential receivers; executing a second computer program to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and executing the second computer program to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A computer data signal embodied in a carrier wave and representing sequences of instructions which, when executed by a processor, cause said processor to form a multicast repair tree, by performing the steps of: executing a first computer program to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable"and "willing"; executing the first computer program to advertise, by the potential heads, to a plurality of potential receivers; executing a second computer program to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and executing the second computer program to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A computer data signal embodied in a carrier wave and representing sequences of instructions which, when executed by a processor, cause said processor to form a multicast repair tree, by performing the steps of: (1) executing a first computer program to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, including - (a) executing a computer program to determine whether the potential head has a static configuration, and - (b) executing a computer program to determine the ranking value of the potential head in accordance with a dynamic configuration if the potential head is not statically configured to be a head; (2) executing the first computer program to advertise, by the potential heads, to a plurality of potential receivers; (3) executing a second computer program to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and (4) executing the second computer program to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. An apparatus for forming a multicast repair tree, comprising: a circuit configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "reluctant"; a circuit configured to advertise, by the potential heads to a plurality of potential receivers; a circuit configured to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and a circuit configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. An apparatus for forming a multicast repair tree, comprising: a circuit configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "willing"; a circuit configured to advertise, by the potential heads to a plurality of potential receivers; a circuit configured to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and a circuit configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. An apparatus for forming a multicast repair tree, comprising: (1) a circuit configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, including - (a) circuitry configured to determine whether the potential head has a static configuration, and - (b) circuitry configured to determine the ranking value of the potential head in accordance with a dynamic configuration if the potential head is not statically configured to be a head; (2) a circuit configured to advertise, by the potential heads to a plurality of potential receivers; (3) a circuit configured to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and (4) a circuit configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A computer program product, comprising: a computer usable medium having computer readable code embodied therein for forming a multicast repair tree that includes one or more systems, the computer program product including: first computer readable program code devices configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "reluctant"; second computer readable program code devices configured to advertise, by the potential heads, to a plurality of potential receivers; third computer readable program code devices configured to prioritize, by a potential receiver, the ranking values from the potential heads;</claim-text>
      <claim-text>and fourth computer readable program code devices configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A computer program product, comprising: a computer usable medium having computer readable code embodied therein for forming a multicast repair tree that includes one or more systems, the computer program product including: first computer readable program code devices configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, wherein the ranking value is selected from a group including "able", "unable" and "willing"; second computer readable program code devices configured to advertise, by the potential heads, to a plurality of potential receivers; third computer readable program code devices configured to prioritize, by a potential receiver, the ranking values from the potential heads, and fourth computer readable program code devices configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A computer program product, comprising: a computer usable medium having computer readable code embodied therein for forming a multicast repair tree that includes one or more systems, the computer program product including: first computer readable program code devices configured to determine, for each of a plurality of potential heads, a ranking value associated with the potential head, including - computer readable program code devices to determine whether the potential head has a static configuration, and - computer readable program code devices to determine the ranking value of the potential head in accordance with a dynamic configuration if the potential head is not statically configured to be a head; second computer readable program code devices configured to advertise, by the potential heads, to a plurality of potential receivers; third computer readable program code devices configured to prioritize, by a potential receiver, the rankling values from the potential heads;</claim-text>
      <claim-text>and fourth computer readable program code devices configured to bind, by a potential receiver to the potential head having the highest ranking value, thereby forming a group of which the potential receiver is a member and the highest ranking potential head is the head.</claim-text>
    </claim>
  </claims>
</questel-patent-document>