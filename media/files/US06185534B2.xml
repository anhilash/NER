<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185534B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185534</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185534</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="21947381" extended-family-id="42055722">
      <document-id>
        <country>US</country>
        <doc-number>09047160</doc-number>
        <kind>A</kind>
        <date>19980323</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09047160</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43092088</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>4716098</doc-number>
        <kind>A</kind>
        <date>19980323</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09047160</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G10L  17/26        20130101A I20140531RMEP</text>
        <ipc-version-indicator>
          <date>20130101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>17</main-group>
        <subgroup>26</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20140531</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>704270000</text>
        <class>704</class>
        <subclass>270000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>704E17002</text>
        <class>704</class>
        <subclass>E17002</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>706046000</text>
        <class>706</class>
        <subclass>046000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>706059000</text>
        <class>706</class>
        <subclass>059000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H04N-021/466</text>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>21</main-group>
        <subgroup>466</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G10L-017/26</text>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>17</main-group>
        <subgroup>26</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>H04N-021/466L1</text>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>021</main-group>
        <subgroup>466L1</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04N-021/466</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>21</main-group>
        <subgroup>466</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G10L-017/26</classification-symbol>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>17</main-group>
        <subgroup>26</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04N-021/4663</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>21</main-group>
        <subgroup>4663</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>35</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>13</number-of-drawing-sheets>
      <number-of-figures>32</number-of-figures>
      <image-key data-format="questel">US6185534</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Modeling emotion and personality in a computer user interface</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>SMART RONALD G</text>
          <document-id>
            <country>US</country>
            <doc-number>5241621</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5241621</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>GERACE THOMAS A</text>
          <document-id>
            <country>US</country>
            <doc-number>5848396</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5848396</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Deller et al, Discrete-time processing of signals, Prentice Hall, pp. 611-618, Jun 1993.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Foner, L., Entertaining Agents:, http://foner,www.media.mit..edu/people/foner/Julia/Julia=cite..html, pp. 1-19, Jun. 1998.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="3">
          <text>Myllymaki, P., Using Beysian networks for incorporating probabilistic knowledge into Boltzman machines, pp.97-102. Mar. 1994.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="4">
          <text>Sato, J., Miyasato, T., Autononomous Behavior Control of Virtual Actors Based on the AIR Model, pp.13-117, Jun. 1994.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="5">
          <text>Holmes, J. N., Speech Synthesis and Recognition, Chapmn &amp; Hall, pp. 6 and 7, May 1988.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>Heckerman, David, Breese, John, Rommelse, Koos, "Decision-Theoretic Troubleshootin," Communications of the ACM, vol. 38, No. 3, Mar. 1995, pp. 49-57.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>Jensen, Finn, V., "An Introduction to Bayesian Networks," UCL Press Limited, London, 1996, pp. 1-31.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>Lang, Peter J., "The Emotion Probe: Studies of Motivation and Attention," American Psychologist, vol. 50, No. 5, May 1995, pp. 372-385.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>McCrae, Robert R. and Costa, Jr., Paul T., "The Structure of Interpersonal Traits: Wiggin's Circumplex and the Five-Factor Model," Journal of Personality and Social Psychology, vol. 56, No. 4, 1989, pp. 586-595.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="10">
          <text>Picard, Rosalind, "Affective Computing," MIT Press, Cambridge, Massachusetts, 1997, pp. 165-226.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="11">
          <text>Reeves, Byron and Nass, Clifford, "The Media Equation: How People Treat Computers, Television, and New Media Like Real People and Places," Cambridge University Press, Cambridge, Massachusetts, 1996, pp. 75-139.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Microsoft Corporation</orgname>
            <address>
              <address-1>Redmond, WA, US</address-1>
              <city>Redmond</city>
              <state>WA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>MICROSOFT</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Breese, John S.</name>
            <address>
              <address-1>Mercer Island, WA, US</address-1>
              <city>Mercer Island</city>
              <state>WA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Ball, John Eugene</name>
            <address>
              <address-1>Woodinville, WA, US</address-1>
              <city>Woodinville</city>
              <state>WA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Michaelson &amp; Wallace</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Michaelson, Peter L.</name>
          </addressbook>
        </agent>
        <agent sequence="3" rep-type="agent">
          <addressbook lang="en">
            <name>Wallace, Robert M.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Sax, Robert</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      The invention is embodied in a computer user interface including an observer capable of observing user behavior, an agent capable of conveying emotion and personality by exhibiting corresponding behavior to a user, and a network linking user behavior observed by said observer and emotion and personality conveyed by said agent.
      <br/>
      The network can include an observing network facilitating inferencing user emotional and personality states from the behavior observed by the observer as well as an agent network facilitating inferencing of agent behavior from emotion and personality states to be conveyed by the agent.
      <br/>
      In addition, a policy module can dictate to the agent network desired emotion and personality states to be conveyed by the agent based upon user emotion and personality states inferred by the observing network.
      <br/>
      Typically, each network is a stochastic model.
      <br/>
      Each stochastic model is preferably a Bayesian network, so that the observing network is a first Bayesian network while the agent network is a second Bayesian network.
      <br/>
      Generally, the first and second Bayesian networks are similar copies of one another.
      <br/>
      Each of the two Bayesian networks include a first layer of multi-state nodes representing respective emotional and personality variables, and a second layer of multi-state nodes representing respective behavioral variables.
      <br/>
      Each one of the nodes includes probabilities linking each state in the one node with states of others of the nodes.
      <br/>
      More specifically, each one of the nodes in the first layer includes probabilities linking the states of the one first layer node to the states of nodes in the second layer.
      <br/>
      Similarly, each one of the nodes in the second layer include probabilities linking the states of the one second layer node to states of nodes in the first layer.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Technical Field
    </p>
    <p num="2">
      Within the human-computer interaction community there a growing consensus that traditional WIMP (windows, icons, mouse, and pointer) interfaces need to become more flexible, adaptive, and human-oriented.
      <br/>
      Simultaneously, technologies such as speech recognition, text-to-speech, video input, and advances in computer graphics are providing increasingly rich tools to construct such user interfaces.
      <br/>
      These trends are driving growing interest in agent- or character-based user interfaces exhibiting quasi-human appearance and behavior.
    </p>
    <p num="3">2. Background Discussion</p>
    <p num="4">
      One aspect of developing such a capability is the ability of the system to recognize the emotional state and personality of the user and respond appropriately.
      <br/>
      Research has shown that users respond emotionally to their computers.
      <br/>
      Emotion and personality are of interest to us primarily because of the ways in which they influence behavior, and precisely because those behaviors are communicative--in human dialogues they establish a channel of social interaction that is crucial to the smoothness and effectiveness of the conversation.
      <br/>
      In order to be an effective communicant, a computer character needs to respond appropriately to these signals from the user and should produce its own emotional signals that reinforce, rather than confuse, its intended communication.
    </p>
    <p num="5">There are two crucial issues on the path to what has been termed "affective computing":</p>
    <p num="6">
      (1) providing a mechanism to infer the likely emotional state and personality of the user, and
      <br/>
      (2) providing a mechanism to generate behavior in an agent (.e.g. speech and gesture) consistent with a desired personality and emotional state.
    </p>
    <p num="7">A Command and Control Agent</p>
    <p num="8">
      Imagine a diagnostic session where a user is having trouble printing and an automated, speech-enabled agent is providing assistance.
      <br/>
      The agent asks a few informational questions and then makes a suggestion "Please try the following.
      <br/>
      Go to your printer and make sure all cables are plugged in properly and the printer is turned on and is online." The user checks this and returns, replying "No dice, it still doesn't print." Due to the failure of the speech recognition system to recognize "dice", the agent responds "I'm sorry, I did not understand.
      <br/>
      Please repeat yourself." The user responds, in a some what faster and louder tone, "I said it didn't work� What should I try next?" The agent, noting the speed, volume, intonation, and wording of the utterance now has an increased probability that the user is upset, and a slightly increased belief that the person is a dominant personality.
      <br/>
      In response, the agent could decide to be either extremely submissive and apologetic for its failings so far, or respond in kind in a terse, confident fashion.
      <br/>
      The agent chooses the second path. "OK, I'm doing the best I can.
      <br/>
      Try switching the printer off and back on, and try printing again," it replies, in a somewhat less courteous manner than the previous suggestion.
    </p>
    <p num="9">
      This dialogue is an example of a command and control interface, in that at each stage there are relatively few alternatives that the agent (or speech recognizer) needs to consider.
      <br/>
      In the scenario we are considering, at any point the agent need only consider responses to the previous question, as well as a few generic responses (e.g. quit).
      <br/>
      As we will see, the recognition and generation of alternative phrasings for these speech acts will provide the basis for an affective infrastructure for the agent.
    </p>
    <p num="10">
      A goal of the present invention is an architecture which is appropriate for a broad range of tasks that are amenable to such command and control interfaces.
      <br/>
      Such an architecture would not attempt to manipulate the probabilistic characteristics of the language model used by the speech recognition engine, but rather would interpret the various possible rephrasings of a fixed set of alternatives in terms of emotion and personality.
    </p>
    <p num="11">Bayesian Networks Employed in Carrying Out the Invention</p>
    <p num="12">
      The advent of artificial intelligence within computer science has brought an abundance of decision-support systems.
      <br/>
      Decision-support systems are computer systems in which decisions, typically rendered by humans, are recommended and sometimes made.
      <br/>
      In creating decision-support systems, computer scientists seek to provide decisions with the greatest possible accuracy.
      <br/>
      Thus, computer scientists strive to create decision-support systems that are equivalent to or more accurate than a human expert.
      <br/>
      Applications of decision-support systems include medical diagnosis, troubleshooting computer networks, or other systems wherein a decision is based upon identifiable criteria.
    </p>
    <p num="13">
      One of the most promising new areas for research in decision-support systems is Bayesian networks.
      <br/>
      A Bayesian network is a representation of the probabilistic relationships among distinctions about the world.
      <br/>
      Each distinction, sometimes called a variable, can take on one of a mutually exclusive and exhaustive set of possible states.
      <br/>
      A Bayesian network is expressed as an acyclic-directed graph where the variables correspond to nodes and the relationships between the nodes correspond to arcs.
      <br/>
      A simple example of a Bayesian network can have three variables, X1, X2, and X3, which are represented by three respective nodes with arcs connecting the nodes to reflect the various causal relationships.
      <br/>
      Associated with each variable in a Bayesian network is a set of probability distributions.
      <br/>
      Using conditional probability notation, the set of probability distributions for a variable can be denoted by p(xi.vertline.
      <br/>
      PI i,  XI ), where "p" refers to the probability distribution, where " PI i " denotes the parents of variable Xi and where " XI " denotes the knowledge of the expert.
      <br/>
      The Greek letter " XI " indicates that the Bayesian network reflects the knowledge of an expert in a given field.
      <br/>
      Thus, this expression reads as follows: the probability distribution for variable Xi given the parents of Xi and the knowledge of the expert.
      <br/>
      For example, X1 is the parent of X2.
      <br/>
      The probability distributions specify the strength of the relationships between variables.
      <br/>
      For instance, if X1 has two states (true and false), then associated with X1 is a single probability distribution p(x1 XI ) and associated with X2 are two probability distributions p(x2.vertline.x1 =t,  XI ) and p(x2.vertline.x1 =f,  XI ).
    </p>
    <p num="14">
      The arcs in a Bayesian network convey dependence between nodes.
      <br/>
      When there is an arc between two nodes, the probability distribution of the first node depends upon the value of the second node when the direction of the arc points from the second node to the first node.
      <br/>
      In this case, the nodes are said to be conditionally dependent.
      <br/>
      Missing arcs in a Bayesian network convey conditional independencies.
      <br/>
      For example, two nodes may be conditionally independent given another node.
      <br/>
      However, two variables indirectly connected through intermediate variables are conditionally dependent given lack of knowledge of the values ("states") of the intermediate variables.
      <br/>
      Therefore, if the value for the other node is known, the two nodes are conditionally dependent.
    </p>
    <p num="15">
      In other words, sets of variables X and Y are said to be conditionally independent, given a set of variables Z, if the probability distribution for X given Z does not depend on Y. If Z is empty, however, X and Y are said to be "independent" as opposed to conditionally independent.
      <br/>
      If X and Y are not conditionally independent, given Z, then X and Y are said to be conditionally dependent given Z.
    </p>
    <p num="16">
      The variables used for each node may be of different types.
      <br/>
      Specifically, variables may be of two types: discrete or continuous.
      <br/>
      A discrete variable is a variable that has a finite or countable number of states, whereas a continuous variable is a variable that has an uncountably infinite number of states.
      <br/>
      All discrete variables considered in this specification have a finite number of states.
      <br/>
      An example of a discrete variable is a Boolean variable.
      <br/>
      Such a variable can assume only one of two states: "true" or "false." An example of a continuous variable is a variable that may assume any real value between -1 and 1.
      <br/>
      Discrete variables have an associated probability distribution.
      <br/>
      Continuous variables, however, have an associated probability density function ("density").
      <br/>
      Where an event is a set of possible outcomes, the density p(x) for a variable "x" and events "a" and "b" is defined as:  (Equation image '1' not included in text)
    </p>
    <p num="17">where p(a &lt;= x &lt;= b) is the probability that x lies between a and b. Conventional systems for generating Bayesian networks cannot use continuous variables in their nodes.</p>
    <p num="18">
      A Bayesian network could be constructed for troubleshooting automobile problems.
      <br/>
      Such a Bayesian network would contain many variables or nodes relating to whether an automobile will work properly, and arcs connecting the causally related nodes.
      <br/>
      A few examples of the relationships between the variables follow.
      <br/>
      For the radio to work properly, there must be battery power.
      <br/>
      Battery power, in turn, depends upon the battery working properly and a charge.
      <br/>
      The battery working properly depends upon the battery age.
      <br/>
      The charge of the battery depends upon the alternator working properly and the fan belt being intact.
      <br/>
      The battery age variable, whose values lie from zero to infinity, is an example of a continuous variable that can contain an infinite number of values.
      <br/>
      However, the battery variable reflecting the correct operations of the battery is a discrete variable being either true or false.
    </p>
    <p num="19">
      Such an automobile troubleshooting Bayesian network also provides a number of examples of conditional independence and conditional dependence.
      <br/>
      The nodes operation of the lights and battery power are dependent, and the nodes operation of the lights and operation of the radio are conditionally independent given battery power.
      <br/>
      However, the operation of the radio and the operation of the lights are conditionally dependent.
      <br/>
      The concept of conditional dependence and conditional independence can be expressed using conditional probability notation.
      <br/>
      For example, the operation of the lights is conditionally dependent on battery power and conditionally independent of the radio given the battery power.
      <br/>
      Therefore, the probability of the lights working properly given both the battery power and the radio is equivalent to the probability of the lights working properly given the battery power alone, P(Lights.vertline.Battery Power, Radio)=P(Lights.vertline.Battery Power).
      <br/>
      An example of a conditional dependence relationship is the probability of the lights working properly given the battery power which is not equivalent to the probability of the lights working properly given no information.
      <br/>
      That is, p(Lights.vertline.Battery Power) not equal to p(Lights).
    </p>
    <p num="20">
      There are two conventional approaches for constructing Bayesian networks.
      <br/>
      Using the first approach ("the knowledge-based approach"), a person known as a knowledge engineer interviews an expert in a given field to obtain the knowledge of the expert about the field of expertise of the expert.
      <br/>
      The knowledge engineer and expert first determine the distinctions of the world that are important for decision making in the field of the expert.
      <br/>
      These distinctions correspond to the variables of the domain of the Bayesian network.
      <br/>
      The "domain" of a Bayesian network is the set of all variables in the Bayesian network.
      <br/>
      The knowledge engineer and the expert next determine the dependencies among the variables (the arcs) and the probability distributions that quantify the strengths of the dependencies.
    </p>
    <p num="21">
      In the second approach ("called the data-based approach"), the knowledge engineer and the expert first determine the variables of the domain.
      <br/>
      Next, data is accumulated for those variables, and an algorithm is applied that creates a Bayesian network from this data.
      <br/>
      The accumulated data comes from real world instances of the domain.
      <br/>
      That is, real world instances of actions and observations in a given field.
      <br/>
      The current invention can utilize bayesian networks constructed by either or both of these approaches.
    </p>
    <p num="22">
      After the Bayesian network has been created, the Bayesian network becomes the engine for a decision-support system.
      <br/>
      The Bayesian network is converted into a computer-readable form, such as a file and input into a computer system.
      <br/>
      Then, the computer system uses the Bayesian network to determine the probabilities of variable states given observations, determine the benefits of performing tests, and ultimately recommend or render a decision.
      <br/>
      Consider an example where a decision-support system uses the automobile troubleshooting Bayesian network of the foregoing example to troubleshoot automobile problems.
      <br/>
      If the engine for an automobile did not start, the decision-based system can calculate the probabilities of all states for all variables in the network.
      <br/>
      Furthermore, it could request an observation of whether there was gas, whether the fuel pump was in working order by possibly performing a test, whether the fuel line was obstructed, whether the distributor was working, and whether the spark plugs were working.
      <br/>
      While the observations and tests are being performed, the Bayesian network assists in determining which variable should be observed next, based on identifying that variable that will do the most to reduce the uncertainty (modulo cost) regarding variables of concern.
    </p>
    <p num="23">Such Bayesian networks are examples of the broader class of stochastic models, characterized by using probabilities to link various causal relationships, with which the present invention may be carried out.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="24">
      The invention is embodied in a computer user interface including an observer capable of observing user behavior, an agent capable of conveying emotion and personality by exhibiting corresponding behavior to a user, and a network linking user behavior observed by said observer and emotion and personality conveyed by said agent.
      <br/>
      The network can include an observing network facilitating inferencing user emotional and personality states from the behavior observed by the observer as well as an agent network facilitating inferencing of agent behavior from emotion and personality states to be conveyed by the agent.
      <br/>
      In addition, a policy module can dictate to the agent network desired emotion and personality states to be conveyed by the agent based upon user emotion and personality states inferred by the observing network.
    </p>
    <p num="25">
      Typically, each network is a stochastic model.
      <br/>
      Each stochastic model is preferably a Bayesian network, so that the observing network is a first Bayesian network while the agent network is a second Bayesian network.
      <br/>
      Generally, the first and second Bayesian networks are similar copies of one another.
    </p>
    <p num="26">
      Each of the two Bayesian networks include a first layer of multi-state nodes representing respective emotional and personality variables, and a second layer of multi-state nodes representing respective behavioral variables.
      <br/>
      Each one of the nodes includes probabilities linking each state in the one node with states of others of the nodes.
      <br/>
      Second layer probabilities depend on the states in the first layer, reflecting our modeling assumption that emotions/personalities cause behavioral variables.
      <br/>
      The first layer variables may depend on external factors or previous values of themselves (i.e my mood now depends on what it was 20 seconds ago
    </p>
    <p num="27">
      The multi-state nodes representing emotional and personality variables include a valence node, an arousal node, a friendliness node and a dominance node.
      <br/>
      The multi-state nodes representing behavior variables include speech attributes nodes, facial expression nodes, and a set of word attribute nodes.
    </p>
    <p num="28">
      The set of word attribute nodes have probabilities relating states of the emotional and personality nodes to a set of corresponding word attributes, and the user interface further includes a language submodel coupled to the word attribute nodes, and a word node coupled to the language submodel.
      <br/>
      The set of word attribute nodes include a terseness node, a positiveness node, an activeness node, a strength node and a formality node.
    </p>
    <p num="29">
      The language submodel includes a word attribute layer relating individual word expressions to probabilities of conveying particular ones of the set of word attributes, and a scoring layer relating states of the word attribute layer for a particular word expression to states of corresponding ones of the set of word attribute nodes of the network.
      <br/>
      In addition, a match module selects the one word expression having the winning score computed by the scoring layer.
      <br/>
      In one implementation, the winning score is the highest product of matches between states of the word attribute layer of the language submodel and states of the word attribute nodes of the network.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="30">
      FIG. 1 is a block diagram illustrating an exemplary computer system for carrying out the present invention.
      <br/>
      FIG. 2 is a simplified block diagram of a Bayesian network of the present invention for modeling the relationship between emotion/personality and behavior.
      <br/>
      FIG. 3 is a block diagram of a fragment of a language submodel in the Bayesian network of FIG. 2 for modeling the relationship between emotion and intent, the relationship between paraphrase and intent and the likelihood a paraphrase matches a particular intent.
      <br/>
      FIG. 4 is a block diagram of a portion of a language submodel in a Bayesian network consisting of many merged fragments of the type illustrated in FIG. 3.
      <br/>
      FIGS. 5A and 5B illustrate two examples of nodes modeling the relationship between paraphrases and a given intent in the language submodel of FIG. 3.
      <br/>
      FIG. 6 illustrates one preferred system architecture for carrying out the present invention in a user interface.
      <br/>
      FIG. 7 illustrates a Bayesian network user model in the system architecture of FIG. 6.
      <br/>
      FIGS. 8A, 8B, 8C and 8D tabulate the states of the emotion/personality nodes in the network of FIG. 7.
      <br/>
      FIG. 9 illustrates the 2-dimensional emotion space implemented in the emotion nodes of the network of FIG. 7.
      <br/>
      FIG. 10 illustrates the 2-dimensional personality space implemented in the personality nodes of the network of FIG. 7.
      <br/>
      FIGS. 11A and 11B tabulate the states of the expression and expression strength nodes of the network of FIG. 7.
      <br/>
      FIG. 12 illustrates the structure of the expression node of the network of FIG. 7.
      <br/>
      FIGS. 13A, 13B, 13C, 13D and 13E tabulate the states of the five word interpretation nodes, namely the positive, active, strong, terse and formal nodes, of the network of FIG. 7.
      <br/>
      FIG. 14 is a block diagram illustrating a possible implementation of the language submodel in the network of FIG. 7.
      <br/>
      FIG. 15 is a graph illustrating the distribution of probabilities across a set of candidate phrases in the language model of FIG. 14.
      <br/>
      FIGS. 16A-16G tabulate the states of the remaining nodes the network of FIG. 7.
      <br/>
      FIG. 17 is a block diagram of the agent Bayesian network model in the system of FIG. 6.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="31">Computer System for Carrying Out the Invention</p>
    <p num="32">
      FIG. 1 and the following discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented.
      <br/>
      Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer.
      <br/>
      Generally, program modules include processes, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types.
      <br/>
      Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like.
      <br/>
      The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network.
      <br/>
      In a distributed computing environment, program modules may be located both local and remote memory storage devices.
    </p>
    <p num="33">
      With reference to FIG. 1, an exemplary system for implementing the invention includes a general purpose computing device in the form of a conventional personal computer 120, including a processing unit 121, a system memory 122, and a system bus 123 that couples various system components including the system memory to the processing unit 121.
      <br/>
      The system bus 123 may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures.
      <br/>
      The system memory includes read only memory (ROM) 124 and random access memory (RAM) 125. A basic input/output system 126 (BIOS), containing the basic process that helps to transfer information between elements within the personal computer 120, such as during start-up, is stored in ROM 124.
      <br/>
      The personal computer 120 further includes a hard disk drive 127 for reading from and writing to a hard disk, not shown, a magnetic disk drive 128 for reading from or writing to a removable magnetic disk 129, and an optical disk drive 130 for reading from or writing to a removable optical disk 131 such as a CD ROM or other optical media.
      <br/>
      The hard disk drive 127, magnetic disk drive 128, and optical disk drive 130 are connected to the system bus 123 by a hard disk drive interface 132, a magnetic disk drive interface 133, and an optical drive interface 134, respectively.
      <br/>
      The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer 120.
      <br/>
      Although the exemplary environment described herein employs a hard disk, a removable magnetic disk 129 and a removable optical disk 131, it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment.
    </p>
    <p num="34">
      A number of program modules may be stored on the hard disk, magnetic disk 129, optical disk 131, ROM 124 or RAM 125, including an operating system 135, one or more application programs 136, other program modules 137, and program data 138.
      <br/>
      A user may enter commands and information into the personal computer 120 through input devices such as a keyboard 140 and pointing device 142.
      <br/>
      Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like.
      <br/>
      These and other input devices are often connected to the processing unit 121 through a serial port interface 146 that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB).
      <br/>
      A monitor 147 or other type of display device is also connected to the system bus 123 via an interface, such as a video adapter 148.
      <br/>
      In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.
    </p>
    <p num="35">
      The personal computer 120 may operate in a networked environment sing logical connections to one or more remote computers, such as a remote computer 149.
      <br/>
      The remote computer 149 may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the personal computer 120, although only a memory storage device 150 has been illustrated in FIG. 1.
      <br/>
      The logical connections depicted in FIG. 1 include a local area network (LAN) 151 and a wide area network (WAN) 152. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and Internet.
    </p>
    <p num="36">
      When used in a LAN networking environment, the personal computer 120 is connected to the local network 151 through a network interface or adapter 153.
      <br/>
      When used in a WAN networking environment, the personal computer 120 typically includes a modem 154 or other means for establishing communications over the wide area network 152, such as the Internet.
      <br/>
      The modem 154, which may be internal or external, is connected to the system bus 123 via the serial port interface 146.
      <br/>
      In a networked environment, program modules depicted relative to the personal computer 120, or portions thereof, may be stored in the remote memory storage device.
      <br/>
      It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.
    </p>
    <p num="37">Introduction to the Basic Concept of the Invention</p>
    <p num="38">
      The invention is embodied in a system and architecture for constructing a character-based agent based on speech and graphical interactions.
      <br/>
      The architecture uses models of emotions and personality encoded as Bayesian networks to 1) diagnose the emotions and personality of the user, and 2) generate appropriate behavior by an automated agent in response to the user's input.
      <br/>
      Classes of interaction that are interpreted and/or generated include such things as (1) word choice and syntactic framing of utterances, (2) speech pace, rhythm, and pitch contour, and (3) gesture, expression, and body language.
    </p>
    <p num="39">Modeling Emotions and Personality</p>
    <p num="40">
      The understanding of emotion and personality is the focus of an extensive psychology literature.
      <br/>
      A current implementation of the present invention adopts a simple model in which current emotional state and long term personality style are characterized by discrete values along a small number of dimensions.
      <br/>
      These internal states are then treated as unobservable variables in a Bayesian network model.
      <br/>
      The invention constructs model dependencies based on purported causal relations from these unobserved variables to observable quantities (expressions of emotion and personality) such as word choice, facial expression, speech speed, etc.
    </p>
    <p num="41">
      Bayesian networks are an appropriate tool due to the uncertainty inherent in this domain.
      <br/>
      In addition, as discussed below, Bayesian networks can enable causal inference (from causes to effects) as well as diagnostic reasoning (from effects to causes), which is directly applicable in this domain.
      <br/>
      Finally, the flexibility of dependency structures expressible within the Bayesian net framework makes it possible to integrate various aspects of emotion and personality in a single model that is easily extended and modified.
    </p>
    <p num="42">
      Emotion is the term used in psychology to describe short-term variations in internal mental state, including both physical responses like fear, and cognitive responses like jealousy.
      <br/>
      A current implementation of the invention focuses on two basic dimensions of emotional response that can usefully characterize nearly any experience:
    </p>
    <p num="43">
      (1) Valence: Valence represents overall happiness encoded as positive (happy), neutral, or negative (sad).
      <br/>
      (2) Arousal: Arousal represents the intensity level emotion, encoded as excited, neutral, or passive.
    </p>
    <p num="44">
      Personality characterizes the long-term patterns of thought, emotion, and behavior associated with an individual.
      <br/>
      Psychologists have characterized five basic dimensions of personality, which form the basis of commonly used personality tests.
      <br/>
      The current implementation of the invention models the two traits that appear to be most critical to interpersonal relationships:
      <br/>
      (1) Dominance: Dominance indicates a disposition toward controlling or being controlled by others, encoded as dominant, neutral, or submissive.
      <br/>
      (2) Friendliness: Friendliness measures the tendency to be warm and sympathetic, and is encoded as friendly, neutral, or unfriendly.
    </p>
    <p num="45">
      Psychologists have devised laboratory tests which can reliably measure both emotional state (with physiological sensing such as galvanic skin response and heart rate) and personality (with tests such as the Myers-Briggs Type Indicator).
      <br/>
      A computer-based agent does not have these "sensors" at its disposal, so alternative sources of information must be used.
    </p>
    <p num="46">
      The Bayesian network embodying the present invention therefore integrates information from a variety of observable linguistic and non-linguistic behaviors as shown in FIG. 2.
      <br/>
      Various classes of these observable effects of personality and emotion are shown in FIG. 2.
      <br/>
      This specification discusses below the range of non-linguistic signals that can be accommodated by the model employed to implement the present invention.
      <br/>
      The specification below then describes in more detail the way in which the Bayesian network represents the effects of personality and emotion on linguistic expression.
    </p>
    <p num="47">Non-Linguistic Expression</p>
    <p num="48">
      Humans communicate their emotional state constantly through a variety of non-verbal behaviors, ranging from explicit (and sometimes conscious) signals like smiles and frowns, to subtle (and unconscious) variations in speech rhythm or body posture.
      <br/>
      Moreover, people are correspondingly sensitive to the signals produced by others, and can frequently assess the emotional states of one another accurately even though they may be unaware of the observations that prompted their conclusions.
    </p>
    <p num="49">
      The range of non-linguistic behaviors that transmit information about personality and emotion is quite large.
      <br/>
      We have only begun to consider them carefully, and list here just a few of the more salient examples.
      <br/>
      Emotional arousal affects a number of (relatively) easily observed behaviors, including speech speed and amplitude, the size and speed of gestures, and some aspects of facial expression and posture.
      <br/>
      Emotional valence is signalled most clearly by facial expression, but can also be communicated by means of the pitch contour and rhythm of speech.
      <br/>
      Dominant personalities might be expected to generate characteristic rhythms and amplitude of speech, as well as assertive postures and gestures.
      <br/>
      Friendliness will typically be demonstrated through facial expressions, speech prosody, gestures and posture.
    </p>
    <p num="50">
      The observation and classification of emotionally communicative behaviors raises many challenges, ranging from simple calibration issues (e.g. speech amplitude) to gaps in psychological understanding (e.g. the relationship between body posture and personality type).
      <br/>
      However, in many cases the existence of a causal connection is uncontroversial, and given an appropriate sensor (e.g. a gesture size estimator from camera input), the addition of a new source of information to our model will be fairly straightforward.
    </p>
    <p num="51">
      Within the framework of the Bayesian network of FIG. 2, it is a simple matter to introduce a new source of information into the model.
      <br/>
      For example, suppose we incorporate a new speech recognition engine that reports the pitch range of the fundamental frequencies in each utterance (normalized for a given speaker).
      <br/>
      We could add a new network node that represents PitchRange with a few discrete values, and then construct causal links from any emotion or personality nodes that we expect to affect this aspect of expression.
      <br/>
      In this case, a single link from Arousal to PitchRange would capture the significant dependency.
      <br/>
      Then the model designer would estimate the distribution of pitch ranges for each level of emotional arousal, to capture the expectation that increased arousal leads to generally raised pitch.
      <br/>
      The augmented model would then be used both to recognize that increased pitch may indicate emotional arousal in the user, as well as adding to the expressiveness of a computer character by enabling it to communicate heightened arousal by adjusting the base pitch of its synthesized speech.
    </p>
    <p num="52">Selection of Words and Phrases</p>
    <p num="53">
      A key method of communicating emotional state is by choosing among semantically equivalent, but emotionally diverse paraphrases--for example, the difference between responding to a request with "sure thing", "yes", or "if you insist".
      <br/>
      Similarly, an individual's personality type will frequently influence their choice of phrasing, e.g.: "you should definitely" versus "perhaps you might like to".
    </p>
    <p num="54">
      We have modeled wording choice more deeply than other aspects of the emotion and personality.
      <br/>
      Since we are concerned with command and control, we have focused on spoken commands.
      <br/>
      The emotional and personality content is reflected in how someone will express a given concept.
      <br/>
      Associated with each concept is a set of alternative expressions or paraphrases.
      <br/>
      Some examples are shown in Table I.
    </p>
    <heading>--        TABLE I</heading>
    <p num="55">
      --        Concept     Paraphrases
      <br/>
      --        greeting    hello          greetings
      <br/>
      --                    hi there       hey           howdy
      <br/>
      --        yes         yes            absolutely    yeah
      <br/>
      --                    I guess so     I think so    for sure
      <br/>
      --        suggest     I suggest that you        you should
      <br/>
      --                    perhaps you would like to let's
      <br/>
      --                    maybe you could
    </p>
    <p num="56">
      The preferred embodiment of the invention models the influence of emotion and personality on wording choice in two stages of a Bayesian network, as shown in FIG. 3.
      <br/>
      The first stage captures the relationship between personality and emotion and various classes of expressive style.
      <br/>
      The first stage 305, in the current implementation of the invention, consists of a first layer of nodes 310, 315, 320, 325 representing (respectively) the emotional/personality states of valence, arousal, dominance and friendliness and a second layer of nodes 330, 335, 340, 345 representing, respectively, the expression states of active, positive, terse, and strong.
      <br/>
      The expression nodes 330-345 are successors of the emotion and personality nodes 310-325, and capture the probability that the individual would express themselves in an active, positive, strong, and/or terse manner given emotional/personality states.
      <br/>
      Each of these nodes are binary valued, true or false.
      <br/>
      Thus, the first stage 305 captures the degree to which an individual with a given personality and in a particular emotional state will tend to communicate in a particular style. (A current implementation includes another expressive style, "formal", which is treated in a manner parallel to "terse" or "active".)
    </p>
    <p num="57">
      A second stage 350 captures the degree that each paraphrase actually is active, positive, terse, etc.
      <br/>
      The second stage 350, however, says nothing about the individual, but rather reflects a general cultural interpretation of each paraphrase, that is the degree to which that phrase will be interpreted as active, positive, terse, and so on by a speaker of American English.
      <br/>
      A node such as "Concept Active" is also binary valued, and is true if the paraphrase would be interpreted as "Active" and false otherwise.
      <br/>
      The second stage 350 consists of interpretation nodes 352, 354, 356, 358 representing, respectively, the probability that a particular concept or paraphrase from a concept node 360 would be interpreted as having an active, positive, strong and terse expressive interpretation.
    </p>
    <p num="58">
      Finally there is a match layer 370 consisting of a set of nodes 372, 374, 376, 378 for the expression attributes of active, positive, strong and terse, respectively.
      <br/>
      The nodes 372-378 represent whether a particular expressive interpretation of the paraphrase matches the intended expressive style by the individual for each component.
      <br/>
      The node 372, "Match Active" has value true if and only if the values of the "Concept Active" node 352 and the "Active Expression" node 330 are the same.
      <br/>
      The "Match" node 380 at the bottom (output) of the network is simply a Boolean conjunction that has value "true" when all its parents (the match nodes for each component of expressive style) are true.
    </p>
    <p num="59">Thus, the Bayesian belief network fragment of FIG. 3 indicates (1) the relationship of emotion and personality on expressive style, (2) the probability that a modeled concept will be interpreted as a particular style, and (3) whether the interpretation matches the intent for each component and whether they match on all components.</p>
    <p num="60">
      In carrying out the present invention for a particular application (such as troubleshooting), one must generate a network fragment of the type illustrated in FIG. 3 for each possible conceptual command or element in the vocabulary of the application.
      <br/>
      These fragments are merged into a global Bayesian network capturing the dependencies between the emotional state, personality, natural language, and other behavioral components of the model.
    </p>
    <p num="61">
      A portion of such a Bayesian network, i.e., one consisting of merged fragments, is shown in FIG. 4.
      <br/>
      The various fragments differ only in the assessment of the paraphrase scorings, that is the probability that each paraphrase will be interpreted as active, strong, etc.
      <br/>
      There are five assessments needed for each alternative paraphrase for a concept (the ones mentioned earlier, plus a formality assessment).
      <br/>
      Note that the size of the belief network representation grows linearly in the number of paraphrases (the number of concepts modeled times the number of paraphrases per concept).
    </p>
    <p num="62">
      Thus, referring to FIG. 4, the expressive style layer 305 is as described with reference to FIG. 3 and is connected in common to the merged fragments.
      <br/>
      One of the fragments consists of the concept input node 360' for "no" corresponding to the concept input node 360 of FIG. 3, a "no" interpretation layer 350' corresponding to the interpretation layer 350 of FIG. 3, a "no" match layer 370' corresponding to the match layer 370 of FIG. 3 and a "no" output match node 380' corresponding to the match output node 380 of FIG. 3.
      <br/>
      Another one of the fragments consists of the concept input node 360" for "yes" corresponding to the concept input node 360 of FIG. 3, a "yes" interpretation layer 350" corresponding to the interpretation layer 350 of FIG. 3, a "yes" match layer 370" corresponding to the match layer 370 of FIG. 3 and a "yes" output match node 380" corresponding to the match output node 380 of FIG. 3.
    </p>
    <p num="63">
      One could have each of the expressive style nodes pointing directly into the concept node, thus creating, for each concept, a multi-state node with five parents.
      <br/>
      The assessment burden in this structure would be substantial, and a causal independence assumption such as noisy-or is not appropriate.
      <br/>
      The preferred embodiment of the present invention reduces this assessment burden, and also allows modular addition of new "expressive style" nodes.
      <br/>
      If one adds a new expressive style node to the network (such as, for example, "cynical"), then the only additional assessments needed are the "cynical" interpretation nodes of each concept paraphrase.
      <br/>
      Two examples of assessments of this type are shown in FIGS. 5A and 5B respectively.
    </p>
    <p num="64">
      In FIG. 5A, various candidate greetings in the column labelled "greet" (e.g., "hello", "hi there", "howdy") are assessed for their terseness and assigned an individual probability (under the columns "true" and "false" for being perceived as being terse, corresponding to the operation of the "terse" interpretation node 358 of FIG. 3.
      <br/>
      In FIG. 5B, various candidate greetings are assessed for their activeness and assigned an individual probability for being perceived as being active, corresponding to the operation of the "active" interpretation node 352 of FIG. 3.
      <br/>
      In addition to reducing the assessment burden, such features of the Bayesian network structure of the invention make it easy to extend the model for new concepts and dimensions of expressive style.
    </p>
    <p num="65">Inference</p>
    <p num="66">
      As discussed above, the merged Bayesian network model relates emotional state and personality to wording choice, speech characteristics, input style characteristics, and body language/movements.
      <br/>
      Most of these observable expressions are modeled as being directly caused by the components of emotion and personality.
      <br/>
      For choice of paraphrase we make an additional assumption in using the Bayes net structure described above: the individual being modeled choose wording so as to match the intended interpretation with their current desired expressive style.
      <br/>
      Thus we are imputing some choice behavior to the individual.
      <br/>
      This behavior is incorporated into inference by setting the "match" nodes to true before updating probabilities.
      <br/>
      Students of Bayesian inference will note that in the network in FIG. 4, observing "match" will serve to create the desired dependency between the components of emotion and personality and the choice of paraphrase.
    </p>
    <p num="67">
      Under this interpretation, the model captures a decision model regarding word selection.
      <br/>
      The selection of a paraphrase is done such that it maximizes the probability of a match between intended expressive style and interpretation, given all previous observations regarding gesture, speech characteristics, and wording choice.
      <br/>
      We implement this approach in the network by setting each "Match" node to true.
      <br/>
      By setting the prior probability of the paraphrases in each concept node to a uniform distribution over the alternatives, application of a standard Bayesian network inference algorithm will generate a posterior distribution over word choices consistent with "match" being true.
      <br/>
      The paraphrase that has the maximum posterior probability is the one that maximizes the probability of "match" being true.
      <br/>
      We discuss the use of this technique more fully in the next section where we describe using this model for diagnosis (to determine what mood the user is in) as well as for generating behavior (to determine what should the agent say if he is in a good mood).
    </p>
    <p num="68">Reasoning Architecture</p>
    <p num="69">
      In providing a user interface of the invention having emotion and personality, it is preferable to maintain two copies of the emotion/personality Bayesian network model of FIG. 2.
      <br/>
      One copy is used to diagnose the user, the other to generate behavior for the "agent" which is projected back to the user as a voice or as a voice and image, for example.
      <br/>
      Such an architecture is illustrated in FIG. 6.
      <br/>
      Referring to FIG. 6, the Bayesian user network model 610 (a copy of the network of FIG. 2) receives inputs from the user interface representing observations of the user's behavior (loud and angry voice tones, or a calm and quiet voice, for example).
      <br/>
      The model 610 uses such observations to infer the emotional state and personality of the user and sends this information to a response policy module 620 (hereinafter referred to as a "policy module").
      <br/>
      The policy module 620 governs the agent behavior or response exhibited to the user (by the computer's user interface) in accordance with, among other things, the user's emotional state and personality.
      <br/>
      The policy module 620 may be an independent entity but, more likely, is embedded in an application 630 run by the computer.
      <br/>
      The policy module 620 governs a Bayesian agent network model 640 (another copy of the network of FIG. 2) and informs network 640 what emotional and personality state is to be projected to the user by the agent.
      <br/>
      The Bayesian agent model 640 responds to this input (defining the emotional and personality state to be projected) by inferring an appropriate behavior for the agent to perform.
      <br/>
      The observation of the user's behavior is accomplished through a observation interface 650 which can include a microphone and a speech synthesizer, for example.
      <br/>
      Furthermore, the observation interface 650 may monitor the user's inputs to the application from the user's keyboard and mouse, for example.
      <br/>
      The agent behavior interface 660 may be implemented by speech made by the computer to the user, as one example.
    </p>
    <p num="70">Operation</p>
    <p num="71">
      The architecture of FIG. 6 is operated in accordance with the following steps:
      <br/>
      (1) Observe. This step refers to recognizing an utterance as one of the possible paraphrases for a concept.
      <br/>
      At a given point in the dialogue, for example after asking a yes/no question, the speech recognition engine is listening for all possible paraphrases for the speech concepts "yes" and "no".
      <br/>
      When one is recognized, the corresponding node in the user Bayesian network is set to the appropriate value.
      <br/>
      (2) Update. In this step, the invention employs a standard probabilistic inference algorithm to update probabilities of personality and emotional state in the Bayesian user model 610 given the observations.
      <br/>
      All concept "match" nodes are set to true.
      <br/>
      (3) Agent Response.
      <br/>
      The linkage between the user and agent network models 610, 640 is embedded in the policy module 620.
      <br/>
      The policy module 620 is the mapping from the updated probabilities of the emotional states and personality of the user (furnished by the Bayesian user model 610) to the desired emotional state and personality of the agent.
      <br/>
      The policy module 620 can be designed to develop an empathetic agent, whose mood and personality matches that of the user, or a contrary agent, whose emotions and personality tend to be the exact opposite of the user, as two possible examples.
      <br/>
      Research has indicated that users prefer a computerized agent to have a personality makeup similar to their own, so by default the present implementation of the invention employs a policy module corresponding to an agent having an empathetic response policy.
      <br/>
      The design of the policy module 620 is up to the system designer, the present invention being compatible with any appropriate policy module.
      <br/>
      (4) Propagate.
      <br/>
      The Bayesian agent network model 640 facilitates probabilistic inference to generate probability distributions over various parameters of behavior including paraphrases, animations, speech characteristics, and so on, consistent with the emotional state and personality set by the policy module 620.
      <br/>
      Here, again, the "Match" node is set to value true.
      <br/>
      (5) Generate Behavior.
      <br/>
      At a given stage of the dialogue, the task model may dictate that the agent express a particular concept, for example "greet" or "regret".
      <br/>
      The behavior module then consults the Bayesian agent network model 640 for the current distribution over the possible paraphrases for expressing that concept.
      <br/>
      Preferably, the paraphrase with the maximum probability from that distribution is selected for agent to speak.
      <br/>
      This string is then passed to the text-to speech engine in the user interface to generate the audible output.
    </p>
    <p num="72">
      For application of the model in computer systems, the current embodiment applies to a command and control scenario where there are relatively few utterances and responses that the agent needs to recognize and respond to.
      <br/>
      The invention may also be applied to the more general case of dictation-style speech recognition with more complete language grammars.
    </p>
    <p num="73">Bayesian User Model</p>
    <p num="74">
      FIG. 7 illustrates the Bayesian user model 610 which discerns the user's mood (emotional state and personality) from the observed user behavior.
      <br/>
      The Bayesian network of FIG. 7 corresponds to the Bayesian network of FIG. 2, but includes a more robust set of features.
      <br/>
      The two emotion variables are represented by the an node 702 and a valence node 704.
      <br/>
      The two personality variables are represented by a dominance node 706 and a friendliness node 708.
      <br/>
      The states of the four nodes 702-708 are the inferred emotional/personality state of the user.
      <br/>
      They receive inputs from nodes representing different modes of observed behavior, as follows.
      <br/>
      The speech of the user can be analyzed in a conventional speech engine to deduce the user's speech volume, speech speed (word rate), pitch and the response speed or promptness, represented by nodes 710, 712, 714, 716, respectively.
      <br/>
      The nodes 710, 712, 714, 716 receive their inputs from a user interface 718 which may include a speech engine (not shown) which can determine the states of the corresponding variables (i.e., speech speed, volume, speed, pitch and response speed).
      <br/>
      The four emotion/personality nodes 702-708 also receive inputs from five word attribute nodes including an active word node 720, a positive word node 722, and a strong word node 724 and a terse word node 726.
      <br/>
      In addition, a third personality node may be defined, namely a social class node 730 which receives its input from another word attribute node, namely a formal word node 728.
      <br/>
      The five word attribute nodes receive their inputs from a language submodel 732, which corresponds to the interpretation nodes 352-358 of the interpretation layer 350 of the network of FIG. 3.
      <br/>
      The language submodel 732 assigns to each word or phrase uttered by the user a five-attribute score representing the states of the five word attribute nodes 720-728.
    </p>
    <p num="75">
      If the user interface 718 has a camera and has the ability to view the user and discern the user's facial expressions, then a facial expression node 734 and a facial expression strength node 736 may be included which receive their inputs from the user interface 718 and provide outputs to appropriate ones of the emotion/personality nodes 702-708, as illustrated in FIG. 7.
      <br/>
      Alternatively, the expression and expression strength nodes 734 and 736 may take their inputs from the speech engine sensing voice intonations or expressions, and as a second alternative they may take their inputs from both observed facial expression as well as observed voice expression.
      <br/>
      Likewise, if the user's posture and gestures may be observed by the interface 718, then posture and gesture nodes 740, 742 may be included as well, receiving their inputs from the interface 718 and providing outputs to appropriate ones of the emotion/personality nodes 702-708 as shown in FIG. 7.
    </p>
    <p num="76">States of the Emotion/Personality Variables</p>
    <p num="77">
      The nodes of the Bayesian network of FIG. 7 correspond to variables whose possible states are selected to represent real transitions in personality, emotion and behavior.
      <br/>
      Of course, the number of variables and the number of states of each variable could be such large numbers as to render the model assessment task impractical or impossible.
      <br/>
      Therefore, the variables have been limited in the present embodiment to a relatively small number while their number of states have been limited as well.
      <br/>
      For example, some variables could be continuous, in which case they have been "quantized" to a limited number of discrete states.
      <br/>
      The selection of variables and their states has followed no mathematical derivation but is based rather upon a heuristic approach using known principles of psychology discussed previously herein.
    </p>
    <p num="78">
      FIGS. 8A-8D tabulate the states of the four emotion/personality nodes 702-708.
      <br/>
      The rationale for this structure is well known.
      <br/>
      One can construct an "emotion" 2-dimensional space defined by the two emotion 3-state variables of valence and arousal as illustrated in FIG. 9, in which the emotional state is determined by the states of the two emotion variables of arousal and valence.
      <br/>
      Thus, for example, a joyful emotional state occurs when arousal reaches an excited state and valence reaches a positive state, while a sad emotional state occurs when arousal falls to a passive state and valence falls to a negative state.
      <br/>
      Likewise, one can construct a "personality" 2-dimensional space defined by the two personality 3-state variables of dominance and friendliness as illustrated in FIG. 10. Thus, for example, a gregarious personality state is characterized by a high or "dominant" state of the dominance variable and a high or "friendly" state of friendliness, while an aloof personality state is characterized by a low or "submissive" state of the dominance variable and a low or "unfriendly" state of the friendliness variable.
    </p>
    <p num="79">States of the Expression Variables</p>
    <p num="80">
      FIGS. 11A and 11B tabulate the states of the expression node 734 and the expression strength node 736.
      <br/>
      The expression node 734 has six states in FIG. 11A, namely happy, surprise, fear, anger, sad and disgust while the expression strength node 736 has been quantized to three states in FIG. 11B, namely high, medium and low.
      <br/>
      FIG. 12 tabulates the probabilities stored in the expression node 734 in accordance with a current implementation of the invention.
      <br/>
      In this implementation, the expression node is linked to only three of the four emotion/personality nodes 702-708, namely the valence, arousal and friendliness nodes 702, 704, 706.
      <br/>
      FIG. 12 reflects the 27 possible combinations of the states of the three 3-state nodes 702, 704, 706, in that the three states of the arousal node 704 are set forth for each state of the valence node 702 while the three states of the friendliness node 706 are set forth for each of the nine combinations of the valence and arousal node states.
      <br/>
      For each of the 27 state combinations thus tabulated, a probability is assigned for each one of the five states of the expression node 734, namely happy, surprise, fear, anger, sad and disgust, 734a-734f respectively in FIG. 12. Thus, FIG. 12 tabulates 5(27)=135 individual probabilities.
      <br/>
      The probability values illustrated in FIG. 12 were assigned heuristically, and a skilled worker could redefine these values in accordance with another heuristic evaluation, and the invention may be carried out with any appropriate array of probability values for the 135 possibilities illustrated in FIG. 12.
    </p>
    <p num="81">
      While FIG. 12 illustrates one example of how to construct the expression node 734 in the Bayesian network of FIG. 4, it also illustrates a methodology for constructing all of the nodes of FIG. 8: A probability is heuristically assigned by the skilled worker to each possible state of a node for each possible permutation of the states of its antecedent nodes, based upon a qualitative knowledge of psychology.
      <br/>
      The probabilities thus assigned form an array of probability values which is stored in the corresponding node in the Bayesian network of FIG. 4.
      <br/>
      In addition, if data is available, these conditional probabilities can be "learned" or estimated from observational data.
    </p>
    <p num="82">States of the Word Interpretation Variables</p>
    <p num="83">
      The five variables characterizing word interpretation, represented by the active, positive, strong, terse and formal word nodes 720, 722, 724, 726 and 728, respectively could each have any number of states convenient to the skilled worker.
      <br/>
      In the present implementation, the assessment burden is greatly reduced by constructing these nodes to have only two states, namely true and false.
      <br/>
      These binary states of the five word interpretation variables 720-728 are tabulated in FIGS. 13A-13D, respectively.
      <br/>
      The skilled worker assigns a probability to each state of the five word interpretation nodes 720-728 for each combination of states of the emotion/personality nodes 702-708, 728.
      <br/>
      These assignments are independent of the chosen words or phrases, and simply refer to the type of phrases or words most likely employed to express a particular emotion/personality state.
      <br/>
      The resulting probabilities are stored in appropriate ones of the five word interpretation nodes 720-728.
    </p>
    <p num="84">The word interpretation nodes 720-728 interact between the five emotion/personality nodes 702-708,730 and the language submodel 732.</p>
    <p num="85">Language Submodel</p>
    <p num="86">
      For each word or phrase to be interpreted by the Bayesian network of FIG. 3, a probability assessment is made by the skilled worker whether or not that word or phrase is active, another decision is made whether that same word or phrase is positive, and so forth, a probability is assigned for each of the five word interpretation attributes of active, positive, strong, terse and formal.
      <br/>
      As previously discussed in this specification, it is preferable that these decisions are made by the skilled worker in light of common language usage, independently of any personality type or emotional state of the user.
      <br/>
      The resulting assessments are stored as numerical information in the language submodel 732, as shown in FIGS. 5A and 5B.
    </p>
    <p num="87">
      FIG. 14 illustrates one possible implementation of the language submodel 732.
      <br/>
      The language submodel 732 includes a candidate phrase look-up table 810 which can receive a concept to be expressed (such as "greeting") and look up the various alterative expressions of that concept (such as those listed in FIGS. 5A and 5B).
      <br/>
      A 5-attribute score look-up table 820 receives each candidate phrase from the candidate phrase look-up table 810 and finds, for each candidate phrase, a score (e.g., a binary score such as 1 or 0) for each of the five word interpretation attributes of active, positive, strong, terse and formal.
      <br/>
      The result is output by the 5-attribute score look-up table 820 as a 5-score data structure 830.
      <br/>
      A match or similarity comparison module 840 compares each entry in the 5-score data structure with the state of the corresponding one of the five word interpretation nodes 720-728.
      <br/>
      In a simple embodiment, the match module 840 scores a "1" for each of the five entries in the data structure 830 having the same binary value as the state of the corresponding one of the word interpretation node 720-728.
      <br/>
      A candidate probability module 850 sums the scores for each candidate phrase and stores the result as a probability in a memory 860.
      <br/>
      After all the candidate phrases have been thus evaluated, a pick winner module 870 reviews all of the probabilities stored in the memory 860 and picks the candidate phrase from the look-up table 810 having the "best" probability in the memory 860.
      <br/>
      In the simplest implementation, the "best" probability is the highest probability (i.e., the highest sum of scores).
      <br/>
      Other implementations may employ a different rule to define the "best" score.
    </p>
    <p num="88">
      FIG. 15 illustrates one example of how the score-sums or probabilities stored in the memory 860 may be distributed over the possible candidate phrases for a given concept for a given state of the five word interpretation nodes 720-728.
      <br/>
      The number of candidate phrases is, theoretically, unlimited, while the probability or score sum stored in the memory 860 for each candidate ranges from 0 to 5 in the binary implementation.
    </p>
    <p num="89">States of the Speech and Gesture Variables</p>
    <p num="90">The speech nodes, including speech speed, speech pitch and speech volume have the states illustrated in FIG. 16. The response speed node, which characterizes how fast or quick a response is given, is reflected by the response speed node whose states are tabulated in FIG. 16D. The posture node has five states tabulated in FIG. 16E while the gesture node has four states tabulated in FIG. 16F. The social class node (which is linked to the word formality node) has three states tabulated in FIG. 16G.</p>
    <p num="91">The Bayesian Agent Network Model</p>
    <p num="92">
      FIG. 17 illustrates the Bayesian Agent Network Model 640 of FIG. 6.
      <br/>
      Preferably, the internal structure of the model 640 is generally the same as the user model 610 of FIG. 7.
      <br/>
      The main difference is that the model is operated in the opposite direction.
      <br/>
      Specifically, the emotion/personality nodes 702-708, 730 have their states dictated by the policy module 620 and they dictate, in turn, the states of the other nodes controlling behavior.
      <br/>
      Thus, the emotion/personality nodes 702-708, 730 receive inputs from the policy module 620 and have outputs connected to the inputs of the other nodes in the network.
      <br/>
      For example, the speech interpretation nodes 720-728 have their inputs connected to the emotion/personality nodes and their outputs connected to the language submodel 732.
      <br/>
      The language submodel 732, as well as the remaining nodes in the network of FIG. 17 have their outputs connected to the agent behavior interface 660.
      <br/>
      The behavior interface 660 governs, for example, the audible output of the user interface of the computer.
    </p>
    <p num="93">Working Example of a Bayesian Network in the Invention</p>
    <p num="94">
      The two Bayesian networks of FIGS. 7 and 17 are used to perform inferencing in opposite directions, as mentioned above.
      <br/>
      Specifically, the Bayesian network of FIG. 7 is employed to perform inferencing from the behavioral nodes toward the emotion/personality nodes so as to infer an emotional/personality state from observed behavior, while the Bayesian network of FIG. 17 is employed to perform inferencing from the emotion/personality nodes toward the behavioral nodes so as to infer a behavioral state from a dictated emotional/personality state.
      <br/>
      However, the structure of the two networks can be generally the same.
      <br/>
      The network of FIG. 7 is updated to reflect the changing moods of the human user, while the network of FIG. 17 is updated to reflect the immediate goals of the policy module.
      <br/>
      Therefore, the states of the various nodes in the two networks of FIGS. 7 and 17 will differ necessarily as operation proceeds, but the internal structure, including the probabilities stored in each node, are preferably the same in both networks (i.e., the network of FIG. 7 and the network of FIG. 17).
      <br/>
      A working example of such a structure is now set forth.
      <br/>
      It is understood that the skilled worker may improve and modify greatly this structure in carrying out the present invention.
    </p>
    <p num="95">The exemplary structure is defined below in tabular form, with the states of the variables being listed in the order in which their probabilities are listed for each node for each configuration of states of the parent nodes.</p>
    <p num="96">States of the Nodes</p>
    <p num="97">
      node Valence
      <br/>
      "Negative",
      <br/>
      "Neutral",
      <br/>
      "Positive"
    </p>
    <p num="98">
      node Arousal
      <br/>
      "Passive",
      <br/>
      "Neutral",
      <br/>
      "Excited"
    </p>
    <p num="99">
      node Dominant
      <br/>
      "Submissive",
      <br/>
      "Neutral",
      <br/>
      "Dominant"
    </p>
    <p num="100">
      node Friendly
      <br/>
      "Unfriendly",
      <br/>
      "Neutral",
      <br/>
      "Friendly"
    </p>
    <p num="101">
      node Expression
      <br/>
      "Happy",
      <br/>
      "Surprised",
      <br/>
      "Fear",
      <br/>
      "Anger",
      <br/>
      "Sad",
      <br/>
      "Disgust"
    </p>
    <p num="102">
      node ExpressionStrength
      <br/>
      "High",
      <br/>
      "Medium",
      <br/>
      "Low"
    </p>
    <p num="103">
      node Positive
      <br/>
      "yes",
      <br/>
      "no"
    </p>
    <p num="104">category: "wordstyle";</p>
    <p num="105">
      node Active
      <br/>
      "yes",
      <br/>
      "no"
    </p>
    <p num="106">category: "wordstyle";</p>
    <p num="107">
      node Strong
      <br/>
      "yes",
      <br/>
      "no"
    </p>
    <p num="108">category: "wordstyle";</p>
    <p num="109">
      node Terse
      <br/>
      "yes",
      <br/>
      "no"
    </p>
    <p num="110">category: "wordstyle";</p>
    <p num="111">
      node Formal
      <br/>
      "yes",
      <br/>
      "no"
    </p>
    <p num="112">category: "wordstyle";</p>
    <p num="113">
      node SpeechVolume
      <br/>
      "% Vol=20000%",
      <br/>
      "% Vol=30000%",
      <br/>
      "% Vol=35000%"
    </p>
    <p num="114">
      node SpeechSpeed
      <br/>
      "% spd=125%",
      <br/>
      "% spd=150%",
      <br/>
      "% spd=175%"
    </p>
    <p num="115">
      node SpeechPitch
      <br/>
      "Normal",
      <br/>
      "Raised"
    </p>
    <p num="116">
      node SocialClass
      <br/>
      "High Society",
      <br/>
      "White Collar",
      <br/>
      "Blue Collar"
    </p>
    <p num="117">
      node ResponseSpeed
      <br/>
      "Fast",
      <br/>
      "Normal",
      <br/>
      "Slow"
    </p>
    <p num="118">
      node Posture
      <br/>
      "Neutral",
      <br/>
      "Slouch",
      <br/>
      "Stiff",
      <br/>
      "Impatient",
      <br/>
      "Restless"
    </p>
    <p num="119">
      node Gesture
      <br/>
      "Relax",
      <br/>
      "Wave",
      <br/>
      "Point",
      <br/>
      "Beat",
      <br/>
      "Fold",
      <br/>
      "HandsBehind",
      <br/>
      "Shrug"
    </p>
    <p num="120">node PersonalityAssed</p>
    <p num="121">
      name
      <br/>
      "PersonalityConfidence";
      <br/>
      "Low",
      <br/>
      "Medium",
      <br/>
      "High"
    </p>
    <p num="122">Structure of the Nodes</p>
    <p num="123">
      probability(Expression.vertline.Valence, Arousal, Friendly)
      <br/>
      (0, 0, 0): 0.0178117, 0.0226973, 0.254758, 0.362545, 0.223613, 0.118575;
      <br/>
      (0, 0, 1): 0.0178117, 0.0226973, 0.329262, 0.293919, 0.255598, 0.0807123;
      <br/>
      (0, 0, 2): 0.0178117, 0.0226973, 0.360941, 0.232316, 0.317659, 0.0485749;
      <br/>
      (0, 1, 0): 0.0178117, 0.0361324, 0.22743, 0.422316, 0.14659, 0.14972;
      <br/>
      (0, 1, 1): 0.0178117, 0.0361324, 0.237812, 0.435827, 0.175674, 0.0967429;
      <br/>
      (0, 1, 2): 0.0178117, 0.0361324, 0.285903, 0.382239, 0.201476, 0.0764376;
      <br/>
      (0, 2, 0): 0.0201018, 0.0836133, 0.145369, 0.443461, 0.108804, 0.198651;
      <br/>
      (0, 2, 1): 0.0201018, 0.0836133, 0.184224, 0.492544, 0.116057, 0.10346;
      <br/>
      (0, 2, 2): 0.0201018, 0.0836133, 0.215369, 0.454529, 0.168118, 0.0582692;
      <br/>
      (1, 0, 0): 0.11799, 0.212612, 0.149246, 0.149246, 0.22166, 0.149246;
      <br/>
      (1, 0, 1): 0.360484, 0.127903, 0.127903, 0.127903, 0.127903, 0.127903;
      <br/>
      (1, 0, 2): 0.679995, 0.0651819, 0.0637057, 0.0637057, 0.0637057, 0.0637057;
      <br/>
      (1, 1, 0): 0.0971815, 0.169679, 0.169679, 0.169679, 0.224102, 0.169679;
      <br/>
      (1, 1, 1): 0.259975, 0.134693, 0.153689, 0.160155, 0.161361, 0.130126;
      <br/>
      (1, 1, 2): 0.528219, 0.0858694, 0.09798, 0.102102, 0.102871, 0.0829581;
      <br/>
      (1, 2, 0): 0.0544722, 0.180074, 0.180074, 0.180074, 0.225232, 0.180074;
      <br/>
      (1, 2, 1): 0.165293, 0.166941, 0.166941, 0.166941, 0.166941, 0.166941;
      <br/>
      (1, 2, 2): 0.30743, 0.138514, 0.138514, 0.138514, 0.138514, 0.138514;
      <br/>
      (2, 0, 0): 0.149254, 0.179469, 0.154404, 0.154404, 0.208064, 0.154404;
      <br/>
      (2, 0, 1): 0.281912, 0.209476, 0.127153, 0.127153, 0.127153, 0.127153;
      <br/>
      (2, 0, 2): 0.494554, 0.16575, 0.0849239, 0.0849239, 0.0849239, 0.0849239;
      <br/>
      (2, 1, 0): 0.301301, 0.193078, 0.117842, 0.117842, 0.152094, 0.117842;
      <br/>
      (2, 1, 1): 0.473561, 0.147629, 0.0947026, 0.0947026, 0.0947026, 0.0947026;
      <br/>
      (2, 1, 2): 0.590348, 0.131858, 0.0694485, 0.0694485, 0.0694485, 0.0694485;
      <br/>
      (2, 2, 0): 0.380913, 0.179435, 0.102019, 0.102019, 0.133594, 0.102019;
      <br/>
      (2, 2, 1): 0.628553, 0.120285, 0.0627905, 0.0627905, 0.0627905, 0.0627905;
      <br/>
      (2, 2, 2): 0.841709, 0.0694659, 0.0222063, 0.0222063, 0.0222063, 0.0222063;
    </p>
    <p num="124">
      probability(ExpressionStrength.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.154784, 0.293715, 0.551501;
      <br/>
      (0, 1): 0.251501, 0.302341, 0.446158;
      <br/>
      (0, 2): 0.333333, 0.333333, 0.333333;
      <br/>
      (1, 0): 0.246463, 0.356845, 0.396692;
      <br/>
      (1, 1): 0.333333, 0.333333, 0.333333;
      <br/>
      (1, 2): 0.399288, 0.348753, 0.251959;
      <br/>
      (2, 0): 0.333333, 0.333333, 0.333333;
      <br/>
      (2, 1): 0.399899, 0.354669, 0.245432;
      <br/>
      (2, 2): 0.545089, 0.30257, 0.152341;
    </p>
    <p num="125">
      probability(Positive.vertline.Valence, Friendly)
      <br/>
      (0, 0): 0.0212214, 0.978779;
      <br/>
      (0, 1): 0.101145, 0.898855;
      <br/>
      (0, 2): 0.298626, 0.701374;
      <br/>
      (1, 0): 0.0719847, 0.928015;
      <br/>
      (1, 1): 0.355496, 0.644504;
      <br/>
      (1, 2): 0.73855, 0.26145;
      <br/>
      (2, 0): 0.328855, 0.671145;
      <br/>
      (2, 1): 0.614504, 0.385496;
      <br/>
      (2, 2): 0.976183, 0.0238166;
    </p>
    <p num="126">
      probability(Active.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.124657, 0.875343;
      <br/>
      (0, 1): 0.23771, 0.76229;
      <br/>
      (0, 2): 0.429542, 0.570458;
      <br/>
      (1, 0): 0.254886, 0.745114;
      <br/>
      (1, 1): 0.506412, 0.493588;
      <br/>
      (1, 2): 0.820611, 0.179389;
      <br/>
      (2, 0): 0.604275, 0.395725;
      <br/>
      (2, 1): 0.75855, 0.24145;
      <br/>
      (2, 2): 0.90397, 0.0960303;
    </p>
    <p num="127">
      probability(Strong.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.184885, 0.815115;
      <br/>
      (0, 1): 0.300076, 0.699924;
      <br/>
      (0, 2): 0.779618, 0.220382;
      <br/>
      (1, 0): 0.40084, 0.59916;
      <br/>
      (1, 1): 0.519618, 0.480382;
      <br/>
      (1, 2): 0.869848, 0.130152;
      <br/>
      (2, 0): 0.582137, 0.417863;
      <br/>
      (2, 1): 0.726107, 0.273893;
      <br/>
      (2, 2): 0.918245, 0.0817554;
    </p>
    <p num="128">
      probability(Terse.vertline.Dominant, Valence, Friendly)
      <br/>
      (0, 0, 0): 0.866108, 0.133892;
      <br/>
      (0, 0, 1): 0.721299, 0.278701;
      <br/>
      (0, 0, 2): 0.61794, 0.38206;
      <br/>
      (0, 1, 0): 0.733284, 0.266716;
      <br/>
      (0, 1, 1): 0.530917, 0.469083;
      <br/>
      (0, 1, 2): 0.325726, 0.674274;
      <br/>
      (0, 2, 0): 0.592367, 0.407633;
      <br/>
      (0, 2, 1): 0.413742, 0.586258;
      <br/>
      (0, 2, 2): 0.287863, 0.712137;
      <br/>
      (1, 0, 0): 0.799542, 0.200458;
      <br/>
      (1, 0, 1): 0.667023, 0.332977;
      <br/>
      (1, 0, 2): 0.531298, 0.468702;
      <br/>
      (1, 1, 0): 0.692443, 0.307557;
      <br/>
      (1, 1, 1): 0.450458, 0.549542;
      <br/>
      (1, 1, 2): 0.263359, 0.736641;
      <br/>
      (1, 2, 0): 0.321985, 0.678015;
      <br/>
      (1, 2, 1): 0.321985, 0.678015;
      <br/>
      (1, 2, 2): 0.333206, 0.666794;
      <br/>
      (2, 0, 0): 0.877252, 0.122748;
      <br/>
      (2, 0, 1): 0.877252, 0.122748;
      <br/>
      (2, 0, 2): 0.877252, 0.122748;
      <br/>
      (2, 1, 0): 0.680535, 0.319465;
      <br/>
      (2, 1, 1): 0.680535, 0.319465;
      <br/>
      (2, 1, 2): 0.680535, 0.319465;
      <br/>
      (2, 2, 0): 0.512138, 0.487862;
      <br/>
      (2, 2, 1): 0.512138, 0.487862;
      <br/>
      (2, 2, 2): 0.512138, 0.487862;
    </p>
    <p num="129">
      probability(Formal SocialClass)
      <br/>
      (0): 0.886489, 0.113511;
      <br/>
      (1): 0.465725, 0.534275;
      <br/>
      (2): 0.204504, 0.795496;
    </p>
    <p num="130">
      probability(SpeechVolume.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.668601, 0.277685, 0.0537145;
      <br/>
      (0, 1): 0.546082, 0.400204, 0.0537145;
      <br/>
      (0, 2): 0.446998, 0.499288, 0.0537145;
      <br/>
      (1, 0): 0.0544786, 0.894708, 0.0508136;
      <br/>
      (1, 1): 0.0544786, 0.894708, 0.0508136;
      <br/>
      (1, 2): 0.0544786, 0.894708, 0.0508136;
      <br/>
      (2, 0): 0.0534097, 0.500204, 0.446386;
      <br/>
      (2, 1): 0.0534097, 0.396387, 0.550203;
      <br/>
      (2, 2): 0.0534097, 0.275319, 0.671272;
    </p>
    <p num="131">
      probability(SpeechSpeed.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.751654, 0.194784, 0.0535616;
      <br/>
      (0, 1): 0.665929, 0.280509, 0.0535616;
      <br/>
      (0, 2): 0.549822, 0.396616, 0.0535616;
      <br/>
      (1, 0): 0.207532, 0.724402, 0.0680658;
      <br/>
      (1, 1): 0.0540968, 0.87944, 0.0664627;
      <br/>
      (1, 2): 0.0476082, 0.740967, 0.211425;
      <br/>
      (2, 0): 0.0460052, 0.400738, 0.553257;
      <br/>
      (2, 1): 0.0460052, 0.285166, 0.668829;
      <br/>
      (2, 2): 0.0460052, 0.207761, 0.746234;
    </p>
    <p num="132">
      probability(SpeechPitch.vertline.Arousal)
      <br/>
      (0): 0.798703, 0.201297;
      <br/>
      (1): 0.5, 0.5;
      <br/>
      (2): 0.328168, 0.671832;
    </p>
    <p num="133">
      probability(SocialClass)
      <br/>
      0.0960815, 0.806463, 0.0974553;
    </p>
    <p num="134">
      probability(ResponseSpeed.vertline.Arousal, Dominant)
      <br/>
      (0, 0): 0.00989832, 0.0894406, 0.900661;
      <br/>
      (0, 1): 0.0129008, 0.389568, 0.597531;
      <br/>
      (0, 2): 0.0499746, 0.500891, 0.449134;
      <br/>
      (1, 0): 0.0319595, 0.640051, 0.327989;
      <br/>
      (1, 1): 0.0349365, 0.935776, 0.0292871;
      <br/>
      (1, 2): 0.333333, 0.640357, 0.0263098;
      <br/>
      (2, 0): 0.454555, 0.496539, 0.0489057;
      <br/>
      (2, 1): 0.601883, 0.392952, 0.00516483;
      <br/>
      (2, 2): 0.895853, 0.0915773, 0.0125696;
    </p>
    <p num="135">
      probability(Posture.vertline.Valence, Dominant, Friendly)
      <br/>
      (0, 0, 0): 0.246991, 0.58823, 0.052014, 0.0796421, 0.0331224;
      <br/>
      (0, 0, 1): 0.255657, 0.608868, 0.0538389, 0.047352, 0.0342845;
      <br/>
      (0, 0, 2): 0.341415, 0.502941, 0.0444723, 0.039114, 0.0720581;
      <br/>
      (0, 1, 0): 0.212395, 0.327482, 0.140184, 0.140363, 0.179575;
      <br/>
      (0, 1, 1): 0.292453, 0.445655, 0.0798784, 0.0702542, 0.11176;
      <br/>
      (0, 1, 2): 0.348018, 0.442555, 0.0732893, 0.033598, 0.10254;
      <br/>
      (0, 2, 0): 0.227605, 0.25872, 0.283321, 0.199831, 0.0305227;
      <br/>
      (0, 2, 1): 0.250647, 0.284912, 0.252706, 0.178122, 0.0336127;
      <br/>
      (0, 2, 2): 0.2921, 0.332031, 0.21157, 0.125127, 0.0391716;
      <br/>
      (1, 0, 0): 0.731904, 0.123253, 0.0981535, 0.0326996, 0.0139894;
      <br/>
      (1, 0, 1): 0.767437, 0.129237, 0.0664754, 0.0221819, 0.0146685;
      <br/>
      (1, 0, 2): 0.795237, 0.133919, 0.0326589, 0.0229854, 0.0151999;
      <br/>
      (1, 1, 0): 0.788574, 0.0684533, 0.0905728, 0.0373275, 0.0150725;
      <br/>
      (1, 1, 1): 0.818703, 0.0710687, 0.0709161, 0.0236637, 0.0156484;
      <br/>
      (1, 1, 2): 0.840363, 0.0729489, 0.0463362, 0.0242897, 0.0160624;
      <br/>
      (1, 2, 0): 0.625162, 0.081973, 0.148075, 0.0968897, 0.0479007;
      <br/>
      (1, 2, 1): 0.668007, 0.0875911, 0.129177, 0.0640408, 0.0511836;
      <br/>
      (1, 2, 2): 0.704837, 0.0924202, 0.0987455, 0.0499922, 0.0540055;
      <br/>
      (2, 0, 0): 0.196144, 0.295268, 0.201351, 0.116612, 0.190625;
      <br/>
      (2, 0, 1): 0.217307, 0.327126, 0.197928, 0.0875395, 0.170099;
      <br/>
      (2, 0, 2): 0.244668, 0.368315, 0.172976, 0.0733075, 0.140734;
      <br/>
      (2, 1, 0): 0.203586, 0.119234, 0.329657, 0.110359, 0.237164;
      <br/>
      (2, 1, 1): 0.230501, 0.11371, 0.294418, 0.0928544, 0.268517;
      <br/>
      (2, 1, 2): 0.223655, 0.168063, 0.285673, 0.0620676, 0.260541;
      <br/>
      (2, 2, 0): 0.168096, 0.0867761, 0.364067, 0.185242, 0.195819;
      <br/>
      (2, 2, 1): 0.193637, 0.0999605, 0.341657, 0.139173, 0.225573;
      <br/>
      (2, 2, 2): 0.208272, 0.107516, 0.31986, 0.121729, 0.242622;
    </p>
    <p num="136">
      probability(Gesture.vertline.Valence, Friendly)
      <br/>
      (0, 0): 0.224919, 0.0214209, 0.214209, 0.0321313, 0.214209, 0.23563, 0.0574816;
      <br/>
      (0, 1): 0.189346, 0.0256489, 0.150178, 0.101735, 0.251902, 0.255579, 0.0256106;
      <br/>
      (0, 2): 0.882629, 0.0163356, 0.0213402, 0.0213402, 0.0165993, 0.017252, 0.0245041;
      <br/>
      (1, 0): 0.189346, 0.0256489, 0.150178, 0.101735, 0.251902, 0.255579, 0.0256106;
      <br/>
      (1, 1): 0.882629, 0.0163356, 0.0213402, 0.0213402, 0.0165993, 0.017252, 0.0245041;
      <br/>
      (1, 2): 0.384136, 0.0725131, 0.071723, 0.238388, 0.0830207, 0.102319, 0.0478998;
      <br/>
      (2, 0): 0.882629, 0.0163356, 0.0213402, 0.0213402, 0.0165993, 0.017252, 0.0245041;
      <br/>
      (2, 1): 0.384136, 0.0725131, 0.071723, 0.238388, 0.0830207, 0.102319, 0.0478998;
      <br/>
      (2, 2): 0.0816913, 0.17196, 0.0540413, 0.334838, 0.0548546, 0.0635674, 0.239047;
    </p>
    <p num="137">Other Embodiments of the Invention</p>
    <p num="138">
      While the invention has been described with reference to a preferred embodiment in which the model networks are Bayesian networks, the invention may be carried out in a different manner using models other than Bayesian networks, such as Markov chains.
      <br/>
      In fact, the invention is not confined to any particular model type by may be carried out using any suitable stochastic model.
    </p>
    <p num="139">While the invention has been described in detail with reference to preferred embodiments, it is understood that variations and modifications thereof may be made without departing from the true spirit and scope of the invention.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A computer user interface comprising:</claim-text>
      <claim-text>an observer capable of observing user behavior; an agent capable of conveying emotion and personality by exhibiting corresponding behavior to a user; a Bayesian network linking user behavior observed by said observer with emotion and personality conveyed by said agent, comprising:</claim-text>
      <claim-text>- an observing Bayesian network capable of facilitating inferencing user emotion and personality states from said behavior observed by said observer; - an agent network capable of facilitating inferencing of agent behavior from emotion and personality states to be conveyed by said agent.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The user interface of claim 1 further comprising a policy module dictating, to said agent network, said emotion and personality states to be conveyed by said agent based upon user emotion and personality states inferred by said observing network.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The user interface of claim 1 wherein said network comprises a stochastic model.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The user interface of claim 1 wherein said first and second Bayesian networks are generally similar copies of one another.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The user interface of claim 1 wherein said first Bayesian network comprises: a first layer of multi-state nodes representing respective emotional and personality variables;</claim-text>
      <claim-text>and a second layer of multi-state nodes representing respective behavioral variables.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The user interface of claim 5 wherein: each one of said nodes in said first layer comprise probabilities linking the states of said one first layer node to the states of nodes in said second layer;</claim-text>
      <claim-text>and each one of said nodes in said second layer comprise probabilities linking the states of said one second layer node to states of nodes in said first layer.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The user interface of claim 5 wherein said multi-state nodes representing emotional and personality variables comprise at least one of:</claim-text>
      <claim-text>(a) a valence node, (b) an arousal node, (c) a friendliness node and (d) a dominance node.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The user interface of claim 7 wherein said multi-state nodes representing behavior variables comprise at least one of:</claim-text>
      <claim-text>(a) a speech attribute node, (b) a facial expression node, (c) a word attribute node.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The user interface of claim 5 wherein said multi-state nodes representing behavior variables comprise a set of word attribute nodes having probabilities relating states of said emotional and personality variables to a set of corresponding word attributes, said interface further comprising: a language submodel coupled to said word attribute nodes;</claim-text>
      <claim-text>and a word node coupled to said language submodel.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The user interface of claim 9 wherein said set of word attributes comprise at least plural ones of:</claim-text>
      <claim-text>(a) terseness, (b) positiveness, (c) activeness, (d) strength and (e) formality.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The user interface of claim 9 wherein said language submodel comprises: a word attribute layer relating individual word expressions to probabilities of conveying particular ones of said set of word attributes; a scoring layer relating states of said word attribute layer for a particular word expression to states of corresponding ones of said set of word attribute nodes of said network.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The user interface of claim 10 wherein said language submodel further comprises a match module selecting a word expression having a winning score computed by said scoring layer.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The user interface of claim 3 wherein said second Bayesian network comprises: a first layer of multi-state nodes representing respective emotional and personality variables;</claim-text>
      <claim-text>and a second layer of multi-state nodes representing respective behavioral variables, each one of said multistate nodes in one of said layers comprising probabilities linking states of said one node with states of multistate nodes in the other layer.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The user interface of claim 9 wherein said multi-state nodes representing emotional and personality variables comprise at least one of:</claim-text>
      <claim-text>(a) a valence node, (b) an arousal node, (c) a friendliness node and (d) a dominance node.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The user interface of claim 14 wherein said multi-state nodes representing behavior variables comprise at least one of:</claim-text>
      <claim-text>(a) a speech attribute node, (b) a facial expression node, (c) a word attribute node.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The user interface of claim 13 wherein said multi-state nodes representing behavioral variables comprise a set of word attribute nodes having probabilities relating states of said emotional and personality variables to a set of corresponding word attributes, said interface further comprising: a language submodel coupled to said word attribute nodes;</claim-text>
      <claim-text>and a word node coupled to said language submodel.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The user interface of claim 16 wherein said set of word attributes comprise at least plural ones of:</claim-text>
      <claim-text>(a) terseness, (b) positiveness, (c) activeness, (d) strength and (e) formality.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The user interface of claim 16 wherein said language submodel comprises: a word attribute layer relating individual word expressions to probabilities of conveying particular ones of said set of word attributes; a scoring layer relating states of said word attribute layer for a particular word expression to states of corresponding ones of said set of word attribute nodes of said network.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The user interface of claim 18 wherein said language submodel further comprises a match module selecting a word expression having a winning score computed by said scoring layer.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The user interface of claim 19 wherein said winning score comprises a highest sum of matches between states of said word attribute layer of said language submodel and states of said word attribute nodes of said network.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The user interface of claim 15 wherein said speech attribute node represents one of speech speed, speech pitch, speech volume, reponse promptness.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A method of operating a computer user interface, comprising: providing a user model stochastic network; providing an agent model stochastic network; inferring, in said user model stochastic network, user emotion and personality states from observed user behavioral states; dictating, in a policy module, agent emotional and personality states to be conveyed to a user based upon the user emotion and personality states inferred by said stochastic network; inferring, in said agent model stochastic network, agent behavioral states to be conveyed to the user based upon the agent emotional and personality states dictated by said policy module.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. Computer-readable media storing instructions for carrying out the steps of claim 22.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The method of claim 22 wherein the step of providing a user model stochastic network comprises: providing a first layer of multi-state nodes representing respective emotional and personality variables;</claim-text>
      <claim-text>and providing a second layer of multi-state nodes representing respective behavioral variables.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The method of claim 24 wherein: the step of providing said first layer of nodes comprises providing probabilities linking the states of said one first layer node to the states of nodes in said second layer;</claim-text>
      <claim-text>and the step of providing said second layer of nodes comprises providing probabilities linking the states of said one second layer node to states of nodes in said first layer.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The method of claim 24 wherein the step of providing multi-state nodes representing emotional and personality variables comprise providing at least one of:</claim-text>
      <claim-text>(a) a valence node, (b) an arousal node, (c) a friendliness node and (d) a dominance node.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The method of claim 26 wherein the step of providing multi-state nodes representing behavior variables comprises providing at least one of:</claim-text>
      <claim-text>(a) a speech attribute node, (b) a facial expression node, (c) a word attribute node.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The method of claim 24 wherein the step of providing multi-state nodes representing behavioral variables comprises providing a set of word attribute nodes having probabilities relating states of said emotional and personality variables to a set of corresponding word attributes, said method further comprising: providing a language submodel coupled to said word attribute nodes;</claim-text>
      <claim-text>and providing a word node coupled to said language submodel.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The method of claim 28 wherein the step of providing a set of word attributes comprises providing at least plural ones of:</claim-text>
      <claim-text>(a) terseness, (b) positiveness, (c) activeness, (d) strength and (e) formality.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The method of claim 28 wherein the step of providing said language submodel comprises: providing a word attribute layer relating individual word expressions to probabilities of conveying particular ones of said set of word attributes;</claim-text>
      <claim-text>and providing a scoring layer relating states of said word attribute layer for a particular word expression to states of corresponding ones of said set of word attribute nodes of said network.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The method of claim 30 wherein the step of providing said language submodel further comprises providing a match module capable of selecting a word expression having a winning score computed by said scoring layer.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The method of claim 24 wherein the step of providing said agent model stochastic network comprises providing a copy of said user model stochastic network.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The method of claim 22 further comprising: inferring in said user network a user emotional and personality state from a current observed user behavioral state, and transmitting the inferred user emotional and personality state to said policy module to evoke from said policy module a dictated emotional and personality state to be conveyed to said user; inferring in said agent network an agent behavioral state from the dictated emotional and personality state evoked from said policy module; storing the current configuration of said user network based upon the current inferred user emotional and personality state;</claim-text>
      <claim-text>and repeating the foregoing inferring steps based upon subsequent observed user behavioral state.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The method of claim 33 wherein the step of inferring a user emotional and personality state is preceded by a step of observing the current user behavioral state.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The method of claim 33 wherein the step of inferring an agent behavioral state is followed by a step of exhibiting in said user interface said agent behavioral state to said user.</claim-text>
    </claim>
  </claims>
</questel-patent-document>