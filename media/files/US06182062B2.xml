<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182062B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182062</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182062</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="27547713" extended-family-id="12615476">
      <document-id>
        <country>US</country>
        <doc-number>08663840</doc-number>
        <kind>A</kind>
        <date>19960821</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1996US-08663840</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165400</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>66384096</doc-number>
        <kind>A</kind>
        <date>19960821</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1996US-08663840</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>JP</country>
        <doc-number>29756887</doc-number>
        <kind>A</kind>
        <date>19871127</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1987JP-0297568</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>JP</country>
        <doc-number>260988</doc-number>
        <kind>A</kind>
        <date>19880111</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1988JP-0002609</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="4">
        <country>US</country>
        <doc-number>14103993</doc-number>
        <kind>A</kind>
        <date>19931025</date>
        <priority-linkage-type>1</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="4">
        <doc-number>1993US-08141039</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="5">
        <country>US</country>
        <doc-number>83103992</doc-number>
        <kind>A</kind>
        <date>19920210</date>
        <priority-linkage-type>1</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="5">
        <doc-number>1992US-07831039</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="6">
        <country>US</country>
        <doc-number>27638488</doc-number>
        <kind>A</kind>
        <date>19881125</date>
        <priority-linkage-type>B</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="6">
        <doc-number>1988US-07276384</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="7">
        <country>US</country>
        <doc-number>84412386</doc-number>
        <kind>A</kind>
        <date>19860326</date>
        <priority-linkage-type>2</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="7">
        <doc-number>1986US-06844123</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <term-of-grant>
      <disclaimer/>
    </term-of-grant>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/27        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>27</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <further-classification sequence="1">
        <text>707999003</text>
        <class>707</class>
        <subclass>999003</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/273</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>273</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/271</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>271</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/277</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>277</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30401</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30401</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99933</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99933</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>15</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>33</number-of-drawing-sheets>
      <number-of-figures>36</number-of-figures>
      <image-key data-format="questel">US6182062</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Knowledge based information retrieval system</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>WASHIZUKA ISAMU</text>
          <document-id>
            <country>US</country>
            <doc-number>4597056</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4597056</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>CLEMENSON GREGORY D</text>
          <document-id>
            <country>US</country>
            <doc-number>4675829</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4675829</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>KOLLIN RICHARD P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4774655</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4774655</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>MORIYASU TAKASHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4908778</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4908778</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>TYCHONIEVICH LOUIS P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4916633</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4916633</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>SKEIRIK RICHARD D</text>
          <document-id>
            <country>US</country>
            <doc-number>4920499</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4920499</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>BODICK NEIL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4945476</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4945476</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>MIZUTANI HIROYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4999786</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4999786</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>KOBAYASHI HIDEAKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5218669</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5218669</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>DUVALL WILLIAM S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4298957</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4298957</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>BEST ROBERT M</text>
          <document-id>
            <country>US</country>
            <doc-number>4305131</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4305131</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>MILLETT RONALD P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4318184</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4318184</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>GLICKMAN DAVID, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4358824</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4358824</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>ROSENBAUM WALTER S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4384329</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4384329</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>YOSHIDA KUNIO</text>
          <document-id>
            <country>US</country>
            <doc-number>4420817</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4420817</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>KITAKAMI HAZIME, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4497039</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4497039</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>LINDSTROM EUGENE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4575798</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4575798</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>WAISMAN AMNON, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4606002</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4606002</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>SCHULDT MARLO E</text>
          <document-id>
            <country>US</country>
            <doc-number>4611298</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4611298</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>HARDY STEVEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4648044</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4648044</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>SCHRAMM DAVID A</text>
          <document-id>
            <country>US</country>
            <doc-number>4670848</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4670848</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>TOMA PETER P</text>
          <document-id>
            <country>US</country>
            <doc-number>4706212</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4706212</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>KATAYAMA YASUNORI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4736296</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4736296</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>TENNANT HARRY R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4829423</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4829423</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>TANAKA TOSHIYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4837689</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4837689</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>SKEIRIK RICHARD D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4884217</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4884217</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="27">
          <text>LOATMAN ROBERT B, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4914590</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4914590</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="28">
          <text>HARRIS LARRY R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5228116</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5228116</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="29">
          <text>TOSHIBA KK</text>
          <document-id>
            <country>EP</country>
            <doc-number>0130050</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-130050</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="30">
          <text>FUJITSU LTD</text>
          <document-id>
            <country>JP</country>
            <doc-number>S60254326</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP60254326</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="31">
          <text>FUJITSU LTD</text>
          <document-id>
            <country>JP</country>
            <doc-number>S615344</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP61005344</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>Slocum et al, Transportability to Other Languages: The Natural Language Processing Project in the AI Program at MCC, ACM Trans., pp. 204-230, Apr. 1985.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>T. Finin et al, "Interactive Classification as a Knowledge Aquisition Tool", First International Workshop on Expert Database Systems, Oct. 24-27, 1984 Kiawah Island, South Carolina.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>F. N. Tou et al, "RABBIT: An Intelligent Database Assistant", Proceedings of National Conference of AAAI, 1982.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>D. R. Dolk et al, "Knowledge Representation for Model Management Systems", IEEE Transactions on Software Engineering, Nov. 1984, vol. SE-10, No. 6, New York, New York.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>H. Fujisawa et al, "A Visual User Interface for a Personal Information Base Using a Concept Network", International Symposium on Database Systems for Advanced Applications, Apr. 1991, Tokyo, Japan.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>H. Fujisawa et al, "Intelligent Filing System with Knowledge-Base", Hitachi Review, vol. 37, No. 5.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>H. Tennant, "Menu-Based Natural Language Understanding", Proceedings of the 1984 AFIPS National Computer Conference, Jul. 12, 1984, Las Vegas, Nevada.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>14103993</doc-number>
              <kind>A</kind>
              <date>19931025</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>83103992</doc-number>
              <kind>A</kind>
              <date>19920210</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>27638488</doc-number>
              <kind>A</kind>
              <date>19881125</date>
            </document-id>
            <parent-status>ABANDONED</parent-status>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5555408</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5404506</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation>
      <continuation-in-part>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>84412386</doc-number>
              <kind>A</kind>
              <date>19860326</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>4868733</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </continuation-in-part>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Hitachi, Ltd.</orgname>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>HITACHI</orgname>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Fujisawa, Hiromichi</name>
            <address>
              <address-1>Tokorozawa, JP</address-1>
              <city>Tokorozawa</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Cohn, David</name>
            <address>
              <address-1>Seattle, WA, US</address-1>
              <city>Seattle</city>
              <state>WA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Hatakeyama, Atsushi</name>
            <address>
              <address-1>Kokubunji, JP</address-1>
              <city>Kokubunji</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Kiuchi, Itsuko</name>
            <address>
              <address-1>Tokyo, JP</address-1>
              <city>Tokyo</city>
              <country>JP</country>
            </address>
          </addressbook>
          <nationality>
            <country>JP</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Antonelli, Terry, Stout &amp; Kraus, LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Hafiz, Tariq R.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A multi-lingual information retrieval system which includes an information storage section for storing information, a data storage section for storing data for language conversion and for converting the stored information to strings of characters in natural language expressions in order to enable a person's interpretation, an interface section for user's interaction operations for information retrieval, a retrieval section for retrieving information from the information storage section in response to a request for a retrieval from the interface section, and an output section for outputting a retrieved result of the retrieval section.
      <br/>
      The data storage section coexistently stores the information therein in a plurality of different languages, thereby making possible to retrieve identical information by use of the plurality of different languages.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This is a continuation of application Ser.
      <br/>
      No. 08/141,039, filed Oct. 25, 1993; now U.S. Pat. No. 5,555,408, which is a continuation of application Ser.
      <br/>
      No. 07/831,093, filed Feb. 10, 1992, now U.S. Pat. No. 5,404,506; which is a continuation of application Ser.
      <br/>
      No. 07/276,384 filed on Nov. 25, 1988, now abandoned, which is a Continuation-In-Part of application Ser.
      <br/>
      No. 06/844,123, filed Mar. 26, 1986, now U.S. Pat. No. 4,868,733.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">This invention relates to knowledge based information retrieval system and in particular to a human interface of an intellectual query system permitting the end user to query efficiently information stored in a network structure in an electronic file.</p>
    <p num="3">
      This interface can be divided into the natural language interface and the visual interface.
      <br/>
      The natural language interface is suitable for a global search, by which the search is effected by deduction from the natural language and the visual interface is suitable for a search from a domain, which can be seen by eyes, i.e. for a local search.
    </p>
    <p num="4">
      Heretofore, as a human interface using the natural language, there is known a natural language interface for the database.
      <br/>
      Therefor there are references, G. G. Hendrix et al., "Developing a Natural Language Interface to Complex Data", ACM Trans.
      <br/>
      Database Systems, Vol. 3, 1978, pp. 105-147, etc.
      <br/>
      In these systems a data model for the database (method, by which the relation between different data items, which are to be memorized, is expressed) and a grammar and a dictionary for interpreting the natural language are set independently.
      <br/>
      That is, when the natural language interface is added to an existing database, it is necessary to construct newly a grammar and a dictionary.
      <br/>
      Or it has a problematical point that it is necessary to modify the grammar and the dictionary for the natural language interface, when the object database is changed.
    </p>
    <p num="5">
      Further, heretofore, a database, to which the natural language interface is given, is a relational database and the formal language for the search used therefor, i.e. a quasi-standardized SQL (Structural Query Language), is weak in the capability for describing high order knowledge.
      <br/>
      Since a query expression by the natural language is translated usually into a formal language as such an intermediate language, it has a problematical point that the function of the whole system is restricted by the expressing capacity of this formal language.
      <br/>
      In particular, although the relational database is useful for uniform data, it cannot be said that it is satisfactorily suitable for a heterogeneous database, by which various kinds of matters are dealt with, or an object-oriented database.
      <br/>
      For example, it is not suitable for describing a matter, based on ambiguous memory of a user, and querying information concerning it, based on that description.
    </p>
    <p num="6">
      Further, in these systems means other than the natural language is used for inputting data (new knowledge and information) and the data input is carried out by a specialist.
      <br/>
      Consequently there is a problem that it is difficult for an end user to input and register directly the data.
    </p>
    <p num="7">Furthermore, as small scale and large capacity memory devices such as optical disk storage units have been realized, document filing devices directed to offices, for which the end user operates directly the processing of supervision and search of the database, capable of storing and querying a large amount of information, which has been effected heretofore by a specialist, have been realized.</p>
    <p num="8">
      As a method for facilitating memory and search of information in such a filing device, e.g. JP-A-61-220027 can be referred to.
      <br/>
      This literature discloses an information querying method enabling the end user to query easily desired documents etc. from ambiguous and fragmental information and at the same time to facilitate their registration.
      <br/>
      However, by this method, it is very difficult to form query conditions, under which information required by the user can be appropriately taken out, when the query conditions for effecting the query from the knowledge base are formed.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="9">
      A first object of this invention is to solve the problematical points as described above and to enable the end user to query desired information from a description by a natural language even on the basis of fragmental memory.
      <br/>
      Furthermore it is to enable the user itself to register new information and knowledge similarly by using the natural language.
    </p>
    <p num="10">A second object of this invention is to provide a system, by which the user finds a concept, which he seeks, without any feeling that he is querying, by facilitating modification of concept in query expressions, enabling him to modify the object to be queried, to query one after another even in the course of formation of query expressions and to query locally the query expressions.</p>
    <p num="11">In order to achieve the above first object, this invention is characterized in that a common knowledge expression base is given to the knowledge base and the natural language interface so that the query and the registration of knowledge and information can be effected by using the natural language.</p>
    <p num="12">
      Concretely speaking, this invention gives a knowledge representation method (corresponding to a data model in the data base) called "concept relation model" expressing a system of matters and the fact with "concept" and "relation" as a method for constructing the knowledge base, and further provides a method, by which knowledge of language can be memorized also in the knowledge base.
      <br/>
      Here a "concept" means a "data item" in a computer representing matters, events or abstract concept and a "relation" means a "data item" defined between different concepts.
      <br/>
      The concept can be represented by a node (apex) and the relation can be represented by a link (side).
      <br/>
      Knowledge represented by a concept relation model constitutes therefore a network of concepts.
      <br/>
      Here this is called a conceptual network.
    </p>
    <p num="13">
      That is, the knowledge base according to this invention is characterized in that the knowledge, which is originally desired to be stored, is stored in the conceptual network as one body together with the knowledge for expressing it by using a language and that the natural language interface uses the same knowledge in common.
      <br/>
      Consequently, in principle it is not necessary to construct newly a dictionary, etc. for the natural language interface.
    </p>
    <p num="14">
      Further this invention provides a natural language understanding method, by which the meaning of a query expression expressed by a natural language is interpreted by effecting deduction from the matters, etc. stored in the knowledge base.
      <br/>
      In particular, it gives a method for interpreting the meaning of nominal compounds consisting of a plurality of series of nouns, which we use frequently.
      <br/>
      In order to interpret the meaning of the nominal compounds, it is necessary that the system deduces relations between different nouns and this invention gives a method, by which only significant relations are deducted from the concepts and the relations stored in the knowledge base.
    </p>
    <p num="15">
      Furthermore, the knowledge representation method according to this invention restricts the part depending on the language so as to facilitate the application to a plurality of languages.
      <br/>
      In addition, it makes the coexistence of expressions by different languages possible.
      <br/>
      Consequently this invention provides a method, by which it is possible to query and register information in e.g. both English and Japanese in a same knowledge base.
    </p>
    <p num="16">
      In order to achieve the above second object, according to this invention, display of a superconcept of a current concept in a query expression together with the query expression and a network display from the current concept and changeable superconcepts to subconcepts satisfying conditions added to the current concept are effected by utilizing multiple-window functions.
      <br/>
      Further the object can be achieved by the fact that displacement of the current concept due to shifting between different concepts in the query expression, modification of the current concept within concepts satisfying the added conditions, addition of restrictions to the current concept, addition of a root and query of concepts satisfying the added conditions can be always executed.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="17">
      FIG. 1 is a functional block diagram representing a natural language expression interpreting program by the method according to this invention;
      <br/>
      FIG. 2 is a scheme of a concept network for explaining a knowledge expressing method according to the concept relation model;
      <br/>
      FIG. 3 is a scheme indicating names of concept, FIG. 3 and the followings being schemes illustrating the knowledge memory according to the same model;
      <br/>
      FIG. 4 is a scheme indicating subsumption relations;
      <br/>
      FIG. 5 is a scheme indicating the generic relationship definition;
      <br/>
      FIG. 6 is a scheme indicating the relations;
      <br/>
      FIG. 7 is a scheme for explaining the principle of the method for interpreting the meaning of nominal compounds;
      <br/>
      FIG. 8 is a scheme for explaining a method for analyzing the structure of sentences;
      <br/>
      FIGS. 9, 10 and 11 show examples of the analysis of the structure of sentences;
      <br/>
      FIG. 12 is a table indicating prepositions;
      <br/>
      FIG. 13 is a table indicating relational descriptor;
      <br/>
      FIG. 14 is a block diagram illustrating the construction of the hardware for a system, which is an embodiment of this invention;
      <br/>
      FIG. 15 is a scheme expressing concepts and relation knowledge stored in the data base;
      <br/>
      FIGS. 16 and 17 show images on a screen when concept matching is effected;
      <br/>
      FIG. 18 shows an example of the table added, when conditions are added;
      <br/>
      FIG. 19 shows an example of the table added, when a root is added;
      <br/>
      FIG. 20 is a scheme illustrating the construction of a system according to this invention;
      <br/>
      FIGS. 21 to 32 show images on the screen appearing in the process of a query of information; and
      <br/>
      FIGS. 33 to 36 are flow charts for the processing according to this invention.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="18">
      Hereinbelow a concrete embodiment of this invention will be explained.
      <br/>
      At first an embodiment concerning the natural language interface will be described.
    </p>
    <p num="19">
      At first the fundamental principle of this embodiment will be explained.
      <br/>
      The knowledge expressing method by using the concept relation model serving as the base of this invention will be explained.
      <br/>
      FIG. 2 indicates a part of a conceptual network.
      <br/>
      In the figure ellipses represent concepts (nodes) and arrows represent relations (links).
      <br/>
      A node 201 "UNIVERSAL" is a root node representing all within the knowledge base.
      <br/>
      For each of the nodes it is possible to define more than one series of letters as the name of the relevant concept.
      <br/>
      For example a synonym or a corresponding word in a foreign language can be added thereto.
    </p>
    <p num="20">
      On the other hand, in the links connecting different nodes there are subsumption relations (IS-A link 202) defined between two nodes, between which a property is inherited, "generic relationships" (link 203) defined generally between different concepts, and "instance relations" (link 204) as concrete examples of the same generic relationships.
      <br/>
      The subsumption relation represents the class of matters.
      <br/>
      Consequently the conceptual network consisting of the concepts and the subsumption relations constitutes a conceptual tree representing a taxonomic hierarchy.
    </p>
    <p num="21">For example the conceptual tree within the conceptual network indicated in FIG. 2 represents the following knowledges;</p>
    <p num="22">
      (PAPER-MATERIAL (is-a THING))
      <br/>
      (BOOK (is-a PAPER-MATERIAL))
      <br/>
      (BOOK-0051 (is-a BOOK))
      <br/>
      (LIVING-THING (is-a THING))
      <br/>
      (PERSON (is-a LIVING-THING))
      <br/>
      (NEWTON (is-a PERSON))
    </p>
    <p num="23">
      These are called frame expressions.
      <br/>
      These are expressed by the symbolic expression used for the LISP language.
      <br/>
      These can be expressed also in usual English and written as follows;
      <br/>
      Paper material is a thing.
    </p>
    <p num="24">Book is a paper material. etc.</p>
    <p num="25">
      In FIG. 2, an example of the generic relationship is the relation 203 defined between the concept 211 (BOOK) and the concept 212 (PERSON).
      <br/>
      This means that there can be a relation "author" or "work" between "book" and "person".
      <br/>
      This generic relationship can be read in both the directions, i.e. towards either right or left, as follows;
      <br/>
      (BOOK (is-written-by PERSON))
      <br/>
      (PERSON (has-written BOOK))
    </p>
    <p num="26">
      The instance relation is a relation as indicated by a link 204 indicated by a broken line in FIG. 2, which represents a concrete example (called also instance value for the data base) of a certain generic relationship.
      <br/>
      For example, in FIG. 2, an instance relation 204 is defined between a concept 213 and a concept 214 as a concrete example of the generic relationship 203, which is "author".
      <br/>
      With the frame expression it can be written as follows;
      <br/>
      (BOOK-0051 (is-a BOOK)
    </p>
    <p num="27">
      - (is-written-by NEWTON))
      <br/>
      (NEWTON (is-a PERSON)
      <br/>
      - (has-written BOOK-0051))
    </p>
    <p num="28">
      With the natural language they can be written;
      <br/>
      BOOK-0051 is a book
      <br/>
      - which is written by NEWTON.
    </p>
    <p num="29">
      NEWTON is a person
      <br/>
      - who has written BOOK-0051.
    </p>
    <p num="30">
      The knowledge described above is memorized, according to this invention, in a data structure, as stated below.
      <br/>
      At first the concept and the name thereof are memorized in a concept name table 221 (FIG. 3).
      <br/>
      The same table 221 consists of three columns 222, 223 and 224.
      <br/>
      The column 222 indicates the unique number C- of the concept and the name CNAME thereof is defined in the column 223.
      <br/>
      The language LANG of the name is prescribed in the column 224.
      <br/>
      For example, when the value of LANG is "J", the name is written in Japanese and when it is "E", the name is written in English.
    </p>
    <p num="31">
      Further, a plurality of concept names can be defined for one language.
      <br/>
      For this reason, for the data structure in the column 223 it is allowed to repeat the data.
      <br/>
      For example the name of the concept C- 0004 is "book" (in Japanese) and "BOOK" and "printed matter" (in Japanese) can be added also thereto.
    </p>
    <p num="32">
      Now, the subsumption relation of the concept is represented in a subsumption relation table 231 indicated in FIG. 4.
      <br/>
      Columns 232 and 233 indicate unique numbers C- and SC- for respective concepts and represent that the superconcept of the concept C- is the concept SC-. For example, the second record in the table 231 indicates that the superconcept of the concept C- 0002 ("paper material") is the concept C- 0001 ("thing").
      <br/>
      The "relation" such as a property, which is defined for each concept, is inherited from a higher rank to a lower rank through a link of the subsumption relation.
      <br/>
      In this case, it is possible to define a plurality of superconcepts for one concept.
      <br/>
      Consequently multiple property inheritance is realized.
    </p>
    <p num="33">
      Various kinds of relations between different concepts other than the subsumption relation can be defined in a generic relationship defining table 241 indicated in FIG. 5.
      <br/>
      Each of the generic relationships represents the kind of the relation.
      <br/>
      Basically there is no limit for the number of such kinds of the relation and it is possible to define an arbitrary number of generic relationships.
    </p>
    <p num="34">
      The generic relationship defining table 241 defines principally "reading", when the "relation" is expressed by a natural language.
      <br/>
      A column 244 indicates "reading" LR, when the relevant relation is read from left to right, and a column 245 defines "reading" RL read from right to left contrarily thereto.
      <br/>
      In the data structure of these columns it is allowed to repeat data so that it is possible to define a plurality of readings.
      <br/>
      Further, just as for the concept name table, it is possible to specify the language for the reading.
      <br/>
      Consequently it is possible to express same data in a plurality of languages.
    </p>
    <p num="35">
      In the example indicated in FIG. 5 the relation "AUTHORSHIP" can be expressed by a natural language (English in this case) as follows;
      <br/>
      PERSON who is author of BOOK
      <br/>
      PERSON who is the author of BOOK
      <br/>
      PERSON who wrote BOOK
      <br/>
      PERSON who has written BOOK
    </p>
    <p num="36">
      or
      <br/>
      BOOK whose author is PERSON
      <br/>
      BOOK by PERSON
      <br/>
      BOOK from PERSON
      <br/>
      BOOK of PERSON
    </p>
    <p num="37">This is the same also for the Japanese expression (not described).</p>
    <p num="38">
      The existance of relations between different concepts is memorized according to a relation table 251 indicated in FIG. 6.
      <br/>
      As explained above, in the relation links, there are generic relationships and instance relations.
      <br/>
      These are distinguished by a column 256 in the table 251.
      <br/>
      When the value in a column CLASS is GR, it is a generic relationship and when the value is INST, it is an instance relation.
      <br/>
      In the example indicated in FIG. 6, the first record represents the generic relationship 203 in FIG. 2 and the second record indicates the instance relation 204 in FIG. 2.
      <br/>
      Further a column C-L defines the concept on the left side and a column C-R the concept on the right side.
      <br/>
      In this case, on which side a certain concept is located, right or left, depends on the definition and as far as there is no contradiction for the tables 241 and 251, it may be defined on either side.
    </p>
    <p num="39">Now the principle of the natural language understanding method based on the knowledge expressing method described above will be explained.</p>
    <p num="40">
      At first the method for understanding nominal compounds, which is the most important in the object-oriented knowledge base will be explained.
      <br/>
      Here a nominal compound means a noun phrase consisting of a series of nouns including partially adjectives.
      <br/>
      For example, the following are examples of the nominal compounds;
    </p>
    <p num="41">
      --
      <br/>
      --           supercomputer article              (1)
      <br/>
      --           Electronicsweek article            (2)
      <br/>
      --           Japanese personal computer company (3)
      <br/>
      --           Americal personal computer
      <br/>
      --                         software packages    (4)
    </p>
    <p num="42">In this case understanding the significance means to obtain positively the relation among these adjectives and nouns.</p>
    <p num="43">
      For example, although the nominal compounds (1) and (2) have a same structure, they have different significances.
      <br/>
      They should be interpreted as follows; (1) means; "article whose subject is supercomputer" and (2) means; "article which is part of ElectronicsWeek".
      <br/>
      That is, it is necessary to deduce that in (1) "article" and "supercomputer" are combined through a relation "subject-is" and that in (2) "article" and ElectronicsWeek" are combined through a relation "is-part-of".
      <br/>
      Understanding the significance is to extract automatically following structures, when they are described in the frame form;
    </p>
    <p num="44">
      --
      <br/>
      --         (ARTICLE (subject-is SUPERCOMPUTER))
      <br/>
      --                                               (5)
      <br/>
      --         (ARTICLE (is-part-of Electronicsweek))
      <br/>
      --                                               (6)
    </p>
    <p num="45">
      By the method for natural language understanding according to this invention, the significance is interpreted, as follows, on the basis of the knowledge indicated in FIG. 7.
      <br/>
      At first, as knowledge making this deduction possible, relations RS- 0011 as generic relationships;
    </p>
    <p num="46">
      --
      <br/>
      --                (ARTICLE (subject-is UNIVERSAL))   (7a)
      <br/>
      --                (UNIVERSAL (is-subject-of ARTICLE)) (7b)
      <br/>
      --      and relations RS- 0012
      <br/>
      --                (ARTICLE (is-part-of JOURNAL))     (8a)
      <br/>
      --                (JOURNAL (has-part-of ARTICLE))    (8b)
    </p>
    <p num="47">
      should be defined.
      <br/>
      That is, it is necessary that "anything can be a subject of an article" and "the article is a part of a journal (the article is published in a part of a journal)" are memorized as knowledge.
    </p>
    <p num="48">Further, as a subsumption,</p>
    <p num="49">
      --
      <br/>
      --         (SUPERCOMPUTER (is-a THING))         (9)
      <br/>
      --         (THING (is-a UNIVERSAL))            (10)
      <br/>
      --         (Electronicsweek (is-a JOURNAL))    (11)
    </p>
    <p num="50">should be memorized.</p>
    <p num="51">
      By using these memories it is possible to interpret "supercomputer article".
      <br/>
      At first, following the subsumption relation towards the higher rank from SUPERCOMPUTER, it is possible to understand;
      <br/>
      (SUPERCOMPUTER (is-a UNIVERSAL))
      <br/>
      (UNIVERSAL (is-subject-of ARTICLE)).
    </p>
    <p num="52">
      As the result, by the property inheritance, it is deduced that there can be relations;
      <br/>
      (SUPERCOMPUTER (is-subject-of ARTICLE))
    </p>
    <p num="53">
      or
      <br/>
      (ARTICLE (where subject-is SUPERCOMPUTER)).
    </p>
    <p num="54">
      That is, it is deduced that "a supercomputer can be a subject of an article".
      <br/>
      In this case, since there is no other interpretation, the interpretation;
      <br/>
      "article whose subject is supercomputer" is adopted.
    </p>
    <p num="55">The interpretation of the significance of the nominal compound (2) is a little more complicated.</p>
    <p num="56">
      In this case, since
      <br/>
      (ElectronicsWeek (is-a JOURNAL))
      <br/>
      (JOURNAL (has-part-of ARTICLE))
    </p>
    <p num="57">
      and at the same time
      <br/>
      (ElectronicsWeek (is-a UNIVERSAL))
      <br/>
      (UNIVERSAL (is-subject-of ARTICLE))
    </p>
    <p num="58">
      as it can be clearly seen from FIG. 7, it is deduced that there can be two relations;
      <br/>
      (ElectronicsWeek (has-part-of ARTICLE))
    </p>
    <p num="59">
      and
      <br/>
      (ElectronicsWeek (is-subject-of ARTICLE)).
    </p>
    <p num="60">
      That is, it is understood that there can be two interpretations;
      <br/>
      "article which is part of ElectronicsWeek"
    </p>
    <p num="61">
      and
      <br/>
      "article whose subject is ElectronicsWeek"
    </p>
    <p num="62">In the case where there exist a plurality of candidates of interpretation, the method according to this invention utilizes a heuristic method, by which the likelihood of the interpretations is evaluated, depending on which interpretation has more concrete examples.</p>
    <p num="63">
      Concretely speaking, in the preceding example, the numbers of instance relations for the relation RS- 0011 and the relation RS- 0012, which are registered, are counted, respectively, while querying the subconcepts of the concept "ARTICLE" and the concept "ElectronicsWeek", including themselves.
      <br/>
      In the example indicated in FIG. 7, O for the former and one concrete relation for the latter are registered.
      <br/>
      That is, there is no article, whose subject is "ElectronicsWeek", but there is one article, ARTICLE - 0101, which is published in "ElectronicsWeek".
      <br/>
      Consequently the relation RS- 0012 (is-part-of) is selected as the more suitable interpretation.
      <br/>
      That is, it is interpreted as follows;
      <br/>
      "article which is part of ElectronicsWeek".
    </p>
    <p num="64">
      As explained above, the interpretation of nominal compounds is based on a deduction processing of the relation between 2 nouns.
      <br/>
      That is, the basic processing of the interpretation of a nominal compound consisting of more than 3 words, as explained below, consists of extracting the relation between 2 words described above.
      <br/>
      This will be explained below, taking the nominal compound (3) as an example.
    </p>
    <p num="65">
      At first, the concept corresponding to each of the words is selected, while examining whether there are concept names consisting of a composite word among the words constituting the nominal compound or not.
      <br/>
      That is, the words are cut-off one after another from the beginning and it is examined whether they are registered or not, referring to the concept name table.
    </p>
    <p num="66">In the case of the nominal compound (3), partial series of words such as;</p>
    <p num="67">
      --
      <br/>
      --               "Japanese"
      <br/>
      --               "Japanese personal"
      <br/>
      --               "Japanese personal computer"
      <br/>
      --               "Japanese personal computer company"
      <br/>
      --                      "personal"
      <br/>
      --                      "personal computer"
      <br/>
      --                      "personal computer company"
      <br/>
      --                             "computer company"
      <br/>
      --                                     "company"
    </p>
    <p num="68">are cut-off and it is examined whether each of them is a concept name or not.</p>
    <p num="69">
      At this time, the method according to this invention is characterized in that an adjective is registered as a synonym of the concept, whose name is the noun form corresponding thereto, and the adjective is dealt with as a same concept as the noun.
      <br/>
      For example, the adjective "Japanese" is registered as a synonym of the concept "JAPAN" or the concept "Japanese people" and dealt with as the same concept.
    </p>
    <p num="70">
      Consequently, as the result, supposing that "personal computer" is defined as a concept name "PERSONAL-COMPUTER", the nominal compound (3) is at first recognized as;
      <br/>
      (JAPAN PERSONAL-COMPUTER COMPANY)
      <br/>
      (JAPANESE-PEOPLE PERSONAL-COMPUTER COMPANY).
    </p>
    <p num="71">However, in the following explanation, in order to facilitate understanding, explanation will be made, omitting the latter, for which it is understood finally to be a meaningless interpretation.</p>
    <p num="72">
      That is, at this step, it is understood that the nominal compound is a combination of substantially three concepts.
      <br/>
      This can be expressed by using parentheses as follows;
    </p>
    <p num="73">
      --
      <br/>
      --        (Japanese (personal computer) company)
      <br/>
      --                                                (12)
    </p>
    <p num="74">
      Therefore the following processing is to examine how these three concepts are related with each other.
      <br/>
      In this case it can be seen that there the are following two possibilities;
    </p>
    <p num="75">
      --
      <br/>
      --        (Japanese ((personal computer) company))
      <br/>
      --                                                (13)
      <br/>
      --        ((Japanese (personal computer)) company)
      <br/>
      --                                                (14)
    </p>
    <p num="76">
      At first, in the case of (13), it is necessary to deduct two relations, which can be connected between COMPANY and PERSONAL-COMPUTER and between COMPANY and JAPAN.
      <br/>
      In this case, by the method described previously for deducing the relation, following relations;
    </p>
    <p num="77">
      --
      <br/>
      --           (COMPANY
      <br/>
      --               (produces PERSONAL-COMPUTER)
      <br/>
      --               (is-located-in JAPAN))       (15a)
      <br/>
      --           (COMPANY
      <br/>
      --               (has-developed PERSONAL-COMPUTER)
      <br/>
      --               (is-located-in JAPAN))       (15b)
    </p>
    <p num="78">
      are extracted.
      <br/>
      Here, in order to evaluate the priority (likelihood) of a plurality of interpretations, the total numbers of concrete examples of the two relations between COMPANY and PERSONAL-COMPUTER and between COMPANY and JAPAN (concrete relations defined in the subconcepts) are counted for (15a) and (15b), respectively, so as to obtain weights for these relations.
      <br/>
      In order to obtain the evaluation for all the relations, it is normalized by dividing each of the numbers of the instance relations (weight of the relation) by the number of the generic relationships.
      <br/>
      For the examples of (15a) and (15b) the number of the generic relationships is 2.
    </p>
    <p num="79">
      Then, the relation is extracted for the second possibility (14).
      <br/>
      In this case two relations between COMPANY and PERSONAL-COMPUTER and between PERSONAL-COMPUTER and JAPAN should be obtained.
      <br/>
      For the former, two relations;
    </p>
    <p num="80">
      --
      <br/>
      --             (COMPANY (produces PERSONAL-COMPUTER))
      <br/>
      --                                                (16a)
      <br/>
      --        and    (COMPANY (has-developed PERSONAL-COMPUTER))
      <br/>
      --                                                (16b)
    </p>
    <p num="81">
      can be found (on the presumed knowledge base).
      <br/>
      In the same way, for the latter two relations
    </p>
    <p num="82">
      --
      <br/>
      --              (PERSONAL-COMPUTER
      <br/>
      --                (is-produced-by
      <br/>
      --                 (COMPANY (is-located-in JAPAN))) (17a)
      <br/>
      --        and     (PERSONAL-COMPUTER
      <br/>
      --                (was-developed-by
      <br/>
      --                 (COMPANY (is-located-in JAPAN))) (17b)
    </p>
    <p num="83">
      are found.
      <br/>
      At this time, since there is no relation connecting directly PERSONAL-COMPUTER and JAPAN, the concept COMPANY relating indirectly these two is found automatically.
    </p>
    <p num="84">
      By the method according to this invention, when no relation relating directly two concepts is found, as stated above, (sets of) all the generic relationships defined in the superconcepts of the two concepts, between which a relation is to be found, are extracted, tracing up thereto separately.
      <br/>
      Since this procedure is executed for two concepts, two sets of generic relationships are obtained.
      <br/>
      This can be extracted by querying three tables 231, 241 and 251.
      <br/>
      Next the concepts in a set of the extracted generic relationships, which are related to the other set, are listed separately for the two sets.
      <br/>
      In this way two sets of concepts are obtained and a concept, which intercedes the two concepts with each other, i.e. in the preceding example, the concept COMPANY is finally obtained by obtaining a set intersection thereof.
    </p>
    <p num="85">At last, excluding the meaningless combinations, the following two interpretations are obtained;</p>
    <p num="86">
      --
      <br/>
      --             (COMPANY
      <br/>
      --                (produces
      <br/>
      --                  (PERSONAL-COMPUTER
      <br/>
      --                     (was-developed-by
      <br/>
      --                       (COMPANY
      <br/>
      --                          (is-located-in JAPAN))))))
      <br/>
      --                                                (18a)
      <br/>
      --        and    (COMPANY
      <br/>
      --                (has-developed
      <br/>
      --                  (PERSONAL-COMPUTER
      <br/>
      --                     (is-produced-by
      <br/>
      --                        (COMPANY
      <br/>
      --                          (is-located-in JAPAN))))))
      <br/>
      --                                                (18b)
      <br/>
      --          Finally following four interpretations in total
      <br/>
      --             "company
      <br/>
      --                which produces personal computer
      <br/>
      --                which is located in Japan" (19a)
      <br/>
      --             "company
      <br/>
      --                which has developed personal computer
      <br/>
      --                which is located in Japan" (19b)
      <br/>
      --             "company
      <br/>
      --                which produces personal computer
      <br/>
      --                  which was developed by company
      <br/>
      --                     which is located in Japan" (19c)
      <br/>
      --        and    "company
      <br/>
      --                which has developed personal computer
      <br/>
      --                  which is produced by company
      <br/>
      --                     which is located in Japan" (19d)
    </p>
    <p num="87">
      are obtained automatically.
      <br/>
      In the expressions stated above in English, the antecedence relation of the relative pronouns is indicated by the indentation.
      <br/>
      In the case where the head of a line stands back from the head of the directly preceding line, a noun in the directly preceding line is the antecedent of the relative pronoun in the succeeding line.
    </p>
    <p num="88">
      The nominal compound (4) can be dealt with in the same way.
      <br/>
      At first, by matching each of the words with the concept noun thereof, it can be understood that it consists of three concepts such as;
      <br/>
      (USA PERSONAL-COMPUTER SOFTWARE-PACKAGE)
    </p>
    <p num="89">By deducting the relations among these concepts, a following interpretation can be obtained;</p>
    <p num="90">
      --
      <br/>
      --               "software package
      <br/>
      --                 which runs on personal computer
      <br/>
      --                 which was developed by company
      <br/>
      --                    which is located in USA"  (20)
    </p>
    <p num="91">
      The method for natural language understanding according to this invention makes a stronger noun phrase interpreting function possible by putting a sentence interpretation unit (syntactic analysis unit) on the semantic interpretation function for nominal compounds and at the same time realizes a wide spread dialogue using natural languages with the knowledge base.
      <br/>
      The sentence interpretation section utilizes syntax rules.
      <br/>
      List 1 shows an example of the syntax rules.
      <br/>
      A syntax rule consists of three parts, i.e. a left member constructed by a non-terminal symbol (here symbol enclosed by hook-shaped parentheses &lt; &gt;), a right member, which is a developed form thereof and a function, which is to be evaluated, when the development is successful (e.g. Formula (21a)).
      <br/>
      However, in List 1, the evaluation function, when the analysis is successful, is omitted.
      <br/>
      The right member of each of the rules is composed of a series of a terminal symbol and non-terminal symbols.
      <br/>
      Here a symbol "1" represents a juxtaposition.
      <br/>
      Further the non-terminal symbol &lt;s&gt; represents a whole sentence
    </p>
    <p num="92">
      --
      <br/>
      --        - - - - - - - - - - - - - - - - - - - - - -
      <br/>
      --        List 1:
      <br/>
      --        &lt;s&gt; ::= &lt;system-command&gt; .vertline. (21a)
      <br/>
      --             &lt;define-command&gt; .vertline.  (21b)
      <br/>
      --             &lt;search-command&gt; .vertline.  (21c)
      <br/>
      --             &lt;browse-command&gt;           (21d)
      <br/>
      --        &lt;system-command&gt; ::= load from &lt;?&gt; .vertline.
      <br/>
      --             save to &lt;?&gt; .vertline. update .vertline. quit .vertline. stop
      <br/>
      --  .vertline.
      <br/>
      --             &lt;show-word&gt; chart .vertline. edit &lt;?&gt;
      <br/>
      --        &lt;show-word&gt;::= show .vertline. print
      <br/>
      --        &lt;search-command&gt; ::=
      <br/>
      --             &lt;find-word&gt; &lt;noun-phrase&gt; . (22)
      <br/>
      --        &lt;find-word&gt; ::= look up .vertline. look for .vertline.
      <br/>
      --             search for .vertline. lookup .vertline. find (23)
      <br/>
      --        &lt;noun-phrase&gt; ::= &lt;noun-group&gt; .vertline. (24a)
      <br/>
      --             &lt;noun-phrase&gt; &lt;joiner&gt; &lt;noun-phrase&gt;  (24b)
      <br/>
      --        &lt;noun-group&gt; ::= &lt;noun-compound&gt; .vertline. (25a)
      <br/>
      --             &lt;art&gt; &lt;noun-compound&gt; .vertline. (25b)
      <br/>
      --             &lt;def-art&gt; &lt;noun-compound&gt; (25c)
      <br/>
      --        &lt;noun-compound&gt; ::= &lt;noun-string&gt; (26)
      <br/>
      --        &lt;noun-string&gt; ::= &lt;concept&gt; .vertline. (27a)
      <br/>
      --             &lt;concept&gt; &lt;noun-string&gt; (27b)
      <br/>
      --        &lt;joiner&gt; ::= &lt;prep&gt; .vertline.
      <br/>
      --             &lt;rel-pronoun&gt; &lt;link&gt; (28)
      <br/>
      --        &lt;define-command&gt; ::=
      <br/>
      --             define relation &lt;new-phrase&gt; . .vertline. (29a)
      <br/>
      --             define &lt;?&gt;as &lt;noun-phrase&gt; . .vertline. (29b)
      <br/>
      --             &lt;noun-phrase&gt; is &lt;noun-phrase&gt; . .vertline.  (29c)
      <br/>
      --             &lt;noun-phrase&gt; &lt;link&gt; &lt;noun-phrase&gt; . .vertline.
      <br/>
      --                                                 (29d)
      <br/>
      --             &lt;noun-group&gt; is also known as &lt;?&gt; .
      <br/>
      --                                                 (29e)
      <br/>
      --        &lt;new-phrase&gt; ::=
      <br/>
      --             &lt;noun-compound&gt; &lt;?&gt; &lt;noun-compound&gt;  (30)
      <br/>
      --        &lt;?&gt; ::= &lt;null&gt; .vertline. &lt;null&gt; &lt;?&gt;  (31)
      <br/>
      --        - - - - - - - - - - - - - - - - - - - - - -
    </p>
    <p num="93">
      The syntactic analysis unit consists of a lexical analysis unit which is a bottom-up processing and a syntactic analysis unit which is a top-down processing.
      <br/>
      The syntactic analysis unit according to this method outputs all the sentence structures, which are in accordance with the syntax rules as candidates.
      <br/>
      Therefrom only the meaningful interpretations (modifying relation between words) are evaluated and selected by the nominal compound analysis explained previously.
    </p>
    <p num="94">The lexical analysis, which is a bottom-up processing, is effected by using a lexicon, in which classification of the concept noun, the relational descriptor, the preposition, the relative pronoun and the article is described.</p>
    <p num="95">
      The lexicon can be constructed automatically by edition processing by the conceptual network by the knowledge representation explained previously.
      <br/>
      Concretely speaking, the concept name is extracted from the table 221 (FIG. 3).
      <br/>
      As the lexical analysis, a word in an inputted sentence, which matches with the concept name, is recognized as a non-terminal symbol, which is &lt;concept&gt;.
    </p>
    <p num="96">
      The relational descriptor means the "relation" or the "reading" thereof in the knowledge representation and includes e.g. "is author of", "wrote", "has written", "author is", etc.
      <br/>
      These are extracted from the generic relationship defining table 241 (FIG. 5).
      <br/>
      A word or a series of words in an inputted sentence, which match therewith, is recognized as a non-terminal symbol &lt;link&gt;.
    </p>
    <p num="97">
      The preposition includes "by", "from", "of", etc. and their meaning (kind of the relation, which each of them represents) is extracted automatically from the generic relationship defining table 241 (FIG. 5).
      <br/>
      These prepositions are recognized as a non-terminal symbol &lt;prep&gt;. At this time, in the case where a relational descriptor and a preposition are recognized, the kind of the "relation", which they mean, and their direction are outputted as results of the lexical analysis together with the non-terminal symbol described above.
      <br/>
      In this way, as stated later, it is possible to interpret the significance of a noun phrase such as "book by Newton" (refer to syntax rules (24b) and (28)).
    </p>
    <p num="98">
      In the lexicon are memorized further relative pronouns &lt;rel-pronoun&gt; (which, who, that), indefinite articles &lt;art&gt; (a, an) and the definite article &lt;def-art&gt; (the).
      <br/>
      The words, which couldn't be recognized by the lexical analysis, are recognized as a non-terminal symbol &lt;null&gt;.
    </p>
    <p num="99">
      The syntactic analysis is effected on the basis of the lexical analysis as a bottom-up preprocessing.
      <br/>
      The syntactic analysis method will be explained, referring to FIG. 8.
      <br/>
      In the figure three words 401, 402, 403 as an inputted sentence are analyzed.
      <br/>
      Arrows directed from the upper portion to the lower portion (e.g. an arrow 411) represent bottom-up processings and arrows directed from the lower portion to the upper portion (e.g. an arrow 412) represent top-down processings.
    </p>
    <p num="100">As results of the lexical analysis, it is outputted that the word 401 (personal) has no matching concept, that for the interpretation of the word 402 (computer) there can be two concepts "computer" and "computer" magazine, that a series of words 401-402 (personal computer) matches with a concept "personal computer" and that the word 403 (company) matches with a concept "company".</p>
    <p num="101">
      The syntactic analysis unit receives these results and develops the whole sentence, referring to the syntax rules indicated in List 1.
      <br/>
      FIG. 8 shows the procedure only after a point in the course.
      <br/>
      In the figure &lt;noun-phrase&gt; 421 is developed to &lt;noun-group&gt; 429 then to &lt;noun-compound&gt; 422 by using Formulas (24a) and (25a) and further to &lt;noun-string&gt; 423 by using Formula (26).
      <br/>
      Furthermore &lt;noun-string&gt; is developed to &lt;concept&gt; 426 and &lt;noun-string&gt; 427 by using Formula (27b).
      <br/>
      The latter &lt;noun-string&gt; is developed to &lt;concept&gt; 428 by using Formula (27a).
      <br/>
      Finally, in the example indicated in FIG. 8, it can be understood that the inputted sentence (noun phrase) can be interpreted to be a noun compound consisting of two concepts (personal computer) and (company).
    </p>
    <p num="102">In FIGS. 8 to 11, in order to simplify the figures, the symbols indicated in List 1 are simplified as follows: That is, &lt;noun-phrase&gt;, &lt;noun-group&gt;, &lt;noun-compound&gt;, &lt;noun-string&gt;, &lt;joiner&gt;, &lt;rel-pronoun&gt; and &lt;find-word&gt; are expressed by &lt;n-phrase&gt;, &lt;n-group&gt;, &lt;n-comp&gt;, &lt;n-string&gt;, &lt;join&gt;, &lt;rpron&gt; and &lt;find&gt;, respectively.</p>
    <p num="103">
      In this syntactic analysis all the sentence structure syntactically possible are extracted.
      <br/>
      As an algorithm for such a syntactic analysis there is known e.g. Thompson, H, et al., "Implementing Natural Language Parsers," in Artificial Intelligence: Tools, Techniques, and Applications, edited by T. O'Shea and M. Eisenstat, Harper and Row, New York, N.Y, 1984, pp. 245-300.
    </p>
    <p num="104">
      All the extracted syntactic candidates are evaluated by using evaluating formulas described in the respective syntax rules.
      <br/>
      The feature of this invention consists in that knowledge stored in the knowledge base is used for this evaluation.
      <br/>
      In the case of the example indicated in FIG. 8, it is evaluated whether a meaningful noun compound can be constructed by the concept "personal computer" and the concept "company" or not.
      <br/>
      This evaluation method utilizes a method, by which knowledge registered in the concept network explained previously is used.
      <br/>
      As this result, results of the analysis of meaningful sentence structures are obtained in the order of likelihood.
    </p>
    <p num="105">
      FIG. 9 and the following indicate the results of the syntactic analysis for the whole query expression.
      <br/>
      The query expression is developed to an imperative term and a noun phrase by using the syntax rules (21c) and (22).
      <br/>
      FIG. 9 shows an example including the noun phrase indicated in FIG. 8.
      <br/>
      FIG. 10 shows an example of the analysis of a query expression including a relative pronoun and a noun phrase.
      <br/>
      At this time it is understood that the "reading" of the "relation" of the concept relation model indicated in FIG. 5 functions as a predicate in a relative pronoun phrase.
      <br/>
      Further, FIG. 11 shows an example of a query expression including a preposition.
      <br/>
      Here, as it has been already explained, it is described in the generic relationship defining table indicated in FIG. 5 that the preposition "on" means a relation "subject" ("whose subject is") and that the preposition "at" means a relation "position" ("who works at").
    </p>
    <p num="106">According to the principle explained above it is possible to interpret the significance of a sentence written in a natural language and including a series of nouns (nominal compound), whose relation is not described explicitly, by the knowledge base and the minimum syntax rules.</p>
    <p num="107">
      Hereinbelow an embodiment of this invention will be explained.
      <br/>
      FIG. 14 is a block diagram illustrating the construction of the hardware of the knowledge base system, which is an embodiment of this invention.
    </p>
    <p num="108">In the figure, the system consists principally of a central processing unit (CPU) 101, a main memory unit (MMU) 102, a work memory unit (WMU) 103, a unified disk unit 121, 122 having a system file and a user file, a printer 131, a communication control unit (CCU) 141 for connecting the system with a local area network (LAN) (not shown), a display unit (CRT) 151 for dialogue with users, a keyboard 152 and a mouse 153.</p>
    <p num="109">
      The unified disk unit 121, 122 consists of a magnetic disk and an optical disk.
      <br/>
      For example, in the case of this embodiment, a first disk unit (DKU 1) 121 is constructed by a magnetic disk, which memorize information, for which a high speed is required.
      <br/>
      On the other hand a second disk unit (DKU 2) 122 is constructed by an optical disk, which memorize a specifically large amount of information.
    </p>
    <p num="110">
      In the system file are stored a group of programs such as an operating system, a communication control program, a file management program, a knowledge base management program and an integrated office procedure supporting system, which the system provides, and a group of files such as a data base, etc., necessary therefor.
      <br/>
      On the other hand, in the user file are stored a group of application programs such as programs offering personalized systems, programs formed by users, etc., a group of files such as data bases necessary therefor and a unified knowledge base (described below) formed by users.
    </p>
    <p num="111">
      The operation of the system is carried out by accessing necessary data to the main memory unit and the files according to control by a program loaded in the main memory unit.
      <br/>
      At the same time it is possible to converse with the system by means of input means 152 and 153, while looking at information displayed in a display device 151.
    </p>
    <p num="112">
      The software portion of the knowledge base system according to this invention consists of a group of programs including a concept network editor, a conceptual network browser, a natural language interpretation program and a multimedia file management program, and a unified knowledge base unifying information, which they use.
      <br/>
      Hereinbelow each of them will be explained one after another.
    </p>
    <p num="113">
      At first the conceptual network editor carries out edition, search and management of the object-oriented knowledge on the basis of the concept relation model explained previously.
      <br/>
      The knowledge and information carries out the memory and the management by using the concept name table, the subsumption table, the generic relationship defining table and the relation table.
      <br/>
      Here the data stored therein are called a concept network.
    </p>
    <p num="114">
      The concept network editor provides following functions by using a command language (formal language) based on a predetermined specification.
      <br/>
      (1) registration of concepts: specify the concept name and the position in a taxonomic hierarchy, and register new concepts;
      <br/>
      (2) registration of generic relationships: specify the linguistic expression for two concepts and their relation and register the kind of a new relation;
      <br/>
      (3) registration of instance relations: specify two concepts and the kind of the relation therebetween and register the fact, the relation, the property, etc.;
      <br/>
      (4) edition of concept names: modify the name; delete and add synonyms and other names;
      <br/>
      (5) edition of generic relationships: modify two concepts related with each other; modify and delete linguistic expressions;
      <br/>
      (6) deletion of concepts:
      <br/>
      (7) deletion of instance relations:
      <br/>
      (8) modification of a hierarchical taxonomy:
      <br/>
      (9) addition of superconcepts: classify doubly (or more multiply) a same concept, give multiple property inheritance, etc.;
      <br/>
      (10) registration and deletion of structured concepts: register and delete abstract concepts (stated later) obtained by modifying a concept by another concept;
      <br/>
      (11) updating of a lexicon: add information necessary for lexical analysis from a conceptual network to a lexicon and edit it;
      <br/>
      (12) concept matching: search partial series of letters, keywords and structured concepts;
      <br/>
      (13) network browsing: displace a taxonomic hierarchical tree and a current concept by association of idea.
      <br/>
      (14) addition and deletion of multi-media information: add or delete information within a multi-media file to or from an arbitrary concept by association of idea; and
      <br/>
      (15) read out of multi-media information: read out multi-media information added to a concept from a multi-media file.
    </p>
    <p num="115">
      Now the structured concept in the functions described above will be explained.
      <br/>
      A structured concept is an abstract concept modified (whose significance is restricted) from a certain concept by a relation thereof with another concept, and stored in memory means other than that for the conceptual network.
      <br/>
      Concretely speaking, the nominal compound stated in the above examples corresponds thereto.
      <br/>
      For example, a structured concept D- 0011 can be registered as
      <br/>
      (D-0011 "supercomputer article" (article (subject-is supercomputer))).
    </p>
    <p num="116">
      More concretely speaking, it is memorized by its proper number such as a following internal data structure;
      <br/>
      (D-0011 "supercomputer article" (C-0401 ((RS-0033 LR) C-0501))).
    </p>
    <p num="117">
      Here the first member represents the proper number of the structured concept, the second member the name of the structured concept, and the third member the formula defining the structured concept.
      <br/>
      In the example of expression stated above C- 0401 indicates the proper number of the concept "article", C- 0501 that of the concept "supercomputer" and RS- 0033 that of the relation "subject".
    </p>
    <p num="118">
      This structured concept is used for querying information from an abstract or a descriptive memory.
      <br/>
      This system has a function of querying a concrete concept from a conceptual network by a deducing processing on the basis of the structured concept.
      <br/>
      In the example stated above, it is possible to extract only the concepts, whose subject is subsumed by the concept "supercomputer", from an assembly of concrete concepts subsumed by the concept "article" (subconcepts of the concept "article").
      <br/>
      This processing is called concept matching and it can be realized by a deducting processing inversely directed.
    </p>
    <p num="119">In this way it is possible for a user to register arbitrarily his manner of understanding in a system and to query easily a concept which he desires by giving means for storing structured concepts and means for querying them from that means.</p>
    <p num="120">
      In the function of the conceptual network editor the multi-media information function will be further explained below.
      <br/>
      In the multi-media file it is possible to register and accumulate a photo inputted e.g. by means of an image scanner.
      <br/>
      The conceptual network editor has a function of adding the photo to a certain concept by association of idea.
      <br/>
      Concretely speaking, it realizes it by forming and supervising a correspondence table of proper numbers of the concepts and names of multi-media file members.
      <br/>
      The user can have the photo displayed after having queried the concept.
      <br/>
      In the multi-media file it is possible to record document images, acoustic information etc. apart from photos.
    </p>
    <p num="121">Since this conceptual network editor can be constructed by using the method disclosed in a patent specification entitled "A method for storing information" (JP-A-61-220027), explanation thereof is omitted here.</p>
    <p num="122">
      Now the conceptual network browser will be explained.
      <br/>
      The conceptual network browser is a visual interface for the conceptual network editor and it is tried to increase operability by adopting the direct manipulation method using a multi-window and a mouse.
      <br/>
      The browser can display the content of the knowledge base in the form of a conceptual hierarchical tree, in the frame format or in the table format, or further in the form of a natural language in an arbitrary window.
      <br/>
      Further it can call and execute an arbitrary function of the conceptual network editor described previously by specifying directly an object (concept and relation) on the display e.g. by using the mouse and further selecting and specifying an instruction within the menu.
      <br/>
      The conceptual network browser translates such a user's direct instruction into a command language, which is the formal language, to start the conceptual network editor.
    </p>
    <p num="123">
      Next the program for interpreting a sentence written in a natural language will be explained below, referring to a functional block diagram, FIG. 1.
      <br/>
      One of the features of this invention is its method for interpreting a sentence written in a natural language, whose principle has been explained already.
      <br/>
      The program for interpreting a sentence written in a natural language consists of an input section 501 for inputting a series of words from the user, a lexical analysis section 503 for analyzing of each of the words in the series, a syntactic analysis unit 504 for analyzing the syntax, referring to a grammar file 514 storing syntax rules, and a nominal compound interpretation unit 506.
      <br/>
      The program for interpreting a sentence written in a natural language is operated so as to receive a sentence 501 written in a natural language from the conceptual network browser and to return interpretation results 505 to the same conceptual network browser.
    </p>
    <p num="124">
      In this embodiment the lexical analysis unit carries out the analysis, referring to a structured concept file 511, a lexicon file 512 and a concept name file 522 in a conceptual network type knowledge base 513.
      <br/>
      In this case the structured concept file 511 memorizes 3 assemblies of proper numbers of structured concepts, names of structured concepts and structured concept defining formulas.
      <br/>
      Further the lexicon 512 consists of a preposition table 601 indicated in FIG. 12 and a relational descriptor table 611 indicated in FIG. 13. In another embodiment, for a high speed processing, the lexicon can be constructed so as to include the concept name table 221 shown in FIG.
    </p>
    <p num="125">
      The preposition table 601 stores, for each preposition, proper numbers of generic relationships, which the relevant preposition represents, for every direction of the relevant relation.
      <br/>
      Referring to the example indicated in FIG. 12, the preposition "at" represents the "relation", in the case where the generic relationship RS- 0123 is read from left to right, where RS- 0209 is read from right to left, etc.
      <br/>
      Further the relational descriptor table 611 stores, for each relational descriptor, the proper number and the directivity of the relevant generic relationship.
      <br/>
      These two tables can be automatically constructed and updated from the general concept defining table indicated in FIG. 5 by storing separately all the possible prepositions, as it can be easily understood from the above explanation.
      <br/>
      This function is provided by the lexicon edition unit 507 in FIG. 1 and in reality it is a part of the function of the conceptual network editor.
    </p>
    <p num="126">
      Now the explanation of the function of the lexical analysis unit is partially completed.
      <br/>
      Although the structured concept was not stated in the explanation of the principle of this invention in order to facilitate understanding, in the lexical analysis unit the words and a series of words matching with the structured concept name are recognized as a non-terminal symbol &lt;concept&gt; and at the same time, in the case where it is a structured concept, a structured concept defining formula is outputted as an evaluated value.
    </p>
    <p num="127">
      For this purpose, the lexical analysis unit cuts off partial series of words one after another from the inputted series of words, as described in the explanation of the principle, and examines whether each partial series of words matches not only with the usual concept name but also with the structured concept name.
      <br/>
      As the result, in the case where it matches with either one of them, the recognition result is &lt;concept&gt; as the non-terminal symbol.
      <br/>
      Further, in the case where it matches with the usual concept name, the proper number of the relevant concept is the evaluated value and in the case where it matches with the structured concept name, the structured concept name defining formula is the evaluated value.
    </p>
    <p num="128">
      Furthermore, as the result of the lexical analysis, in the case where it is recognized as a preposition or a relational descriptor, a non-terminal symbol corresponding thereto is the recognition result and at the same time all the corresponding relations are evaluated values.
      <br/>
      These evaluated values are outputted as the result of the lexical analysis together with the non-terminal symbol representing the recognition result.
    </p>
    <p num="129">
      The syntactic analysis unit 504 generates at first all the possible sentence structures, referring to the syntax rules in the grammar file 514 by using the results of the lexical analysis being input, as described in the explanation of the principle.
      <br/>
      It is called parsing (in a narrow meaning) to generate sentence structures, which are possible, taking the syntax rules into account.
      <br/>
      In this parsing step the adaptability in the meaning is not taken into account.
      <br/>
      Next the syntactic analysis unit 504 has the complex noun phrase interpretation unit 506 effect the analysis of the adaptability in the meaning and the semantic interpretation of the nominal compound.
      <br/>
      In this way those, which are adapted in the meaning, are selected from the assembly of sentence structures generated as candidates in the order of the likelihood.
    </p>
    <p num="130">Since it is &lt;noun-phrase&gt; that is a factor particularly important in the meaning as the result of the syntactic analysis, mainly the syntactic analysis of the noun phrase will be explained more concretely, using the examples indicated in FIGS. 9 to 11.</p>
    <p num="131">
      At first, in the case of FIG. 9, a noun phrase:
      <br/>
      "personal computer companies"
    </p>
    <p num="132">is interpreted, as the result of the parsing, as a structure indicated below:</p>
    <p num="133">
      --
      <br/>
      --        (&lt;noun-phrase&gt;                         (32)
      <br/>
      --           D-1009
      <br/>
      --           "personal computer companies"
      <br/>
      --           ((&lt;concept&gt;(C-1011 "personal computer"))
      <br/>
      --            (&lt;concept&gt;(C-1022 "company"))))
    </p>
    <p num="134">
      Here, in Formula (32), the first member is a non-terminal symbol; the second member is a structured concept number given on occasion; the third member is a corresponding series of words in the inputted sentence; and further the fourth member and the followings represent parsing results.
      <br/>
      In the parsing results, in the case where there exist a plurality of interpretations, they are juxaposed.
      <br/>
      In Formula (32), since there is only one candidate, the fifth member and the followings don't exist.
      <br/>
      Further the fourth member constitutes a series consisting in general of concepts and relations.
      <br/>
      The example of Formula (32) includes 2 series of concepts.
      <br/>
      Examples including relations will be explained by using Formula (35) stated later.
    </p>
    <p num="135">
      These concepts and relations are represented by series of concepts and series of relations, respectively, matching concretely with their descriptor (non-terminal symbol), as indicated by Formula (32).
      <br/>
      For the example indicated by Formula (32) each of the concepts has only one matching result.
      <br/>
      An example having a plurality of matching results is indicated by Formula (37).
    </p>
    <p num="136">
      Now the syntactic analysis unit receives the parsing result, Formula (32), and sends the last 2 lines of the formula to the complex noun phrase interpretation unit 506.
      <br/>
      The complex nominal compound interpretation unit 506 deduces the relation in the meaning between two concepts C- 1011 and C- 1022 from the knowledge base represented by the conceptual network by the method described in the explanation of the principle.
      <br/>
      As the result, (in a presumed knowledge base) following two interpretations Formulas (33) and (34) can be obtained.
      <br/>
      In this example a relation, which is not described explicitly, is extracted by the deducting processing.
    </p>
    <p num="137">
      --
      <br/>
      --        (D-1009                                  (33)
      <br/>
      --           "personal computer companies"
      <br/>
      --           (C-1022 ((RS-0055 RL) C-1001)))
      <br/>
      --        (D-1009                                  (34)
      <br/>
      --           "personal computer companies"
      <br/>
      --           (C-1022 ((RS-0056 RL) C-1001)))
    </p>
    <p num="138">
      When they are expressed in the natural language, they can be written as follows, respectively;
      <br/>
      "company which produces personal computer"
      <br/>
      "company which has developed personal computer"
    </p>
    <p num="139">
      Now another example indicated in FIG. 10 will be explained.
      <br/>
      In this case, the parsing result can be represented by Formula (35).
      <br/>
      That is, the noun phrase is recognized as two concepts unified through a joiner, as follows;
    </p>
    <p num="140">
      --
      <br/>
      --        (&lt;noun-phrase&gt;                         (35)
      <br/>
      --           D-1010
      <br/>
      --           "person who is author of a book"
      <br/>
      --           ((&lt;concept&gt; (C-1101 "person"))
      <br/>
      --           (&lt;joiner&gt; (RS-0001 RL "is-author-of"))
      <br/>
      --           (&lt;concept&gt; (C-1122 "book"))))
    </p>
    <p num="141">
      At this time, the complex noun phrase interpretation unit receives the last 3 lines of Formula (35), deducts that the concepts C-1101 and C-1122 can be related in the meaning with each other by a relation (RS-0001 RL), and finally obtains the interpretation represented by Formula (36).
      <br/>
      In this case, although Formula (35) indicates only one candidate, provisionally if the deduction is failed, it means that it is understood that such a semantic interpretation is not possible in view of the knowledge stored in the knowledge base.
    </p>
    <p num="142">
      --
      <br/>
      --        (D-1010                                  (36)
      <br/>
      --           "person who is author of a book"
      <br/>
      --           (C-1101 ((RS-O001 RL) C-1122)))
    </p>
    <p num="143">
      language as follows:
      <br/>
      "person who is author of book"
    </p>
    <p num="144">
      Finally still another example indicated in FIG. 11 will be explained.
      <br/>
      In the parsing result indicated in Formula (37) the second joiner is obtained by interpreting the preposition "at", referring to a preposition table 601 indicated in FIG. 12, and a plurality of interpretations obtained as the result are cited below;
    </p>
    <p num="145">
      --
      <br/>
      --        (&lt;noun-phrase&gt;                     (37)
      <br/>
      --           D-1011
      <br/>
      --           "articles on people at companies"
      <br/>
      --           ((&lt;concept&gt; (C-0401 "article"))
      <br/>
      --            (&lt;joiner&gt; (RS-0033 LR "subject-is"))
      <br/>
      --            (&lt;concept&gt; (C-0601 "person"))
      <br/>
      --            (&lt;joiner&gt; (RS-0123 LR "is-developed-at")
      <br/>
      --                     (RS-1054 LR "is-located-in")
      <br/>
      --                     . . .
      <br/>
      --                     (RS-0209 RL "works-at") . . .)
      <br/>
      --            (&lt;concept&gt;(C-1022 "company")))
    </p>
    <p num="146">
      Receiving the fourth member of Formula (37), the complex noun phrase interpretation unit 506 evaluates the appropriateness of the relation in the meaning by using the manner of thinking described in the explanation of the principle for every group consisting of 3 elements "concept-joiner-concept".
      <br/>
      That is, for the second group consisting of 3 elements, neither the relation "is-developed-at" nor the relation "is-located-in" can exist between the concepts C-0601 (person) and C-1022 (company) and it can be deducted from a concrete fact stored in the knowledge base that only the relation "works-at" can be appropriate in the meaning.
      <br/>
      In this case an interpretation represented by Formula (38) is obtained finally;
    </p>
    <p num="147">
      --
      <br/>
      --        (D-1011                                  (38)
      <br/>
      --           "articles on people at companies"
      <br/>
      --           (C-0401
      <br/>
      --               ((RS-0033 LR)
      <br/>
      --               (C-0601 ((RS-0209 RL) C-1022)))))
    </p>
    <p num="148">
      The interpretation represented by Formula (38) can be expressed in the natural language as follows;
      <br/>
      "article
      <br/>
      - whose subject is person
    </p>
    <p num="149">-  who works at company"</p>
    <p num="150">
      Next the multi-media file management program, which is the succeeding element in the knowledge base system by the method according to this invention, will be explained below.
      <br/>
      The multi-media file stores information itself in the form of a media as it is, while the knowledge base stores objects or concepts by using symbols.
      <br/>
      That is, it effects most appropriate coding for each of data in order to compress the information, but it memorizes and manages a plurality of different kinds of media information (multi-media information) such as photos, documents, drawings, texts and sounds according to a predetermined descriptive method.
      <br/>
      For the method for describing multi-media information, since the multi-media contents architecture (e.g. ODA: office document architecture), which is to be adopted as the standard, is known, it is not explained here.
    </p>
    <p num="151">
      This multi-media information is managed for every predetermined unit constituting an object (information unit).
      <br/>
      For example, a "document", an "article", a "photo", a "graph", a segment of acoustic message, etc., which we recognize usually as one thing, can be an object.
      <br/>
      This object may be either single media or multi-media.
      <br/>
      These objects are managed by management information consisting of the file member name attached to every information unit, the memory position and the record length in a physical file, the record format (e.g. coding method), etc. by means of the multi-media file management program.
      <br/>
      It is possible also that a plurality of objects are structured so as to form another object.
      <br/>
      On the contrary it is also possible to manage a certain object as a structured body of a plurality of partial objects.
    </p>
    <p num="152">
      On the other hand, each of information units stored in the multi-media file can be related to an arbitrary concept node in the conceptural network, as described previously.
      <br/>
      In this way it is possible to search the information itself stored in the multi-media file by using intellectual deduction from a conceptual network type knowledge base.
    </p>
    <p num="153">
      Now the unified knowledge base will be explained.
      <br/>
      As explained above, the knowledge base system by the method according to this invention is characterized in that it includes a conceptual network type knowledge base, a grammar file memorizing syntax rules, a linguistic dictionary (lexicon 512) formed automatically by editing processing from the knowledge base stated above, a conceptual dictionary (structured concept file 511), which can be defined by each of users, and a multi-media file.
      <br/>
      Furthermore this system includes memory means for relating concepts in the knowledge base with objects within the multi-media file.
      <br/>
      The knowledge base, where knowledge and information by using symbols or by logic expression, linguistic knowledge and media information can be memorized organically in this way, is called a unified knowledge base.
      <br/>
      These information units are memorized in a unified disk unit according to their respective characteristics.
    </p>
    <p num="154">
      Although, in the above, this invention has been explained particularly for the case of English, in principle it can be extended as well to other languages such as Japanese, etc.
      <br/>
      Specifically, as described in the explanation of the knowledge representation method, according to this invention, it is possible to extend easily the system for one language to another system for plural languages.
      <br/>
      Concretely speaking, only the concept name table 221 (FIG. 3) and the general concept defining table 241 (FIG. 5) among knowledge representation means depend on the language and at the same time these table have fields (columns) LANG 224 and 246 difining the language.
    </p>
    <p num="155">
      Further, it is clear that this invention is not restricted to the content of the syntax rules (List 1) indicated in the embodiment, but a natural language suitable for a wider or another system can be adopted by modifying or extending the syntax rules.
      <br/>
      Also in this meaning the method according to this invention has a wide field of application.
      <br/>
      Further, although no detailed explanation has been made, also in List 1, (29a) to (29e) show that it is possible to effect registration of a new concept (29b), registration of a generic relationship (29a) or registration of a new fact (29d) by using a natural language.
    </p>
    <p num="156">Furthermore, although in the explanation of the embodiments a system unified with a multi-media file has been described, it is a matter of course that the method is efficient, even if only knowledge base system is used, independently of the multi-media file.</p>
    <p num="157">
      As explained above, according to this invention, the user can take out desired information on the basis of a descriptive query demand called to mind from ambiguous memory by using a natural language without keeping any formal language, which is difficult to study, in mind.
      <br/>
      Usually our memory becomes more and more uncertain, as the time lapses.
      <br/>
      The memory left at this time is fragmental and it becomes more and more abstract.
      <br/>
      Or it is rare that a name itself is kept decidedly in mind and it is known that it becomes more and more descriptive such as "this kind", "that kind", etc.
      <br/>
      The method according to this invention offers a method for querying desired information on the basis of a fragmental or abstract description.
      <br/>
      In this meaning this invention has an effect greater than that obtained by querying desired information simply by a natural language.
    </p>
    <p num="158">
      Further according to this invention, since the knowledge necessary for understanding the natural language is stored in the knowledge base in one body together with the knowledge proper to the system, it is easier to construct such a system as described above with respect to the prior art method, by which a natural language interface is to be given.
      <br/>
      Concretely speaking, it is not necessary for the user to be specifically conscious of the matching property of the natural language interface with the knowledge base, but it is sufficient to pay attention to the registration of information, for which it is desired to be originally memorized in the knowledge base and managed.
    </p>
    <p num="159">
      Furthermore, according to this invention, it is possible to register new knowledge by using a natural language.
      <br/>
      In general, in a system having complicated functions the coexistence of a visual interface (directly operated) and a linguistic human interface is important.
      <br/>
      According to this invention the visual interface is unified with the linguistic interface function and almost all the functions are offered by using a natural language and operating directly the system.
      <br/>
      In this meaning the user can select one of them which he desires, depending on circumstances, and therefore the method according to this invention is excellent in operatively and usability.
    </p>
    <p num="160">Furthermore this invention offers means for registering another name such as a synonym, variant spelling word, etc. for a certain concept or storing and registering another name for a relational name ("reading") and makes it possible to carry out appropriate searching processing also for an expression of multiple query demand.</p>
    <p num="161">In addition, this invention discloses a method for unifying multi-media information to the knowledge base, according to which it is possible to exploit a field of application wider than the knowledge base by prior art symbolic expression.</p>
    <p num="162">Furthermore, if a system using another language is constructed according to the method described as an extended example, it is also possible to realize to search information in English and output it in Japanese.</p>
    <p num="163">
      Next an embodiment of the query device concerning the visual interface will be explained.
      <br/>
      At first the principle and the operation, which are the base thereof, will be explained.
    </p>
    <p num="164">
      FIG. 15 shows a detailed scheme of the concepts stored in the knowledge base, in which ellipses represent concepts and arrows indicate relations.
      <br/>
      In the knowledge base all the concepts are linked through subsumption relations, for which the concept of highest rank is a concept "UNIVERSAL".
      <br/>
      The subsumption relations represent a relation " . . . is one of . . . ". This relation has a property to belong to a higher or lower rank.
      <br/>
      Using a certain concept as a reference, the concepts belonging to the ranks higher than it are called "superconcepts (super class concepts)" and those belonging to the ranks lower than it are called "subconcepts".
      <br/>
      For example the superconcepts of "HARDWARE" 712 are "UNIVERSAL" 701, "MATTER" 710 and "ARTIFACT" 711.
      <br/>
      Further the concepts relate general knowledges with each other through generic relationships.
      <br/>
      When the relation between two concepts is expressed by a language, there are two different relation names, depending on which concept is regarded as the principal part between the two concepts.
      <br/>
      For example, "ORGANIZATION" 707 and "HARDWARE" 712 are linked through a generic relationship "DEVELOPMENT" 725.
      <br/>
      This relation has two names, i.e. "HARDWARE", which "ORGANIZATION" has developed, and "ORGANIZATION", which has developed "HARDWARE".
      <br/>
      When a relation "ORGANIZATION has developed" is added to "HARDWARE", the relation is called "addition of restriction" and when a relation "ORGANIZATION, which has developed" is added thereto, it is called "addition of a root".
      <br/>
      An instance relation is a relation, which relates concrete knowledges with each other.
      <br/>
      In order to be able to form this relation, superconcepts between the two concepts should be linked through a generic relation having the same relation name.
      <br/>
      For example, "HITACHI Ltd." 709 and "Creative WS 2050" 715 are linked through a concrete relation "DEVELOPMENT" 730.
      <br/>
      The user can browse the concepts stored in the knowledge base.
      <br/>
      Hereinbelow a concept, to which the user pays his attention at that time, is called "current concept".
      <br/>
      Further a sentence used for restricting a concept by a generic relationship is called "query expression".
    </p>
    <p num="165">
      FIG. 16 illustrates an image on the screen for the dialogue with the user at a concept query.
      <br/>
      There exists a superconcept window 801 for the current concept, a query editing window 802 including the current concept, a concept tree window 803 for the concept corresponding to the query expression, a system message window 804, and an input window 805.
      <br/>
      The window 804 is an active window disposed on the screen, through which the system converses with the user.
      <br/>
      The current concept is displayed always in each of the windows and a pointer such as white and black inversion in the bitmap, frame, underline, etc. is attached thereto so that it can be easily recognized.
      <br/>
      In FIG. 16, the current concept is "COMPUTER".
      <br/>
      The system displays the concepts "UNIVERSAL" 808, "MATTER" 809, "ARTIFACT" 810, "HARDWARE" 811 and "COMPUTER" 812 connecting the concept "UNIVERSAL" 808 belonging to the highest rank to the current concept "COMPUTER" 812 through subsumption relations in this order.
      <br/>
      Further the system displays the query expression at that time in the query editing window and a pointer (rectangular frame) 814 is attached to the series of letters "COMPUTER" 813, which is the current concept.
      <br/>
      Furthermore the system displays the concept belonging to the highest rank and concepts belonging to lower ranks in the subsumption relation, which the current concept can change, in the concept tree window 803 a pointer 816 is attached to the series of letters "COMPUTER" 815.
      <br/>
      Hereinbelow the concept belonging to the highest rank displayed in the concept tree window 803 is called anchor.
      <br/>
      As shown in this case, when no relation is added to the current concept, the anchor is "UNIVERSAL" 817.
      <br/>
      A message from the system is displayed in the system message window 804.
      <br/>
      A series of letters inputted through a keyboard is displayed in the input window 805.
      <br/>
      Since the system stores the coordinates of the series of letters representing the concepts displayed in the query editing window 802 and the concept tree window 803 in a memory, it is possible to click a series of letters representing a concept by means of a mouse and to extract the series of letters representing the concept.
      <br/>
      Information concerning the query expression displayed in the query editing window 802 is stored in the S type expression used in the LISP language.
      <br/>
      For example, when the query expression is "COMPUTER is . . . ", the S type expression stored in the memory is (COMPUTER (UNIVERSAL UNIVERSAL)(X1 Y1)).
      <br/>
      Here (UNIVERSAL UNIVERSAL) represents a list including the anchor by the relation added as the root and the anchor by the relation added as the condition.
      <br/>
      The anchor at the subsumption relation display is a subconcept of the two anchors. (X1 Y1) represents the X and Y coordinates of the displayed series of letters "COMPUTER".
      <br/>
      The subsumption relation is stored in the memory in the form of a list of the displayed concept and concepts one layer below.
      <br/>
      When a concept having a plurality of concepts one layer above, the relevant concept is connected with all the concepts one layer above by using lines.
    </p>
    <p num="166">
      The modification of the current concept can be effected by selecting a concept displayed in the query editing window 802 and the concept tree window 803 by means of the mouse or by inputting data through the keyboard.
      <br/>
      When the user effects an input through the keyboard, the system queries a concept among the subconcepts of the anchor displayed in the concept tree window 803.
      <br/>
      When the concept extracted by the input through the keyboard is not displayed in the concept tree window 803, the system examines the superconcepts thereof to store the subsumption relations in the memory and at the same time displays them combined with the subsumption relation tree.
      <br/>
      Every time the current concept is changed, the system displays newly the superconcepts of the new current concept in the superconcept window 801, replaces the current concept 813 in the query expression by the new current concept in the query editing window 802 and moves the pointer 816 for the current concept to the new current concept in the concept tree window 803.
    </p>
    <p num="167">
      Addition of query conditions moves the current concept to another concept, to which the user desires to add the conditions.
      <br/>
      Then, when the user clicks the series of letters 813 of the current concept by means of the mouse in the query editing window 802, since the system displays a table of the conditions, which can be added, by the pop-up menu.
      <br/>
      The addition of the query conditions can be affected by the user by selecting one among them. 1001 in FIG. 18 is a frame for the conditions, which can be added and which is delayed, when the series of letters "COMPUTER" 813, which is the current concept, is clicked by means of the mouse.
      <br/>
      FIG. 18 is a display of a table of the concepts connected through generic relationships with "COMPUTER" 1002 or superconcepts in the subsumption relations with "COMPUTER" 1002, i.e. "COMPUTER" 812, "HARDWARE" 811, "ARTIFACT" 810, "MATTER" 809 and "UNIVERSAL" 808, and the names of the relations, in which "COMPUTER" 1002 is the principal part. "COMPUTER" 1002 in the left upper part of FIG. 18 is a concept to effect the addition of the conditions.
      <br/>
      On the left side are indicated series of letters, "COMPUTER" 1002 or superconcepts in the subsumption relations with "COMPUTER" 1002.
      <br/>
      On the left side are indicated the names of the generic relationships of the concepts on the right side, in which "COMPUTER" is the principal part.
      <br/>
      The numbers are slot numbers of this frame.
      <br/>
      The user selects a relation, which he desires to add, among them by means of the mouse.
      <br/>
      At this time, if the user selects a relation item "which is developed at ORGANIZATION" 1003, the system sets the query expression to be "COMPUTER which is developed at ORGANIZATION . . . " and the current object is moved to the added concept "ORGANIZATION" of the selected item.
    </p>
    <p num="168">
      It is possible to change the object of the query in the query expression.
      <br/>
      The object of the query in the query expression is one of the most important concept in the query expression, which is the principal part thereof.
      <br/>
      For example, "COMPUTER" in the query expression "COMPUTER developed at COMPANY" is the concept, which is the object of the query.
      <br/>
      At this time the modification of the object of the query is to change the object of the query to a certain concept, using the relevant concept connected with the concept, which is the object of the query, through a generic relationship, in the query expression, which has been formed.
      <br/>
      For example the object of the query is changed to "DOCUMENT" connected with the concept "COMPUTER", which is the object of the query in the query expression "COMPUTER developed at COMPANY is . . . ", which has been formed, through a relation "SUBJECT".
      <br/>
      At this time, the system sets the query expression at "DOCUMENT, whose subject is COMPUTER which is developed at COMPANY".
      <br/>
      Hereinbelow the name of the relation at this time is called "root".
      <br/>
      When the user moves the current concept to the concept, which is the object of the query at that time, and click the series of letters 813 of the current concept in the query editing window 802 by means of the mouse, since the system displays a table of roots, which can be added by the pop-up menu, it is possible for the user to change the object of the query by selecting it among them. 1101 in FIG. 19 is a frame for the root, which can be added, displayed, when the user clicks the series of letters "COMPUTER", which is the concept of the object of the query.
      <br/>
      FIG. 19 is a display of a table of the names of relations, whose principal parts are the concepts connected through generic relations with "COMPUTER" 812, "HARDWARE" 811, "ARTIFACT" 810, "MATTER" 809 and "UNIVERSAL" 808 in the superconcept window 801 in FIG. 16. "COMPUTER" 1102 in the right upper part of FIG. 19 is a concept to effect the addition of the roots.
      <br/>
      On the left side are indicated series of letters of the concepts connected through generic relationships with concepts in the higher or same ranks in the subsumption relations with "COMPUTER" 1102.
      <br/>
      On the right side are indicated the names of the generic relationships with "COMPUTER", whose principal parts are the concepts indicated on the left side.
      <br/>
      The numbers are slot numbers of this frame.
      <br/>
      The user can select a relation, which he desires to add, among them by means of the mouse.
      <br/>
      For example, when the user selects the relation "ORGANIZATION which has developed COMPUTER . . . " 1103, the system sets the query expression "ORGANIZATION which has developed COMPUTER is . . . " and moves the current concept to the added concept "ORGANIZATION" of the selected item.
      <br/>
      In this way the object of the query is set to "ORGANIZATION".
    </p>
    <p num="169">
      It is supposed in this way that the query expression "COMPUTER which is developed at COMPANY which is located in JAPAN . . . " has been formed.
      <br/>
      When the current concept is "COMPUTER", the image on the screen in this state is indicated in FIG. 17. The query editing window 902 displays "COMPUTER developed by COMPANY located in JAPAN is . . . ". At this time S type expressions stored in the memory are as follows;
    </p>
    <p num="170">
      --
      <br/>
      --      (COMPUTER (UNIVERSAL HARDWARE (X1 Y1)
      <br/>
      --       ((is developed
      <br/>
      --       (COMPANY (ORGANIZATION ORGANIZATION) (X2 Y2)
      <br/>
      --       (is located in
      <br/>
      --       (JAPAN (LOCATION UNIVERSAL (X3 Y3))))))
    </p>
    <p num="171">
      (X1 Y1), (X2 Y2) and (X3 Y3) are X and Y coordinates of series of letters displayed in the query editing window 902, i.e. "COMPUTER" 908, "COMPANY" 910 and "JAPAN" 911. (UNIVERSAL HARDWARE) is a list of the anchor "UNIVERSAL" when there is no relation added as a root and the anchor "HARDWARE" by the relation "DEVELOPMENT" added as a condition.
      <br/>
      In the same way (ORGANIZATION ORGANIZATION) is a list of the anchor "ORGANIZATION" by the relation "DEVELOPMENT" added as the root and the anchor "ORGANIZATION" by the relation "LOCATION" added as a condition. (LOCATION UNIVERSAL) is a list of the anchor "LOCATION" by the relation "LOCATION" added as the root and the anchor "UNIVERSAL", when there is no relation added as the condition.
      <br/>
      The user selects the series of letters representing the concepts included in the query expression displayed in the query editing window 902, i.e. "JAPAN" 911, "COMPANY" 910 and "COMPUTER" 908 by means of the mouse and in this way it is possible to attach a relation to each of these concepts, while displacing the current concept to them one after another.
      <br/>
      The anchor in the concept tree window 903 looks for concepts connected with each other through relations (conditions or roots) among current concepts or superconcepts of the current concepts, the anchor being set at the concept belonging to the lowest rank among them.
      <br/>
      In the query expression the relation "DEVELOPMENT" is jointed with the current concept as a condition.
      <br/>
      As indicated in FIG. 15, since the superconcept "HARDWARE" 712 of "COMPUTER" is connected with the superconcept "ORGANIZATION" of "COMPANY" through the relation "DEVELOPMENT" 725, the anchor is "HARDWARE" 712.
      <br/>
      The concepts following the concept "HARDWARE" 712 are displayed in the subsumption relation tree.
    </p>
    <p num="172">
      When the query expression is "ARTICLE concerning COMPUTER developed by COMPANY and working on OPERATING SYSTEM" and the current concept is "COMPUTER", the system displays a subsumption relation tree of the concepts matched with the query expression among the concepts following "COMPUTER".
      <br/>
      In the query expression, the relations "DEVELOPMENT", "OS" and "SUBJECT" are connected with the current concept "COMPUTER".
      <br/>
      As indicated in FIG. 15, "COMPUTER" 713 is connected with "OPERATING SYSTEM" 717 through the relation "OS" 726; "HARDWARE" 712 is connected with "ORGANIZATION" 707 through the relation "DEVELOPMENT" 725; and "UNIVERSAL" 701 is connected with "DOCUMENT" 720 through the relation "SUBJECT" 727.
      <br/>
      Therefore the system sets the anchor at "COMPUTER" 713, which is the concept belonging to the lowest rank among "COMPUTER" 713, "HARDWARE" 712 and "UNIVERSAL" 701.
    </p>
    <p num="173">Further the user can effect a search on "COMPANY located in JAPAN", "COMPUTER developed by COMPANY located in JAPAN", etc. by clicking a "command menu for retrieval output" 906 after moving the current concept to a series of letters of a concept "JAPAN" 911, "COMPANY" 910 or "COMPUTER" in the query editing window 902 in FIG. 17.</p>
    <p num="174">
      FIG. 20 is a scheme illustrating the construction of a filing system using an information querying device, which is an embodiment of the system according to this invention.
      <br/>
      The outline of the construction and the operation of the whole device will be explained below.
    </p>
    <p num="175">
      The device consists of a central processing unit (CPU) 3600 and a dataprocessor unit comprising a main memory 3610, magnetic disk storage units 3630, a terminal 3620, a CRT 3622, a keyboard 3623 and a mouse 3625.
      <br/>
      The query of concepts is effected on the terminal 3620.
      <br/>
      The object of the query is registered concepts and an assembly of facts described as relations between different concepts, which are stored in a file 3630.
      <br/>
      Further knowledge concerning natural languages expressing the concepts and the relations is also contained in the file 3630.
      <br/>
      The control of a window in the terminal 3620 is effected by the central processing unit 3600.
      <br/>
      The concepts and the menu displayed on the CRT 3622 can be selected by using the mouse 3625 on the CRT 3622.
      <br/>
      By using this function it is possible to browse freely data without relying on the input through the keyboard.
      <br/>
      The control of the screen on the CRT 3622 is effected by the CPU 3600.
    </p>
    <p num="176">
      Principal operations of the device will be explained below.
      <br/>
      When the query of the knowledge base is started, a window necessary for the display of the knowledge base is displayed on the CRT 3622.
      <br/>
      At this time the mouse 3625 is clicked and location information, which it is desired to take out, is stored in the main memory 3610.
      <br/>
      When the mouse 3625 is clicked, the location thereof is examined and the clicked series of letters is taken out, referring to the location information stored in the main memory 3610.
      <br/>
      Further, when the mouse 3625 is clicked or data are inputted through the keyboard 3623, the central processing unit 3600 looks for a window, in which the display is to be rewritten, and necessary information is looked for from the magnetic disk 3630 and displayed.
    </p>
    <p num="177">Hereinbelow this invention will be explained concretely, taking a query expression "DOCUMENT, whose SUBJECT is COMPUTER developed by COMPANY located in JAPAN" as an example and referring to FIGS. 16, 17 and 21 to 32.</p>
    <p num="178">
      FIG. 21 shows an initial image on the screen at the starting of a query.
      <br/>
      This initial image is obtained, when the reset menu 1207 is clicked.
      <br/>
      The current concept is "UNIVERSAL", which is the concept belonging to the highest rank.
      <br/>
      The series of letters "UNIVERSAL" 1208 of the concept "UNIVERSAL" is displayed in the superconcept window 1201.
      <br/>
      In the query editing window 1202 the series of letters "UNIVERSAL" 1209 is displayed and a pointer (rectangular frame) 1210 is located there.
      <br/>
      In the concept tree window 1203 the anchor is "UNIVERSAL" and the concepts m layers below are displayed up to a branch n in the form of a tree.
      <br/>
      The pointer 1212 is located at the series of letters "UNIVERSAL" 1211.
      <br/>
      The user can change freely the values of m and n at any time.
      <br/>
      In the following example, it is supposed that m=1 and n=2.
      <br/>
      In the concept tree window 1203 the current concept is moved to concepts, for which no subconcepts are displayed, i.e. "MATTER" 1213, "LOCATION" 1214.
      <br/>
      When there exist subconcepts of the relevant current concept, concepts one layer below are added thereto and concepts up to the branch 2 are displayed in the form of a tree.
    </p>
    <p num="179">
      FIG. 16 shows an image, in the case where "computer" is inputted through the keyboard in FIG. 21. and the current concept is changed.
      <br/>
      It is possible to move the current concept by selecting a concept by means of the mouse or by inputting data through the keyboard.
      <br/>
      When "computer" is inputted through the keyboard, a concept matching is effected and "COMPUTER" is obtained as the retrieval output.
      <br/>
      When a plurality of concepts are extracted since the extracted concepts are displayed in a menu together with the concepts one layer above of each of the concepts, it is possible to decide the current concept unambiguously by selecting one of them by means of the mouse.
      <br/>
      Since the concept "COMPUTER" extracted here is not queried previously and it is not displayed in the concept tree window 1203 indicated in FIG. 21, at first the superconcepts of the concept "COMPUTER" are examined so as to link the concepts displayed in the concept tree window 1203 with "computer" through subsumption relations.
      <br/>
      The concept "COMPUTER" is selected as the current concept.
      <br/>
      Since the current concept has moved to "COMPUTER", the superconcept window 801 is rewritten to the superconcept of "computer".
      <br/>
      In the query editing window 802 the part 813 of the current concept in the query expression is replaced by "COMPUTER" and displayed again.
      <br/>
      The pointer 814 is located at the series of letters "COMPUTER" 813.
      <br/>
      In the concept tree window 803, since no restrictions are imposed to the current concept, the anchor is "UNIVERSAL" 817.
      <br/>
      The concepts up to "COMPUTER", a concept one layer below "WORKSTATION" 819 of "COMPUTER" and "AI MACHINE" 818 are displayed in the form of a tree and the pointer 816 is located at the series of letters "COMPUTER" 815.
      <br/>
      The flow of the processing from FIG. 21 to FIG. 16 is indicated in FIGS. 33 and 34. FIG. 33 is a flow chart of the processing to judge to which processing the procedure should proceed.
      <br/>
      In Step 2410, it is judged whether data are inputted through the keyboard or not.
      <br/>
      In Step 2420, it is judged whether the series of letters of the concept displayed in the query editing window is selected by the mouse or not.
      <br/>
      In Step 2430, it is judged whether the series of letters of the concept displayed in the concept tree window is selected by the mouse or not.
      <br/>
      In Step 2440, it is judged whether a command menu for retrieval output is selected by the mouse or not.
      <br/>
      When the command menu for retrieval output is selected, the retrieval output is expressed in the form of a sentence in Step 2441.
      <br/>
      In Step 2450, it is judged whether the reset menu is selected by the mouse.
      <br/>
      When the reset menu is selected, the current concept is the concept belonging to the highest rank "UNIVERSAL" in the subsumption relation in Step 2451.
      <br/>
      FIG. 34 is a flowchart of the processing executed when a series of letters is inputted through the keyboard.
      <br/>
      Step 2500 executes matching of the concept corresponding to the inputted series of letters.
      <br/>
      Here partial matching by a partial string is also executed.
      <br/>
      In Step 2510, it is judged whether there are a plurality of matched concepts or not.
      <br/>
      If there are a plurality of matched concepts, in Step 2520, the matched concepts and the superconcepts of each of the concepts are displayed in the form of a table by the pop-up menu.
      <br/>
      In Step 2530, one relevant concept is selected by means of the mouse.
      <br/>
      In Step 2540, it is judged whether the matched concepts are displayed in the concept tree window or not.
      <br/>
      In the case where they are not displayed, the superconcepts of the relevant concepts are examined.
      <br/>
      In Step 2560, the matched concepts are current concepts.
      <br/>
      In Step 2570, the superconcepts of the concept, which is a new concept, are displayed again in the superconcept window.
      <br/>
      In Step 2580, the query expression is displayed again in the query editing window and the pointer is located at the current concept.
      <br/>
      The concept tree made by subsumption relations is displayed again in the concept tree window and the pointer is located at the current concept.
      <br/>
      Until the image indicated in FIG. 21 is changed to that indicated in FIG. 16, in order to move the current concept to the concept represented by the series of letters inputted through the keyboard, the process proceeds to Step 2410 in FIG. 33, then to Step 2500 in FIG. 34, as indicated by a joiner 2470.
      <br/>
      Then the processings in Steps 2510, 2540, 2550, 2560, 2570, 2580 and 2590 are executed one after another and return to Step 2410 in FIG. 33 through a joiner 2460.
    </p>
    <p num="180">
      It is possible to impose restrictions to the current concept by clicking the series of letters of the current concept in the query editing window by means of the mouse.
      <br/>
      FIG. 22 is an image in the course of this process.
      <br/>
      When the series of letters of the current concept "COMPUTER" 1308 in the query editing window 1302 is clicked by means of the mouse, since the concept "COMPUTER" is the current concept and the concept, which is the object of the query in the query expression, the pop-up menu 1309 appears, for selecting whether a condition or a root should be added to the current concept.
      <br/>
      Here, when "addition of restrictions" 1310 is selected, the system displays the generic relationships, which can be added to "COMPUTER", including the conception, whose superconcepts are acceptable, in the frame 1311.
      <br/>
      Once the generic relationships, which can be added to the current concept, have been found and displayed, since those data or the displayed window is stored in the interior, it is not necessary to query again the relations, which can be added to the same concept.
      <br/>
      The user selects one of them by clicking the relevant relational item "COMPUTER developed by ORGANIZATION".
      <br/>
      FIG. 23 shows an image, after the relation, for which it is desired to be added, has been selected.
      <br/>
      The relevant relation is added to the query expression, which is changed into "COMPUTER developed by ORGANIZATION" 1408 and the current concept is moved to the superconcept "ORGANIZATION" in the relation item "COMPUTER developed by ORGANIZATION".
      <br/>
      The query expression is displayed again in the query editing window 1402 and the pointer 1410 is located at the series of letters "ORGANIZATION" 1409 of the current concept.
      <br/>
      In the concept tree window 1403, the anchor is the superconcept "ORGANIZATION" connected with "COMPUTER" through the relation "DEVELOPMENT". "ORGANIZATION" 1411 and the series of letters "COMPANY" 1412, "EDUCATIONAL ORGANIZATION" 1413 of the concepts, which are subconcepts one layer below of "ORGANIZATION" up to the branch 2 are displayed in the form of a tree and the pointer is located at the series of letters "ORGANIZATION" 1411.
      <br/>
      The flow of the processing, until the image is changed from FIG. 16 to FIG. 23, is indicated in FIGS. 33 and 35. FIG. 35 is a flow chart of the processing for imposing restrictions or adding roots to the current concept.
      <br/>
      In Step 2600, it is judged whether the concept represented by the series of letters specified by the mouse on the query editing window is in accordance with the current concept or not.
      <br/>
      If the selected is not the current concept, the specified concept is made to be the current concept in step 2601.
      <br/>
      In Step 2610, it is judged whether the current object is the concept, which is the object of the query in the query expression.
      <br/>
      When it is the object of the query, in Step 2620, it is judged whether restrictions should be imposed thereto or not and in Step 2621, it is judged whether a root is added thereto or not.
      <br/>
      In the case where restrictions should be imposed thereto, in Step 2630, a table of generic relationships, which can be imposed to the current concept as restrictions, is displayed.
      <br/>
      In Step 2640, relevant relations are selected in the displayed table.
      <br/>
      In Step 2650, the restrictions are imposed to the query expression and in Step 2660, the superconcepts of the selected relation item are made to be the current concept.
      <br/>
      In the case where the root is added thereto, in Step 2622, a table of generic relationships, which can be added to the current concept as a root, is displayed.
      <br/>
      In Step 2623, a relevant relation is selected in the displayed table.
      <br/>
      In Step 2624, the root is added to the query expression and in Step 2625, the subconcepts of the selected relation item are made to be the current concept.
      <br/>
      In Step 2670, the superconcepts of the current concept having relations (restrictions and root) added to the current concept are examined, the anchor being the concept belonging to the lowest rank therein.
      <br/>
      Until the image indicated in FIG. 16 is changed to that indicated in FIG. 23, in order to impose restrictions to the current concept, the process proceeds to Steps 2410 and 2420 in FIG. 33, and then to Step 2600 in FIG. 35 as indicated by a joiner 2480.
      <br/>
      Then the processings in Steps 2610, 2620, 2630, 2640, 2650, 2660 and 2670 are executed one after another.
      <br/>
      Further, as indicated by a joiner 2561, the processings in Steps 2570, 2580 and 2590 are executed and the process returns to Step 2410 in FIG. 33 through a joiner 2460.
    </p>
    <p num="181">
      It is possible to change successively the current concept by selecting series of letters of the concepts in the concept tree window.
      <br/>
      At this time, since it is desired to examine "COMPUTER developed by COMPANY", in FIG. 23, the series of letters "COMPANY" 1412 displayed in the concept tree window 1403 is clicked by the left button of the mouse to move the current concept to "COMPANY".
      <br/>
      FIG. 24 shows the image on the screen in this state.
      <br/>
      Since the current concept has been moved to the concept "COMPANY", the superconcept window 1501 is rewritten to be changed to the superconcepts of "COMPANY" and "UNIVERSAL" 1511, "MATTER" 1512, "ARTIFACT" 1513, "ORGANIZATION" 1514 and "COMPANY" 1515 are displayed, as indicated in the figure.
      <br/>
      In the query editing window 1502, the query expression "COMPUTER developed by COMPANY" 1508 is displayed again and the pointer 1510 is located at the series of letters "COMPANY" 1509 of the current concept.
      <br/>
      In the concept tree window 1503, the pointer 1509 for the current concept is moved to "COMPANY" 1508.
      <br/>
      Since the relevant concept "COMPANY" clicked by the left button of the mouse is the concept belonging the lowest rank in the concept tree window 1403 indicated in FIG. 23, further the subconcepts one layer below up to the branch 2 are searched and added to be displayed in the form of a tree.
      <br/>
      At this time, either the whole concept tree made by subsumption relations may be displayed by moving the pointer for the current concept to "COMPANY" 1508, a subconcept of "COMPANY" 1508, i.e. "ELECTRIC MANUFACTURE" 1516 or "FINANCIAL ORGANIZATION" 1517, may be added and displayed.
      <br/>
      In the case where, when it is added and displayed, it is superposed on the display of another concept, only the window for the concept, which is added and displayed, i.e. the window, where "ELECTRIC MANUFACTURE" 1516 or "FINANCIAL ORGANIZATION" 1517 is displayed, may be added and displayed after having been once erased.
      <br/>
      It is also possible to move further the current concept to a subconcept of "COMPANY" or to a superconcept thereof or another concept belonging to the same rank in the concept tree window 1503.
      <br/>
      While moving the current concept, the number of concepts displayed in the concept tree window 1503 increases and thus it is possible for the user to see the concepts, which he has followed.
      <br/>
      Further, since a concept, which has been once displayed, is memorized, it is not necessary to query it again.
      <br/>
      The processings, until the image indicated in FIG. 23 is changed to that indicated in FIG. 24, are indicated in FIGS. 33 and 36. FIG. 36 is a flow chart indicating the processing for moving the current concept, using the concept tree made by subsumption relations displayed in the concept tree window.
      <br/>
      In Step 2700, it is judged whether the series of letters displayed in the concept tree window is clicked by the left button of the mouse or not.
      <br/>
      In the case where it is clicked by the left button of the mouse, the concept clicked in Step 2701 is made to be the current concept and it is judged whether the subconcepts of the concept clicked in Step 2702 are displayed or not.
      <br/>
      When they are not displayed, in Step 2703, the subconcepts one layer below are examined.
      <br/>
      In Step 2710, it is judged whether the series of letters displayed in the concept tree window is clicked by the right button of the mouse or not.
      <br/>
      In the case where it is clicked by the right button of the mouse, in Step 2720, the subconcepts one layer below the clicked concept are menu-displayed.
      <br/>
      When, in Step 2730, a relevant concept thereof is selected by means of the mouse, in Step 2740 the relevant concept is made to be the current concept.
      <br/>
      Until the image indicated in FIG. 23 is changed to that indicated in FIG. 24, in order to move the current concept to a concept, whose subconcepts are not displayed, the processings in Steps 2410, 2420 and 2430 are effected and the process proceeds to Step 2700 in FIG. 36 by a joiner 2490.
      <br/>
      The processings in Steps 2701, 2702 and 2703 are effected one after another.
      <br/>
      Further, as indicated by the joiner 2561, the process proceeds to Step 2570 in FIG. 34. Finally the processings in Steps 2580 and 2590 are effected and the process returns to Step 2410 in FIG. 33 by a joiner 2460.
    </p>
    <p num="182">
      Further, since there are restrictions, which are to be imposed to the current concept "COMPANY", the processings similar to those described above are effected.
      <br/>
      FIG. 25 shows an image in the course of this process.
      <br/>
      When the series of letters "COMPANY" 1608 of the current concept is clicked, the frame 1609 of the generic relationships is displayed.
      <br/>
      Among them the relevant relation item "COMPANY located at LOCATION" 1610 is selected by means of the mouse.
      <br/>
      FIG. 26 shows an image after having selected the relation, for which it is desired to be added.
      <br/>
      The relevant relation being added to the query expression, the current concept is moved to a superconcept "LOCATION" in the relation item "COMPANY located at LOCATION".
      <br/>
      Since the current concept has moved to the concept "LOCATION", the superconcept window 1601 described above is rewritten to a superconcept of "LOCATION".
      <br/>
      In the query editing window 1702 the query expression is changed to "COMPUTER WHICH IS DEVELOPED AT COMPANY which is located in LOCATION" 1709 to be displayed again and the pointer 1710 is located at the series of letters "LOCATION" 1708 of the current concept.
      <br/>
      In the concept tree window 1703, the anchor is the "LOCATION " LOCATION connected with "COMPUTER" through the relation "DEVELOPMENT".
      <br/>
      The subconcepts one layer below of "LOCATION" is displayed up to a depth 2 in the form of a tree and the pointer 1712 is located at the series of letters "LOCATION" 1711.
      <br/>
      The flow of the processing, until the image indicated in FIG. 24 is changed to that indicated in FIG. 33 is indicated in FIGS. 33 and 35. Until the image indicated in FIG. 24 is changed to that indicated in FIG. 26, in order to impose restrictions to the concept, which is not object of the relevant concept, the processings in Steps 2410 and 2420 in FIG. 33 are effected.
      <br/>
      The process proceeds to Step 2600 in FIG. 35, as indicated by a joiner 2480.
      <br/>
      Then the processings in Steps 2610, 2630, 2640, 2650, 2660 and 2670 are effected one after another.
      <br/>
      The process proceeds to Step 2570 in FIG. 34, as indicated by a joiner 2561.
      <br/>
      Finally the processings in Steps 2580 and 2590 are effected and the process returns to Step 2410 by a joiner 2460.
    </p>
    <p num="183">
      The current concept can be changed by selecting the concepts in the concept tree window by means of the mouse, the concepts displayed in the concept tree window being a part of the subsumption relation ships.
      <br/>
      FIG. 27 indicates the anchor and the following concepts in the concept tree window 1703 in FIG. 26 and represents the process for looking for concepts, which are not displayed in the concept tree window 1703, by means of the mouse.
      <br/>
      It is possible to display all the subconceptions of the relevant concept by selecting the concepts on the concept tree window 1803 by means of the right button of the mouse.
      <br/>
      Here, since it is desired to examine "COMPUTER DEVELOPED BY COMPANY located in JAPAN", when the series of letters "COUNTRY" 1808 in the concept tree window 1803 is clicked by the right button of the mouse, the subconcepts one layer below of the concept "COUNTRY" are displayed in a menu 1809.
      <br/>
      When "JAPAN" 1810, which is the concept corresponding thereto among them, is clicked, the current concept is moved to the relevant concept "JAPAN".
      <br/>
      When a concept outside of the menu domain is clicked the current concept is moved to the concept "COUNTRY".
      <br/>
      FIG. 28 is an image, after the current concept has been moved to "JAPAN".
      <br/>
      Since the current concept has been moved to the concept "JAPAN", the superconcept window 1901 is rewritten to be changed to the superconcept of "JAPAN".
      <br/>
      In the query editing window 1902 the query expression, which is "COMPUTER developed at COMPANY located in JAPAN" 1908, is displayed again and the pointer 1910 is located at the series of letters "JAPAN" 1909 of the current concept.
      <br/>
      In the concept tree window 1903, "JAPAN" 1912 is added and displayed again under "COUNTRY" 1911 and the pointer 1913 is moved to the current concept "JAPAN" 1912.
      <br/>
      The subconcepts are displayed by clicking a concept in the middle course of the relational tree displayed in the concept tree window 1903 by means of the middle button of the mouse, the current concept is moved to one of the concepts therein, and at the same time the relevant concept is added and displayed.
      <br/>
      The flow of the processing until the image indicated in FIG. 26 is changed to that indicated in FIG. 28, is indicated in FIGS. 33 and 36. In order to move the current concept to the concept displayed in the concept tree window, until the image indicated in FIG. 26 in changed to that indicated in FIG. 28, the processings in Steps 2410, 2420 and 2430 in FIG. 33 are effected and then the process proceeds to step 2700 in FIG. 36, as indicated by a joiner 2490.
      <br/>
      The processings in Steps 2710, 2720, 2730 and 2740 are effected one after another.
      <br/>
      Further the process proceeds to Step 2570 in FIG. 34, as indicated by a joiner 2561 and the processings in Steps 2580 and 2590 are effected.
      <br/>
      Finally the process returns to Step 2410 in FIG. 33 by a joiner 2460.
    </p>
    <p num="184">
      By clicking a series of letters of a concept in the query editing window, it is possible to move the current concept thereto and to change the concept or add a relation thereto.
      <br/>
      Here it is supposed that it is desired to examine articles concerning a query expression "COMPUTER developed by COMPANY located in JAPAN", which has been formed.
      <br/>
      In the query editing window 1902 in FIG. 28, the series of letters "COMPUTER" 1914 is clicked by means of the mouse so that the current concept is moved to "COMPUTER".
      <br/>
      FIG. 17 shows the image in this state.
      <br/>
      Since the current concept has been moved to "COMPUTER".
      <br/>
      The superconcept window 901 is rewritten to be changed to the superconcepts of "COMPUTER".
      <br/>
      In the query editing window 902 the pointer 909 is located at the series of letters "COMPUTER" 908 of the current concept.
      <br/>
      In the concept tree window 903 the anchor is made to be "HARDWARE", which is a superconcept of "COMPUTER" linked with the superconcept "ORGANIZATION" of "COMPANY" through the relation "DEVELOPMENT"; "HARDWARE" 904 and the following concepts are displayed in the form of a tree; and the pointer 911 is located at the series of letters "COMPUTER" 910.
      <br/>
      At this time it may be sufficient to display only "which is developed by COMPANY located in JAPAN" among the concepts following "HARDWARE".
      <br/>
      Or the number of the concepts satisfying "which is developed by COMPANY located in Japan" among the concepts following "HARDWARE" may be displayed.
      <br/>
      The flow of the processing, until the image indicated in FIG. 28 is changed to that indicated in FIG. 17, is indicated in FIGS. 33 and 35. Until the image indicated in FIG. 28 is changed to that indicated in FIG. 17, since the current concept is moved to a concept in the query expression, the processings in Steps 2410 and 2420 in FIG. 33 are effected.
      <br/>
      Then the process proceeds to Step 2600 in FIG. 35, as indicated by a joiner 2480 and the processings in Steps 2601 and 2670 are effected.
      <br/>
      Further, as indicated by a joiner 2561, the process proceeds to Step 2570 in FIG. 34 and the processings in Steps 2580 and 2590 are effected.
      <br/>
      Finally the process returns to Step 2410 by a joiner 2460.
    </p>
    <p num="185">
      FIG. 29 indicates a process for adding a root to the concept "COMPUTER".
      <br/>
      When the series of letters "COMPUTER" 2008 is clicked in the query editing window 2002 by means of the mouse, a pop-up menu 2009 appears.
      <br/>
      At this time, when "addition of a root" 2010 is selected, a menu 2011 of generic relationships, which can be added to "COMPUTER" as a root, is displayed.
      <br/>
      At this time, if a relation item "DOCUMENT, whose SUBJECT is COMPUTER," 2012 is selected, the relevant relation is added to the query expression and the current concept is moved to a subconcept "DOCUMENT" in the relation item "DOCUMENT, whose SUBJECT is COMPUTER,".
      <br/>
      FIG. 30 shows an image in this state.
      <br/>
      Since the current concept has been moved to the concept "DOCUMENT", the superconcept window 2101 is rewritten to be changed to the superconcepts of "DOCUMENT".
      <br/>
      In the query editing window 2102 the pointer 2109 is located at the series of letters "DOCUMENT" 2108 of the current concept.
      <br/>
      In the concept tree window 2103 the anchor is made to be "DOCUMENT" connected with "COMPUTER" through the relation "SUBJECT"; "DOCUMENT" 2111 and the following concepts are displayed in the form of a tree; and the pointer 2111 is located at the series of letters "DOCUMENT" 2110.
      <br/>
      The flow of the processings until the image indicated in FIG. 29 is changed to that indicated in FIG. 30 is indicated in FIGS. 33 and 35. Until the image indicated in FIG. 29 is changed to that indicated in FIG. 30, the processings in Steps 2410 and 2420 in FIG. 33 are effected and as indicated by a joiner 2480, the process proceeds to step 2600 in FIG. 35. The processings in Steps 2610, 2620, 2621, 2622, 2623, 2624, 2625 and 2670 are effected one after another.
      <br/>
      Further, as indicated by a joiner 2561, the process proceeds to Step 2570 in FIG. 34 and the processings in Steps 2580 and 2590 are effected.
      <br/>
      Finally the process returns to Step 2410 in FIG. 33 by a joiner 2460.
    </p>
    <p num="186">
      FIG. 31 is an output of the result corresponding to "DOCUMENT, whose subject is COMPUTER developed at COMPANY located in JAPAN.". This is made possible by clicking the command menu for retrieval output 2206 by means of the mouse, when the current concept is "DOCUMENT".
      <br/>
      The retrieval output is displayed by the pop-up menu 2208.
      <br/>
      The flow of the processing at this time is indicated in FIG. 33. The processings in Steps 2410, 2420, 2430, 2440 and 2441 in FIG. 33 are effected one after another and as indicated by the joiner 2460, the process returns to Step 2410 in FIG. 33.
    </p>
    <p num="187">
      FIG. 32 shows the result obtained by carrying out the query for "COMPANY located in JAPAN".
      <br/>
      This is made possible by clicking the command menu for retrieval output 2306 by means of the mouse, when the current concept is "COMPANY".
      <br/>
      The query result is displayed by the pop-up menu 2308.
    </p>
    <p num="188">
      Although in order to facilitate understanding the explanation, in the above, the embodiments have been described by using concrete examples, the system according to this invention is not restricted to these concrete examples but various other functions can be added thereto.
      <br/>
      For example, the number of concepts satisfying conditions added every time the current concept is moved or the retrival output may be displayed.
    </p>
    <p num="189">Further only the concepts satisfying the imposed conditions may be displayed in the form of a concept tree made by subsumption relations.</p>
    <p num="190">Furthermore the concepts, which don't satisfy the conditions, in the concept tree made by subsumption relations may be displayed with a segment of line drawn over each of the series of letters thereof.</p>
    <p num="191">Further not only those described above, but also other concepts such as concrete relations attached to the current concept may be displayed successively.</p>
    <p num="192">Further the selection by means of a pop-up menu may be effected simultaneously for a plurality of concepts.</p>
    <p num="193">
      As explained above, according to this invention, since it is possible to change the concept in a query expression to form a final query expression, while looking multiple side information concerning a concept, to which attention is paid, it is possible to form a consistent query expression, by which a satisfactory query result can be obtained.
      <br/>
      Since the object of the query can be changed arbitrarily, the user is not restricted by the object of the query at the beginning thereof.
      <br/>
      Further, since the user can search information, while forming a query expression, the efficiency of the query can be increased remarkably.
      <br/>
      Furthermore, since a partial query of the query expression is possible, it is not necessary to form similar query expression repeatedly.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A multi-lingual information retrieval system comprising:</claim-text>
      <claim-text>information storage means for storing a plurality of concepts each defining relations between a plurality of items of information; language-expression converting data storage means for storing data to covert a retrieval condition expressed in any one of a plurality of different natural languages to an expression of internal data which is an interpretation of a natural language represented by a formula and storing data to convert information retrieved from said information storage means based on an expression of internal data to any one of the different natural languages, thereby making it possible to retrieve identical information for the same request for retrieval using any one of the different natural languages; interface means for inputting a request for retrieval of information in one of the different natural languages and outputting a result of the retrieval; retrieval condition converting means for receiving the request for retrieval from said interface means and converting the received request for retrieval to the expression of the internal data by using said language-expression converting data storage means;</claim-text>
      <claim-text>and retrieval means for retrieving information stored on said information storage means according to the converted expression of internal data, converting the retrieved information into the one different natural language based on the data stored in said language-expression converting data storage means, and providing the converted retrieved information as the result of the retrieval, wherein said data storage means stores data coupling a string of characters expressed in one of the different natural languages and a symbol designating the one different natural language.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A knowledge base system comprising: input means for inputting a series of words; processing means for processing said inputted series of words;</claim-text>
      <claim-text>and output means for outputting a result of the processing operation; wherein said processing means comprises:</claim-text>
      <claim-text>- interface means for inputting a request for retrieval of information, said retrieval request corresponding to said series of words and outputting a result of a retrieval, - information storage means for storing information including a knowledge base which stores knowledge of a concept network forming a conceptual tree defined by nodes representing concepts and links representing relations among said concepts, - data storage means for storing data for language conversion for converting the stored information to strings of language characters, and - retrieval means for receiving the request for retrieval from said interface means and retrieving information stored on said information storage means, - wherein said retrieval means comprises:</claim-text>
      <claim-text>-  analysis means for identifying a relation in meaning among words existing in said series of words by retrieving said concept network, -  wherein said data storage means coexistently stores information in a plurality of different languages, thereby making it possible to retrieve identical information by use of the plurality of different languages.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A knowledge base system comprising: input means for inputting a series of words; processing means for processing said inputted series of words;</claim-text>
      <claim-text>and output means for outputting a result of the processing operation; wherein said processing means comprises: - interface means for inputting a request for retrieval of information, said retrieval request corresponding to said series of words and outputting a result of a retrieval, - an information storage means for storing information including a knowledge base which stores knowledge of a concept network forming a conceptual tree defined by nodes representing concepts and links representing relations among said concepts, - language-expression converting data storage means for storing data to convert a retrieval condition expressed in a string of characters in a language corresponding to an expression of data, - retrieval condition converting means for receiving the request for retrieval of information input from said interface means and converting the received request for retrieval to the expression of internal data by using said language-expression converting data storage means, and - retrieval means for retrieving information stored on said information storage means in response to the converted expression of internal data, - wherein said retrieval means comprises: -  analysis means for identifying a relation in meaning among words existing in said series of words by retrieving said concept network, -  wherein said language-expression converting data storage means coexistently stores information in a plurality of different languages, thereby making it possible to retrieve identical information by use of the plurality of different languages.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. A knowledge base system comprising: input means for inputting a series of words; processing means for processing said inputted series of words;</claim-text>
      <claim-text>and output means for outputting a result of the processing operation; wherein said processing means comprises: - a knowledge base storing knowledge of a concept network forming a conceptual tree defined by nodes representing concepts and links representing relations among said concepts, and - analysis means for identifying a relation in meaning among words existing in said series of words by retrieving said concept network.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. A knowledge base system according to claim 4, wherein said knowledge base comprises: a concept name table storing names of said concepts in a plurality of languages; a subsumption relation table storing subsumption relations among said concepts; a general-relation defining table storing definitions of relations existing among said concepts other than said subsumption relations;</claim-text>
      <claim-text>and a relation table storing information indicating the existence of the relations among said concepts.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A knowledge base system according to claim 5, further comprising: a grammar file storing syntax rules, wherein said analysis means includes lexical analysis means for effecting lexical analysis of an attribute of each word of said series of words;</claim-text>
      <claim-text>and syntax analysis means for effecting syntactic analysis of a syntax of said series of words by consulting said grammar file, said knowledge base and lexical analysis result of said lexical analysis means.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A knowledge base system according to claim 6, further comprising: a structured concept file storing concepts structured by limiting a meaning of a concept by another concept;</claim-text>
      <claim-text>and a lexicon file storing kinds of words, wherein said lexical analysis means effects analysis of an attribute of each word of said series of words by consulting said structured concept file, said lexicon file and said concept name table.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. An information retrieval system comprising: input means for inputting a series of words; a knowledge base including a concept name table storing concept names in a plurality of languages and storing knowledge of a concept network forming a concept tree defined by nodes representing concepts and links representing relations among said concepts; analysis means for identifying a relation in meaning among words existing in said series of words by consulting said concept network; retrieval means for retrieving said knowledge based on an output of said analysis means;</claim-text>
      <claim-text>and output means for outputting a result retrieved by said retrieval means.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A multi-lingual information retrieval system, comprising: an information storage which stores a plurality of concepts each defining relations between a plurality of items of information; a data storage which stores in corresponding relation to each item of information stored in said information storage, data including translations of the item of information in a plurality of different natural languages, thereby making it possible to retrieve identical information for the same request for retrieval using any of the different natural languages; an interface which inputs a request for retrieval of information in one of the different natural languages and outputs a result of a retrieval;</claim-text>
      <claim-text>and a retrieval unit which receives the request for retrieval from said interface means, retrieves information stored on said information storage according to the request for retrieval, translates the retrieved information into the one different natural language based on the data stored in said data storage, and provides the translated retrieved information as the result of the retrieval, wherein said information storage expresses stored information by coupling nodes and links.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A system according to claim 9, wherein each of said nodes expresses a concept, and each of said links expresses a relation between nodes.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A multi-lingual information retrieval system comprising: an information storage which stores a plurality of concepts each defining relations between a plurality of items of information; language-expression converting data storage which stores data to covert a retrieval condition expressed in any one of a plurality of different natural languages to an expression of internal data which is an interpretation of a natural language represented by a formula and stores data to convert information retrieved from said information storage based on an expression of internal data to any one of the different natural languages, thereby making it possible to retrieve identical information for the same request for retrieval using any one of the different natural languages; an interface which inputs a request for retrieval of information in one of the different natural languages and outputs a result of the retrieval; a retrieval condition converting unit which receives the request for retrieval from said interface and converts the received request for retrieval to the expression of the internal data by using said language-expression converting data storage;</claim-text>
      <claim-text>and a retrieval unit which retrieves information stored on said information storage according to the converted expression of internal data, converts the retrieved information into the one different natural language based on the data stored in said language-expression converting data storage, and provides the converted retrieved information as the result of the retrieval.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A multi-lingual information retrieval system comprising: an information storage which stores a plurality of concepts each defining relations between a plurality of items of information; language-expression converting data storage which stores data to covert a retrieval condition expressed in any one of a plurality of different natural languages to an expression of internal data and stores data to convert information retrieved from said information storage based on an expression of internal data to any one of the different natural languages, thereby making it possible to retrieve identical information for the same request for retrieval using any one of the different natural languages; an interface which inputs a request for retrieval of information in one of the different natural languages and outputs a result of the retrieval; a retrieval condition converting unit which receives the request for retrieval from said interface and converts the received request for retrieval to the expression of the internal data by using said language-expression converting data storage;</claim-text>
      <claim-text>and a retrieval unit which retrieves information stored on said information storage according to the converted expression of internal data, converts the retrieved information into the one different natural language based on the data stored in said language-expression converting data storage, and provides the converted retrieved information as the result of the retrieval, wherein said information storage expresses stored information by coupling nodes and links.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A system according to claim 12, wherein each of said nodes expresses a concept, and each of said links expresses a relation between nodes.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A system according to claim 11, wherein said data storage stores data coupling a string of characters expressed in one of the different natural languages and a symbol designating the one different natural language.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A multi-media information retrieval system, comprising: a user interface which inputs from a user a series of words from a plurality of natural languages, and displays responses from said system and information input by said user; memory means for storing character strings, wherein each character string represents a word in one of said natural languages, together with a data item identifying said one natural language; another memory means for storing concept identifiers, wherein each concept identifier is associated with one of said character strings; query analysis means which identifies a natural language to which said series of words belongs, and creates an internal query condition which is an interpretation of a natural language represented by a formula based on said series of words correspondingly; information storage means for storing multi-media files, wherein each multi-media file is associated with at least one of said concept identifiers; information search means for identifying concept identifiers that match said internal query condition;</claim-text>
      <claim-text>and information retrieval means for retrieving multi-media files from said information storage means which are associated with said identified concept identifiers.</claim-text>
    </claim>
  </claims>
</questel-patent-document>