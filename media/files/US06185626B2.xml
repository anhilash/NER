<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185626B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185626</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185626</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="20398660" extended-family-id="50310133">
      <document-id>
        <country>US</country>
        <doc-number>08993609</doc-number>
        <kind>A</kind>
        <date>19971218</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08993609</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>51503795</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>SE</country>
        <doc-number>9502216</doc-number>
        <kind>A</kind>
        <date>19950619</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1995SE-0002216</doc-number>
      </priority-claim>
      <priority-claim kind="international" sequence="2">
        <country>WO</country>
        <doc-number>SE9600802</doc-number>
        <kind>A</kind>
        <date>19960619</date>
        <priority-linkage-type>W</priority-linkage-type>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1996WO-SE00802</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  13/00        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>00</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  17/30        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04Q   3/00        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>3</main-group>
        <subgroup>00</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>H04W   8/12        20090101A I20090105RMEP</text>
        <ipc-version-indicator>
          <date>20090101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>W</subclass>
        <main-group>8</main-group>
        <subgroup>12</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20090105</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>709248000</text>
        <class>709</class>
        <subclass>248000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>709226000</text>
        <class>709</class>
        <subclass>226000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>709229000</text>
        <class>709</class>
        <subclass>229000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>726003000</text>
        <class>726</class>
        <subclass>003000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H04W-008/12</text>
        <section>H</section>
        <class>04</class>
        <subclass>W</subclass>
        <main-group>8</main-group>
        <subgroup>12</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H04Q-003/00D2</text>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>003</main-group>
        <subgroup>00D2</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04W-008/12</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>W</subclass>
        <main-group>8</main-group>
        <subgroup>12</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04Q-003/0025</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>3</main-group>
        <subgroup>0025</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04Q-2213/13504</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>Q</subclass>
        <main-group>2213</main-group>
        <subgroup>13504</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>T04Q-213/13504</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>23</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>4</number-of-figures>
      <image-key data-format="questel">US6185626</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Arrangement and method for linking clients to servers at run time in a distributed networking environment</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>SUDAMA RAM, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5483652</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5483652</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>LEE HENRY</text>
          <document-id>
            <country>US</country>
            <doc-number>5692180</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5692180</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>WINTERBOTTOM PHILIP STEVEN</text>
          <document-id>
            <country>US</country>
            <doc-number>5724512</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5724512</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <text>TALIGENT INC</text>
          <document-id>
            <country>WO</country>
            <doc-number>9517062</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9517062</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>NOKIA TELECOMMUNICATIONS OY, et al</text>
          <document-id>
            <country>WO</country>
            <doc-number>9520300</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>WO9520300</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>John Bloomer, Distributed Computing and the OSF/DCE, Dr Dobb's Journal reprint, Feb. 1995.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Sato et al., "Network Directory Concept for an Intelligent Network", IEEE Conference, Nov. 1989.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="3">
          <text>A.E. Hodson, "The Global Directory-An Overview", IEE Colloquium, Apr. 1990.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="4">
          <text>S.E. Kille, "Implementing the Directory", IEE Colloquium, Apr. 1990.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>WO</country>
              <doc-number>PCT/SE96/00802</doc-number>
              <date>19960619</date>
            </document-id>
          </parent-doc>
        </relation>
      </continuation>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Telefonaktiebolaget LM Ericsson (publ)</orgname>
            <address>
              <address-1>Stockholm, SE</address-1>
              <city>Stockholm</city>
              <country>SE</country>
            </address>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>ERICSSON</orgname>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Chivi, Anwar Hanna</name>
            <address>
              <address-1>Kista, SE</address-1>
              <city>Kista</city>
              <country>SE</country>
            </address>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Adjimah, Richard Komi</name>
            <address>
              <address-1>Solna, SE</address-1>
              <city>Solna</city>
              <country>SE</country>
            </address>
          </addressbook>
          <nationality>
            <country>SE</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Burns, Doane, Swecker &amp; Mathis, L.L.P.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Luu, Le Hien</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      The invention relates to an arrangement and a method for linking clients to servers at run time in a distributed networking environment, particularly for start synchronization in a digital telecommunication system.
      <br/>
      The system comprises at least one ground based radio communication unit (12, 13) and a number of mobile radio communication units (11) for communication with or via said ground based radio communication unit (12, 13).
      <br/>
      Each of said communication units is provided with a digital data processor server (14, 15) linked to a communication port (16, 17).
      <br/>
      According to the invention, each communication port (16, 17) is linked to a functional unit (10) which acts as a distributed database which is able to register when a specified server (14, 15) becomes available in a defined domain.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">This application is a continuation of International Application No. PCT/SE96/00802, filed Jun. 19, 1996, which designates the United States.</p>
    <p num="2">The present invention relates to an arrangement and a method for linking clients to servers at run time in a distributed networking environment, particularly for start synchronization in a digital telecommunication system, comprising at least one ground based radio communication unit and a number of mobile radio communication units for communication with or via said ground based radio communication unit, wherein each of said communication units is provided with a digital data processor server linked to a communication port.</p>
    <p num="3">
      In distributed computing systems, applications are distributed throughout the network.
      <br/>
      These applications are made available at varying points of time.
      <br/>
      As a result of this, one application (addressing application) may try to address another application (addressed application) before the addressed application has become available.
      <br/>
      This means that it is very difficult to use time synchronization to resolve the numerous client server relationships between the distributed softwares.
      <br/>
      Furthermore, another important factor is that the lack of one single server software to start should not prevent the entire system from starting and working.
    </p>
    <p num="4">
      One possible solution is to let each application try addressing the other application until a response from the other application is received.
      <br/>
      The problem with this solution is the bad use of system capacity.
      <br/>
      The communication costs for unnecessary messages is high.
    </p>
    <p num="5">
      For example, a digital tele-communication system is realized as a network of neighbouring radio cells, together providing coverage of a service area.
      <br/>
      Such a system allows mobile stations to move freely between the cells in the service area without interruption of communication.
      <br/>
      A number of distributed databases are used to keep track of mobile stations.
      <br/>
      These databases may for example contain subscriber information, authentication parameters and ciphering keys.
      <br/>
      When a mobile station roams into a new mobile services switching centre area, the visitor location register database connected to that mobile services switching centre will request data about said mobile station from the home location register database.
    </p>
    <p num="6">Thus, in the field of mobile telecommunications, it would be especially advantageous to reduce unnecessary messages since this will unload processors and increase traffic capacity, for example during handover of calls in progress between cells or from one base station controller to another base station controller.</p>
    <heading>SUMMARY</heading>
    <p num="7">An object of the invention is therefore to provide a flexible start synchronisation mechanism, making paired client-server communication handling independent of each other.</p>
    <p num="8">
      Therefore, an arrangement for handling linking of clients to servers at run time is provided.
      <br/>
      In the arrangement each communication port is linked to a functional unit which acts as a distributed database which is able to register when a specified server becomes available in a defined domain.
      <br/>
      This solution results in the use of a loose synchronisation mechanism based on events instead of time, between applications.
    </p>
    <p num="9">The functional unit can use an internal interface to distribute port names throughout a zone.</p>
    <p num="10">The functional unit can also use a first external interface to the internal process communication, to publish a port name, search and analyze for a port name, withdraw a port name, and to modify a port name.</p>
    <p num="11">The functional unit can also use a second external interface to users, who want to communicate at start phase, wherein users subscribe for a specified port name, making the functional unit wait for the requested port name to become available.</p>
    <p num="12">The functional unit can also use a third external interface to system upgrading, wherein system upgrading uses the interface to find which marks are related to a specific object type/object individual.</p>
    <p num="13">Preferably, the functional unit also uses a fourth external interface to processor error handle, wherein the functional unit acts as a server which will be informed when a processor failure occur.</p>
    <p num="14">In a preferred embodiment of the invention, a functional unit is allocated to each distributed communication operating system processor in a subnet.</p>
    <p num="15">It is an advantage with the invention that a functional unit at a zone level is able to communicate with a number of functional units at a subnet level, and that the functional units at said subnet level are each able to communicate with a number of functional units at a processor level.</p>
    <p num="16">The method according to the invention is characterized in that each client subscribes to a defined domain through a functional unit, and that each server is able to publish the service it provides through a defined domain, by registering it to said functional unit.</p>
    <p num="17">Preferably, the functional unit can be requested to register and notify a client processor when the specified server becomes available.</p>
    <p num="18">According to the invention, the functional unit can also be requested by a server to register that the service said server provides is available.</p>
    <p num="19">
      Preferably, each server publishes its service by means of a specified port name, which publication is bound to a working domain in which said service is accessible.
      <br/>
      This publication is distributed within the domain by means of the functional unit.
    </p>
    <p num="20">The port name can be a data structure which comprises parameters regarding object type, object individual and system upgrading.</p>
    <p num="21">The published data can be secured from unauthorized objects by means of a key which is returned to the applications, which key also can be used for modification or withdrawal of said publication.</p>
    <p num="22">The functional unit supports withdrawal of a port name, which action takes place when an object ceases to be used by any application or when a fault is detected.</p>
    <p num="23">The process of withdrawal of a port name involves a comparison between the stored key and a received key, to make sure that the withdrawal is being made by the correct port.</p>
    <p num="24">The functional unit also supports search and analysis of a port name, which action takes place when an object sends a message to another object using a port name as an address.</p>
    <p num="25">The process of search and analysis of a port name is handled by inter process communication, which calls the functional unit to get the destination address and in case the port name is not found, the message is returned to the sender with an error indication.</p>
    <p num="26">The functional unit supports modifying of a port name, which action takes place at system upgrading phase and has the same syntax as publish.</p>
    <p num="27">Preferably, modifying of a port name involves changing the system upgrading mark, to enable publishing a new object having the same object type and object individual, allowing testing of the new object during traffic, and removal of the old object from the network when the test has been passed.</p>
    <p num="28">The functional unit also can support wait for publishing of a port name, which action takes place at start and system upgrading phase.</p>
    <p num="29">Waiting for publishing of a port name preferably involve making the functional unit wait for the demand port name to be published, specifying a maximum waiting time, and informing objects when a specified object has published its port name to the functional unit.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="30">
      The invention will be further described in the following in a non-limiting way with reference to the accompanying drawings, in which
      <br/>
      FIG. 1 schematically illustrates an arrangement of functional units in a telecommunication network zone, in accordance with the invention,
      <br/>
      FIG. 2 schematically illustrates a port name addressed message route to destination,
      <br/>
      FIG. 3 illustrates functional unit interfaces, and
      <br/>
      FIG. 4 illustrates load sharing within the network.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="31">
      The schematically illustrated arrangement in FIG. 1 shows a number of functional units 10 in a telecommunication network zone, which units are each associated with a distributed communication operating processor.
      <br/>
      The functional unit acts as an intermediary name addressing service agent at each node in the network, thus, dividing the network into several domains: local processor level 11, subnet processor level 12 and zone processor level 13.
    </p>
    <p num="32">
      Each processor server is able to publish its service via the functional unit 10 by giving it a specific name, a so called Port Name.
      <br/>
      This publication is bound to the working domain in which the service will accessible.
      <br/>
      The functional units 10 will distribute this publication within the domain, i.e. the functional units will spread the information hierarchically to other functional units within the domain.
    </p>
    <p num="33">
      The name addressing service unit 10 acts as a distributed data base, in which it has the traditional functions to store, retrieve and delete the information (service name and its address) within the domain.
      <br/>
      Depending upon in which domain the name addressing service unit is located, the unit can store the address in different repositories.
      <br/>
      This means that the client is able to direct its demands (retrieval, subscription) in a specific domain.
    </p>
    <p num="34">Thus, the functional unit can provide its services in an incremental way, and the start synchronization is very loose, which enhances flexibility.</p>
    <p num="35">
      The Port Name is unique and unchangeable wherever it is allocated in the network.
      <br/>
      This will contribute to characteristics like distribution transparency, change-over transparency and fault tolerance.
      <br/>
      The Port Name is a data structure which consists of three parameters: Object Type, Object Individual and System Upgrading Mark.
    </p>
    <p num="36">The functional unit 10 supports the following functions:</p>
    <p num="37">
      Publishing of a Port Name
      <br/>
      Withdrawal of a Port Name
      <br/>
      Search and analysis of a Port Name
      <br/>
      Modifying of a Port Name
      <br/>
      Wait for publishing of a Port Name
    </p>
    <p num="38">
      Publishing of a Port Name is an activity which takes place at starting phase, or at system upgrading and is directed towards any functional unit 10.
      <br/>
      The applications (objects) will announce their existence in the network (zone).
      <br/>
      The functional unit is responsible for spreading the publication within the scope, defined at publishing, together with the port name and a port reference.
      <br/>
      The scope can be a processor, a subnet or a zone, and states the domain within which the objects are visible and thereby available.
      <br/>
      To secure the published data from unauthorized objects, a unique key is returned to the applications, which key is used when the application wants to modify or withdraw its own publication.
    </p>
    <p num="39">
      Withdrawal of a Port Name is an activity which takes place when an object ceases to be used by any application or when a fault is detected.
      <br/>
      As is done at publishing, the withdrawal is directed towards a functional unit 10 which takes responsibility for spreading it within the scope.
      <br/>
      To secure this operation, a comparison is made between the stored key and the received one, this to make sure that the withdrawal is being made by the correct port.
    </p>
    <p num="40">Search and analysis of a Port Name is an activity which takes place when an object 14 (client located at processor A) sends a message to another object 15 (server located at processor B) via the ports 16, 17 and a message passing service network 18, 19 and 20, using a Port Name as an address (see FIG. 2).</p>
    <p num="41">
      The message is handled by the sender's inter process communication 21 which calls the functional unit 10 to get the destination address.
      <br/>
      The message is passed via the message passing service network 18, 19 and 20 to the destination object's inter process communication 22, which passes the message on to the destination object 15 when a port reference is known.
      <br/>
      If the port name is not found, the message is returned to the sender 14 with an error indication.
    </p>
    <p num="42">
      Modifying of a Port Name is an activity which takes place at System upgrading phase.
      <br/>
      The application that published its Port Name will change the system upgrading mark.
      <br/>
      This enables publishing a new object having the same Object Type and Object Individual but with different system upgrading mark.
      <br/>
      The result is that it is possible to test the new object during traffic.
      <br/>
      If the new object pass the test, the old one will be removed from the network.
      <br/>
      Modifying has the same syntax as publish, but only system upgrading mark can be modified, it is not possible to modify the other parameters.
    </p>
    <p num="43">
      Waiting for publishing of a specific Port Name is an activity which takes place at start and System upgrading phase.
      <br/>
      Objects start at different times.
      <br/>
      As a result of this, an object may try to address, by port name, objects that are not yet published.
      <br/>
      In this case a subscription of a specified port name is made, making the functional unit 10 wait for the demand port name to be available (published).
      <br/>
      The objects are then being informed when a specified object has published its port name to the functional unit.
      <br/>
      In order to prevent the functional unit from waiting "an indefinite time", the user must state a maximum waiting time.
    </p>
    <p num="44">
      The functional unit 10 supports two types of subscription:
      <br/>
      Synchronous subscription, wherein the client will be suspended until a port name is published or the specified time has expired.
    </p>
    <p num="45">Asynchronous subscription, wherein the client will continue execution and will receive information as soon as the specified port name has been published or the specified time has expired.</p>
    <p num="46">
      The functional unit uses the following interfaces (see FIG. 3):
      <br/>
      An internal interface 23 is used for distributing Port Names throughout the zone.
    </p>
    <p num="47">
      A first external interface 24 to the inter process communication 21, 22, which is a pure Client and Server interface, where the functional unit is the server.
      <br/>
      The inter process communication 21, 22 uses the interface to publish a Port Name, to search and analyze for a Port Name. to withdraw a Port Name, and to modify a Port Name.
    </p>
    <p num="48">
      A second external interface 25 to users 14, 15, which interface 25 is used by all users who want to communicate at start phase.
      <br/>
      Users will subscribe for a specified Port Name, making the functional unit wait for the requested Port Name to be available (published).
    </p>
    <p num="49">
      A third external interface 26 to system upgrading 27, which is a pure client and server interface, where the functional unit is the server.
      <br/>
      System upgrading uses the interface to find which marks are related to a specific Object Type/Object Individual.
    </p>
    <p num="50">
      A fourth external interface 28 to processor error handle 29, which interface is a pure client and server interface, where the functional unit is the server.
      <br/>
      Processor error handle will inform the functional unit when a processor failure occur.
    </p>
    <p num="51">
      In general, the functional unit tries to avoid that a fault of any kind will paralyse all unit functionality.
      <br/>
      Instead the functional unit will alarm and operation and maintenance will take the appropriate actions.
    </p>
    <p num="52">
      In case of processor failure, the functional unit will receive information either from the message passing service or operation and maintenance.
      <br/>
      The functional unit can not make a recovery.
      <br/>
      Instead operation and maintenance will attempt to start the processor and all objects will be republished.
    </p>
    <p num="53">
      The functional unit supports:
      <br/>
      Distribution transparency, which means that clients do not need to know where the servers are allocated.
      <br/>
      The functional unit conceals server redundancy by having a stable Port Name.
    </p>
    <p num="54">
      System concept N+1 redundancy: In case of processor failure within a subnet, other processors will take over servers that was handled by the failing processor.
      <br/>
      This will only occur within a subnet.
    </p>
    <p num="55">Start synchronization.</p>
    <p num="56">System upgrading.</p>
    <p num="57">
      In a function addressing mode, the applications need to find a server in order to execute a specific function.
      <br/>
      The server does not need to be related to a specific data partition (individual).
      <br/>
      This means that any server 30, 31 of a specific type can be chosen (load sharing) by a client 32 via a routing point 33 (see FIG. 4).
      <br/>
      This implies that servers in several processors create ports with identical port names.
      <br/>
      These servers publish their Port Names to at least subnet level, so that they are visible for the functional unit at subnet level (load sharing exists only within a subnet).
    </p>
    <p num="58">
      In a partitioned function addressing mode, clients need to address a server that is related to a specific data partition.
      <br/>
      This server directly or indirectly handles several real objects.
      <br/>
      Partition data relating to a real object decides in which server the process will end up.
    </p>
    <p num="59">In an object addressing mode, the applications need to find a specific server, which handles one and only one real object.</p>
    <p num="60">
      In order to have a fault tolerant functional unit according to the invention, functionality at subnet level is duplicated (see FIG. 1).
      <br/>
      This means that the functionality must not disappear in case of a single processor failure.
      <br/>
      The following structure has been designed to obtain fault tolerance:
      <br/>
      Distribution of subnet functionality to all processors in the subnet.
    </p>
    <p num="61">Distribution of zone functionality to all subnets in the zone.</p>
    <p num="62">Storage capacity of the service will be affected by the number of Port Names and implementation of the Port Name table.</p>
    <p num="63">
      The functional unit according to the invention relies on the following system functionality:
      <br/>
      Processor supervision in the subnet.
      <br/>
      This is used to decide if the processor is available or not.
    </p>
    <p num="64">Configuration data at the starting phase.</p>
    <p num="65">The invention is not limited to the above described embodiment, but several modifications can be made within the scope of the accompanying claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>An arrangement for linking clients to servers at run time in a distributed networking environment, particularly for start synchronization in a digital telecommunication system, comprising at least one ground based radio communication unit and a number of mobile radio communication units for communication with or via said ground based radio communication unit, wherein each of said communication units is provided with a digital data processor server linked to a communication port, wherein each communication port is linked to a functional unit which acts as a distributed database which is able to register when a specified server becomes available in a defined domain, each port being provided by a name, which is a data structure comprising parameters regarding object type, object individual and system upgrading, and wherein each server publishes its service by means of a specified port name, and further wherein the published data is secured from unauthorized objects by means of a key which is returned to the applications, which key is also used for modification or withdrawal of said publication.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. An arrangement according to claim 1, wherein the functional unit uses an internal interface to distribute port names throughout a zone.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. An arrangement according to claim 2, wherein the functional unit uses a first external interface to the internal process communication to publish a port name, search and analyze for a port name, withdraw a port name, and to modify a port name.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. An arrangement according to claim 3, wherein the functional unit uses a second external interface to users who want to communicate at start phase, wherein users subscribe for a specified port name, making the functional unit wait for the requested port name to become available.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. An arrangement according to claim 4, wherein the functional unit uses a third external interface to system upgrading wherein system upgrading uses the interface to find which marks are related to a specific object type/object individual.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. An arrangement according to claim 5, wherein the functional unit uses a fourth external interface to processor error handle, wherein the functional unit acts as a server which will be informed when a processor failure occur.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. An arrangement according to claim 1, wherein a functional unit is allocated to each distributed communication operating system processor in a subnet.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. An arrangement according to claim 7, wherein a functional unit at a zone level is able to communicate with a number of functional units at a subnet level, and that the functional units at said subnet level are each able to communicate with a number of functional units at a processor level.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A method for linking clients to servers at run time in a distributed networking environment, particularly for start synchronization in a digital telecommunication system, comprising at least one ground based radio communication unit and a number of mobile radio communication units for communication with or via said ground based radio communication unit, wherein each client subscribes to a defined domain through a functional unit, and that each server is able to publish the service it provides through a defined domain, by registering it to said functional unit, each port being provided by a name, which is a data structure comprising parameters regarding object type, object individual and system upgrading and each server publishes its services by means of a specified port name, and wherein the published data is secured from unauthorized objects by means of a key which is returned to the applications, which key is also used for modification or withdrawal of said publication.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A method according to claim 9, wherein the functional unit is able to be requested to register and notify a client processor when the specified server becomes available.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A method according to claim 9, wherein the functional unit can be requested by a server to register that the service said server provides is available.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method according to claim 9, wherein said publication is bound to a working domain in which said service is accessible.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A method according to claim 12, wherein the functional unit distributes the publication within the domain.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A method according to claim 9, wherein the functional unit supports withdrawal of a port name, which action takes place when an object ceases to be used by any application or when a fault is detected.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A method according to claim 14, wherein the process of withdrawal of a port name involves a comparison between the stored key and a received key, to ensure that the withdrawal is being made by the correct port.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A method according to claim 14, wherein the functional unit supports withdrawal of a port name, which action takes place when an object ceases to be used by any application or when a fault is detected.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. A method according to claim 16, wherein the process of withdrawal of a port name involves a comparison between the stored key and a received key, to make sure that the withdrawal is being made by the correct port.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. A method according to claim 14, wherein the functional unit supports search and analysis of a port name, which action takes place when an object sends a message to another object using a port name as an address.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A method according to claim 18, wherein the process of search and analysis of a port name is handled by inter process communication, which calls the functional unit to get the destination address and in case the port name is not found, the message is returned to the sender with an error indication.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. A method according to claim 14, wherein the functional unit supports modifying of a port name, which action takes place at system upgrading phase and has the same syntax as publish.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A method according to claim 20, wherein modifying of a port name involves changing the system upgrading mark, to enable publishing a new object having the same object type and object individual, allowing testing of the new object during traffic, and removal of the old object from the network when the test has been passed.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A method according to claim 14, wherein the functional unit supports wait for publishing of a port name, which action takes place at start and system upgrading phase.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. A method according to claim 22, wherein waiting for publishing of a port name involves making the functional unit wait for the demand port name to be published, specifying a maximum waiting time, and informing objects when a specified object has published its port name to the functional unit.</claim-text>
    </claim>
  </claims>
</questel-patent-document>