<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182115B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182115</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182115</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="21888280" extended-family-id="42108927">
      <document-id>
        <country>US</country>
        <doc-number>09036377</doc-number>
        <kind>A</kind>
        <date>19980306</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09036377</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165517</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>3637798</doc-number>
        <kind>A</kind>
        <date>19980306</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09036377</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F   9/46        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>46</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06Q  10/10        20120101A I20140531RMEP</text>
        <ipc-version-indicator>
          <date>20120101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20140531</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>709204000</text>
        <class>709</class>
        <subclass>204000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>709211000</text>
        <class>709</class>
        <subclass>211000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>709225000</text>
        <class>709</class>
        <subclass>225000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-009/52</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>52</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06Q-010/10</text>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>10</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/52</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>52</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06Q-010/10</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>42</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>7</number-of-figures>
      <image-key data-format="questel">US6182115</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and system for interactive sharing of text in a networked environment</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BLY SARA A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5220657</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5220657</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>WANG DIANA SHU-FAN</text>
          <document-id>
            <country>US</country>
            <doc-number>5333312</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5333312</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>CHAMPAGNE STEVEN R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5333316</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5333316</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>FUKASAWA TAKAYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5367468</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5367468</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>JONES EDWIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5526517</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5526517</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>VOLL ROBERT, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5551028</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5551028</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>ALLEN RUTH A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5634072</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5634072</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>PERIWAL DAMODAR DAS, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5644768</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5644768</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>BENDERT EDWARD JOSEPH, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5668958</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5668958</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>KINGBERG DENIS G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5734887</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5734887</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>MACON JR CHARLES E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5752249</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5752249</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>SHOSTAK ROBERT E</text>
          <document-id>
            <country>US</country>
            <doc-number>5913029</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5913029</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="13">
          <text>VAN HUBEN GARY ALAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5920873</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5920873</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="14">
          <text>VAN HUBEN GARY ALAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5966707</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5966707</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="15">
          <text>WOLFF JAMES J</text>
          <document-id>
            <country>US</country>
            <doc-number>5999930</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5999930</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="16">
          <text>SCHULTZ ROGER</text>
          <document-id>
            <country>US</country>
            <doc-number>6058175</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6058175</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="17">
          <text>BAYEH ELIAS N, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6098093</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6098093</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="1">
          <text>George Coulouris and Jean Dollimore, TD.1.1A Security Services Design, pp. 1-23, Jun. 3, 1997.</text>
        </nplcit>
      </citation>
      <citation srep-phase="examiner">
        <nplcit num="2">
          <text>Systse.Kloosterman@inria.fr, PerDis Project Detailed Overview, pp. 1-14, Mar. 25, 1998.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corp.</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Cuomo, Gennaro A.</name>
            <address>
              <address-1>Apex, NC, US</address-1>
              <city>Apex</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Greco, Carmine Fred</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Fraenkel, Michael L.</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Nguyen, Binh Q.</name>
            <address>
              <address-1>Cary, NC, US</address-1>
              <city>Cary</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Singhal, Sandeep K.</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Clay, A.. Bruce</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <orgname>Myers, Bigel, Sibley &amp; Sajovec, P.A.</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Rinehart, Mark H.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      An application is enabled to allow any one of a variety of locking behaviors including different locking behaviors for different elements of shared text.
      <br/>
      For example, whereas one string may be associated with an implicit lock (granted when the user gives that string focus), another string may have an explicit lock (granted when the user takes some particular action such as clicking on a "lock" button), while yet another string may have a deferred lock (granted only when the user attempts to update the string).
      <br/>
      A similar range of possibilities is available for string update events and for unlocking the string.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">
      This invention relates in general to computer software, and in particular to a method and system for enabling multiple users in a networked environment to edit a common text string.
      <br/>
      More particularly, the present invention relates to a method and system by which applications can select appropriate locking, update, and unlocking semantics for a shared data string.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      Real-time remote collaboration is becoming increasingly important in both business and education environments.
      <br/>
      For example, collaboration can support remote Help Desks over the Web (e.g. a customer can receive assistance from a bank officer to fill out a loan application), distance learning (e.g. students can see a lecture being given remotely and can ask the instructor questions), and business applications (e.g. collaborative word processing, document review, etc.).
    </p>
    <p num="3">
      In advanced collaborative applications, it is necessary to share information among multiple users.
      <br/>
      Each user needs to be able to see the current state of shared information.
      <br/>
      Moreover, each user should be able to manipulate and change this shared information.
      <br/>
      Finally, manipulation should occur in a controlled way, in order to prevent information corruption from simultaneous access.
    </p>
    <p num="4">
      Existing collaboration systems limit the application programmer to a single set of locking, update, and unlocking semantics.
      <br/>
      For example, one known system provides implicit locks based on which user currently has keyboard focus on the application; the user relinquishes the lock by releasing application focus.
      <br/>
      In this system, every keystroke generates an update event to other participants in the collaboration.
      <br/>
      Applications have no way to change the locking behavior or to cause string update events to be sent less frequently.
    </p>
    <p num="5">
      In general, it is preferable for an application to have the capability to allow any one of a variety of locking behaviors and to allow different locking behaviors for different elements of shared text.
      <br/>
      For example, whereas one string may be associated with an implicit lock (granted when the user gives that string focus), another string may have an explicit lock (granted when the user takes some particular action such as clicking on a "lock" button), while yet another string may have a deferred lock (granted only when the user attempts to update the string).
      <br/>
      A similar range of possibilities is available for string update events and for unlocking the string.
    </p>
    <p num="6">
      Therefore, there exists a need to provide the application developer with a system for integrating a wide range of locking, unlocking, and updating strategies for shared data.
      <br/>
      Moreover, such a system should allow the developer to assign different semantics to each element of shared data in an application.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="7">An object of the present invention is to provide, within a networked environment, a method for selecting and customizing a locking semantic for an element of shared data.</p>
    <p num="8">Another object of the present invention is to provide, within a networked environment, a method for selecting and customizing an unlocking semantic for an element of shared data.</p>
    <p num="9">Yet another object of the present invention is to provide, within a networked environment, a method for selecting and customizing an update semantic for an element of shared data.</p>
    <p num="10">Yet another object of the present invention is to provide a unified mechanism for supporting customization of the behavior of a shared data element.</p>
    <p num="11">
      To achieve the foregoing objects and in accordance with the purpose of the invention as broadly described herein, a method and system are disclosed for defining a shared string with application-selectable locking, unlocking, and update behavior.
      <br/>
      These and other features, aspects, and advantages of the present invention will become better understood with reference to the following description, appended claims, and accompanying drawings.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="12">
      For a more complete understanding of the present invention and for further advantages thereof, reference is now made to the following Detailed Description taken in conjunction with the accompanying drawings, in which:
      <br/>
      FIG. 1 is a pictorial representation of a data processing system which may be utilized to implement a method and system of the present invention;
      <br/>
      FIG. 2 illustrates a block diagram of system components that support the present invention;
      <br/>
      FIG. 3 illustrates a typical Graphical User Interface for manipulating a shared string in accordance with the present invention;
      <br/>
      FIG. 4 illustrates a flow chart depicting the steps required to obtain a lock on a shared string in accordance with the present invention;
      <br/>
      FIG. 5 illustrates a flow chart depicting the steps required to release a previously acquired lock on a shared string in accordance with the present invention; and
      <br/>
      FIG. 6 illustrates a flow chart depicting the steps required to update a shared string in accordance with the present invention.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="13">
      Referring to FIG. 1, there is depicted a graphical representation of a data processing system 8, which may be utilized to implement the present invention.
      <br/>
      As may be seen, data processing system 8 may include a plurality of networks, such as Local Area Networks (LAN) 10 and 32, each of which preferably includes a plurality of individual computers 12 and 30, respectively.
      <br/>
      Of course, those skilled in the art will appreciate that a plurality of Intelligent Work Stations (IWS) coupled to a host processor may be utilized for each such network.
      <br/>
      Each said network may also consist of a plurality of processors coupled via a communications medium, such as shared memory, shared storage, or an interconnection network.
      <br/>
      As is common in such data processing systems, each individual computer may be coupled to a storage device 14 and/or a printer/output device 16 and may be provided with a pointing device such as a mouse 17.
    </p>
    <p num="14">
      The data processing system 8 may also include multiple mainframe computers, such as mainframe computer 18, which may be preferably coupled to LAN 10 by means of communications link 22.
      <br/>
      The mainframe computer 18 may also be coupled to a storage device 20 which may serve as remote storage for LAN 10.
      <br/>
      Similarly, LAN 10 may be coupled via communications link 24 through a sub-system control unit/communications controller 26 and communications link 34 to a gateway server 28.
      <br/>
      The gateway server 28 is preferably an IWS which serves to link LAN 32 to LAN 10.
    </p>
    <p num="15">
      With respect to LAN 32 and LAN 10, a plurality of documents or resource objects may be stored within storage device 20 and controlled by mainframe computer 18, as resource manager or library service for the resource objects thus stored.
      <br/>
      Of course, those skilled in the art will appreciate that mainframe computer 18 may be located a great geographic distance from LAN 10 and similarly, LAN 10 may be located a substantial distance from LAN 32.
      <br/>
      For example, LAN 32 may be located in California while LAN 10 may be located within North Carolina and mainframe computer 18 may be located in New York.
    </p>
    <p num="16">
      Software program code which employs the present invention is typically stored in the memory of a storage device 14 of a stand alone workstation or LAN server from which a developer may access the code for distribution purposes, the software program code may be embodied on any of a variety of known media for use with a data processing system such as a diskette or CD-ROM or may be distributed to users from a memory of one computer system over a network of some type to other computer systems for use by users of such other systems.
      <br/>
      Such techniques and methods for embodying software code on media and/or distributing software code are well-known and will not be further discussed herein.
    </p>
    <p num="17">
      Referring now to FIG. 2, components of a system that support the present invention are illustrated.
      <br/>
      A plurality of processes interact with a network 200.
      <br/>
      A designated server process 201 is responsible for managing shared data in this environment.
      <br/>
      The server process 201 maintains information about a set of shared data elements that are currently available for client access and records the current value of each of these data elements.
      <br/>
      The server process 201 may optionally provide additional services such as persistence, transactional updates, and access control.
      <br/>
      However, these additional services are well understood in the prior art and are not discussed further herein.
    </p>
    <p num="18">
      A plurality of client processes, indicated by reference numerals 202, 203, and 204, can update a set of shared data.
      <br/>
      Within each of these client processes 202, 203 and 204, an application 210 is executed.
      <br/>
      The application 210 employs a set of Shared Data APIs (application programming interfaces) 211 for accessing and manipulating the set of shared data.
      <br/>
      Through these APIs 211, the application 210 can lock, update, and unlock shared data elements.
      <br/>
      These Shared Data APIs 211 are supported by a collaboration infrastructure library 212 associated with the client processes 202, 203, and 204.
    </p>
    <p num="19">
      It is to be understood that no assumption is made about the physical location of the various client and server processes.
      <br/>
      For example, a single host machine may execute multiple processes concurrently.
      <br/>
      Indeed, all client processes 202, 203, and 204 may execute on the same machine as the server process 201, in which case communication over the network 200 would not be required.
    </p>
    <p num="20">
      FIG. 3a shows one example of a graphical user interface (GUI) for manipulating a shared string in accordance with the present invention.
      <br/>
      A text field 300 displays the current value of the shared string.
      <br/>
      In this example, the shared string holds the value "8000." The user interface may optionally provide explicit control buttons 310, 320, and 330 to enable the local user to Lock, Unlock, and Update the shared string, respectively.
      <br/>
      As will become evident, the need for these buttons is determined by the choice of locking, unlocking, and update semantics selected by the user of the application.
      <br/>
      When the user obtains a lock on the shared string, meaning that no other user may concurrently update the string, the user interface may optionally signal the lock status by changing the rendering of the text field 300.
      <br/>
      For example, as shown in FIG. 3B, the GUI may change the background color (as indicated by hashing) of the shared text field 300 to reflect the lock status.
      <br/>
      Though not shown, the GUI may also signal the lock status when another user holds a lock on the string by, for example, shading the text area background using a different color.
      <br/>
      Though this interface has been shown with a particular graphical embodiment, it is to be understood that many alternative implementations are possible that provide equivalent functionality to the user.
    </p>
    <p num="21">
      A user obtains a lock on a shared string to prevent other users from simultaneously updating the shared string.
      <br/>
      In this way, simultaneous updates generated by different users cannot place the shared string in an inconsistent state.
      <br/>
      The shared string may be locked in one of three modes, namely Explicit Locking, Implicit Locking, or Deferred Locking.
      <br/>
      To support Explicit Locking, the graphical user interface provides a Lock button (e.g. element 310 of FIG. 3) or other control allowing the user to signal a desire to obtain a lock on the shared string.
      <br/>
      When the user clicks on the button, the collaboration infrastructure library immediately obtains a lock on behalf of the local user.
      <br/>
      When the application is configured to support Implicit Locking, the user is not provided with a Lock button.
      <br/>
      Instead, the collaboration infrastructure obtains a lock on behalf of the local user only after the user clicks on (e.g. gives focus to) the shared string.
      <br/>
      For example, with the interface of FIG. 3, a lock would be obtained when the user clicks on the text field 300.
      <br/>
      Finally, when Deferred Locking is being used, the collaboration infrastructure only obtains a lock on behalf of the local user when the user actually attempts to modify the shared string (e.g. by giving focus to the text field 300 and either inserting or deleting text).
    </p>
    <p num="22">
      Referring now to FIG. 4, a flow chart illustrates how the collaboration infrastructure obtains a lock on the shared string in accordance with the present invention.
      <br/>
      At decision block 400, it is determined whether or not the application has selected Explicit Locking.
      <br/>
      If the answer to decision block 400 is yes, then at decision block 410, it is determined whether or not the user has clicked on the Lock button (or other corresponding Lock control provided in the user interface).
      <br/>
      If the answer to block 410 is no, control returns to block 410.
      <br/>
      Otherwise, if the answer to decision block 410 is yes, the system obtains a lock at block 480 on the shared string, and the process terminates at block 490 by initiating the unlocking procedure, which will be subsequently described with respect to FIG. 5.
    </p>
    <p num="23">
      Continuing with FIG. 4, if the answer to decision block 400 is no, it is determined at decision block 420 whether or not the user has given input focus to the shared string field (300 in FIG. 3).
      <br/>
      If the answer to decision block 420 is no, control returns to block 420.
      <br/>
      If the answer to decision block 420 is yes, it is determined at decision block 430 whether or not the application has selected Implicit Locking.
      <br/>
      If the answer to decision block 430 is yes, control continues to block 480 where the system obtains a lock on the shared string and terminates at block 490 by initiating the unlocking procedure of FIG. 5.
    </p>
    <p num="24">
      If the answer to decision block 430 is no, then it is assumed that the application has selected Deferred Locking.
      <br/>
      At decision block 440, it is determined whether or not the user has attempted to modify the shared string.
      <br/>
      If the answer to decision block 440 is no, control returns to block 440.
      <br/>
      If the answer to decision block 440 is yes, control continues to block 480 where the system obtains a lock on the shared string and terminates at block 490 by initiating the unlocking procedure of FIG. 5.
      <br/>
      Although not shown, it is to be understood that the application may also opt to impose no locking on the shared string.
      <br/>
      In this case, the procedure of FIG. 4 is not executed.
    </p>
    <p num="25">
      Having obtained a lock on the shared string, the user unlocks the shared string to signal having no further plans to update the string and to enable other users to subsequently lock the shared string.
      <br/>
      The shared string may be unlocked in one of three modes, namely Explicit Unlocking, Implicit Unlocking, or Deferred Unlocking.
      <br/>
      To support Explicit Unlocking, the graphical user interface provides an Unlock button (e.g. element 320 of FIG. 3) or other control allowing the user to signal a desire to release the lock on the shared string.
      <br/>
      When the user clicks on the button, the collaboration infrastructure library immediately releases the previously acquired lock on behalf of the local user.
      <br/>
      When the application is configured to support Implicit Unlocking, the user is not provided with an Unlock button.
      <br/>
      Instead, the collaboration infrastructure releases the previously acquired lock only after the user removes focus from (e.g. clicks away from) the shared string.
      <br/>
      For example, with the interface of FIG. 3, a lock would be released when the user clicks away from the text field 300.
      <br/>
      Finally, when Deferred Unlocking is being used, the collaboration infrastructure automatically releases the lock previously acquired by the local user when the user has made no attempt to update the string within a given timeout period since acquiring the lock.
    </p>
    <p num="26">
      Referring now to FIG. 5, a flow chart illustrates how the collaboration infrastructure releases a previously acquired lock on a shared string in accordance with the present invention.
      <br/>
      At decision block 500, it is determined whether or not the application has selected Explicit Unlocking.
      <br/>
      If the answer to decision block 500 is yes, it is determined at decision block 510 whether or not the user has clicked on the Unlock button (or other corresponding Unlock control provided in the user interface).
      <br/>
      If the answer to decision block 510 is no, control returns to block 510.
      <br/>
      Otherwise, if the answer to decision block 510 is yes, the system commits any remaining updates (by sending them to the server process) and releases the lock on the shared string at block 580.
      <br/>
      The process terminates at block 590 by initiating the locking procedure of FIG. 4.
    </p>
    <p num="27">
      If the answer to decision block 500 is no, it is determined at decision block 520 whether or not the application has selected Implicit Unlocking.
      <br/>
      If the answer to decision block 520 is yes, it is determined at decision block 530 whether or not the user has taken input focus away from the shared string field (300 in FIG. 3).
      <br/>
      If the answer to decision block 530 is no, control returns to block 530.
      <br/>
      If the answer to decision block 530 is yes, then control continues to block 580 where the system commits open updates and releases the lock on the shared string and terminates at block 590 by initiating the locking procedure of FIG. 4.
    </p>
    <p num="28">
      If the answer to decision block 520 is no, then it is assumed that the application has selected Deferred Unlocking.
      <br/>
      At decision block 540, it is determined whether or not the user has held the lock for a timeout period.
      <br/>
      If the answer to decision block 540 is no, then it is determined that the user has not had sufficient opportunity to update the shared string, and control returns to block 540.
      <br/>
      If the answer to decision block 540 is yes, it is determined at decision block 550 whether or not the user has updated the shared string during an immediately preceding timeout period.
      <br/>
      If the answer to decision block 550 is yes, it is determined that the user is still actively updating the shared string, and control returns to block 550.
      <br/>
      If the answer to decision block 550 is no, then control continues to block 580 where the system commits open updates and releases the lock on the shared string.
      <br/>
      It then terminates at block 590 by initiating the locking procedure of FIG. 4.
      <br/>
      Although not shown, it is to be understood that if the application opts to impose no locking on the shared string, then the unlocking procedure of FIG. 5 is not executed.
    </p>
    <p num="29">
      As long as the user holds a lock on the shared string (or, if the application has opted for no locking, then at any time), the user may initiate updates to the shared string.
      <br/>
      These update messages are transmitted to the designated server process (200 of FIG. 2) and made available to other clients participating in the system.
      <br/>
      The shared string may be updated in one of three modes, namely Explicit Updating, Implicit Updating, or Deferred Updating.
      <br/>
      To support Explicit Updating, the graphical user interface provides an Update button (e.g. element 330 of FIG. 3) or other control allowing the user to signal a desire to update the shared string.
      <br/>
      When the user clicks on the button, the collaboration infrastructure library immediately extracts the current (edited) value of the shared text field (300 of FIG. 3) and transmits that information to the server process.
      <br/>
      When the application is configured to support Implicit Updating, the user is not provided with an Update button.
      <br/>
      Instead, the collaboration infrastructure transmits an update to the server process whenever the user inserts or deletes data from the shared text field (300 of FIG. 3).
      <br/>
      Finally, when Deferred Updating is being used, the collaboration infrastructure transmits updates to the server at regular intervals.
    </p>
    <p num="30">
      Referring now to FIG. 6, a flow chart illustrates how the collaboration infrastructure commits updates to the shared string in accordance with the present invention.
      <br/>
      At decision block 600, it is determined whether or not the application has selected Explicit Updating.
      <br/>
      If the answer to decision block 600 is yes, it is determined at decision block 610 whether or not the user has clicked on the Update button (or other corresponding Update control provided in the user interface).
      <br/>
      If the answer to block 610 is no, control returns to block 610.
      <br/>
      Otherwise, if the answer to block 610 is yes, the system transmits an update message at block 680 to the server process based on the current value shown in the text field.
      <br/>
      The procedure then returns to block 600.
    </p>
    <p num="31">
      If the answer to decision block 600 is no, it is determined at decision block 620 whether or not the application has selected Implicit Updating.
      <br/>
      If the answer to decision block 620 is yes, it is determined at decision block 630 whether or not the user has modified the shared string field.
      <br/>
      If the answer to decision block 630 is no, control returns to block 630.
      <br/>
      If the answer to decision block 630 is yes, control continues to block 680 where an update is transmitted to the server process before returning to block 600.
    </p>
    <p num="32">
      If the answer to decision block 620 is no, then it is assumed that the application has selected Deferred Updating.
      <br/>
      At decision block 640, it is determined whether or not the user has held the lock for a timeout period.
      <br/>
      If the answer to decision block 640 is no, then it is determined that the user has not yet had sufficient opportunity to update the shared string, and control returns to block 640.
      <br/>
      If the answer to decision block 640 is yes, it is determined at decision block 650 whether or not an update packet has been transmitted to the server process within the immediately preceding timeout period.
      <br/>
      If the answer to decision block 650 is yes, then it is determined that the timeout period has not yet elapsed, and control returns to block 650.
      <br/>
      If the answer to decision block 650 is no, then control continues to block 680 where an update is transmitted to the server process before returning to block 600.
    </p>
    <p num="33">
      A sample data sharing API (for applications written in the Java programming language) is shown below.
      <br/>
      Using this API, the application can select the desired locking, unlocking, and update semantics to apply to the shared string.
    </p>
    <p num="34">public interface SharedString</p>
    <p num="35">
      --
      <br/>
      -- +
      <br/>
      --      // Initialize the SharedString with the given TextField
      <br/>
      --      // GUI element and globally unique name
      <br/>
      --       public void init(TextField tf; String name);
      <br/>
      --       public static int EXPLICIT = 1;
      <br/>
      --       public static int IMPLICIT = 2;
      <br/>
      --       public static int DEFERRED = 3;
      <br/>
      --      // Set the locking semantics.
      <br/>
      A Button GUI element is provided if
      <br/>
      --      // Explicit Locking is selected.
      <br/>
      --  public void setLockMode(int mode,
      <br/>
      --                Button optionalLockButton);
      <br/>
      --      // Set the unlocking semantics.
      <br/>
      A Button GUI element is provided if
      <br/>
      --      // Explicit Unlocking is selected.
      <br/>
      A timeout value is provided if
      <br/>
      --      // Deferred Unlocking is selected.
      <br/>
      --  public void setUnlockMode(int mode,
      <br/>
      --                Button optionalUnlockButton,
      <br/>
      --                int optionalTimeout);
      <br/>
      --      // Set the updating semantics.
      <br/>
      A Button GUI element is provided if
      <br/>
      --      // Explicit Updating is selected.
      <br/>
      A timeout value is provided if
      <br/>
      --      // Deferred Updating is selected.
      <br/>
      --  public void setUpdateMode(int mode,
      <br/>
      --                Button optionalUpdateButton,
      <br/>
      --                int optionalTimeout);
      <br/>
      -- }
    </p>
    <p num="36">
      In this way, an application can select any combination of locking, unlocking, and update strategies.
      <br/>
      Moreover, different clients may select different semantics for a particular shared string element.
      <br/>
      Furthermore, within a single client, each shared string may be assigned to a different set of semantics.
    </p>
    <p num="37">Although the present invention has been described with respect to a specific preferred embodiment thereof, various changes and modifications may be suggested to one skilled in the art and it is intended that the present invention encompass such changes and modifications as fall within the scope of the appended claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What we claim is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>Within a networked environment containing multiple client application processes each coupled to a collaboration infrastructure library through a Shared Data API, a method for enabling the sharing of a data element wherein at least two of the multiple client applications which share the data element carry out the steps of:</claim-text>
      <claim-text>selecting a Locking strategy from a plurality of locking strategies provided by the Shared Data API for use with a GUI element of a corresponding one of the at least two of the multiple client applications associated with the shared data element; selecting an Unlocking strategy from a plurality of unlocking strategies provided by the Shared Data API for use with the GUI element of a corresponding one of the at least two of the multiple client applications associated with the shared data element; selecting an Updating strategy from a plurality of updating strategies provided by the Shared Data API for use with the GUI element of a corresponding one of the at least two of the multiple client applications associated with the shared data element;</claim-text>
      <claim-text>and utilizing the Shared Data API to control access to the shared data element through the corresponding GUI element of the corresponding one of the at least two of the multiple client applications as specified by the selected Locking strategy, Unlocking strategy and Updating strategy.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, wherein said step of selecting a Locking strategy further comprises: selecting an Explicit Locking strategy;</claim-text>
      <claim-text>and obtaining a Lock on said data element when a user explicitly clicks on a Lock GUI element.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1, wherein said step of selecting a Locking strategy further comprises: selecting an Implicit Locking strategy;</claim-text>
      <claim-text>and obtaining a Lock on said data element when a user gives input focus to a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 1, wherein said step of selecting a Locking strategy further comprises: selecting a Deferred Locking strategy;</claim-text>
      <claim-text>and obtaining a Lock on said data element when a user attempts to modify the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, wherein the plurality of locking strategies comprise an Explicit Locking strategy, an Implicit Locking strategy, and a Deferred Locking strategy.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein said step of selecting an Unlocking strategy further comprises: selecting an Explicit Unlocking strategy;</claim-text>
      <claim-text>and releasing a Lock on said data element when a user explicitly clicks on an Unlock GUI element.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1, wherein said step of selecting an Unlocking strategy further comprises: selecting an Implicit Unlocking strategy;</claim-text>
      <claim-text>and releasing a Lock on said data element when a user removes input focus from a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 1, wherein said step of selecting an Unlocking strategy further comprises: selecting a Deferred Unlocking strategy;</claim-text>
      <claim-text>and releasing a Lock on said data element when a user has made no modifications to the content of a data editing GUI element associated with the data element within a preceding timeout period.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 1, wherein the plurality of unlocking strategies comprise an Explicit Unlocking strategy, an Implicit Unlocking strategy, and a Deferred Unlocking strategy.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 1, wherein said step of selecting an Updating strategy further comprises: selecting an Explicit Updating strategy;</claim-text>
      <claim-text>and transmitting an update message when a user explicitly clicks on an Update GUI element.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 1, wherein said step of selecting an Updating strategy further comprises: selecting an Implicit Updating strategy;</claim-text>
      <claim-text>and transmitting an update message when a user changes the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 1, wherein said step of selecting an Updating strategy further comprises: selecting a Deferred Updating strategy;</claim-text>
      <claim-text>and transmitting an update message if no update message has been transmitted within a preceding timeout period.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 1, wherein the plurality of updating strategies comprise an Explicit Updating strategy, an Implicit Updating strategy, and a Deferred Updating strategy.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 1, further comprising the step of: optionally disabling said Locking strategy and said Unlocking strategy.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. Within a networked environment containing multiple client application processes each coupled to a collaboration infrastructure library through a Shared Data API, a system for enabling the sharing of a data element, wherein at least one of the multiple client applications which shares the data element comprises: means for selecting a Locking strategy from a plurality of locking strategies provided by the Shared Data API for use with a GUI element of the at least one of the multiple client applications associated with the shared data element; means for selecting an Unlocking strategy from a plurality of unlocking strategies provided by the Shared Data API for use with the GUI element of the at least one of the multiple client applications associated with the shared data element; means for selecting an Updating strategy from a plurality of updating strategies provided by the Shared Data API for use with the GUI element of the at least one of the multiple client applications associated with the shared data element;</claim-text>
      <claim-text>and means for utilizing the Shared Data API to control access to the shared data element through the corresponding GUI element of the at least one of the multiple client applications as specified by the selected Locking strategy, Unlocking strategy and Updating strategy.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The system of claim 15, wherein said means for selecting a Locking strategy further comprises: means for selecting an Explicit Locking strategy;</claim-text>
      <claim-text>and means for obtaining a Lock on said data element when a user explicitly clicks on a Lock GUI element.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The system of claim 15, wherein said means for selecting a Locking strategy further comprises: means for selecting an Implicit Locking strategy;</claim-text>
      <claim-text>and means for obtaining a Lock on said data element when a user gives input focus to a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The system of claim 15, wherein said means for selecting a Locking strategy further comprises: means for selecting a Deferred Locking strategy;</claim-text>
      <claim-text>and means for obtaining a Lock on said data element when a user attempts to modify the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The system of claim 15, wherein the plurality of locking strategies comprise an Explicit Locking strategy, an Implicit Locking strategy, and a Deferred Locking strategy.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The system of claim 15, wherein said means for selecting an Unlocking strategy further comprises: means for selecting an Explicit Unlocking strategy;</claim-text>
      <claim-text>and means for releasing a Lock on said data element when a user explicitly clicks on an Unlock GUI element.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The system of claim 15, wherein said means for selecting an Unlocking strategy further comprises: means for selecting an Implicit Unlocking strategy;</claim-text>
      <claim-text>and means for releasing a Lock on said data element when a user removes input focus from a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The system of claim 15, wherein said means for selecting an Unlocking strategy further comprises: means for selecting a Deferred Unlocking strategy;</claim-text>
      <claim-text>and means for releasing a Lock on said data element when a user has made no modifications to the content of a data editing GUI element associated with the data element within a preceding timeout period.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The system of claim 15, wherein the plurality of unlocking strategies comprises an Explicit Unlocking strategy, an Implicit Unlocking strategy, and a Deferred Unlocking strategy.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The system of claim 15, wherein said means for selecting an Updating strategy further comprises: means for selecting an Explicit Updating strategy;</claim-text>
      <claim-text>and means for transmitting an update message when a user explicitly clicks on an Update GUI element.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The system of claim 15, wherein said means for selecting an Updating strategy further comprises: means for selecting an Implicit Updating strategy;</claim-text>
      <claim-text>and means for transmitting an update message when a user changes the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The system of claim 15, wherein said means for selecting an Updating strategy further comprises: means for selecting a Deferred Updating strategy;</claim-text>
      <claim-text>and means for transmitting an update message if no update message has been transmitted within a preceding timeout period.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The system of claim 15, wherein the plurality of updating strategies comprises an Explicit Updating strategy, an Implicit Updating strategy, and a Deferred Updating strategy.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The system of claim 15, further comprising means for optionally disabling said Locking strategy and said Unlocking strategy.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. Within a networked environment containing multiple client application processes each coupled to a collaboration infrastructure library through a Shared Data API, a computer program product recorded on computer readable medium for enabling the sharing of a data element, wherein at least one of the multiple client applications which shares the data element comprises: computer readable means for selecting a Locking strategy from a plurality of locking strategies for use with a GUI element of the at least one of the multiple client applications associated with the shared data element; computer readable means for selecting an Unlocking strategy from a plurality of unlocking strategies provided by the Shared Data API for use with the GUI element of the at least one of the multiple client applications associated with the shared data element; computer readable means for selecting an Updating strategy from a plurality of updating strategies provided by the Shared Data API for use with the GUI element of the at least one of the multiple client applications associated with the shared data element;</claim-text>
      <claim-text>and computer readable means for utilizing the Shared Data API to control access to the shared data element through the corresponding GUI element of the corresponding one of the at least two of the multiple client applications as specified by the selected Locking strategy, Unlocking strategy and Updating strategy.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The program product of claim 29, wherein said computer readable means for selecting a Locking strategy further comprises: computer readable means for selecting an Explicit Locking strategy;</claim-text>
      <claim-text>and computer readable means for obtaining a Lock on said data element when a user explicitly clicks on a Lock GUI element.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The program product of claim 29, wherein said computer readable means for selecting a Locking strategy further comprises: computer readable means for selecting an Implicit Locking strategy;</claim-text>
      <claim-text>and computer readable means for obtaining a Lock on said data element when a user gives input focus to a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The program product of claim 29, wherein said computer readable means for selecting a Locking strategy further comprises: computer readable means for selecting a Deferred Locking strategy;</claim-text>
      <claim-text>and computer readable means for obtaining a Lock on said data element when a user attempts to modify the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The program product of claim 29, wherein the plurality of locking strategies comprises an Explicit Locking strategy, an Implicit Locking strategy, and a Deferred Locking strategy.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The program product of claim 29, wherein said computer readable means for selecting an Unlocking strategy further comprises: computer readable means for selecting an Explicit Unlocking strategy;</claim-text>
      <claim-text>and computer readable means for releasing a Lock on said data element when a user explicitly clicks on an Unlock GUI element.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The program product of claim 29, wherein said computer readable means for selecting an Unlocking strategy further comprises: computer readable means for selecting an Implicit Unlocking strategy;</claim-text>
      <claim-text>and computer readable means for releasing a Lock on said data element when a user removes input focus from a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The program product of claim 29, wherein said computer readable means for selecting an Unlocking strategy further comprises: computer readable means for selecting a Deferred Unlocking strategy;</claim-text>
      <claim-text>and computer readable means for releasing a Lock on said data element when a user has made no modifications to the content of a data editing GUI element associated with the data element within a preceding timeout period.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. The program product of claim 29, wherein the plurality of unlocking strategies comprises an Explicit Unlocking strategy, an Implicit Unlocking strategy, and a Deferred Unlocking strategy.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. The program product of claim 29, wherein said computer readable means for selecting an Updating strategy further comprises: computer readable means for selecting an Explicit Updating strategy;</claim-text>
      <claim-text>and computer readable means for transmitting an update message when a user explicitly clicks on an Update GUI element.</claim-text>
    </claim>
    <claim num="39">
      <claim-text>39. The program product of claim 29, wherein said computer readable means for selecting an Updating strategy further comprises: computer readable means for selecting an Implicit Updating strategy;</claim-text>
      <claim-text>and computer readable means for transmitting an update message when a user changes the content of a data editing GUI element associated with the data element.</claim-text>
    </claim>
    <claim num="40">
      <claim-text>40. The program product of claim 29, wherein said computer readable means for selecting an Updating strategy further comprises: computer readable means for selecting a Deferred Updating strategy;</claim-text>
      <claim-text>and computer readable means for transmitting an update message if no update message has been transmitted within a preceding timeout period.</claim-text>
    </claim>
    <claim num="41">
      <claim-text>41. The program product of claim 29, wherein the plurality of updating strategies comprises an Explicit Updating strategy, an Implicit Updating strategy, and a Deferred Updating strategy.</claim-text>
    </claim>
    <claim num="42">
      <claim-text>42. The program product of claim 29, further comprising computer readable means for optionally disabling said Locking strategy and said Unlocking strategy.</claim-text>
    </claim>
  </claims>
</questel-patent-document>