<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182066B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182066</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182066</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25526322" extended-family-id="42108835">
      <document-id>
        <country>US</country>
        <doc-number>08978712</doc-number>
        <kind>A</kind>
        <date>19971126</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08978712</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43165398</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>97871297</doc-number>
        <kind>A</kind>
        <date>19971126</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08978712</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  17/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <further-classification sequence="1">
        <text>704009000</text>
        <class>704</class>
        <subclass>009000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>704010000</text>
        <class>704</class>
        <subclass>010000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>707999005</text>
        <class>707</class>
        <subclass>999005</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>707999006</text>
        <class>707</class>
        <subclass>999006</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>707E17109</text>
        <class>707</class>
        <subclass>E17109</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30867</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30867</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99935</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99935</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99936</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99936</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>14</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>2</number-of-figures>
      <image-key data-format="questel">US6182066</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Category processing of query topics and electronic document content topics</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>OKAJIMA ATSUSHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4942526</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4942526</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>NAKAJIMA HIROYUKI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5181163</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5181163</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>GALLANT STEPHEN I</text>
          <document-id>
            <country>US</country>
            <doc-number>5325298</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5325298</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>FERGUSON GREGORY J</text>
          <document-id>
            <country>US</country>
            <doc-number>5649186</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649186</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>SCHUETZE HINRICH</text>
          <document-id>
            <country>US</country>
            <doc-number>5675819</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5675819</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>LIGHT JOHN</text>
          <document-id>
            <country>US</country>
            <doc-number>5774888</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5774888</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>LIGHT JOHN</text>
          <document-id>
            <country>US</country>
            <doc-number>5778363</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5778363</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>BROWN STEPHEN J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5887133</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5887133</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corp.</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Marques, Joaquin M.</name>
            <address>
              <address-1>Greenwich, CT, US</address-1>
              <city>Greenwich</city>
              <state>CT</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Soucar, Steven J.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Dougherty, Anne Vachon</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Amsbury, Wayne</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system for tailoring user queries and for categorizing and searching metadata about content provided on the internet and/or intranet for delivery in accordance with customized user profiles.
      <br/>
      The method and system categorizes query content and document content to facilitate the collection, storage and usage of same.
      <br/>
      Query content and document content are tokenized, vectorized, and provided for comparison processing by the inventive method.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">
      This invention relates to the field of electronic content provision.
      <br/>
      More specifically, it relates to gathering related content from internet and intranet sources and providing access to same in response to user requests.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      A huge quantity of information is being continuously created and made available via electronic communications systems.
      <br/>
      There is so much information that it is simply not possible for an individual person to read it all.
      <br/>
      On the other hand, it is imperative that certain items of information reach certain people.
      <br/>
      Much of the electronically-provided news information ages rapidly, such that it loses its relevancy in a matter of days, or even a matter of hours (e.g., stock market information).
      <br/>
      Each person has different needs for information, and requires access to a different subset of the available information.
      <br/>
      In light of the foregoing, there is clearly a need for a system and method for rapidly accessing categorized electronic information.
    </p>
    <p num="3">
      One aspect of the problem arises because the information is being created in many different places.
      <br/>
      News articles about events in the world or business community, and articles written for newspapers, magazines and journals, can generally be obtained through various content providers, who frequently aggregate the information from a number of sources into single continuous electronic streams.
      <br/>
      No content provider today, however, provides access to all available information, so there is a trade-off between full access and complexity.
      <br/>
      Moreover, an individual user is frequently forced to subscribe to a host of services in order to obtain the information which is generated from different sources, in different countries, and in various languages.
      <br/>
      Subscribing to many services to some extent negates the benefits realized by the content aggregation by providers, since the user must then often filter through multiple copies of the same documents.
    </p>
    <p num="4">
      Internally, organizations face similar issues.
      <br/>
      Memos, announcements, documents of various kinds, and intranet web content are created at multiple locations throughout an organization, yet are generally not readily available to all members of the organization.
      <br/>
      Therefore, the process of collecting the information from all points of origins is a key issue, along with categorization and controlled dissemination of that information.
    </p>
    <p num="5">
      Another aspect of the problem is the actual matching process, comprising matching the collected and categorized content with an individual user's interests.
      <br/>
      For matching to work, an individual user must be able to express a diverse set of interests, not just one interest.
      <br/>
      A language of some kind is necessary to provide a medium for this expression of the user's interest.
      <br/>
      Further, a system is needed to capture the language and apply it to the items of information.
      <br/>
      Moreover, the language must embody some kind of high level semantic knowledge, since past word-search-based systems have fallen short of a satisfactory solution.
      <br/>
      The ability to express, capture and apply a person's interests or needs is a critical feature of the problem.
    </p>
    <p num="6">
      Finally, there is a need to deliver the information to people who have expressed an interest.
      <br/>
      The primary requisites for delivery are making sure that access to the information is convenient, even in dynamic situations, and making sure that delivery can occur quickly once the information becomes available.
      <br/>
      Moreover, people are increasingly mobile and have varied styles of working and of accessing and processing information.
      <br/>
      An effective delivery system will therefore require that the means of access be ubiquitous, that multiple means of access be available, and that delays in making the information available be minimized.
    </p>
    <p num="7">It is therefore an objective of the present invention to provide a system for gathering, categorizing, and delivering electronic content to users in response to user requests.</p>
    <p num="8">It is another objective of the invention to provide a system and method for gathering content from both inside (i.e., intranet) and outside (i.e., internet) sources and categorizing same for provision in response to customized user requests.</p>
    <p num="9">Yet another objective of the present invention is to provide a customer with the ability to embed user interest and delivery mechanisms into customer applications.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="10">These and other objectives are realized by the present invention which provides a method and system for categorizing metadata about content provided via the internet or intranet; for categorizing user query content; and for matching and delivering categorized information tailored to customized user profiles.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="11">
      The invention will now be further detailed with specific reference to the appended Figures wherein:
      <br/>
      FIG. 1 provides a schematic illustration of an implementation of the present invention.
      <br/>
      FIG. 2 provides a schematic illustration of the intranet side of one embodiment of the inventive system.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="12">
      FIG. 1 provides a schematic overview of one implementation of the present invention.
      <br/>
      The implementation can be viewed as having two sides, an external side comprising the sources, content providers and System Server, and an internal side comprising the customer's site (including at least one server for the customer's intranet), internal sources and end user sites.
      <br/>
      As detailed therein, sources 11 provide electronic content (e.g., articles) on-line to content providers 12.
      <br/>
      The System Server, 10, gathers electronic content from content providers, as well as directly from sources, if necessary.
      <br/>
      At the System Server, the electronic content is categorized, with duplicate copies eliminated, and is stored in so-called "channels" of information.
      <br/>
      Each channel represents a particular category or group of categories of related information.
      <br/>
      The categorization of document content is generally done without reference to known user profiles or prejudices, although the categorization can be influenced by known or expected user query categories.
    </p>
    <p num="13">
      On the so-called "internal" side of the inventive system, the Customer Intranet Server 14, is in communication with not only the outside System Server, but also with internal sources 15 and at least one end user 16.
      <br/>
      The end users may be employees of the customer or clients of the customer who have contracted or otherwise arranged for receipt of information which has been accumulated, categorized, and disseminated from the Customer Intranet Server site 14.
    </p>
    <p num="14">
      An end user 16 will specify the areas of interest for which that end user wishes to obtain electronic information.
      <br/>
      Unlike prior art systems which allowed only minimal user query input, often limited to single word entries for simple word searching, the present system assembles a complex user query including the specification of multiple disparate topics of interest.
      <br/>
      The user profile is created by system components which are located at the Customer Intranet Server 14. "Creation" of the user profile involves not only the extension of user-input language, but also the elimination of non-critical language, inclusion of semantic knowledge, and cross-relating of user interest topics.
      <br/>
      Query development is further detailed below.
      <br/>
      Once the user profile has been developed, it is stored at the Customer Intranet Server for matching to assembled and categorized content.
      <br/>
      The system can be programmed to conduct on-going matching (i.e., checking every new document entry for a match with the user profile), periodic matching (e.g., every 12 hours), or matching only upon user prompting (e.g., only when a user connects to the Customer and asks for an update).
    </p>
    <p num="15">
      Continual or periodic categorization of external electronic content is the task of the system components which can be located at the System Server 10.
      <br/>
      The System Server receives input from the content providers 12, as well as possibly from the internal sources 15 via the Customer Intranet Server 14.
      <br/>
      Receipt of input from both external and internal sources can be a passive process, whereby the documents are continuously or periodically supplied to the System Server, or an active process, whereby system crawler components seek out the documents.
    </p>
    <p num="16">
      The inventive system preferably includes provision to the customer site of at least one internal crawler which will provide a totally automated way to bring their entire distributed network resources into the system.
      <br/>
      The crawlers crawl through a customer's internal network and retrieve documents from various sources, distinguished by the technologies which were used to store the information.
    </p>
    <p num="17">
      Documents from the internal sources are assembled and categorized at the Customer Internet Server, where a Channel Map is created containing a list of web servers, directories and other targets which have been or are to be crawled.
      <br/>
      A Channel Map can be constructed at the System Server as well.
      <br/>
      Each entry in the Channel Map may include a list of channels in which web pages and documents from the respective server and directory are to appear.
      <br/>
      Table 1 provides a sample Channel Map for a fictitious semiconductor manufacturer:
    </p>
    <p num="18">
      --
      <br/>
      -- TYPE    SERVER         DIRECTORY          CHANNELS
      <br/>
      -- Web     HR             /publish/benefits/401k 401k
      <br/>
      -- Web     HR             /publish/jobopenings Jobs
      <br/>
      -- Web     Marketing      /publish/product/specs Product Specs
      <br/>
      -- Web     www.badco.com  /pub/productspecs  Competition Specs
      <br/>
      -- Web     www.goodco.com /pub/products/electrnic Customer Products
      <br/>
      -- PCFile  engineering    /projects/chipdesigns Chip Designs
      <br/>
      -- PCFile  marketing      /reports/companalysis Competitive Anly.
      <br/>
      -- FTP     engineering    /projects/status   Status Reports
      <br/>
      -- Notes   engineering    /specs/chipspeed   A1200 Design
    </p>
    <p num="19">
      FIG. 2 provides a schematic illustration of the sources accessible to the Customer Intranet Server of the fictitious company, directly or through the System Server, and the channels that result from receiving or crawling those sources.
      <br/>
      Information gathered from external sources will also be mapped to the established channels, so that an end user can readily access all relevant information in a category or channel as the result of a single query.
    </p>
    <p num="20">
      While some amount of categorization may be straightforward, such as those above-noted examples wherein any information obtained from a certain source will necessarily be provided on a given channel (i.e., with sites or site directories being mapped to the channels), the bulk of document categorization requires intensive analysis of the document contents.
      <br/>
      In addition to the crawlers which automatically funnel documents obtained from certain sources into pre-established channels, there are two other primary means by which documents are categorized.
      <br/>
      The first, and most rudimentary, is categorization by manual user interface, whereby a system administrator (or even document author) identifies the document to be loaded into the server and identifies the channels in which the document is to appear.
      <br/>
      The second, more complex, means is automatic categorization by content filtering, which is conducted by system components located at either the Customer Intranet Server or the System Server 10, the details of which are further provided below and in co-pending applications, Ser.
      <br/>
      No. 08/979,248, entitled "Method and System for Electronic Document Content or Query Content Filtering", and Ser.
      <br/>
      No. 08/980,075, entitled "Content Filtering for Electronic Documents Generated in Multiple Foreign Languages", which are assigned to the present assignee, and are being filed on even date herewith.
      <br/>
      Such automatic categorization can also be utilized at the Customer Intranet Server for the purpose of categorizing internal documents into channels, which may match or be unique from the channels provided by the System Server.
      <br/>
      Such channel definitions can be applied as well to documents received from the System Server to fill the customer-defined channels with news or other external documents.
      <br/>
      After query processing and document content categorization, it is preferable to analyze the categories to ascertain if other relationships exist among the categories, which relationships themselves may be identified as new categories or channels, which is the subject of the present invention.
      <br/>
      The foregoing co-pending applications are incorporated by reference herein, as is co-pending patent application Ser.
      <br/>
      No. 08/979,861 entitled "Method and System for Providing Access to Categorized Information from OnLine Internet and Intranet Sources," which is assigned to the present assignee.
    </p>
    <p num="21">
      Once documents from both the internal and external sources have been categorized/assigned channels, both the documents and the assigned channels are stored in a local database at the Customer Intranet Server or associated customer location.
      <br/>
      Inventive components at the Customer Intranet Server match the channels assigned to each of the incoming documents with the user's interests as found in the user profile.
      <br/>
      Each document is then made available for access by, or is sent to, the user whose interests it matches.
    </p>
    <p num="22">
      The System Server's above-noted functions may be provided as part of a customer intranet, wholly outside of the customer domain, or divided in function between the two locations.
      <br/>
      In the "outside" example, all document collection and categorization would be done at the System Server as a service of the provider.
      <br/>
      Documents found on the external internet, as well as those which may be supplied from the customer's own intranet and/or databases, would be analyzed and categorized at the provider location.
      <br/>
      In the instance where the customer wishes to additionally be a provider to end users, two alternative scenarios are possible.
      <br/>
      Under the first scenario, an outside provider would still assemble and categorize documents from outside sources and make them available at the customer's server.
      <br/>
      The customer's server would also be adapted to perform assembly and categorization of "in-house" documents, merging of the in-house assemblage with the categorized documents from outside sources, matching the resultant merged documents to user request profiles, and disseminating the matching results to the user.
      <br/>
      The second alternative implementation would locate all categorization functionality at the customer location.
      <br/>
      In all three implementations, the customer location would retain the capability for receipt of user request input, creation and storage of the user profile, matching of the user profile to the categories or channels into which the documents are placed, and provision of the matched documents for end user review.
    </p>
    <p num="23">The customer site is provided with the capability for building applications to create a series of different user interfaces with different interaction means, different restrictions for user access (e.g., providing some users access to only documents from outside sources, while others would have access to both externally-obtained and internally-generated documents), and different levels of query and content complexity.</p>
    <p num="24">
      For the detailed descriptions of the processing "stages," including user query analysis and profile creation, document categorization, and matching, it is to be noted that the same types of analyses can frequently be applied at each stage.
      <br/>
      For example, finding relationships between two seemingly disparate user query subject categories can parallel the effort to identify commonality of subject matter from two input documents, as well as a subsequent effort to match the profile to a category/channel.
      <br/>
      Therefore, where appropriate, the ensuing processes will reference one, two or all of profile analysis, document content categorization, and matching stages.
    </p>
    <p num="25">
      Users of the system initially specify which topics are of interest.
      <br/>
      This specification takes the form of a simple subscription to pre-defined user categories, a modified subscription whereby the user can alter or add to the pre-defined user categories, a user-customized set of queries, or any combination of the foregoing.
      <br/>
      Each query represents a topic, and can additionally contain boolean, fuzzy, proximity and/or hierarchical operators.
      <br/>
      A set of topics preferred by a user is know as a user profile.
      <br/>
      The present method reduces each query to one or more vector entries with the entry's index into the vector corresponding to a hash of the query's textual expression of the importance of that query to the overall topic/profile.
      <br/>
      A query can be either a single token (word or phrase) or a combination of tokens which includes boolean, fuzzy, proximity and/or hierarchical operators.
      <br/>
      Token IDs are assigned to each query item as hereinafter detailed.
    </p>
    <p num="26">
      Automatic query processing, as well as document content categorization, is optimized in the present invention by first tokenizing the content thereof.
      <br/>
      In such a tokenization process, all the word/phrases are first identified as units, then stemmed.
      <br/>
      After all stop words and phrases are filtered out, only a few of the original word/phrases are left.
      <br/>
      These surviving words/phrases are called tokens.
      <br/>
      The tokens are usually just the stems of the original words, or made-up labels which correspond to phrases.
      <br/>
      The stems or made-up labels are referred to as "terms".
      <br/>
      Terms are strings, and since the system must handle quite a few thousand terms, the total memory which can be consumed by terms could take up a significant amount of computer memory.
      <br/>
      Therefore, a hash function is provided to assign unique token IDs to the terms (which may also consist of expressions containing words and phrases as terms combined with a variety of query operations) found in the documents and queries.
      <br/>
      The term strings are replaced by 32 bit integers.
      <br/>
      A "reverse dictionary" can be maintained which comprises a lexicon with token IDs as the keys and the words, phrases, queries as the values.
      <br/>
      However, if the need is to mark the document with categories, and not to catalog and retrieve based on the specific tokens matched, a lexicon will not be needed.
      <br/>
      Clearly, when comparisons are being made, comparisons of 32 bit integers will be significantly faster than the prior art string comparisons.
      <br/>
      Textual messages are likewise mapped to vectors using the same procedures as were used for the topics, above.
      <br/>
      All vectors are then normalized.
      <br/>
      Classification and matching are thereby reduced to vector processing.
    </p>
    <p num="27">
      Query processing suffers from the drawback that, even with tokenizing and vectorizing, a great deal of redundancy may be contained in large query sets.
      <br/>
      The redundancy increases CPU and memory consumption requirements for any of the categorization processes based on the query sets.
      <br/>
      Query processing can be streamlined by recognizing possible hierarchical relations between queries in a set that has been previously indexed and vectorized, some of which may correspond to known topic categories or channels.
      <br/>
      In order to streamline the query processing, after vectorization, the following steps are implemented:
    </p>
    <p num="28">
      First, one calculates the cosine measure (dot product) of every query vector against every other vector.
      <br/>
      This will provide a similarity measure of every query against every other query in the database.
      <br/>
      The system stores all similarity measures that equal or exceed a pre-set threshold in a sparse matrix.
      <br/>
      Those query vectors having similarity measures with scores below the threshold are assumed to have nothing in common, and therefore, are assigned an implicit similarity measure equal to zero.
    </p>
    <p num="29">
      Standard clustering methods are applied to the sparse matrix of similarity measures.
      <br/>
      Applying a second threshold, the clusters are divided into two groups comprising (a) clusters of vectors whose similarity measures exceeds or equals the second threshold; and (b) clusters of vectors whose similarity measures do not exceed the second threshold.
      <br/>
      Membership in group (a) or (b) is determined by comparison to a predefined similarity threshold say, for example, 60%.
      <br/>
      Thus, those queries in a cluster that share greater than or equal to 60% of their tokens belong to group (a), while those that don't belong to group (b).
      <br/>
      The differences between groups (a) and (b) is that the queries in (b) are not as strongly related as those in (a).
    </p>
    <p num="30">
      The query vectors in group (a) share most of their terms.
      <br/>
      When shown a cluster of such queries, the information analyst must ask the following questions: "Are these queries related to one another?"; "If they are related, are they part of the same branch or related branches in the topic hierarchy?"; "If they are not currently related to one another, should they be related?"; "If so, what is the best way to relate them?"; and, "If they should not be related, what is the best way to avoid this clustering (overlap) of queries and of discriminating between them in the future?".
    </p>
    <p num="31">
      The queries in groups (a) and (b) may indicate to the information analyst: new links between previously unrelated pre-existing categories (forming new hierarchy branches); a strengthening in the links between previously related categories (consolidation and strengthening of existing hierarchy branches); or, new links between pre-existing categories and entirely new categories (again, forming new hierarchy branches).
      <br/>
      If any bogus links are discovered between totally unrelated queries, those links must be avoided by refining/enhancing the queries.
    </p>
    <p num="32">
      Using the results of the clustering process, the information analyst can be presented with a list of queries in each cluster in group (a) or (b) and decide whether the queries truly have anything in common or not.
      <br/>
      If the queries already belong in branches of the same hierarchy, their tags will make this fact obvious, and the analyst may skip further analysis.
      <br/>
      If, on the other hand, the tags do not show any relationship between the queries, the analyst may decide that further analysis of the individual queries is required.
    </p>
    <p num="33">
      Finally, if two or more queries in a cluster have quite a few things in common, the common terms can be made into a single query vector and this query vector can be replaced by a single term in all of the original queries.
      <br/>
      This single replacement term corresponds to and represents the new query vector.
      <br/>
      The foregoing procedure will reduce the amount of redundancy in the system.
      <br/>
      Of course, the information analyst must first decide that the terms involved are truly common to all the queries and that those terms will likely remain common throughout the life of the queries before consolidating them into a common query vector.
    </p>
    <p num="34">
      In a similar manner, vector clustering can be utilized to automatically find new topic categories among the document content categories.
      <br/>
      Again assuming that all documents have been pre-indexed and converted into normalized vectors, one calculates the cosine measure (dot product) of every document vector against every other document vector.
      <br/>
      This will provide a similarity measure of every document against every other document in the database.
      <br/>
      The system stores those similarity measures that equal or exceed a preset threshold in a sparse matrix.
      <br/>
      Those documents vectors having similarity measures with scores below the threshold are assumed to have nothing in common, and therefore are assigned an implicit similarity measure equal to zero.
    </p>
    <p num="35">
      Once again, standard clustering methods are applied to the sparse matrix of similarity measures.
      <br/>
      Each cluster produced will fall into one of the following groups: (A) document vectors in the cluster mostly share common pre-existing category tags; (B) document vectors in the cluster share some common pre-existing tag categories; (C) document vectors in the cluster share no category tags.
      <br/>
      The documents in group (A) closely match well known, pre-existing categories.
      <br/>
      Thus, at first sight, they hold little interest to information analysts.
      <br/>
      But, on further analysis, the analyst may find that much can be learned from this group.
      <br/>
      For example, the analyst may ask: how closely related are these pre-existing categories that they show up in almost every document in the group?
    </p>
    <p num="36">
      The document in groups (A) and (B) may indicate: new links between previously unrelated pre-existing categories; a strengthening in the links between previously related categories; or, new links between pre-existing categories and entirely new categories.
      <br/>
      The documents in group (C) indicate the existence of previously unknown categories and of links between them.
      <br/>
      This is the most important category for the information analyst.
    </p>
    <p num="37">
      For each cluster found, and for each group of documents of type (A) and (B) within that cluster, and for each matched category within a group, a summary vector is calculated from all the document vectors in the group matching that category.
      <br/>
      A summary vector is a single vector that best represents a cluster of neighboring document vectors.
      <br/>
      It represents the average vector in the cluster and is calculated by taking the centroid of all of the vectors in the cluster.
      <br/>
      This summary vector is refined by a process of comparison with other summary vectors.
      <br/>
      The final, refined summary vector represents the query which will retrieve those document with the highest recall and precision possible when issued against the corpus of documents stored in the document database.
      <br/>
      This new query vector is then compared to the one associated with the original category, to determine to what extent they match.
      <br/>
      After this process, if there is enough of an overlap, an improved version of the original query vector associated with the category is produced.
      <br/>
      If, on the other hand, they only partially overlap, a new category and query is produced together with an improved version of the original query vector associated with the original category.
      <br/>
      The new link between them is implicit in the terms which both query vectors share.
    </p>
    <p num="38">
      For each cluster found, and for each group of document of type (C) within that cluster, a summary vector is calculated from all the document vectors in the group.
      <br/>
      This summary vector is refined by the process of comparison with other summary vectors.
      <br/>
      The final, refined summary vector represents the query which will retrieve those documents with the highest recall and precision possible when issued against the corpus of documents stored in the document database.
      <br/>
      This query also represents a new category.
    </p>
    <p num="39">
      Every new category requires a new tag/label that best represents that category.
      <br/>
      This tag is put together initially by concatenating the most representative (i.e., highest score) terms of the query associated with the category.
      <br/>
      A quick scan of the text of documents retrieved by the query will locate those representative terms in their original context, will determine if those terms are part of any collocations which are not part of any term yet, and, if so, will replace those terms in the label with their most common collocations.
      <br/>
      The final label is scanned by a small parser specializing in noun and verb phrases as may appear in a category label, to make sure that it is syntactically correct.
      <br/>
      Refined categories have their labels/tags enhanced by a process identical to the one described immediately above.
    </p>
    <p num="40">
      The invention has been described with reference to several specific embodiments.
      <br/>
      One having skill in the relevant art will recognize that modifications may be made without departing from the spirit and scope of the invention as set forth in the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>Having thus described our invention, what we claim as new and desire to secure by Letters Patent is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for categorizing electronic document content of a plurality of documents for matching to user requests comprising the steps of:</claim-text>
      <claim-text>parsing said document content into a plurality of items, each of said items comprising a contiguous phrase of more than two words located within said document; assigning each of said plurality of items at least one of a plurality of token IDs; vectorizing said plurality of token IDs into a plurality of document vectors; calculating the cosine measure of each of said document vectors against each other of said document vectors to provide a plurality of similarity measures, one similarity measure for each document against each other of said plurality of documents.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 further comprising the steps of: comparing each of said similarity measures to a pre-set threshold.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2 further comprising storing each of said similarity measures which exceeds said pre-set threshold in a sparse matrix.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3 further comprising clustering said stored similarity measures in a plurality of clusters according to said cosine measures.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 4 further comprising calculating a summary vector for each of said plurality of clusters.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 5 further comprising the steps of: identifying said summary vector as representing a new category for said documents in said cluster;</claim-text>
      <claim-text>and creating a new category tag for said documents in said cluster.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. A method for categorizing user input query content for matching user requests to electronic document content comprising the steps of: parsing said query content into a plurality of items, each of said items comprising a contiguous phrase of more than two words located within said document; assigning each of said plurality of items at least one of a plurality of token IDs; vectorizing said plurality of token IDs into a plurality of query vectors; calculating the cosine measure of each of said query vectors against each other of said query vectors to provide a plurality of similarity measures, one similarity measure for each query against each other of said plurality of queries.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7 further comprising the steps of: comparing each of said similarity measures to a pre-set threshold.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 8 further comprising storing each of said similarity measures which exceeds said pre-set threshold in a sparse matrix.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 9 further comprising clustering said stored similarity measures in a plurality of clusters according to said cosine measures.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 10 further comprising calculating a summary vector for each of said plurality of clusters.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 11 further comprising the steps of: identifying said summary vector as representing a new category for said queries in said cluster; graphically presenting said clusters for human analysis;</claim-text>
      <claim-text>and creating a new category tag for said queries in said cluster.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A method for categorizing electronic document content of a plurality of documents for matching to user requests comprising the steps of: parsing said document content into a plurality of items, each of said items comprising one of a word or a contiguous phrase of words located within said document; assigning to said plurality of items at least one of a plurality of token IDs, said token IDs representing a plurality of items; vectorizing said plurality of token IDs into a plurality of document vectors; calculating the cosine measure of each of said document vectors against each other of said document vectors to provide a plurality of similarity measures, one similarity measure for each document against each other of said plurality of documents.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A method for categorizing user input query content for matching user requests to electronic document content comprising the steps of: parsing said query content into a plurality of items, each of said items comprising one of a word or a contiguous phrase of words located within said document; assigning to said plurality of items at least one of a plurality of token IDs, each of said token IDs representing a plurality of items; vectorizing said plurality of token IDs into a plurality of query vectors;</claim-text>
      <claim-text>and calculating the cosine measure of each of said query vectors against each other of said query vectors to provide a plurality of similarity measures, one similarity measure for each query against each other of said plurality of queries.</claim-text>
    </claim>
  </claims>
</questel-patent-document>