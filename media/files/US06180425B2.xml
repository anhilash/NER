<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06180425B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06180425</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6180425</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="26688346" extended-family-id="42029309">
      <document-id>
        <country>US</country>
        <doc-number>09121247</doc-number>
        <kind>A</kind>
        <date>19980723</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09121247</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43055004</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>12124798</doc-number>
        <kind>A</kind>
        <date>19980723</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09121247</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>84290397</doc-number>
        <kind>A</kind>
        <date>19970417</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1997US-08842903</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>US</country>
        <doc-number>1623996</doc-number>
        <kind>P</kind>
        <date>19960419</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1996US-60016239</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G01R  31/319       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>319</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G11C   7/10        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>438015000</text>
        <class>438</class>
        <subclass>015000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>438014000</text>
        <class>438</class>
        <subclass>014000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>438017000</text>
        <class>438</class>
        <subclass>017000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G01R-031/319C1</text>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>031</main-group>
        <subgroup>319C1</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G11C-007/10L</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>007</main-group>
        <subgroup>10L</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G01R-031/31905</classification-symbol>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>31905</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G01R-031/31926</classification-symbol>
        <section>G</section>
        <class>01</class>
        <subclass>R</subclass>
        <main-group>31</main-group>
        <subgroup>31926</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-007/1006</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>1006</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S01R-031/319S4</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>38</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>5</number-of-drawing-sheets>
      <number-of-figures>6</number-of-figures>
      <image-key data-format="questel">US6180425</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Data transfer circuit</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>EBIHARA HEIHACHIRO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4224531</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4224531</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>SUZUKI HIROAKI</text>
          <document-id>
            <country>US</country>
            <doc-number>5256918</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5256918</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>RUSSO ANDREW P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5293487</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5293487</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>IKAWA TATSUO</text>
          <document-id>
            <country>US</country>
            <doc-number>5324993</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5324993</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>PENG YENG-KAUNG, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5787190</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5787190</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>WOLF MICHAEL A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4833655</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4833655</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>CRITTENDEN BRENT S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5400343</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5400343</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>LIN CHONG M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5630091</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5630091</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>84290397</doc-number>
              <kind>A</kind>
              <date>19970417</date>
            </document-id>
          </parent-doc>
        </relation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>5898628</doc-number>
              <kind>A</kind>
            </document-id>
          </parent-doc>
        </relation>
      </division>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/016,239</doc-number>
          <date>19960419</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/016239</doc-number>
          <date>19960419</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Altera Corporation</orgname>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>INTEL</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Mielke, Bruce</name>
            <address>
              <address-1>Los Altos Hills, CA, US</address-1>
              <city>Los Altos Hills</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Hendricks, Matthew C.</name>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Townsend and Townsend and Crew LLP</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Picardat, Kevin M.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A method and apparatus for maximizing the data transmission rate from a source data path to selected channels of a destination data path having a different width from the source data path.
      <br/>
      In a preferred embodiment, the data transfer circuit includes at least one transfer register that is typically of the same width as the data source.
      <br/>
      Each bit from the transfer register is input to a plurality of multiplexers, each of which typically selects a single bit and outputs the selected bit to the destination.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>CROSS-REFERENCE TO RELATED APPLICATION</heading>
    <p num="1">
      This application is a division of and claims the benefit of U.S. application Ser.
      <br/>
      No. 08/842,903, filed Apr. 17, 1997, now U.S. Pat. No. 5,898,628, which claims priority from Provisional Application No. 60/016,239, filed Apr. 19, 1996, both of which are hereby incorporated by reference.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      The present invention relates generally to data transfer circuits.
      <br/>
      Specifically, a method and apparatus are provided for maximizing the data transmission rate from a source data path to selected channels of a destination data path having a different width from the source data path.
    </p>
    <p num="3">
      Inefficiencies naturally occur when data from a source of one width is transmitted to a destination of a different width.
      <br/>
      If the data destination has a narrower width than the data source, each data cycle transmitting the data from the source to the destination will waste bits.
      <br/>
      Looking at circuit configuration 100 in FIG. 1, for example, the width of data source 102 is 16 bits, while the width of destination 104 is 4 bits.
      <br/>
      In a typical application, data source 102 and destination 104 may be registers for storing data.
      <br/>
      Thus, only 4 bits will be transmitted in one data cycle from source to destination, meaning that 12 bits are wasted, assuming that data bus 106 has a total capacity of 16 bits.
      <br/>
      A complete transfer of data from source 102 to destination 104 will therefore require four data cycles on bus 106, which is very inefficient since it requires four transmissions to the same destination.
    </p>
    <p num="4">
      Similarly, when the data destination is wider than the data source, the destination is typically mapped into multiple ports (addresses), with the data being sent in multiple cycles to the different ports, again resulting in wasted bits in each data transmission.
      <br/>
      Looking at the circuit configuration 200 in FIG. 2, for example, the width of data source 202 is 16 bits, while the width of each destination 204 and 206 is also 16 bits.
      <br/>
      However, the first destination address 204 requires only 8 bits of source data and the second destination address 206 also requires 8 bits of source data.
      <br/>
      Thus, the first data cycle transmits 8 bits of data from source 202 to the first destination address 204, wasting 8 bits of source data that could have been transmitted across 16-bit wide data bus 208.
      <br/>
      The second data cycle then transmits another 8 bits of data from source 202 to the second destination 206, again wasting 8 bits of source data that could have been transmitted on data bus 208.
      <br/>
      Thus, two data cycles are needed for the entire data transmission, though data bus 208 could have handled the contents of the entire data source 202 in only one data cycle.
    </p>
    <p num="5">
      The problem described above is of particular concern when testing integrated circuit chips.
      <br/>
      Integrated circuit chips customarily undergo exhaustive testing during the manufacture process prior to encapsulation in a package or use of the package on a circuit board in order to ensure reliable operation of the chip.
      <br/>
      The chip die undergoes functional and parametric testing in at least two different stages of the manufacturing process.
      <br/>
      At one stage, a semiconductor wafer containing multiple chip dies is probed by a probe tester that tests each of the dies individually.
      <br/>
      At another stage, after an individual chip die has been encapsulated in a package, a programmable package tester can be used to thoroughly test the integrated circuit chip package.
    </p>
    <p num="6">
      In a preferred digital test system, testing is controlled by a control unit, which may be, for example, a central processing unit (CPU) or a dedicated block of control logic.
      <br/>
      These test systems generally include a data source, usually a memory space divided into separate tester channels, for storing state information for each pin of the integrated circuit chip.
      <br/>
      The stored DUT input and output states are commonly referred to as test vectors.
      <br/>
      In order to perform a functional test of the device, the device tester, under control of appropriate test software, applies excitations to and receives responses from the device under test (DUT) under control of the tester.
      <br/>
      More specifically, the control unit transfers test vector data from the data source through the tester channels to a destination, the DUT pins.
      <br/>
      The control unit also transfers the test vector data from the data source to a comparator, where each resultant output state of the DUT is compared to an expected value by the tester.
      <br/>
      If the actual and expected values correspond, the chip has passed the test.
    </p>
    <p num="7">
      For example, the integrated circuit chip may be a programmable logic device (PLD), which is a programmable integrated circuit that allows the user of the circuit, using software control, to customize the logic functions the circuit will perform.
      <br/>
      In this example, a first group of test vectors is used to initialize the PLD in a desired logic configuration, and a second group of test vectors is then used to exercise the configured PLD.
      <br/>
      Again, the observed result is then compared with an expected result to see if the PLD is functioning properly.
    </p>
    <p num="8">
      In such test systems, the speed with which the control unit can move data from the data source to the DUT and comparators is of primary importance.
      <br/>
      The faster the control unit can move the data, the greater the resultant test vector rate.
      <br/>
      An exemplary alternate method of increasing the test vector rate is described in related application Ser.
      <br/>
      No. 08/790,693, entitled "METHOD AND APPARATUS OF INCREASING THE VECTOR RATE OF A DIGITAL TEST SYSTEM," also assigned to the assignee of the present application and incorporated by reference herein.
      <br/>
      Therefore, the inefficient transmission of data from a source of one width to a destination of a different width described above seriously impairs the speed with which the control unit can execute a test program.
      <br/>
      The multiple data cycles required to transfer data from source to destination slow down the test program and lengthen the testing process.
    </p>
    <p num="9">Therefore, a new testing method and apparatus are desired to maximize the data transmission rate from a source data path to selected channels of a destination data path having a different width from the source data path, especially in the context of an integrated circuit chip test system.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="10">
      The present invention provides a method and apparatus for maximizing the data transmission rate from a source data path to selected channels of a destination data path having a different width from the source data path.
      <br/>
      In a preferred embodiment, the data transfer circuit of the present invention includes at least one data transfer register that is typically of the same width as the data source.
      <br/>
      Each bit from the transfer register is input to a plurality of multiplexers, each of which typically selects a single bit and outputs the selected bit to the destination.
      <br/>
      The invention allows a data transfer to be completed in a minimum number of source data cycles.
      <br/>
      A further understanding of the nature and advantages of the inventions herein may be realized by reference to the remaining portions of the specification and the attached drawings.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="11">
      FIG. 1 shows a block diagram of a prior art data transfer circuit where the destination is narrower than the source.
      <br/>
      FIG. 2 shows a block diagram of a prior art data transfer circuit where the destination is wider than the source.
      <br/>
      FIG. 3 shows a block diagram of a digital test system for an integrated circuit chip incorporating the present invention.
      <br/>
      FIG. 4 shows a block diagram of a preferred embodiment of a data transfer circuit according to the present invention.
      <br/>
      FIG. 5 shows further detail of a preferred embodiment of a data transfer circuit according to the present invention.
      <br/>
      FIG. 6 shows a block diagram of a digital system in which a device tested by a preferred embodiment of the present invention may be embodied.
    </p>
    <heading>DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="12">
      FIG. 3 shows a simplified block diagram of a general digital test system 300 for an integrated circuit chip.
      <br/>
      Tester 302 includes a control block 304, a data source 305 and a tester interface block 306.
      <br/>
      Control block 304 executes the instructions to control the testing process and may be, by way of example, a microprocessor or dedicated logic.
      <br/>
      Data source 305 is typically a memory.
      <br/>
      In a preferred embodiment, tester interface block 306 includes the data transfer circuit of the present invention (described in detail below) required to carry out testing on an integrated circuit chip by transmitting test data to the device under test.
      <br/>
      Tester 302 is coupled via bus 308 to test card 310.
      <br/>
      Test card 310 includes connectors 312 and device under test (DUT) 314. Connectors 312 are coupled to bus 308 and transfer test data between bus 308 and DUT 314 across hardwired connections to DUT 314.
    </p>
    <p num="13">
      FIG. 4 shows a generalized block diagram of a data transfer circuit 400 according to the present invention.
      <br/>
      Data source 402 is N-bits wide.
      <br/>
      Referring to the exemplary test system application of FIG. 3, data source 402 is typically located in data source block 303 and is under control of control unit 304.
      <br/>
      Data source 402 would typically represent a register of N bits, but could in an alternate embodiment also refer to N bits on a data bus, such as a PCI bus.
      <br/>
      Data from data source 402, which might be a group of test vectors, for example, is transmitted over N-bit wide data bus 404 to one or more data transfer registers 406.
      <br/>
      In a preferred embodiment, transfer registers 406 are also N bits in width.
      <br/>
      However, it should be clear that each transfer register 406 does not need to be exactly the same width as data source 402.
      <br/>
      For example, as described earlier, there are applications where the destination is smaller than the source.
      <br/>
      In this case, the appropriate transfer register need only be as wide as the destination.
      <br/>
      The bits from each transfer register 406 are input to one or more multiplexers 408.
      <br/>
      For full generality, there will be N N * 1 multiplexers 408 coupled to each N-bit transfer register 406, as shown.
      <br/>
      But, again, there does not need to be N multiplexers 408 for each transfer register 406 in every application.
      <br/>
      The output of each multiplexer 408 is coupled to a single bit in destination 410, where each destination 410 may be of differing widths.
      <br/>
      Referring again to the exemplary test system application of FIG. 3, destination 410 would typically represent signal pins (or pads) on DUT 314 or, alternatively, could be a register used to buffer data to DUT 314.
      <br/>
      The configuration shown in FIG. 4 permits all source data to be transferred from data source 402 to transfer registers 406 in a single source data cycle, irrespective of the width of destination 410.
    </p>
    <p num="14">
      Therefore, in operation, data source 402 will present data under the control of control unit 304, for example.
      <br/>
      Then, the data is transferred from data source 402 to transfer registers 406 in a parallel transfer operation.
      <br/>
      In one embodiment, the address of each transfer register 406 may be altered so that data may be loaded into any one or more of the transfer registers in any single source data cycle.
      <br/>
      The bits from each transfer register 406 are fed into multiplexers 408.
      <br/>
      Again, the multiplexers may be programmed so that each source data cycle is available to each multiplexer.
      <br/>
      Since a single cycle of source data may be loaded into any one or more transfer registers 406, and each destination bit may receive any of the source data bits through its associated multiplexer 408, each bit of source data may therefore be made available to any destination lines, in the case of full generality.
    </p>
    <p num="15">
      In an alternate embodiment, a parallel load shift register might be used as transfer register 406.
      <br/>
      In this case, since the bits in transfer registers 406 may be shifted to serialize the data output, any N-bit source data transfer to a destination of any width from 1 to N bits may be completed in a single source data cycle.
      <br/>
      As data is shifted through the bit positions in a transfer register 406, the data on the destination bit line coupled to the associated multiplexer 408 will change accordingly.
      <br/>
      If the shift frequency is set appropriately, all bits may be shifted out of register 406 between source data cycles.
      <br/>
      Alternatively, in the case of full generality, where each multiplexer 408 receives all N data bits from register 406, the selection of the data output of the appropriate multiplexer 408 may be rotated such that the destination bit line of interest receives all N bits from its associated multiplexer 408.
    </p>
    <p num="16">
      In some cases, it will be important to maintain the previous data state of destination bit lines not involved in a particular data transfer.
      <br/>
      In this instance, latches may be coupled to the outputs of multiplexers 408 to maintain the selected data bits in their existing states.
      <br/>
      Alternatively, inhibiting signals may be applied to selected destination bit lines to prevent one or more from changing regardless of the value of the source data inputs.
      <br/>
      Fewer than N bits at a time may be set in this fashion.
    </p>
    <p num="17">
      FIG. 5 shows further detail of an exemplary embodiment of a 32-bit data transfer circuit 500 according to the present invention.
      <br/>
      Source data 502 is input on 32-bit data bus 504 to a 32-bit transfer register 506.
      <br/>
      Only one transfer register 506 is shown, but, as noted in FIG. 4, a plurality of 32-bit registers 506 may simultaneously receive data from source 502.
      <br/>
      As full generality is depicted in this embodiment, each data bit from transfer register 506 is input to each of the 32 32 * 1 multiplexers 508.
      <br/>
      Accordingly, each source data bit may be input to any of the bit positions in destination 510.
      <br/>
      Also, as described above, in an alternate embodiment, by shifting the bits through transfer register 506, or alternatively, by changing the selected output bit of multiplexer 508, all 32 bits, if desired, could be input to bit position 0, for example, of destination 510.
      <br/>
      This property would be useful, for example, if a single pin in a device under test needed to be fed a serial data stream.
    </p>
    <p num="18">
      The purpose of carrying out tests on a semiconductor device is, of course, to verify that the manufacturing process yields an operable semiconductor device suitable for end-use circuit and system level designs.
      <br/>
      As an example, FIG. 6 shows a block diagram of a digital system 600 within which a device tested by the present invention may be embodied.
      <br/>
      In the particular embodiment of FIG. 6, a processing unit 602 is coupled to a memory 604 and an I/O 606 and incorporates a programmable logic device (PLD) 608. PLD 608 is manufactured with the method and apparatus disclosed above.
      <br/>
      PLD 608 may be specially coupled to memory 604 through connection 610 and to I/O 606 through connection 612.
      <br/>
      The system may be a programmed digital computer system, digital signal processing system, specialized digital switching network, or other processing system.
      <br/>
      Moreover, the system may be a general purpose computer, a special purpose computer (such as telecommunications equipment) optimized for an application-specific task such as programming PLD 608, or a combination of a general purpose computer and auxiliary special purpose hardware.
    </p>
    <p num="19">
      Processing unit 602 may direct data to an appropriate system component for processing or storage, execute a program stored in memory 604 or input using I/O 606, or other similar function.
      <br/>
      Processing unit 602 may be a central processing unit (CPU), microprocessor, floating point coprocessor, graphics coprocessor, hardware controller, microcontroller, programmable logic device programmed for use as a controller, or other processing unit.
      <br/>
      Furthermore, in many embodiments, there is often no need for a CPU.
      <br/>
      For example, instead of a CPU, one or more PLDs 608 may control the logical operations of the system.
    </p>
    <p num="20">
      In some embodiments, processing unit 602 may even be a computer system.
      <br/>
      In one embodiment, source code may be stored in memory 604, compiled into machine language, and executed by processing unit 602.
      <br/>
      Processing unit 602 need not contain a CPU and in one embodiment, instructions may be executed by one or more PLDs 608.
      <br/>
      Instead of storing source code in memory 604, only the machine language representation of the source code, without the source code, may be stored in memory 604 for execution by processing unit 602.
      <br/>
      Memory 604 may be a random access memory (RAM), read only memory (ROM), fixed or flexible disk media, PC Card flash disk memory, tape, or any other storage retrieval means, or any combination of these storage retrieval means.
    </p>
    <p num="21">
      Processing unit 602 uses I/O 606 to provide an input and output path for user interaction.
      <br/>
      For example, a user may input logical functions to be programmed into programmable logic device 608. I/O 606 may be a keyboard, mouse, track ball, digitizing tablet, text or graphical display, touch screen, pen tablet, printer, or other input or output means, or any combination of these means.
      <br/>
      In one embodiment, I/O 606 includes a printer used for printing a hard copy of any processing unit 602 output.
      <br/>
      In particular, using I/O 606, a user may print a copy of a document prepared using a word processing program executed using processing unit 602.
      <br/>
      In other cases, a user may print out a copy of the source code or a listing of the logical functions contained within PLD 608.
    </p>
    <p num="22">
      PLD may serve many different purposes within the system in FIG. 6.
      <br/>
      PLD 608 may be a logical building block of processing unit 602, supporting its internal and external operations.
      <br/>
      PLD 608 is programmed to implement the logical functions necessary to carry on its particular role in system operation.
    </p>
    <p num="23">
      As some examples of the multitude of uses for PLD 608, processing unit 602 may use PLD 608, through connection 610, to decode memory or port addresses for accessing memory 604 or I/O 606.
      <br/>
      PLD 608 may be programmed to store data like a memory or specialized memory, where this comes from processing unit 602 or memory 604 (via connection 610).
      <br/>
      PLD 608 may be used as a microcontroller for a memory 604 device such as a fixed or flexible disk drive.
      <br/>
      PLD 608 may also be configured to be a microcontroller for an I/O 606 device such as a keyboard or scanner, passing data through connection 612.
    </p>
    <p num="24">
      In other embodiments, PLD 608 may be used as a controller or specialized processing unit such as a coprocessor for performing mathematical or graphical calculations.
      <br/>
      In still other embodiments, PLD 608 may be used for telecommunications applications.
      <br/>
      For example, processing unit 602 would direct data to PLD 608; PLD 608 processes this data; then PLD 608 returns the results to processing unit 602.
      <br/>
      Furthermore, processing unit 602 may pass or direct a program stored in memory 604 or input using I/O 606 to PLD 608 for execution.
      <br/>
      These are some of multitude of uses of PLD 608 within a digital system.
      <br/>
      Also, a system such as the one shown in FIG. 6 may embody a plurality of PLDs 608, each performing different system functions.
    </p>
    <p num="25">
      The system shown in FIG. 6 may also be used for programming PLD 608 with a particular logic pattern.
      <br/>
      A computer program for designing functions into a PLD may be stored in memory 604 and executed using processing unit 602.
      <br/>
      Then, a design characteristic which is to be programmed into PLD 608 is input via I/O 606 and processed by processing unit 602.
      <br/>
      In the end, processing unit 602 transfers and programs the design characteristic into PLD 608.
    </p>
    <p num="26">
      In FIG. 6, processing unit 602 is shown incorporating PLD 608.
      <br/>
      However, in other embodiments, PLD 608 may be external to processing unit 602, and a PLD interface may be coupled between processing unit 602 and PLD 608.
      <br/>
      The PLD interface would provide the proper adapters or sockets for interfacing PLD 608 to processing unit 602.
      <br/>
      Moreover, the PLD interface would provide the proper voltages and electrical characteristics for coupling PLD 608 to processing unit 602.
    </p>
    <p num="27">
      The above description is illustrative and not restrictive.
      <br/>
      Many variations of the invention will become apparent to those of skill in the art upon review of this disclosure.
      <br/>
      For example, though the data transfer circuit of the present invention has been specifically described in conjunction with a semiconductor device test system, it will be clear to one skilled in the art that a data transfer circuit that maximizes the data transmission rate from a source data path to selected channels of a destination data path having a different width from the source data path will be useful in many different applications.
      <br/>
      The scope of the invention should, therefore, be determined not with reference to the above description, but instead should be determined with reference to the appended claims along with their full scope of equivalents.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method of manufacturing an integrated circuit chip comprising the steps of:</claim-text>
      <claim-text>preparing and fabricating a plurality of electrical circuits on a semiconductor wafer; testing said semiconductor wafer to identify functioning circuits in said plurality of electrical circuits; separating said semiconductor wafer into individual chip die to isolate said functioning circuits; assembling each of said individual chip die containing said functioning circuits into a separate device package;</claim-text>
      <claim-text>and testing said separate device package with a device tester, said testing step further comprising the step of transferring test data from a source in said device tester to a destination in said separate device package through a data transfer circuit, said source configured to receive said source data from a source data path, said data transfer circuit comprising:</claim-text>
      <claim-text>- at least one transfer register coupled to said source, said transfer register receiving said test data in a single source data cycle;</claim-text>
      <claim-text>and - at least one multiplexer coupled to said transfer register, said multiplexer receiving said test data from said transfer register and forwarding said test data to said destination.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 wherein said destination has a width different from said source.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A system comprising an integrated circuit chip tested by the method recited in claim 1.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The system of claim 3 wherein said integrated circuit chip further comprises a programmable logic device.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1 wherein said transfer register has a width equal to said source.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1 wherein said multiplexer has a width equal to said source.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 1 wherein said transfer register further comprises a shift register, said source data being shifted in said shift register for the purpose of transmitting said source data to selected bit positions in said destination.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 1 wherein all bits of said source data are made available to each bit position in said destination.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A method of testing an integrated circuit chip, the method comprising: transferring test data from a source to a destination through a data transfer circuit, said source configured to receive said source data from a source data path, said data transfer circuit comprising: - at least one transfer register coupled to said source, said transfer register receiving said test data in a single source data cycle;</claim-text>
      <claim-text>and - at least one multiplexer coupled to said transfer register, said multiplexer receiving said test data from said transfer register and forwarding said test data to said destination.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 9 wherein said destination has a width different from said source.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A system comprising an integrated circuit chip tested by the method recited in claim 9.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The system of claim 1 wherein said integrated circuit chip further comprises a programmable logic device.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 9 wherein said transfer register has a width equal to said source.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 9 wherein said multiplexer has a width equal to said source.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 9 wherein said transfer register further comprises a shift register, said source data being shifted in said shift register for the purpose of transmitting said source data to selected bit positions in said destination.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 9 wherein all bits of said source data are made available to each bit position in said destination.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 9 wherein said multiplexer includes a plurality of n:1 multiplexers, wherein each of said plurality of n:1 multiplexers is configured to select a single bit of a plurality of bits in said source data and output said selected bit to said destination.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 9 wherein said transfer register includes a plurality of transfer registers, wherein each of said plurality of transfer registers is coupled to said multiplexer.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The method of claim 18 wherein at least one of said plurality of transfer registers has a width equal to said source.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The method of claim 9 wherein said source is coupled to a device tester, said device tester configured to test said integrated circuit chip.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The method of claim 9 wherein said destination is in said integrated circuit chip.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. A method of testing an integrated circuit chip comprising: transferring test data from a source to a destination in said integrated circuit chip through a data transfer circuit, said source configured to receive said source data from a source data path, said data transfer circuit comprising: a source containing an N-bit wide source data to be transferred; a plurality of N-bit wide transfer registers each coupled to said source via an N-bit wide bus; a plurality of N-to-1 multiplexers divided into a plurality of groups with each group having M N-to-1 multiplexers, where M is a positive integer, each group of M N-to-1 multiplexers being coupled to a respective one of said plurality of N-bit wide transfer registers;</claim-text>
      <claim-text>and a plurality of M-bit wide destinations each one respectively coupled to outputs of a respective one of said groups of M N-to-1 multiplexers.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The method of claim 22 wherein M equals N.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The method of claim 22 wherein said source is coupled to a device tester, said device tester configured to test said integrated circuit chip.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The method of claim 22 wherein M is about 32.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The method of claim 22 wherein N is about 32.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. A method of testing an integrated circuit chip comprising: transferring test data from a source to a destination through a data transfer circuit, said source configured to receive said source data from a source data path, said transferring comprising: - transferring said source data to at least one transfer register in a single source data cycle; - transferring said transfer register data to at least one multiplexer, said multiplexer coupled to said transfer register;</claim-text>
      <claim-text>and - transferring said multiplexer data to said destination, said multiplexer coupled to said destination, said destination having a width different from said source.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. A system comprising an integrated circuit chip tested by the method recited in claim 27.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The system of claim 28 wherein said integrated circuit chip further comprises a programmable logic device.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The method of claim 27 wherein said transfer register has a width equal to said source.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The method of claim 27 wherein said multiplexer has a width equal to said source.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The method of claim 27 wherein said transfer register further comprises a shift register, said source data being shifted in said shift register for the purpose of transmitting said source data to selected bit positions in said destination.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The method of claim 27 wherein all bits of said source data are made available to each bit position in said destination.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The method of claim 27 wherein said multiplexer includes a plurality of n:1 multiplexers, wherein each of said plurality of n:1 multiplexers is configured to select a single bit of a plurality of bits in said source data and output said selected bit to said destination.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The method of claim 27 wherein said transfer register includes a plurality of transfer registers, wherein each of said plurality of transfer registers is coupled to said multiplexer.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The method of claim 35 wherein at least one of said plurality of transfer registers has a width equal to said source.</claim-text>
    </claim>
    <claim num="37">
      <claim-text>37. The method of claim 27 wherein said source is coupled to a device tester, said device tester configured to test said integrated circuit chip.</claim-text>
    </claim>
    <claim num="38">
      <claim-text>38. The method of claim 27 wherein said destination is in said integrated circuit chip.</claim-text>
    </claim>
  </claims>
</questel-patent-document>