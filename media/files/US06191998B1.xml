<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06191998B1.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as first publication">
      <document-id>
        <country>US</country>
        <doc-number>06191998</doc-number>
        <kind>B1</kind>
        <date>20010220</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6191998</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B1</original-publication-kind>
    <application-reference is-representative="YES" family-id="46256820" extended-family-id="42111230">
      <document-id>
        <country>US</country>
        <doc-number>09452627</doc-number>
        <kind>A</kind>
        <date>19991201</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09452627</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43168652</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>45262799</doc-number>
        <kind>A</kind>
        <date>19991201</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09452627</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>10792698</doc-number>
        <kind>A</kind>
        <date>19980630</date>
        <priority-linkage-type>2</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998US-09107926</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="3">
        <country>US</country>
        <doc-number>6198397</doc-number>
        <kind>P</kind>
        <date>19971016</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="3">
        <doc-number>1997US-60061983</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010220</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <term-of-grant>
      <disclaimer/>
    </term-of-grant>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G11C   7/10        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>10</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G11C   8/16        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>8</main-group>
        <subgroup>16</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G11C  11/00        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>11</main-group>
        <subgroup>00</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>365230050</text>
        <class>365</class>
        <subclass>230050</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>365189040</text>
        <class>365</class>
        <subclass>189040</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>365189080</text>
        <class>365</class>
        <subclass>189080</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G11C-007/10</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>10</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G11C-007/10T</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>007</main-group>
        <subgroup>10T</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G11C-008/16</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>8</main-group>
        <subgroup>16</subgroup>
      </classification-ecla>
      <classification-ecla sequence="4">
        <text>G11C-011/00C</text>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>011</main-group>
        <subgroup>00C</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-007/10</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>10</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-007/1075</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>7</main-group>
        <subgroup>1075</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-008/16</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>8</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G11C-011/005</classification-symbol>
        <section>G</section>
        <class>11</class>
        <subclass>C</subclass>
        <main-group>11</main-group>
        <subgroup>005</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>12</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>10</number-of-drawing-sheets>
      <number-of-figures>10</number-of-figures>
      <image-key data-format="questel">US6191998</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Programmable logic device memory array circuit having combinable single-port memory arrays</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HUANG THOMAS B</text>
          <document-id>
            <country>US</country>
            <doc-number>5448522</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5448522</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>PLANTS WILLIAM C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6049487</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6049487</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>REDDY SRINIVAS T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6052327</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6052327</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <document-id>
            <country>US</country>
            <doc-number>RE34363</doc-number>
            <kind>E</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>USRE34363</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>WAHLSTROM SVEN ERIK</text>
          <document-id>
            <country>US</country>
            <doc-number>3473160</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US3473160</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>KIUCHI AKIHIRO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4593373</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4593373</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4609986</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4609986</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4617479</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4617479</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>CARTER WILLIAM S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4642487</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4642487</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>VEENSTRA KERRY S</text>
          <document-id>
            <country>US</country>
            <doc-number>4677318</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4677318</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4713792</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4713792</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>BABETSKI WILLIAM R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4751671</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4751671</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>EL GAMAL ABBAS, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4758745</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4758745</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>HARTMANN ROBERT F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4774421</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4774421</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>WONG SAU-CHING, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4871930</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4871930</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>SO HOCK-CHUEN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4899067</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4899067</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>WONG SAU-CHING, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4912342</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4912342</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>HOEL JEFFREY H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4942541</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4942541</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>STEELE RANDY C</text>
          <document-id>
            <country>US</country>
            <doc-number>4975601</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4975601</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>JONES BRIAN W</text>
          <document-id>
            <country>US</country>
            <doc-number>5027326</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5027326</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>PEDERSEN BRUCE B</text>
          <document-id>
            <country>US</country>
            <doc-number>5121006</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5121006</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="22">
          <text>STEELE RANDY C</text>
          <document-id>
            <country>US</country>
            <doc-number>5128559</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5128559</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="23">
          <text>TANIMURA NOBUYOSHI</text>
          <document-id>
            <country>US</country>
            <doc-number>5146428</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5146428</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="24">
          <text>PEDERSEN BRUCE B</text>
          <document-id>
            <country>US</country>
            <doc-number>5220214</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5220214</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="25">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5258668</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5258668</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="26">
          <text>PEDERSEN BRUCE B, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5260610</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5260610</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="27">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5260611</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5260611</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="28">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5274581</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5274581</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="29">
          <text>PATEL RAKESH H</text>
          <document-id>
            <country>US</country>
            <doc-number>5350954</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5350954</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="30">
          <text>PATEL RAKESH H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5371422</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5371422</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="31">
          <text>GARDE DOUGLAS</text>
          <document-id>
            <country>US</country>
            <doc-number>5396608</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5396608</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="32">
          <text>OSANN JR ROBERT</text>
          <document-id>
            <country>US</country>
            <doc-number>5506850</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5506850</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="33">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5541530</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5541530</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="34">
          <text>MCCLINTOCK CAMERON, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5543732</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5543732</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="35">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5550782</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5550782</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="36">
          <text>NGAI KAI-KIT, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5559450</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5559450</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="37">
          <text>FREIDIN PHILIP M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5566123</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5566123</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="38">
          <text>LEONG WILLIAM, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5592106</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5592106</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="39">
          <text>MCCLINTOCK CAMERON, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5614840</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5614840</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="40">
          <text>CLIFF RICHARD G, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5689195</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5689195</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="41">
          <text>NANCE SCOTT S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5715197</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5715197</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="42">
          <text>SUNG CHIAKANG, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5717901</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5717901</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="43">
          <text>YOUNG STEVEN P</text>
          <document-id>
            <country>US</country>
            <doc-number>5933023</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5933023</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="44">
          <text>SAMPLE STEPHEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6011744</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6011744</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="45">
          <text>TOSHIBA KK</text>
          <document-id>
            <country>EP</country>
            <doc-number>0156316</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-156316</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="46">
          <text>SHARP MICROELETRONICS TECHNOLO</text>
          <document-id>
            <country>EP</country>
            <doc-number>0306726</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-306726</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="47">
          <text>AEG WESTINGHOUSE TRANSPORT</text>
          <document-id>
            <country>EP</country>
            <doc-number>0509135</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-509135</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="48">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0780846</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-780846</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>1999 Xilinx Databook, 1999, Xilinx, Inc., San Jose, California.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>R. C. Minnick, "A Survey of Microcellular Research," Journal of the Association for Computing Machinery, vol. 14, No. 2, pp. 203-241, Apr. 1967.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>S. E. Wahlstrom, "Programmable Logic Arrays-Cheaper by the Millions," Electronics, Dec. 11, 1967, pp. 90-95.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Recent Developments in Switching Theory, A. Mukhopadhyay, ed., Academic Press, New York, 1971, chapters VI and IX, pp. 229-254 and 369-422.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="5">
          <text>El Gamal et al., "An Architecture for Electrically Configurable Gate Arrays," IEEE Journal of Solid-State Circuits, vol. 24, No. 2, Apr. 1989, pp. 394-398.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="6">
          <text>El-Ayat et al., "A CMOS Electrically Configurable Gate Array," IEEE Journal of Solid-State Circuits, vol. 24, No. 3, Jun. 1989, pp. 752-762.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="7">
          <text>"XC5000 Logic Cell Array Family, Technical Data, Advance Information," Xilinx, Inc., Feb. 1995.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="8">
          <text>John L. Nichols, "A Logical Next Step for Read-Only Memories", Electronics, Jun. 12, 1967, pp. 111-113.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="9">
          <text>Floyd Kvamme, "Standard Read-Only Memories Simplify Complex Logic Design", Electronics, Jan. 5, 1970, pp. 88-95.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="10">
          <text>Albert Hemel, "Making Small ROM's [sic] Do Math Quickly, Cheaply and Easily", Electronics, May 11, 1970, pp. 104-111.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="11">
          <text>William I. Fletcher et al., "Simplify Sequential Circuit Designs", Electronics Design, Jul. 8, 1971, pp. 70-72.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="12">
          <text>Howard A. Sholl et al., "Design of Asynchronous Sequential Networks Using Read-Only Memories", IEEE Transactions on Computers, vol. C-24, No. 2, Feb. 1975, pp. 195-206.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="13">
          <text>Arnold Weinberger, "High-Speed Programmable Logic Array Adders", IBM J. Res. Develop., vol. 23, No. 2, Mar. 1979, pp. 163-178.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="14">
          <text>Yahiko Kambayashi, "Logic Design of Programmable Logic Arrays", IEEE Transactions on Computers, vol. C-28, No. 9, Sep. 1979, pp. 609-617.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="15">
          <text>The Programmable Logic Data Book, 1996, Xilinx, Inc., San Jose, CA, pp. 4-5 to 4-20.</text>
        </nplcit>
      </citation>
    </references-cited>
    <related-documents>
      <continuation-in-part>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>10792698</doc-number>
              <kind>A</kind>
              <date>19980630</date>
            </document-id>
          </parent-doc>
        </relation>
      </continuation-in-part>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/061,983</doc-number>
          <date>19971016</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/061983</doc-number>
          <date>19971016</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Altera Corporation</orgname>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>INTEL</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Reddy, Srinivas T.</name>
            <address>
              <address-1>Fremont, CA, US</address-1>
              <city>Fremont</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Lane, Christopher F.</name>
            <address>
              <address-1>Campbell, CA, US</address-1>
              <city>Campbell</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Mejia, Manuel</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Fish &amp; Neave</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Jackson, Robert R.</name>
          </addressbook>
        </agent>
        <agent sequence="3" rep-type="agent">
          <addressbook lang="en">
            <name>Hoang, Khue V.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Phan, Trong</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A programmable logic device memory array circuit is provided that contains a pair of associated combinable single-port memory arrays.
      <br/>
      The memory array circuit may have a variable depth and width.
      <br/>
      The combinable single-port memory arrays may be operated independently if desired.
      <br/>
      Alternatively, a pair of the combinable single-port memory arrays can be combined to form a dual-port memory array.
      <br/>
      When the single-port memory arrays are combined to form a dual-port memory array, circuitry from a first of the combinable single-port memory arrays is used to perform writing operations and circuitry from a second of the combinable single-port memory arrays is used to perform reading operations.
      <br/>
      The availability of the dual-port memory array capability allows users to implement circuits such as first-in-first-out buffers and other circuits that require the ability to perform concurrent read and write operations.
      <br/>
      When such a dual-port capability is not required, two single-port memory arrays are available to implement a desired logic design.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is a continuation of application Ser.
      <br/>
      No. 09/107,926, filed Jun. 30, 1998, which claims the benefit of U.S. provisional application No. 60/061,983, filed Oct. 16, 1997.
    </p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      This invention relates to programmable logic devices.
      <br/>
      More particularly, this invention relates to programmable logic device memory arrays.
    </p>
    <p num="3">
      Programmable logic devices are integrated circuits that may be programmed by a user to perform various logic functions.
      <br/>
      At their most basic level, programmable logic devices contain programmable components, such as erasable programmable read-only memory (EPROM) transistors, electrically erasable programmable read-only memory (EEPROM) transistors, random access memory (RAM) transistors or cells, fuses, and antifuses.
      <br/>
      Higher-level functions are provided by organizing the programmable components into groups of components.
      <br/>
      The groups of components are electrically connected to one another by programmable interconnections.
      <br/>
      Illustrative programmable logic devices are described in Cliff et al. U.S. Pat. No. 5,689,195.
    </p>
    <p num="4">
      Programmable logic devices such as those described in U.S. Pat. No. 5,689,195 generally have arrays of random-access memory (RAM) for storing data during device operation.
      <br/>
      The memory arrays, which are sometimes referred to as embedded array blocks (EABs), are made up of rows and columns of memory cells.
      <br/>
      The word size used to access data in the memory arrays is generally smaller than the physical dimensions of the memory arrays.
      <br/>
      For example, a two kilobit (2K) memory array might have 64 rows and 32 columns of memory cells for storing data, whereas the device might use eight-bit data words.
      <br/>
      When it is desired to read or write a data word, the eight data bits are either retrieved from or written to the memory array.
    </p>
    <p num="5">
      Memory arrays of this type may be provided with a variable depth and width feature that allows the size of the data word that is used to access the memory array (its "width") and the resulting capacity of the array for data storage (its "depth") to be selectively programmed by the user.
      <br/>
      A typical 2K variable depth and width memory array can be programmed to have the respective depth and width configurations of: 2K * 1, 1K * 2, 512 * 4, or 256 * 8.
      <br/>
      With such variable depth and width memory arrays, data may be either written to or read from the array in words of the selected width.
      <br/>
      However, data cannot be written to and read from such conventional arrays simultaneously.
      <br/>
      This capability is needed for applications in which the memory array is used to implement a first-in-first-out buffer or in other such applications in which the memory array is shared between two concurrent processes, one of which reads data from the array and one of which writes data to the array.
    </p>
    <p num="6">
      A dual-port programmable logic device memory array arrangement that allows data words to be written and read simultaneously is described in Reddy et al. patent application Ser.
      <br/>
      No. 09/107,533, filed Jun. 30, 1998. One such dual-port memory array is typically associated with each of the rows of programmable logic regions on a programmable logic device.
      <br/>
      This arrangement allows the memory array to be used to implement first-in-first-out buffers and other such applications.
      <br/>
      However, sometimes all or part of a logic design does not need the dual-port capabilities of such memory arrays.
      <br/>
      Logic resources may be wasted when single-port memory arrays with smaller data width configurations would have sufficed.
    </p>
    <p num="7">It is therefore an object of the present invention to provide a programmable logic device memory array circuit containing a pair of single-port memory arrays that may either be operated individually or combined when a memory array with dual-port capabilities is desired.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="8">
      This and other objects of the invention are accomplished in accordance with the principles of the present invention by providing a programmable logic device memory array circuit formed from a pair of combinable single-port memory arrays.
      <br/>
      A typical programmable logic device in which such a memory array circuit may be used has a number of regions of programmable logic organized in intersecting rows and columns.
      <br/>
      One of the programmable logic device memory array circuits may be associated with each row of such logic regions.
      <br/>
      The rows and columns of logic regions and memory array circuits may be interconnected with associated groups of horizontal and vertical interconnects.
      <br/>
      The combinable single-port memory arrays are preferably memory arrays having a user-programmable depth and width.
    </p>
    <p num="9">
      The memory array circuit may be operated either as two individual single-port memory arrays or as a single dual-port memory array.
      <br/>
      When operated individually, data may be written to each single-port memory array or read from that single-port memory array, but data may not be written to and read from the memory array concurrently.
      <br/>
      When operated as a single dual-port memory array, data may be written to the array at the same time that data is being read from the array.
      <br/>
      This ability to handle concurrent reading and writing operations in dual-port mode allows the user to implement logic circuit designs with the memory array circuit that would otherwise not be possible.
      <br/>
      Because the combinable single-port memory arrays may be used individually, logic resources are not wasted when the dual-port function of the memory array circuit is not needed.
    </p>
    <p num="10">Further features of the invention, its nature and various advantages will be more apparent from the accompanying drawings and the following detailed description of the preferred embodiments.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="11">
      FIG. 1 is a diagram of a conventional programmable logic device that uses single-port variable depth and width memory arrays.
      <br/>
      FIG. 2 is a diagram of a conventional single-port variable depth and width memory array.
      <br/>
      FIG. 3 is a diagram of a conventional memory array cell for use in a single-port variable depth and width memory array.
      <br/>
      FIG. 4 is a diagram that illustrates the addressing of a elected memory location in a conventional single-port variable depth and width memory array.
      <br/>
      FIG. 5 is a diagram of a programmable logic device containing pairs of single-port memory arrays that may be configured as dual-port memory arrays in accordance with the present invention.
      <br/>
      FIG. 6 is a diagram of two single-port variable depth and width memory arrays that may be combined to form a dual-port variable depth and width memory array in accordance with the present invention.
      <br/>
      FIG. 7a is a diagram of an illustrative memory array cell for use in the memory arrays of FIG. 6 in accordance with the present invention.
      <br/>
      FIG. 7b is a diagram of another illustrative memory array cell for use in the memory arrays of FIG. 6 in accordance with the present invention.
      <br/>
      FIG. 8 is a diagram that illustrates the concurrent memory addressing in dual-port mode using the variable depth and width memory array configuration of FIG. 6 in accordance with the present invention.
      <br/>
      FIG. 9 is a diagram of a system in which a programmable logic device having the combinable single-port memory array circuitry of the present invention may be used.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="12">
      Programmable logic array integrated circuit devices are described in Cliff et al. U.S. Pat. No. 5,689,195, which is hereby incorporated by reference herein.
      <br/>
      A typical programmable logic device 6 has programmable logic regions 8 arranged in a two-dimensional array of intersecting rows and columns, as shown in FIG. 1.
      <br/>
      Each programmable logic region 8 may include a number of subregions of programmable logic.
      <br/>
      Such subregions are typically based on product-term logic or look-up table logic and may include register logic for registering logic signals.
      <br/>
      The rows and columns of device 6 typically have associated groups of global interconnects 16 and 17 for conveying signals between various logic regions 8.
    </p>
    <p num="13">
      Some programmable logic devices 6 contain single-port memory arrays 10 with a variable depth and width.
      <br/>
      In such devices, the size of the data word that is used to access each single-port memory array 10 (its "width") and the resulting capacity of the array 10 for data storage (its "depth") may be selectively programmed by the user.
      <br/>
      A typical 2K variable depth and width memory array can be programmed to have the respective depth and width configurations of: 2K * 1 (x1 mode), 1K * 2 (x2 mode), 512 * 4 (x4 mode), or 256 * 8 (x8 mode).
      <br/>
      Programmable logic devices 6 that contain single-port variable depth and width memory arrays 10 generally contain one such array in each row.
    </p>
    <p num="14">
      A typical single-port variable depth and width memory array 10 is shown in FIG. 2.
      <br/>
      Programmable logic device data is stored in 64 rows and 32 columns of static random-access memory (SRAM) cells in SRAM memory array 12.
    </p>
    <p num="15">
      Data signals to be written into memory array 12 are supplied on input path 14.
      <br/>
      The data signals may be routed to array 12 from global interconnects such as global horizontal interconnects 16 using multiplexer circuitry 18.
      <br/>
      The data signals are distributed to 8 input registers 20 via programmable input multiplexers 22 and write data path 24.
      <br/>
      The number of data lines in path 24 that are used depends on the selected mode for array 12.
      <br/>
      One data line is used in the x1 mode, two data lines are used in the x2 mode, four data lines are used in the x4 mode, and eight data lines are used in the x8 mode.
      <br/>
      The number of data output lines 26 from input registers 20 that are used is the same as the number of data lines used in path 24 to provide data to input registers 20.
      <br/>
      Data from input registers 20 may be written into a desired location in memory array 12 using column decoder and data selection logic 28.
    </p>
    <p num="16">
      Data signals to be read from memory array 12 are supplied to read data selection logic 30 via data output lines 32.
      <br/>
      Read data selection logic 30 provides the data signals to eight output registers 34 via path 36.
      <br/>
      Registered data from output registers 34 may be routed to the global interconnects.
    </p>
    <p num="17">
      In order to address a location in memory array 12 for reading or writing, address signals are supplied to address path 38 via input path 14 and input multiplexers 22.
      <br/>
      Six of the address signals supplied to address path 38 are used by row address decoder 40 to activate either an appropriate one of 64 read word lines 42 or an appropriate one of 64 write word lines 44.
    </p>
    <p num="18">
      If it is desired to perform a read operation, a suitable write/read enable signal is supplied via input path 14 and routed to write/read enable 46 by input multiplexers 22.
      <br/>
      Taking write/read enable 46 low causes control logic 48 to simultaneously take read enable 50 high and write enable 52 low.
      <br/>
      The read word line 42 that is specified by the address supplied to row address decoder 40 is thus taken high.
    </p>
    <p num="19">
      If it is desired to perform a write operation, a suitable write/read enable signal is supplied via input path 14 and routed to write/read enable 46 by input multiplexers 22.
      <br/>
      Taking write/read enable 46 high causes control logic 48 to simultaneously take read enable 50 low and write enable 52 high.
      <br/>
      The write word line 44 that is specified by the address supplied to row address decoder 40 is thus taken high.
    </p>
    <p num="20">
      During either reading or writing, the remaining bits of the address supplied on address path 38 are provided to column decoder and data selection logic 28 as a column write/read address via path 54.
      <br/>
      The column write/read address specifies the location of the columns in array 12 into which data is to be written or from which data is to be read.
      <br/>
      The number of bits of write/read address information supplied to column decoder and data selection logic 28 depends on the size of the data word in array 12 that is being addressed.
      <br/>
      For example, five bits of column write/read address information are required when it is desired to specify a particular one of the 32 columns in array 12 into which to write or from which to read a desired one-bit wide data word.
      <br/>
      Mode select signals are supplied at terminals 55 to configure multiplexer circuitry within column decoder and data selection logic 28 and within read data selection logic 30 so that these components perform the appropriate routing functions needed for the desired mode of operation (i.e., x1, x2, x4, or x8 mode).
    </p>
    <p num="21">
      A typical data storage cell arrangement for a cell 56 in array 12 is shown in FIG. 3.
      <br/>
      Data may be written into cell 56 by taking write word line 58 (one of write word lines 44 in FIG. 2) high with row address decoder 40 and taking column select line 60 (one of column select lines 62 in FIG. 2) high with column decoder and data selection logic 28 while supplying data to cell 56 via write bit line 64 (one of write bit lines 65 in FIG. 2).
      <br/>
      This turns on transistors 66 and 68 and causes the data on write bit line 64 to flow into one-bit random access memory (RAM) cell 70.
    </p>
    <p num="22">
      Data may be read from cell 56 by taking read word line 72 (one of read word lines 42 in FIG. 2) high with row address decoder 40 while taking column select line 60 high with column decoder and data selection logic 28.
      <br/>
      This turns on transistors 74 and 76 so that data may pass from RAM cell 70 to buffered read bit line 78 (one of data output lines 32 in FIG. 2) via buffer 80.
    </p>
    <p num="23">
      The variable depth and width memory array arrangement of FIG. 2 allows data to be accessed in various word sizes.
      <br/>
      Regardless of the word size being accessed, at most a single row in array 12 may be selected at a time.
      <br/>
      Either a read word line may be taken high for a read operation or a write word line may be taken high for a write operation.
    </p>
    <p num="24">
      One, two, four, or eight of the columns of memory cells 56 in array 12 may be selected at a time, depending on whether memory array 10 is in the x1, x2, x4, or x8 mode.
      <br/>
      In the x1 mode, five bits of write/read address information from address path 38 are used to select a single column from the 32 columns of array 12.
      <br/>
      In the x2 mode, four bits of write/read address information are used to specify the two columns which are to be accessed.
      <br/>
      In the x4 mode, three bits of write/read address information are used to specify the group of four columns of array 12 to be accessed.
      <br/>
      In the x8 mode, two bits of write/read address information are used to specify the group of eight columns of array 12 to be accessed.
    </p>
    <p num="25">
      Accessing a given column of memory cells 56 involves taking the column select line 62 of FIG. 2 for that column high while providing the data for the column from input registers 20 to the appropriate write bit line 65 of FIG. 2 for the column using column decoder and data selection logic 28.
      <br/>
      The columns that are accessed when a group of more than one column of cells 56 is accessed at a time (e.g., when four columns are accessed in the x4 mode) are typically adjacent.
    </p>
    <p num="26">
      This type of arrangement is illustrated in FIG. 4, in which memory array 12 is shown being accessed in the x4 mode.
      <br/>
      In the x4 mode, array 12 may be thought of as being partitioned into eight four-column groups of columns each of which has a capacity of 256 bits (see, e.g., group 3).
      <br/>
      The total capacity of each four-column group of columns is 256 bits, because there are 64 bits per column.
      <br/>
      Because there are eight groups and each group has 64 four-bit words, there are a total of 512 four-bit words in array 12, which allows array 12 to operate in the 512 * 4 configuration in the x4 mode.
      <br/>
      The location of a desired four-bit data word can be specified by selecting one of these groups of columns using four of the column select lines 62.
      <br/>
      For example, column decoder and data selection logic 28 of FIG. 2 may be used to select the columns of memory cells in group 7 of FIG. 4 by taking the four column select lines 62 (FIG. 2) that are associated with group 7 high.
    </p>
    <p num="27">
      In the x1 mode, array 12 can be partitioned into 32 groups of columns each of which is one bit wide.
      <br/>
      In the x2 mode, array 12 can be partitioned into 16 groups of columns each of which is two bits wide.
      <br/>
      In the x8 mode, array 12 can be partitioned into four groups, each of which is eight bits wide.
    </p>
    <p num="28">
      In the conventional variable depth and width memory array arrangement of FIG. 4, data may be either written to the selected location or may be read from the selected location, but not both at the same time.
      <br/>
      Data may be written to the selected location in the array by selecting the desired row using a write word line and by providing data to the cells in the selected columns using the appropriate write bit lines.
      <br/>
      Data may be read from the selected location by selecting the desired row using a read word line and by routing data from the array using buffered read bit lines.
      <br/>
      However, it is not possible to write data into array 12 at one selected location while simultaneously reading data from another selected location.
      <br/>
      The ability to perform such simultaneous reading and writing operations with the memory array is necessary if the memory array is to be used to implement a first-in-first-out buffer or other such memory arrangement.
    </p>
    <p num="29">
      A dual-port programmable logic device memory array that allows data words to be written and read simultaneously is described in Reddy et al. patent application Ser.
      <br/>
      No. 09/107,533, filed Jun. 30, 1998. The dual-port memory array described in the Reddy et al. patent application supports data widths of up to sixteen bits.
      <br/>
      Although this arrangement is desirable for handling concurrent writing and reading tasks involving sixteen bit data, the full sixteen-bit data width and the dual-port capability of such arrays are not always needed.
      <br/>
      For example, it may only be necessary to handle eight-bit data and the ability to perform concurrent read and write operations may not be required.
      <br/>
      To handle two eight-bit data width tasks, it would be preferable to have two eight-bit memory arrays available rather than a single sixteen-bit memory array.
    </p>
    <p num="30">
      In accordance with the present invention, a programmable logic device is provided having a number of paired single-port memory arrays.
      <br/>
      Each pair of single-port memory arrays may be combined by a user into a dual-port memory array having twice the data width handling capacity of the individual single-port memory arrays.
      <br/>
      When single-port memory arrays having smaller data widths suffice, the single-port memory arrays may be used separately, thereby effectively doubling the number of memory arrays available on the programmable logic device to implement desired logic functions.
      <br/>
      In a preferred embodiment, the memory arrays have a user-selectable variable depth and width, although memory arrays of a fixed depth and width may be used if desired.
    </p>
    <p num="31">
      A programmable logic device 82 that contains a number of user-combinable single-port variable depth and width memory arrays 84 is shown in FIG. 5.
      <br/>
      Each pair of single-port memory arrays 84 may be combined by a user to form a dual-port memory array 86.
    </p>
    <p num="32">
      In some situations, it may be desirable to use single-port memory arrays 84 independently.
      <br/>
      For example, a user may wish to implement a logic design that does not require the simultaneous read and write capability of a dual-port memory array, but that requires the use of more than one memory array.
      <br/>
      In such an arrangement, it is preferable to have relatively many of the narrower single-port memory arrays 84 available rather than relatively fewer of the wider dual-port memory arrays 86.
    </p>
    <p num="33">
      In other situations, it may be desirable to use pairs of single-port memory arrays 84 combined into dual-port memory arrays 86.
      <br/>
      For example, the user may wish to implement a logic design that requires handling data in wide widths.
      <br/>
      Dual-port memory arrays 86 have twice the data width handling capacity of single-port memory arrays 84.
      <br/>
      The user may also require the ability to perform simultaneous read and write operations.
      <br/>
      Dual-port memory arrays 86 support concurrent read and write operations.
    </p>
    <p num="34">
      Programmable logic device 82 preferably contains a number of programmable logic regions 88.
      <br/>
      Programmable logic regions 88 may be programmed by a user to perform various logic functions.
      <br/>
      A programmable logic device containing one type of suitable programmable logic regions is described in the above-mentioned Cliff et al. U.S. Pat. No. 5,689,195. If desired, other types of suitable programmable logic regions may be used in programmable logic device 82.
    </p>
    <p num="35">
      In the arrangement shown in FIG. 5, combinable single-port memory arrays 84 and programmable logic regions 88 are arranged in intersecting rows and column.
      <br/>
      This arrangement is illustrative.
      <br/>
      If desired, any other suitable type of programmable logic device arrangement may be used.
    </p>
    <p num="36">
      Each programmable logic region 88 may contain a number of subregions of programmable logic.
      <br/>
      Such subregions may be based on product-term logic or look-up table logic and may include register logic for registering logic signals.
      <br/>
      The rows and columns of programmable logic regions 88 may be interconnected by associated groups of interconnects such as global horizontal interconnects 90 and global vertical interconnects 92.
      <br/>
      Global interconnects such as interconnects 90 and 92 generally span substantially the entire programmable logic device 82 without interruption, but may also contain half-length interconnects, quarter-length interconnects, eighth-length interconnects or other suitable fractional-length interconnects if desired.
    </p>
    <p num="37">
      The connections between programmable logic regions 88 and interconnects 90 and 92 and the connections between memory arrays 84 and interconnects 90 and 92 are not shown in FIG. 5 to avoid over-complicating the drawing.
      <br/>
      Such connections may be made by suitable input and output multiplexing and driver circuitry.
      <br/>
      Circuitry may also be provided to form pathways between horizontal interconnects 90 and vertical interconnects 92.
      <br/>
      Suitable connections between logic regions and their associated interconnects are described in the above-mentioned U.S. Pat. No. 5,689,195.
    </p>
    <p num="38">
      In single-port variable depth and width memory arrays 84, the size of the data word that is used to access each memory array 84 (its "width") and the resulting capacity of the array for data storage (its "depth") may be selectively programmed by the user.
      <br/>
      In one suitable arrangement, each memory array 84 has a 1 K capacity that can be programmed to have the respective depth and width configurations of: 1K * 1 (x1 mode), 512 * 2 (x2 mode), 256 * 4 (x4 mode), and 128 * 8 (x8 mode).
      <br/>
      Programmable logic device 82 preferably contains a pair of user-configurable single-port variable depth and width memory arrays 84 in each row.
      <br/>
      Each pair may preferably be combined into a single 128 * 16 dual-port memory array 86, as shown in FIG. 5, although other suitable configurations may be used if desired.
    </p>
    <p num="39">
      An illustrative arrangement for a pair of single-port variable depth and width memory arrays 84 is shown in FIG. 6.
      <br/>
      Programmable logic device data may be stored in 64 rows and 16 columns of random-access memory (RAM) cells in each of memory arrays 94 and 96.
      <br/>
      Memory arrays 94 and 96 are preferably static random-access memory (SRAM) arrays.
      <br/>
      Memory array 94 stores data for user-combinable single-port variable depth and width memory array 84a.
      <br/>
      Memory array 96 stores data for user-combinable single-port variable depth and width memory array 84b.
    </p>
    <p num="40">
      Data signals to be written into memory array 94 are supplied on input path 98.
      <br/>
      Data signals may be routed to input path 98 from global interconnects such as global horizontal interconnects 90 using programmable multiplexer circuitry 100.
      <br/>
      The data signals from path 98 are distributed to eight input registers 102 via programmable input multiplexers 104 and write data path 106.
    </p>
    <p num="41">
      Data signals to be written into memory array 96 are supplied on input path 108.
      <br/>
      Data signals may be routed to input path 108 from global interconnects such as global horizontal interconnects 90 using programmable multiplexer circuitry 110.
      <br/>
      The data signals from path 108 are distributed to eight input registers 112 via programmable input multiplexers 114 and write data path 116.
    </p>
    <p num="42">
      When memory array 84a is in single-port mode, data may be either written to array 94 or read from array 94, but may not be both written to and read from array 94 concurrently.
      <br/>
      Similarly, when memory array 84b is in single-port mode, data may be either written to array 96 or read from array 96, but may not be both written to and read from array 96 concurrently.
    </p>
    <p num="43">
      In dual-port mode, the resources of memory array 84a and memory array 84b are combined to form a single dual-port variable depth and width memory array.
      <br/>
      The dual-port memory array has a 2K capacity--1K of storage from memory array 94 and 1K of storage from memory array 96.
    </p>
    <p num="44">
      The number of data lines in write paths 106 and 116 that are actively used at a given time depends on the selected mode (i.e., x1, x2, x4, or x8) for arrays 84a and 84b.
      <br/>
      One data line is in active use per array in the x1 mode (i.e., when data is processed in a one-bit width), two data lines are used in the x2 mode, four data lines are used in the x4 mode, and eight data lines are used in the x8 mode.
      <br/>
      All 16 data lines are used when arrays 84a and 84b are used in combination as a sixteen bit dual-port memory array.
      <br/>
      The number of data output lines 118 and 120 from input registers 102 and 112 that are used is the same as the number of data lines actively used in paths 106 and 116 to provide data to input registers 102 and 112, respectively.
      <br/>
      In dual-port mode, the effective width of the combined single-port arrays is twice the width of each single-port array taken separately.
      <br/>
      Thus, when each single-port array operates in a x1 mode, the effective dual-port width is x2, etc.
    </p>
    <p num="45">
      During single-port write operations, data from input registers 102 may be written into desired locations in memory array 94 using column decoder and data selection logic 122 and row decoder 132.
      <br/>
      Similarly, data from input registers 112 may be written into desired locations in memory array 96 using column decoder and data selection logic 124 and row decoder 138.
    </p>
    <p num="46">
      The circuitry of column decoder and data selection logic 122 and 124 is used to select column locations to which data is to be written in memory arrays 94 and 96 and to route data signals from input registers 102 and 112 to those respective locations during single-port write operations.
      <br/>
      If desired, column decoder and data selection logic 122 and 124 may use basically the same type of arrangement used in the column decoder and data selection logic circuits of standard variable depth and width programmable logic device memory arrays.
      <br/>
      As with such standard column decoder and data selection logic arrangements, patterns of fixed connections and multiplexer circuitry within column decoder and data selection logic 122 and 124 may be used to selectively route signals to their proper destinations based on the modes of arrays 84a and 84b (i.e., x1, x2, x4, or x8 mode).
      <br/>
      The circuitry of column decoder and data selection logic 122 and 124 may be configured by supplying suitable mode selection signals to terminals 126 and 128.
    </p>
    <p num="47">
      In order to address locations in memory array 94 for reading or writing, address signals are supplied to address path 130 via input path 98 and input multiplexer 104.
      <br/>
      Six of the address signals supplied to address path 130 are used as a row address by row decoder 132 to activate an appropriate one of 64 decoded row lines 134 for array 84a.
      <br/>
      Similarly, address signals are supplied to address path 136 via input path 108 and input multiplexer 114.
      <br/>
      Six of the address signals supplied to address path 136 are used as a row address by row decoder 138 to activate an appropriate one of 64 decoded row lines 140 for array 84b.
    </p>
    <p num="48">
      When memory arrays 84a and 84b are placed in single-port mode they function as separate single-port variable depth and width memory arrays.
      <br/>
      When memory arrays 84a and 84b are placed in dual-port mode they function together as a dual-port variable depth and width memory array.
      <br/>
      The user may place memory arrays 84a and 84b in either single-port or dual-port mode using configuration bits (i.e., programmable memory bits on programmable logic device 82 that are programmed by the user when device 82 is configured).
      <br/>
      Any suitable type of memory may be used for such configuration bits.
    </p>
    <p num="49">
      In memory array 84a, the outputs of the single-port/dual-port configuration bits are applied to multiplexer 142 (at terminal 144), multiplexer 146 (at terminal 148), and control logic 150 (at terminal 152).
      <br/>
      Control logic 150 generates corresponding control signals on lines 154a and 156 to control switches 158 (via multiplexer 155 and line 154b) and 160.
      <br/>
      Multiplexer 155 is controlled by a suitable configuration bit applied at terminal 157 that indicates whether dual-port mode or single-port mode has been selected.
      <br/>
      Control logic 150 also generates corresponding control signals on line 162 to control column decoder and data selection logic 122.
      <br/>
      In memory array 84b, the outputs of the single-port/dual-port configuration bits are applied to multiplexer 164 (at terminal 166), multiplexer 168 (at terminal 170), and control logic 172 (at terminal 174).
      <br/>
      Control logic 172 generates corresponding control signals on lines 176 and 178a to control switches 180 and 182 (via multiplexer 159 and line 178b).
      <br/>
      Multiplexer 159 is controlled by a suitable configuration bit applied at terminal 161 that indicates whether dual-port mode or single-port mode has been selected.
      <br/>
      Control logic 172 also generates corresponding control signals on line 184 to control column decoder and data selection logic 124.
    </p>
    <p num="50">
      In single-port mode, multiplexers 142, 146, 164, and 168 connect their "0" inputs to their respective outputs.
      <br/>
      In dual-port mode, multiplexers 142, 146, 164, and 168 connect their "1" inputs to their respective outputs.
    </p>
    <p num="51">
      When arrays 84a and 84b are in single-port mode, the user supplies read/write enable signals on read/write enable lines 186 and 188 that cause control logic 150 and 172 to place column decoder and data selection logic 122 and 124 in either write mode or read mode.
      <br/>
      Signals from control logic 150 that direct column decoder and data selection logic 122 whether to perform write operations or read operations when array 84a is in single-port mode are provided via line 162.
      <br/>
      During write operations, column decoder and data selection logic 122 generates write column select signals on write column select lines 190.
      <br/>
      During read operations, column decoder and data selection logic 122 generates read column select signals on read column select lines 192.
      <br/>
      Column select lines 190 and 192 convey the same column select signals when accessing a given memory location in the single-port mode of operation.
      <br/>
      Signals from control logic 172 that direct column decoder and data selection logic 124 whether to perform write operations or read operations when array 84b is in single-port mode are provided via line 184.
      <br/>
      During write operations, column decoder and data selection logic 124 generates write column select signals on write column select lines 194.
      <br/>
      During read operations, column decoder and data selection logic 124 generates read column select signals on read column select lines 196.
      <br/>
      Column select lines 194 and 196 convey the same column select signals when accessing a given memory location in the single-port mode of operation.
    </p>
    <p num="52">
      In single-port mode, the signals on read/write enable line 186 determine whether array 84a is performing a read or a write operation.
      <br/>
      Data is written to array 94 via input registers 102 and column decoder and data selection logic 122.
      <br/>
      Data is read from array 94 using read data selection logic 198, output registers 200, and drivers 202.
      <br/>
      Read data selection logic 198 preferably contains multiplexing circuitry responsive to mode select signals applied to terminal 127.
      <br/>
      The mode select signals applied to terminal 127 should be the same as the mode select signals applied to terminal 126.
      <br/>
      The multiplexing circuitry in read data selection logic 198 may be used in conjunction with column decoder and data selection logic 122 to route data from the appropriate columns of array 94 to registers 200.
      <br/>
      Drivers 202 may be connected to global interconnects such as horizontal global interconnects 90 or vertical interconnects 92.
    </p>
    <p num="53">
      Similarly, the signals on read/write enable line 188 in single-port mode determine whether array 84b is performing a read or a write operation.
      <br/>
      Data is written to array 96 via input registers 112 and column decoder and data selection logic 124.
      <br/>
      Data is read from array 96 using read data selection logic 204, output registers 206, and drivers 208.
      <br/>
      Read data selection logic 204 contains multiplexing circuitry responsive to mode select signals applied to terminal 129.
      <br/>
      The mode select signals applied to terminal 129 should be the same as the mode select signals applied to terminal 128.
      <br/>
      The multiplexing circuitry in read data selection logic 204 may be used in conjunction with column decoder and data selection logic 124 to route data from the appropriate columns of array 96 to registers 206.
      <br/>
      Drivers 208 may be connected to global interconnects such as horizontal global interconnects 90 or vertical interconnects 92.
      <br/>
      In single-port mode, data may not be read from array 94 at the same time that data is being written to array 94 and data may riot be read from array 96 at the same time that data is being written to array 96.
    </p>
    <p num="54">During either reading or writing operations when array 84a is in the single-port mode, row decoder 132 activates a selected one of its 64 row output lines 134 in response to the six-bit row address provided at input 210.</p>
    <p num="55">
      When a write operation is being performed for array 84a in single-port mode, control logic 150 turns off switch 158 using control signals on line 154a that are applied to switch 158 via multiplexer 155 and line 154b and turns on switch 160 using control signals on line 156.
      <br/>
      This allows the active row output line 134 from row decoder 132 to pass to array 94 as a corresponding one of write word lines 212.
      <br/>
      Column decoder and data selection logic 122 takes a selected group of write column select lines 190 high based on the column address on address line 214.
      <br/>
      The write column select lines 190 that are activated determine which columns of array 94 are to receive data.
      <br/>
      Data to be written is supplied on write data path 106.
      <br/>
      The number of bits of data that are written to array 94 during the write operation (i.e., 1 bit, 2 bits, 4 bits, or 8 bits) depends on the selected mode of array 84a (x1 mode, x2 mode, x4 mode, or x8 mode), which is controlled by the mode selection signals supplied at mode select terminal 126.
      <br/>
      The number of bits of address information that are supplied on address line 214 depends on the selected mode of array 84a.
      <br/>
      Four bits of column address information are used in the x1 mode, three bits in the x2 mode, two bits in the x4 mode, and one bit in the x8 mode.
    </p>
    <p num="56">
      When a read operation is being performed for array 84a in single-port mode, control logic 150 turns on switch 158 using control signals on line 154a that are applied to switch 158 via multiplexer 155 and line 154b and turns off switch 160 using control signals on line 156.
      <br/>
      This allows the active row output line 134 from row decoder 132 to pass to array 94 as a corresponding one of read word lines 216.
      <br/>
      Column decoder and data selection logic 122 takes a number of selected groups of read column select lines 192 high based on the column address on address line 214.
      <br/>
      The read column select lines 192 that are activated in conjunction with the multiplexing circuitry used in read data selection logic 198 determine which columns of array 94 data is to be read from.
      <br/>
      Data from array 94 is supplied to read data selection logic 198 on lines 218.
      <br/>
      The number of bits of data that are read from array 94 during the read operation (i.e., 1 bit, 2 bits, 4 bits, or 8 bits) depends on the selected mode of array 84a (x1 mode, x2 mode, x4 mode, or x8 mode), which is controlled by the mode selection signals supplied at mode select terminals 126 and 127.
      <br/>
      The number of bits of address information that are supplied on address line 214 depends on the selected mode of array 84a.
      <br/>
      Four bits of column address information are used in the x1 mode, three bits in the x2 mode, two bits in the x4 mode, and one bit in the x8 mode.
    </p>
    <p num="57">During either reading or writing operations when array 84b is in the single-port mode, row decoder 138 activates a selected one of its 64 row output lines 139 in response to the six-bit row address provided at input 220.</p>
    <p num="58">
      When a write operation is being performed for array 84b in single-port mode, control logic 172 turns off switch 180 using control signals on line 176 and turns on switch 182 using control signals on line 178a that are applied to switch 182 via multiplexer 159 and line 178b.
      <br/>
      This allows the active row output line 139 from row decoder 138 to pass to array 96 as a corresponding one of write word lines 222.
      <br/>
      Column decoder and data selection logic 124 takes a selected group of write column select lines 194 high based on the column address on address line 224.
      <br/>
      The write column select lines 194 that are activated determine which columns of array 96 are to receive data.
      <br/>
      Data to be written is supplied on write data path 116.
      <br/>
      The number of bits of data that are written to array 96 during the write operation (i.e., 1 bit, 2 bits, 4 bits, or 8 bits) depends on the selected mode of array 84b (x1 mode, x2 mode, x4 mode, or x8 mode), which is controlled by the mode selection signals supplied at mode select terminal 128.
      <br/>
      The number of bits of address information that are supplied on address line 224 depends on the selected mode of array 84b.
      <br/>
      Four bits of column address information are used in the x1 mode, three bits in the x2 mode, two bits in the x4 mode, and one bit in the x8 mode.
    </p>
    <p num="59">
      When a read operation is being performed for array 84b in single-port mode, control logic 172 turns on switch 180 using control signals on line 176 and turns off switch 182 using control signals on line 178a that are applied to switch 182 via multiplexer 159 and line 178b.
      <br/>
      This allows the active row output line 140 from row decoder 138 to pass to array 96 as a corresponding one of read word lines 226.
      <br/>
      Column decoder and data selection logic 124 takes a number of selected groups of read column select lines 196 high based on the column address on address line 224.
      <br/>
      The read column select lines 196 that are activated in conjunction with the multiplexing circuitry used in read data selection logic 198 determine the columns of array 96 from which data is to be read.
      <br/>
      Data from array 96 is supplied to read data selection logic 204 on lines 228.
      <br/>
      The number of bits of data that are read from array 96 during the read operation (i.e., 1 bit, 2 bits, 4 bits, or 8 bits) depends on the selected mode of array 84b (x1 mode, x2 mode, x4 mode, or x8 mode), which is controlled by the mode selection signals supplied at mode select terminals 128 and 129.
      <br/>
      The number of bits of address information that are supplied on address line 224 depends on the selected mode of array 84b.
      <br/>
      Four bits of column address information are used in the x1 mode, three bits in the x2 mode, two bits in the x4 mode, and one bit in the x8 mode.
    </p>
    <p num="60">
      The circuitry of column decoder and data selection logic 122 and 124 and read data selection logic 198 and 204 that is used in selecting memory locations to which data is to be written and from which data is to be read may use basically the same type of arrangement used in the column decoder and data selection logic and read data selection logic circuits of standard single-port variable depth and width programmable logic device memory arrays.
      <br/>
      As with such standard column decoder and data selection logic and read data selection logic arrangements, patterns of fixed connections and multiplexer circuitry may be used within column decoder and data selection logic 122, column decoder and data selection logic 124, read data selection logic 198, and read data selection logic 204 to selectively route signals to their proper destinations based on the selected modes of arrays 84a and 84b (i.e., x1, x2, x4, or x8 mode).
    </p>
    <p num="61">
      A typical data storage cell arrangement for a cell 230 in either array 94 or array 96 is shown in FIG. 7a. Data may be written into cell 230 by taking write word line 232 (which may be one of write word lines 212 or 222 in FIG. 6) high with either row decoder 132 or 138 of FIG. 6 as appropriate and by taking write column selection line 234 (one of write column selection lines 190 or 194 in FIG. 6) high with either column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate, while supplying data to cell 230 via write bit line 236 (one of write bit lines 238 or 240 in FIG. 6) using column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate.
      <br/>
      This turns on transistors 242 and 244 and causes the data on write bit line 236 to flow into one-bit random access memory (RAM) cell 246.
    </p>
    <p num="62">
      Data may be read from cell 230 by taking read word line 248 (one of read word lines 216 or 226 in FIG. 6) high with either row decoder 132 or 138 of FIG. 6 as appropriate and taking read column selection line 250 (one of read column selection lines 192 or 196 in FIG. 6) high with either column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate.
      <br/>
      This turns on transistors 252 and 254 and causes the data in one-bit random access memory (RAM) cell 246 to flow to buffered read bit line 256 (one of read bit lines 218 or 228 in FIG. 6) via buffer 258.
    </p>
    <p num="63">
      Another suitable data storage cell arrangement for a cell in array 94 or 96 is shown in FIG. 7b. Data may be written into cell 230' by taking write word line 232' (one of write word lines 212 or 222 in FIG. 6) high with either row decoder 132 or 138 of FIG. 6 as appropriate and by taking write column selection line 234' (one of write column selection lines 190 or 194 in FIG. 6) high with either column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate, while supplying data to cell 230' via write bit line 236' (one of write bit lines 238 or 240 in FIG. 6) using column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate.
      <br/>
      This turns on transistors 242' and 244' and causes the data on write bit line 236' to flow into one-bit RAM cell 246'.
    </p>
    <p num="64">
      Data may be read from cell 230' by taking read word line 248' (one of read word lines 216 or 226 in FIG. 6) high with either row decoder 132 or 138 of FIG. 6 as appropriate and taking read column selection line 250' (one of read column selection lines 192 or 196 in FIG. 6) high with either column decoder and data selection logic 122 or 124 of FIG. 6 as appropriate.
      <br/>
      This turns on read word line selection transistor 252' and read column select line transistor 254' and causes the data in one-bit random access memory (RAM) cell 246' to flow to buffered read bit line 256' (one of read bit lines 218 or 228 in FIG. 6) via buffer 258'.
    </p>
    <p num="65">
      The memory cell arrangement of FIG. 7b is advantageous because only one row of transistors 254' is used per array 94 and only one row of transistors 254' is used per array 96.
      <br/>
      In particular, 16 transistors 254' may be used in each of arrays 94 and 96 and may be located along the bottom edge of each of arrays 94 and 96 as depicted in FIG. 6.
      <br/>
      The arrangement of FIG. 7a uses transistors 254 to control the reading of data from selected columns.
      <br/>
      However, the cell of FIG. 7a requires the use of a transistor 254 in each cell of arrays 94 and 96, rather than the single row arrangement of read column select line transistors 254' used with the cell of FIG. 7b.
    </p>
    <p num="66">
      Cells 230, cells 230', or any other suitable memory cell arrangement may be used if desired.
      <br/>
      For clarity, the present discussion focuses on use of memory cells 230, but this choice of memory cell is illustrative only.
    </p>
    <p num="67">
      When it is desired to combine the resources of memory arrays 84a and 84b of FIG. 6 to form a single dual-port variable depth and width memory array 86, the user may program the single-port/dual-port configuration bits applied to multiplexer control terminals 144, 148, 157, 161, 166, and 170 and control logic control terminals 152 and 174 accordingly.
      <br/>
      Setting the configuration bits to select dual-port mode causes multiplexers 142, 146, 155, 159, 164, and 168 to connect their "1" inputs to their outputs.
    </p>
    <p num="68">
      Setting the configuration bits to select dual-port mode also causes control logic 150 and 172 to generate corresponding control signals on outputs 154a, 156, 162, 176, 178a, and 184 that assist in placing arrays 84a and 84b in dual-port mode.
      <br/>
      Accordingly, control logic 150 turns on switches 160 and 182 (via multiplexer 159 and line 178b) and control logic 172 turns on switches 158 (via multiplexer 155 and line 154b) and 180.
      <br/>
      Control logic 150 directs column decoder and data selection logic 122 to act as a write column decoder and control logic 172 directs column decoder and data selection logic 124 to act as a read column decoder.
      <br/>
      Write operations may be performed with column decoder and data selection logic 122 at the same time that read operations may be performed with column decoder and data selection logic 124.
      <br/>
      In addition, the eight-bit data width handling capacity of array 94 is effectively doubled by the addition of the eight-bit data width handling capacity of array 96, so that sixteen-bit data words may be written into and read from the combined dual-port memory array formed from arrays 84a and 84b.
      <br/>
      The dual-port mode ability to handle concurrent read and write operations and the expanded data width of the combined array allow the user to implement logic functions on device 82 that would not otherwise be possible.
    </p>
    <p num="69">
      During write operations in dual-port mode, row addressing is handled by row decoder 132 based on the address information provided at input 210.
      <br/>
      Write operations involve taking one of row output lines 134 high to simultaneously select a row of array 94 (via switch 160) and the corresponding row of array 96 (via switch 160, multiplexer 164, and switch 182).
    </p>
    <p num="70">
      The write column select signals generated by column decoder and data selection logic 122 on write column select lines 190 when performing a write operation in dual-port mode are distributed simultaneously to both array 94 (directly) and array 96 (via multiplexer 168).
      <br/>
      One, two, four, or eight of the columns of memory cells 230 in array 94 may be selected at a time by using column decoder and data selection logic 122 in the x1, x2, x4, or x8 mode.
      <br/>
      While the columns of memory cells 230 in array 94 are selected, the same number of corresponding columns of memory cells 230 in array 96 are selected by the write column select signals distributed to array 96.
      <br/>
      Data for array 94 is provided from input registers 102 and data for array 96 is provided from input registers 112.
      <br/>
      Data words of sixteen bits in width (effectively x16 mode) may be handled by providing the eight most significant bits of each word to array 94 and by providing the associated eight least significant bits of each word to array 96.
      <br/>
      Data words of two bits in width may be handled by storing one bit of data in array 94 and one bit of data in array 96.
      <br/>
      Data words of four bits in width may be handled by storing two bits of data in array 94 and two bits of data in array 96.
      <br/>
      Data words of eight bits in width may be handled by storing four bits of data in array 94 and four bits of data in array 96.
    </p>
    <p num="71">
      Writing data into a given column of memory cells 230 of FIG. 7a involves taking the write column select line 234, for that column high while providing the data for the column to the write bit line 236 for the column using the data routing capabilities of column decoder and data selection logic 122 or 124.
      <br/>
      Column decoder and data selection logic 122 is used for writing in dual-port mode.
      <br/>
      The columns in each array that are selected when a group of more than one column of cells 230 is selected at a time are typically adjacent.
    </p>
    <p num="72">
      During read operations in dual-port mode, row addressing is handled by row decoder 138 based on the address information provided at input 220.
      <br/>
      Read operations involve taking one of row output lines 140 high to simultaneously select a row of array 96 (via switch 180) and the corresponding row of array 94 (via switch 180, multiplexer 142, and switch 158).
      <br/>
      Simultaneous read and write operations may involve simultaneously taking a row line 140 and a row line 134 high for the same row, provided that the columns of arrays 94 and 96 that are selected for reading differ from the columns that are selected for writing.
    </p>
    <p num="73">
      The read column select signals generated by column decoder and data selection logic 124 on read column select lines 196 when performing a read operation in dual-port mode are distributed simultaneously to both array 94 (via multiplexer 146) and array 96 (directly).
      <br/>
      In particular, while the columns of memory cells 230 in array 96 are selected, the same number of corresponding columns of memory cells 230 in array 94 are selected by the read column select signals distributed to array 94.
      <br/>
      This allows sixteen bit data words to be handled, because the eight most significant bits of each word may be read from array 94 at the same time that the associated eight least significant bits of each word are read from array 96.
      <br/>
      Data selected for reading from array 94 is provided to read data selection logic 198 and data selected for reading from array 96 is provided to read data selection logic 204.
    </p>
    <p num="74">
      Reading data from a given column of memory cells 230 of FIG. 7 involves taking the read column select line 250 for that column high while monitoring the buffered read bit line 256 for that column using read data selection logic 198 or 204 of FIG. 6.
      <br/>
      The columns in each array that are selected when a group of more than one column of cells 230 is selected at a time are typically adjacent.
    </p>
    <p num="75">Because the write column selection functions of column decoder and data selection logic 122 in the dual-port mode operate essentially independently from the read column selection functions of column decoder and data selection logic 124 and read data selection logic 198 and 204, one process implemented in programmable logic device 82 may be writing data to arrays 94 and 96 while another process implemented in programmable logic device 82 may be reading data from arrays 94 and 96 at the same time.</p>
    <p num="76">
      The ability of the dual-port variable depth and width array 86 to support simultaneous read and write operations is illustrated in FIG. 8.
      <br/>
      In the example of FIG. 8, a four-bit write operation is being performed at the same time that a four-bit read operation is being performed.
      <br/>
      When using dual-port memory array 86 for such four-bit concurrent read and write operations, memory arrays 94 and 96 may each be thought of as being partitioned into eight groups of columns.
      <br/>
      The capacity of array 94 is 1K.
      <br/>
      Each group in memory array 94 has a capacity of 128 bits organized as 64 words of two bits each.
      <br/>
      Similarly, the capacity of array 96 is 1K.
      <br/>
      Each group in memory array 96 has a capacity of 128 bits organized as 64 words of two bits each.
      <br/>
      When reading four bits, two bits are retrieved from location 260 (e.g., in group 3) of memory array 94 in the selected row for reading and two bits are retrieved from location 262 (e.g., in group 3) of memory array 96 in the selected row for reading.
      <br/>
      When writing four bits, two bits are stored at location 264 (e.g., in group 2) of memory array 94 in the selected row for writing and two bits are stored at location 266 (e.g., in group 2) of memory array 96 in the selected row for writing.
    </p>
    <p num="77">
      The locations for reading a desired four-bit data word can be specified by taking two of the read column select lines 196 high using column decoder and data selection logic 124.
      <br/>
      These two column select lines are connected both to array 94 (via multiplexer 146) and array 96 (directly).
      <br/>
      Row decoder 138 specifies the desired row from which data in arrays 94 and 96 may be read.
      <br/>
      Row decoder 138 is connected to array 96 directly and is connected to array 94 via multiplexer 142.
    </p>
    <p num="78">
      The locations for writing a desired four-bit data word can be specified by taking two of the write column select lines 190 high using column decoder and data selection logic 122.
      <br/>
      These two column select lines are connected both to array 94 (directly) and array 96 (via multiplexer 168).
      <br/>
      Row decoder 132 specifies the desired row of arrays 94 and 96 into which data may be written.
      <br/>
      Row decoder 132 is connected to array 94 directly and is connected to array 96 via multiplexer 164.
    </p>
    <p num="79">
      Memory arrays 94 and 96 can each be partitioned into sixteen one-bit groups when array 86 is operated as a two-bit width dual-port memory array.
      <br/>
      When array 86 is operated as an eight-bit width dual-port memory array, memory arrays 94 and 96 can each be partitioned into four four-bit groups.
      <br/>
      When array 86 is operated as a sixteen-bit width dual-port memory array, memory arrays 94 and 96 can each be partitioned into two eight-bit groups.
    </p>
    <p num="80">
      To handle sixteen bit data words, arrays 94 and 96 are operated in the x8 mode.
      <br/>
      The eight most significant bits of each sixteen bit data word are loaded into registers 102, from which this data may be written into an appropriate location associated with either of the two eight-bit groups of columns in array 94.
      <br/>
      The eight least significant bits of each sixteen bit data word are loaded into registers 112, from which this data may be written into a corresponding location associated with either of the two eight-bit groups of columns in array 96.
    </p>
    <p num="81">
      The ability of the dual-port memory array arrangement of FIG. 6 to perform concurrent read and write operations allows the user of programmable logic device 82 to implement first-in-first-out buffers and other such memory arrangements.
      <br/>
      When the user does not need a dual-port memory array, but needs more available single-port memory arrays, the dual-port memory array arrangement of FIG. 6 may be operated as two independent single-port memory arrays.
    </p>
    <p num="82">
      The foregoing arrangements are typically used in programmable logic devices that are made part of larger systems.
      <br/>
      FIG. 9 shows a programmable logic device 268 containing the combinable single-port memory array circuitry of this invention in use in a data processing system 270.
      <br/>
      Data processing system 270 may include one or more of the following components: a processor 272, memory 273, I/O circuitry 274, and peripheral drivers 276.
      <br/>
      These components are coupled together by a system bus 278 and populate a circuit board 280 that is contained in system 270.
    </p>
    <p num="83">
      System 270 may be used in a wide variety of applications, such as computer networking, data networking, instrumentation, video processing, digital signal processing, or any other application where the advantage of using programmable logic is desirable.
      <br/>
      Programmable logic device 268 may be used to perform a variety of different logic functions.
      <br/>
      For example, programmable logic device 268 may be configured as a processor or controller that works in cooperation with processor 272.
      <br/>
      Programmable logic device 268 may also be used as an arbiter for arbitrating access to a shared resource in system 270.
      <br/>
      In yet another example, programmable logic device 268 may be configured as an interface between processor 272 and one of the other components in system 270.
    </p>
    <p num="84">
      The programmable connections made between various components in the programmable logic devices of the present invention can be implemented in any of a wide variety of ways.
      <br/>
      For example, each programmable connection can be a relatively simple programmable connector such as a switch or a plurality of switches for connecting any one of several inputs to an output.
      <br/>
      Each such connection may be configured using a memory cell such as a random-access memory cell.
      <br/>
      Alternatively, programmable connectors can be somewhat more complex elements which are capable of performing logic (e.g., by logically combining several of their inputs) as well as making connections.
      <br/>
      For example, each programmable connection can use product term logic, implementing functions such as AND, NAND, OR, or NOR.
      <br/>
      Examples of components suitable for implementing programmable connections are erasable programmable read-only memories (EPROMs), electrically-erasable programmable read-only memories (EEPROMs), pass transistors, transmission gates, antifuses, laser fuses, metal optional links, etc.
      <br/>
      These programmable components may be controlled by various programmable function control elements or memory cells, which store the configuration data used to control the programmable components.
      <br/>
      Examples of suitable function control elements include static random-access memory (SRAM) cells, dynamic random-access memory (DRAM) cells, first-in first-out cells, EPROMs, EEPROMs, function control registers (e.g., as in Wahlstrom U.S. Pat. No. 3,473,160), ferro-electric memories, fuses, antifuses, or the like.
      <br/>
      From the various examples mentioned above it will be seen that this invention is applicable both to one-time-only programmable and reprogrammable devices.
    </p>
    <p num="85">
      The foregoing is merely illustrative of the principles of this invention and various modifications can be made by those skilled in the art without departing from the scope and spirit of the invention.
      <br/>
      For example, the number of rows and columns of memory array cells that are used is not critical.
      <br/>
      In addition, the various data width modes used in the variable depth and width memory arrays are illustrative.
      <br/>
      Modes supporting different word sizes may be used if desired.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A programmable logic device comprising:</claim-text>
      <claim-text>a plurality of programmable logic regions wherein the plurality of programmable logic regions are arranged in intersecting rows and columns; a plurality of first combinable single-port memory arrays each having a plurality of rows and columns of memory cells for storing data; a plurality of second combinable single-port memory arrays each associated with a respective one of the first combinable single-port memory arrays and each having a plurality of rows and columns of memory cells for storing data, wherein the first and second combinable single-port memory arrays are combinable to form a plurality of dual-port memory arrays and wherein the first and second combinable single-port memory arrays are arranged in intersecting rows and columns;</claim-text>
      <claim-text>and a plurality of interconnects for routing signals between the programmable logic regions and the first and second combinable single-port memory arrays.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The programmable logic device defined in claim 1 wherein: the first combinable single-port memory arrays each have a maximum data width; the associated second combinable single-port memory arrays each have a maximum data width;</claim-text>
      <claim-text>and the dual-port memory arrays formed from the first and second combinable single-port memory arrays each have a maximum data width greater than the maximum data width of either the first combinable single-port memory arrays or the second single-port memory arrays taken alone.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The programmable logic device defined in claim 1 wherein the first and second combinable single-port memory arrays are combinable using circuitry from respective ones of the first combinable single-port memory arrays to perform writing operations and using circuitry from respective ones of the second combinable single-port memory arrays that are associated with each of the first combinable single-port memory arrays to perform concurrent reading operations.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The programmable logic device defined in claim 1 wherein the first and second combinable single-port memory arrays comprise variable depth and width memory arrays.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The programmable logic device defined in claim 1 wherein at least one of the first combinable single-port memory arrays and one of the second combinable single-port memory arrays are in each of the rows.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The programmable logic device defined in claim 1 wherein the first and second combinable single-port memory arrays further comprise: first input multiplexing circuitry for distributing data signals to respective ones of the first combinable single-port memory arrays;</claim-text>
      <claim-text>and second input multiplexing circuitry for distributing data signals to respective ones of the second combinable single-port memory arrays.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The programmable logic device defined in claim 1 wherein the first and second combinable single-port memory arrays further comprise: first input registers for registering data to be written to respective ones of the first combinable single-port memory arrays;</claim-text>
      <claim-text>and second input registers for registering data to be written to respective ones of the second combinable single-port memory arrays.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The programmable logic device defined in claim 1 wherein the first and second combinable single-port memory arrays further comprise: first output registers for registering data that has been read from respective ones of the first combinable single-port memory arrays;</claim-text>
      <claim-text>and second output registers for registering data that has been read from respective ones of the second combinable single-port memory arrays.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The programmable logic device defined in claim 1 wherein the first memory arrays further comprise: a write column select line associated with each column of each memory array for controlling the transfer of data into the cells of that column;</claim-text>
      <claim-text>and a read column select line associated with each column of each memory array for controlling the transfer of data from the cells in that column, wherein the write column select line and the read column select line operate independently.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The programmable logic device defined in claim 1 wherein the second memory arrays further comprise: a write column select line associated with each column of each memory array for controlling the transfer of data into the cells of that column;</claim-text>
      <claim-text>and a read column select line associated with each column of each memory array for controlling the transfer of data from the cells in that column, wherein the write column select line and the read column select line operate independently.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The programmable logic device defined in claim 1 wherein: the first combinable single-port memory arrays further comprise a first write column select line associated with each column of each first combinable memory array for controlling the transfer of data into the cells of that column and a first read column select line associated with each column of each first memory array for controlling the transfer of data from the cells in that column, wherein the first write column select line and the first read select line operate independently;</claim-text>
      <claim-text>and the second combinable single-port memory arrays further comprise a second write column select line associated with each column of each first memory array for controlling the transfer of data into the cells of that column and a second read column select line associated with each column of each second memory array for controlling the transfer of data from the cells in that column, wherein the second write column select line and the second read select line operate independently.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The programmable logic device defined in claim 1 wherein: the first and second combinable single-port memory arrays are combinable using circuitry from respective ones of the first combinable single-port memory arrays to perform writing operations and using circuitry from respective ones of the second combinable single-port memory arrays that are associated with each of the first combinable single-port memory arrays to perform concurrent reading operations;</claim-text>
      <claim-text>and the circuitry from each of the first combinable single-port memory arrays that is used to perform dual-port memory array writing operations comprises variable depth and width writing circuitry for performing write operations with selectable-size data words by addressing selected write locations within the rows and columns of cells in the first combinable single-port memory array and by writing data words into those write locations;</claim-text>
      <claim-text>and the circuitry from each of the second combinable single-port memory arrays that is used to perform dual-port memory array reading operations comprises variable depth and width reading circuitry for performing read operations with selectable-size data words concurrently with the write operations performed by the variable depth and width writing circuitry by addressing selected read locations within the rows and columns of cells in the second combinable single-port memory array and by reading data words from those read locations.</claim-text>
    </claim>
  </claims>
</questel-patent-document>