<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185527B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185527</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185527</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="22882300" extended-family-id="4770767">
      <document-id>
        <country>US</country>
        <doc-number>09234663</doc-number>
        <kind>A</kind>
        <date>19990119</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09234663</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>4961968</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>23466399</doc-number>
        <kind>A</kind>
        <date>19990119</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09234663</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G10L  15/04        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>04</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G10L  15/08        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>08</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F   3/16        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>16</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>G06F  17/30        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>G10L  15/00        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="6">
        <text>G10L  15/10        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="7">
        <text>G10L  15/18        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>18</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="8">
        <text>G10L  15/26        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>26</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>704231000</text>
        <class>704</class>
        <subclass>231000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>704233000</text>
        <class>704</class>
        <subclass>233000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>704251000</text>
        <class>704</class>
        <subclass>251000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>704253000</text>
        <class>704</class>
        <subclass>253000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>704270000</text>
        <class>704</class>
        <subclass>270000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>704E15045</text>
        <class>704</class>
        <subclass>E15045</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>G06F-017/30U5</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>30U5</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>G06F-017/30U1T</text>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>017</main-group>
        <subgroup>30U1T</subgroup>
      </classification-ecla>
      <classification-ecla sequence="3">
        <text>G10L-015/26A</text>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>015</main-group>
        <subgroup>26A</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30775</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30775</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150114</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-017/30746</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>17</main-group>
        <subgroup>30746</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150114</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G10H-2210/046</classification-symbol>
        <section>G</section>
        <class>10</class>
        <subclass>H</subclass>
        <main-group>2210</main-group>
        <subgroup>046</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150114</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G10H-2210/061</classification-symbol>
        <section>G</section>
        <class>10</class>
        <subclass>H</subclass>
        <main-group>2210</main-group>
        <subgroup>061</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150114</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G10L-015/26</classification-symbol>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>15</main-group>
        <subgroup>26</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150109</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G10L-2015/088</classification-symbol>
        <section>G</section>
        <class>10</class>
        <subclass>L</subclass>
        <main-group>2015</main-group>
        <subgroup>088</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150114</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S10H-210/046</classification-symbol>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S10H-210/061</classification-symbol>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S10L-015/08W</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>36</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>9</number-of-drawing-sheets>
      <number-of-figures>16</number-of-figures>
      <image-key data-format="questel">US6185527</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">System and method for automatic audio content analysis for word spotting, indexing, classification and retrieval</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>RUSSELL STEVEN P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5526407</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5526407</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>BALASUBRAMANIAN VIJAY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5606643</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5606643</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>BALASUBRAMANIAN VIJAY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5655058</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5655058</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>NELSON DOUGLAS J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5937422</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5937422</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>SHARMAN RICHARD ANTHONY, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6100882</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6100882</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>WILCOX LYNN D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5199077</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5199077</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>BROWN PETER F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5293584</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5293584</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>SMITH GREGORY S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5404510</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5404510</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>ELLIS MICHAEL D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5436653</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5436653</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>ELLIS MICHAEL D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5504518</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5504518</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>ELLIS MICHAEL D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5612729</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5612729</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>LANGS STEVEN E</text>
          <document-id>
            <country>US</country>
            <doc-number>5712953</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5712953</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>AGUILAR JOSEPH GERARD</text>
          <document-id>
            <country>US</country>
            <doc-number>5787387</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5787387</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>IBM</text>
          <document-id>
            <country>EP</country>
            <doc-number>0702351</doc-number>
            <kind>A2</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-702351</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>HEWLETT PACKARD CO</text>
          <document-id>
            <country>EP</country>
            <doc-number>0780777</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-780777</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>AT &amp; T CORP</text>
          <document-id>
            <country>EP</country>
            <doc-number>0820025</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>EP-820025</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>MATSUSHITA ELECTRIC IND CO LTD</text>
          <document-id>
            <country>JP</country>
            <doc-number>H0863184</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP08063184</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>GLORY KOGYO KK</text>
          <document-id>
            <country>JP</country>
            <doc-number>H0887292</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP08087292</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>MATSUSHITA ELECTRIC IND CO LTD</text>
          <document-id>
            <country>JP</country>
            <doc-number>H1049189</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>JP10049189</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="1">
          <text>White Paper: "Retrieving Spoken Documents by Combining Multiple Index Sources." Jones et al. pp. 30-38. Computer Laboratory, Engineering Dept., Univ. of Cambridge, England. 1996.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="2">
          <text>Article: "Content-Based Classification, Search, and Retrieval of Audio." Wold et al. Muscle Fish, IEEE Multimedia. vol. 3, No. 3. 16 pgs. Fall, 1996.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="3">
          <text>White Paper: "Automatic Audio Content Analysis". Pfeiffer et al. Univ. of Mannheim, Mannheim, Germany. ACM Multimedia. 1996.</text>
        </nplcit>
      </citation>
      <citation srep-phase="applicant">
        <nplcit num="4">
          <text>Article: "SpeechSkimmer: A System for Interactively Skimming Recorded Speech". Barry Arons. ACM Transactions on Computer-Human Interaction, vol. 4, No. 1, pp. 3-38. 1997.</text>
        </nplcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Petkovic, Dragutin</name>
            <address>
              <address-1>Saratoga, CA, US</address-1>
              <city>Saratoga</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Ponceleon, Dulce Beatriz</name>
            <address>
              <address-1>Palo Alto, CA, US</address-1>
              <city>Palo Alto</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Srinivasan, Savitha</name>
            <address>
              <address-1>San Jose, CA, US</address-1>
              <city>San Jose</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Rogitz, John L.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>{haeck over (S)}mits, T{overscore (a)}livaldis I.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system and method for indexing an audio stream for subsequent information retrieval and for skimming, gisting, and summarizing the audio stream includes using special audio prefiltering such that only relevant speech segments that are generated by a speech recognition engine are indexed.
      <br/>
      Specific indexing features are disclosed that improve the precision and recall of an information retrieval system used after indexing for word spotting.
      <br/>
      The invention includes rendering the audio stream into intervals, with each interval including one or more segments.
      <br/>
      For each segment of an interval it is determined whether the segment exhibits one or more predetermined audio features such as a particular range of zero crossing rates, a particular range of energy, and a particular range of spectral energy concentration.
      <br/>
      The audio features are heuristically determined to represent respective audio events including silence, music, speech, and speech on music.
      <br/>
      Also, it is determined whether a group of intervals matches a heuristically predefined meta pattern such as continuous uninterrupted speech, concluding ideas, hesitations and emphasis in speech, and so on, and the audio stream is then indexed based on the interval classification and meta pattern matching, with only relevant features being indexed to improve subsequent precision of information retrieval.
      <br/>
      Also, alternatives for longer terms generated by the speech recognition engine are indexed along with respective weights, to improve subsequent recall.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention relates generally to audio streams including audio streams extracted from video, and more particularly to systems and methods for classifying and indexing audio streams to support subsequent retrieval, gisting, summarizing, skimming, and general searching of the audio streams.</p>
    <p num="3">2. Description of the Related Art</p>
    <p num="4">
      Accompanying the burgeoning growth of computer use in general and multimedia computer applications in particular, a large amount of audio continues to be produced from, e.g., audio-video applications, and the audio then electronically stored.
      <br/>
      As recognized by the present invention, as the number of audio files grows, it becomes increasingly difficult to use stored audio streams quickly and efficiently using only existing audio file directories or other existing means for access.
      <br/>
      For example, it might be desirable to access an audio stream derived from, e.g., video, based on a user query to retrieve information, or to present a summary of audio streams, or to enable a user to skim or gist an audio stream.
      <br/>
      Accordingly, the present invention recognizes a growing need to efficiently search for particular audio streams to which access is desired by a user but which might very well be stored with thousands of other audio streams.
    </p>
    <p num="5">
      Conventional information retrieval techniques are based on the assumption that the source text, whether derived from audio or not, is free of noise and errors.
      <br/>
      When a source text is derived from audio, however, the above assumption is a poor one to make.
      <br/>
      This is because speech recognition engines are used to convert an audio stream to computer-stored text, and given the inexact nature and inherent difficulty of the task, such conversion is virtually impossible to accomplish without errors and without introducing noise in the text.
      <br/>
      For example, certain words in an audio stream may not be recognized correctly (e.g., spoken "land" might be translated to "lamb") or at all, thereby diminishing the recall capability and precision of an information retrieval system.
      <br/>
      By "precision" is meant the capability of a system to retrieve only "correct" documents, whereas "recall" refers to a system's capability in retrieving as many correct documents as possible.
      <br/>
      Fortunately, we have recognized that it is possible to account for limitations of speech recognition engines in converting audio streams to text, and that accounting for these limitations, it is possible to improve the precision and recall of an information retrieval system.
    </p>
    <p num="6">
      In addition to the above considerations, the present invention recognizes that in many instances, a user might want to recall a digitally stored audio stream to listen to it, but the user might not wish to listen to or access information from an entire audio stream, but only from particular portions of it.
      <br/>
      Indeed, a user might wish only to hear a summary of an audio stream or streams, or to gain an understanding of the gist of an audio stream.
      <br/>
      For example, a user might wish only to hear portions of audio streams having to do with particular topics, or spoken by particular people, or, in the case of recorded programming, a user might prefer to listen only to non-commercial portions of the programming.
      <br/>
      Similarly, a user might want to "fast forward" through audio.
      <br/>
      For example, a user might want to speed up "less interesting" portions of an audio stream (e.g., commercials) while keeping "interesting" portions at a comprehensible speed.
    </p>
    <p num="7">
      Past efforts in audio content analysis, however, such as those disclosed in Japanese patent publications 8063184 and 10049189 and European patent publication 702351, have largely focused not on the above considerations, but rather simply on improving the accuracy of speech recognition computer input devices, or on improving the quality of digitally-processed speech.
      <br/>
      While perhaps effective for their intended purposes, these past efforts do not seem to consider and consequently do not address indexing audio streams based on audio events in the streams, to support subsequent searching, gisting, and summarization of computer-stored audio streams.
    </p>
    <p num="8">
      U.S. Pat. No. 5,199,077 discloses wordspotting for voice editing and indexing.
      <br/>
      This method works for keyword indexing of single speaker audio or video recordings.
      <br/>
      The above-mentioned Japanese patent publications 8063184 and 10049189 refer to audio content analysis as a step towards improving speech recognition accuracy.
      <br/>
      Also, Japanese patent publication 8087292A uses audio analysis for improving the speed of speech recognition systems.
      <br/>
      The above-mentioned European patent publication EP702351A involves identifying and recording audio events in order to assist with the recognition of unknown phrases and speech. U.S. Pat. No. 5,655,058 describes a method for segmenting audio data based on speaker identification, while European patent publication EP780777A describes the processing of an audio file by speech recognition systems to extract the words spoken in order to index the audio.
    </p>
    <p num="9">
      The methods disclosed in these systems target improving the accuracy and performance of speech recognition.
      <br/>
      The indexing and retrieval systems disclosed are based on speaker identification, or direct application of speech recognition on the audio track and the use of words as search terms.
      <br/>
      The present system, in contrast, is directed towards indexing, classification, and summarization of real world audio which, as understood herein, seldom consists of single speaker, clear audio consisting of speech segments alone.
      <br/>
      Recognizing these considerations, the present invention improves on prior word spotting techniques using the system and method fully set forth below, in which music and noise is segmented from the speech segments, speech recognition applied to the clear speech segments, build an advanced retrieval system built which takes the results of audio analysis into account.
    </p>
    <p num="10">
      Other techniques have been described for analyzing the content of audio, including the method disclosed in Erling, et al. in an article entitled "Content-Based Classification, Search, and Retrieval of Audio", published in IEEE Multimedia, 1996 (hereinafter "Musclefish").
      <br/>
      The method by which Musclefish classifies sounds, however, is not driven by heuristically determined rules, but rather by statistical analysis.
      <br/>
      As recognized by the present invention, heuristically determined rules are more robust than statistical analyses for classifying sounds, and a rule-based classification method can more accurately classify sound than can a statistics-based system.
      <br/>
      Furthermore, the Musciefish system is intended to be used only on short audio streams (less than 15 seconds).
      <br/>
      This renders it inappropriate for information retrieval from longer streams.
    </p>
    <p num="11">
      Still other methods have been disclosed for indexing audio, including the method disclosed by Pfeiffer et al. in an article entitled "Automatic Audio Content Analysis", published in ACM Multimedia 96 (1996) (hereinafter "MoCA").
      <br/>
      Like many similar methods, however the MoCA method is domain specific, i.e., it seeks to identify audio that is related to particular types of video events, such as violence.
      <br/>
      The present invention recognizes that many audio and multimedia applications would benefit from a more generalized ability to segment, classify, and search for audio based on the content thereof, and more specifically based on one or more predetermined audio events therein.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="12">
      A method is disclosed for facilitating reliable information retrieval, also referred to as "word spotting", in long, unstructured audio streams, including audio streams that have been extracted from audio-video data.
      <br/>
      The present invention uses special audio prefiltering to identify domain/application specific speech boundaries to index only relevant speech segments that are generated by a speech recognition engine, to facilitate, among other applications disclosed below, subsequent reliable word spotting.
      <br/>
      To do this, the invention analyzes the content of audio streams to identify content specific, application specific, genre specific clear speech boundaries with associated confidence levels.
      <br/>
      Then, the invention uses confidence levels generated by a speech recognition engine and combines the confidence levels with inventive weighting to index a transcript of only selected portions of the audio (i.e., relevant speech) as generated by the speech recognition engine.
      <br/>
      Thus, the present invention does not seek to improve speech recognition engines per se, but to improve the precision and recall of information retrieval systems (that might use speech recognition engines) by improving the way in which audio streams are indexed.
    </p>
    <p num="13">The invention can be implemented as a general purpose computer programmed according to the inventive steps herein to classify and index audio signals, also referred to herein as audio streams, including audio extracted from video, for subsequently presenting to a user a visual summary of the audio streams to allow the user to browse, or skim, the streams and play back only those audio segments that are of interest, and/or to index audio streams for information retrieval.</p>
    <p num="14">
      The invention can also be embodied as an article of manufacture--a machine component--that is used by a digital processing apparatus and which tangibly embodies a program of instructions that are executable by the digital processing apparatus to undertake the present logic.
      <br/>
      This invention is realized in a critical machine component that causes a digital processing apparatus to perform the inventive method steps herein.
      <br/>
      In other aspects, a computer program product is disclosed which is readable by a digital processing apparatus and which tangibly embodies a computer program.
      <br/>
      The computer program product combines a computer readable medium with program code elements that undertake the logic disclosed below.
      <br/>
      And, a computer-implemented method is disclosed for executing the logic herein.
    </p>
    <p num="15">
      Accordingly, in one aspect a computer-implemented method for analyzing an audio signal includes detecting audio events in one or more intervals of the audio signal, with each interval including a temporal sequence of one or more segments.
      <br/>
      The audio events are analyzed to identify speech boundaries with associated confidence levels, and the method then indexes the audio signal based on the speech boundaries and confidence levels using heuristically determined rules to improve precision.
      <br/>
      Also, the method indexes alternatives to at least one word in the audio signal along with an associated weight to improve recall for the subsequent undertaking of one or more of: word spotting, summarizing, and skimming the audio signal, using the indexing.
    </p>
    <p num="16">
      In another aspect, a computer is disclosed for classifying and indexing an audio signal.
      <br/>
      As set forth in detail below, the computer embodies computer usable code means that include logic means for rendering the audio signal into intervals, with each interval including one or more segments.
      <br/>
      Logic means then determine whether the segments of an interval exhibit one or more predetermined audio features, which can also be referred to as "audio characteristics", with each audio feature being representative of at least one respective audio event.
      <br/>
      Also, logic means classify the intervals by associating the intervals with respective audio events in response to the means for determining.
      <br/>
      Further, logic means are provided for determining whether at least one group of intervals matches a meta pattern in a predefined set of meta patterns, and logic means associate the group of intervals with a meta pattern classification when it is determined that the group of intervals matches a meta pattern.
      <br/>
      Logic means then index the audio signal based on interval classifications and meta pattern classifications.
    </p>
    <p num="17">
      In a preferred embodiment, logic means process only relevant portions of the audio signal using a speech recognition engine to render words from the signal.
      <br/>
      The engine generates both the recognized words and alternatives to them, with associated confidence levels.
      <br/>
      In a simple implementation, we index only the longer words (three characters or more) with confidence levels for recognition being 90% or more.
      <br/>
      A more general purpose solution is to index the recognized words and alternatives based on weights, where the weight depends on the confidence level of recognition, confidence value of alternative words (if any), the length of the recognized word, and on whether
    </p>
    <p num="18">
      Also in a preferred embodiment, each predetermined audio feature is based on one or more of: zero crossing rate (ZCR) of at least a portion of the audio signal, energy of at least a portion of the audio signal, spectral energy (SE) concentration of at least a portion of the audio signal, and frequency (F).
      <br/>
      Also in the preferred embodiment, the predefined set of audio events includes music, speech, silence, and speech on music.
      <br/>
      With respect to the meta patterns, the predefined set of patterns can include, but is not limited to, continuous uninterrupted speech (such as a newscast or educational program) and music combined with speech (such as a commercial), with the predefined set of patterns being heuristically defined.
    </p>
    <p num="19">
      Still further, the present invention envisions classifying and indexing audio streams that contain speech based on "interesting events" in speech such as emphasis in speech, hesitation in speech, and concluding ideas in speech.
      <br/>
      Accordingly, means are provided for determining a dominant frequency in each one of a sequence of samples of at least one interval that has been classified as speech.
      <br/>
      Speech intervals are associated with emphasis in speech when they include a top N % of the dominant frequencies, wherein N is a heuristically determined number, preferably one (1).
      <br/>
      On the other hand, speech intervals are associated with concluding ideas in speech when they include a bottom N % of the dominant frequencies.
      <br/>
      Further, if temporally sequential intervals, all associated with emphasis in speech, define a period greater than a predetermined period, the entire sequence is indexed as an important idea in speech.
    </p>
    <p num="20">
      In a particularly preferred embodiment, logic means are provided for normalizing the segments, prior to classifying the intervals.
      <br/>
      Moreover, logic means present the index of the intervals and meta pattern classifications for skimming, gisting, and summarizing the audio signal, using the indexing of the signal.
    </p>
    <p num="21">
      To determine whether a segment of an interval exhibits one or more predetermined audio features, means are provided for determining whether one or more audio features associated with the segment equals a respective threshold.
      <br/>
      If so, a counter associated with the audio feature is incremented, and after all segments in an interval have been tested, the counters are compared to the number of segments in the interval and the interval then classified based on the comparison.
    </p>
    <p num="22">
      In another aspect, a computer program product includes a computer program storage device that is readable by a digital processing apparatus, and a program means is on the program storage device.
      <br/>
      The program means includes program code element that are executable by the digital processing apparatus for performing method steps for indexing at least one audio signal, for subsequent summarization of the signal to allow a user to use the summary to browse and/or play back only types of audio that are of interest.
      <br/>
      In accordance with the present invention, the method steps include rendering the audio signal into intervals, with each interval including one or more segments, and determining whether the segments of an interval exhibit one or more predetermined audio features selected from the set of features including zero crossing rate of at least a portion of the audio signal, energy of at least a portion of the audio signal, frequency of at least a portion of the audio signal, and spectral energy concentration of at least a portion of the audio signal.
      <br/>
      As intended by the present invention, each audio feature represents at least one respective audio event including at least music and speech.
      <br/>
      The intervals are classified by associating the intervals with respective audio events, and the audio signal indexed based at least in part on the interval classification.
    </p>
    <p num="23">
      The details of the present invention, both as to its structure and operation, can best be understood in reference to the accompanying drawings, in which like reference numerals refer to like parts, and in which:
      <br/>
      BRIEF DESCRIPTION OF THE DRAWINGS
      <br/>
      FIG. 1 is a schematic diagram of the present system;
      <br/>
      FIG. 2 is a flow chart of the overall indexing logic of the present invention;
      <br/>
      FIG. 3 is a flow chart of the logic for determining audio features of the segments;
      <br/>
      FIG. 4 is a flow chart of the logic for determining whether a segment is silence;
      <br/>
      FIG. 5 is a flow chart of the logic for determining whether a segment is speech;
      <br/>
      FIG. 6 is a flow chart continuing the logic shown in FIG. 5;
      <br/>
      FIG. 7 is a flow chart of the logic for determining whether a segment is music;
      <br/>
      FIG. 8 is a flow chart continuing the logic shown in FIG. 7;
      <br/>
      FIG. 9 is a flow chart of the logic for determining whether a segment is speech on music;
      <br/>
      FIG. 10 is a flow chart continuing the logic shown in FIG. 9;
      <br/>
      FIG. 11 is a flow chart showing the logic for skimming, gisting, and summarizing;
      <br/>
      FIG. 12 is a flow chart showing the logic for further classification and indexing of an audio stream based on words and on "interesting events" in the audio;
      <br/>
      FIG. 13 is a flow chart showing the logic for determining whether samples of speech represent emphasis in speech, concluding ideas in speech, and important ideas in speech;
      <br/>
      FIG. 14 is a flow chart of the logic for determining whether harmonics are present;
      <br/>
      FIG. 15 is a flow chart showing the summaries resulting from the indexed audio stream; and
      <br/>
      FIG. 16 is a schematic view of a screen summarizing audio streams that have been indexed.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="24">
      Referring initially to FIG. 1, a system for analyzing audio content (including audio content of audio-visual data) for indexing, classifying, and retrieving the audio is shown, generally designated 10.
      <br/>
      In the particular architecture shown, the system 10 includes a digital processing apparatus, such as a computer 12.
      <br/>
      In one intended embodiment, the computer 12 may be a personal computer made by International Business Machines Corporation (IBM) of Armonk, N.Y. as shown, or the computer 12 may be any computer, including computers sold under trademarks such as AS400, with accompanying IBM Network Stations.
      <br/>
      Or, the computer 12 may be a Unix computer, or OS/2 server, or Windows NT server, or IBM RS/6000 250 workstation with 128 MB of main memory running AIX 3.2.5., or an IBM laptop computer.
    </p>
    <p num="25">
      The computer 12 includes an audio engine 14, schematically shown in FIG. 1, which may be executed by a processor within the computer 12 as a series of computer-executable instructions.
      <br/>
      These instructions may reside, for example, in RAM of the computer 12.
    </p>
    <p num="26">
      Alternatively, the instructions may be contained on a data storage device with a computer readable medium, such as a computer diskette 16 shown in FIG. 1 that is engageable with a floppy disk drive 17 of the computer 12.
      <br/>
      Or, the instructions may be stored on a DASD array, magnetic tape, conventional hard disk drive, electronic read-only memory, optical storage device, or other appropriate data storage device.
      <br/>
      In an illustrative embodiment of the invention, the computer-executable instructions may be lines of C++ code.
    </p>
    <p num="27">
      FIG. 1 also shows that the system 10 can include peripheral computer equipment known in the art, including an output device such as a video monitor 18 and/or printer 20 and an input device such as a computer keyboard 22 and/or mouse 24.
      <br/>
      Other output devices can be used, such as other computers, and so on.
      <br/>
      Likewise, input devices other than the keyboard 22 and mouse 24 can be used, e.g., trackballs, keypads, touch screens, and voice recognition devices.
    </p>
    <p num="28">
      The computer 12 can access, via a data transmission path 25, an electronically-stored database 26 that contains audio data.
      <br/>
      The audio data can be input into the database 26 from an appropriate audio source 28.
      <br/>
      It is to be understood that the audio data can be input directly to the engine 14 from the audio source 28, which can be a source of analog or digitized audio, such as, e.g., a broadcast network or radio station.
      <br/>
      It is to be further understood that the database 26 can be locally stored on the computer 12, in which case the path 25 is an internal computer bus, or the database 26 can be remote from the computer 12, in which case the path 25 is a local area network or wide area network such as the Internet.
      <br/>
      For purposes to be described shortly, the engine 14 access a speech recognition engine 29.
      <br/>
      The speech recognition engine 29 can be any suitable speech recognition engine, such as, e.g., the one disclosed in U.S. Pat. No. 5,293,584, owned by the same assignee as the present invention and incorporated herein by reference.
      <br/>
      The speech recognition engine 29 can be the present assignee's "Large Vocabulary Continuous Speech Recognition" system.
    </p>
    <p num="29">
      To illustrate applications of the present invention, namely, summarizing and skimming, reference is made to FIG. 15. Commencing at block 300, a received audio stream is indexed using the heuristically defined rules set forth below.
      <br/>
      Then, at block 302 a summary of the indexed audio is displayed per user's request.
      <br/>
      Such a summary 304 is shown in the display screen 306 in FIG. 16, it being understood that the display screen 306 can be presented on the monitor 18 (FIG. 1).
      <br/>
      As shown, the summary 304 can consist of audio genre, including noise, speech, music, emphasized speech, laughter, animal sounds, and so on.
    </p>
    <p num="30">
      Moving to block 308 in FIG. 15, a viewing or playback option is selected by the user from a playback option menu 310 (FIG. 16), and based on the user selection the selected audio is "slimmed", i.e., played back without intervening non-selected audio.
      <br/>
      As shown, the user can select to play back audio of the genre selected at block 302 in temporal sequence, or by relevance, i.e., confidence or likelihood that the audio is actually of the type selected.
      <br/>
      If the user selects "relevance", the process moves to block 312 of FIG. 15 to analyze the indexed audio to play back only audio events of interest to the user.
    </p>
    <p num="31">
      The identification of the audio being played back can be displayed in a playback window 314, on the screen 306.
      <br/>
      If the audio is derived from video, the video can be played back on the window 314.
      <br/>
      The user can also select a "previous" button 316 to select the previous audio clip, a "next" button 318 to select the next audio clip, and a "play" button 320 to hear the selected clip, i.e., to cause the selected clip to be played.
      <br/>
      As mentioned above, however, the present invention has other applications as well, including information retrieval by word spotting.
      <br/>
      Regardless of the application, the ability of the present invention to effectively index audio renders subsequent applications easier to execute, and, in the case of word spotting, more precise, with improved recall.
    </p>
    <p num="32">
      Accordingly, turning now to the logic of the present invention in indexing audio streams, reference is made to FIG. 2.
      <br/>
      Commencing at block 30, the audio stream is received by the audio engine 14.
      <br/>
      It is to be understood that the stream can be transformed using a short form of the fast Fourier transformation (FFT) function, and then the low amplitude noise components of the FFT are filtered out of the signal, prior to the below-disclosed steps.
    </p>
    <p num="33">
      Moving to block 31, the stream is divided into temporally successive intervals of, e.g., two seconds duration, with each interval in turn being divided into one or more segments of, e.g., one hundred milliseconds (100 ms) duration.
      <br/>
      Intervals and segments of different durations can be used within the scope of the present invention, however.
    </p>
    <p num="34">
      From block 31, the logic moves to block 32 to test each segment to determine whether the segment can best be classified as one of a predetermined set of audio events by determining the audio features of each segment, as more fully set forth below.
      <br/>
      The predetermined audio events in the presently preferred embodiment include silence, speech, music, and speech on music.
      <br/>
      If a segment cannot be classified, it is designated as a segment of indeterminant classification.
    </p>
    <p num="35">
      The logic next proceeds to block 33, wherein each interval is classified by associating the interval with one of the audio events, i.e., each interval is correlated to one of the above-disclosed audio events, based on the test results of its segments obtained at block 32.
      <br/>
      Then, at block 34 it is determined whether a temporal sequence of intervals (with some allowance, if desired, for occasional "missing" intervals) matches one of a set of heuristically predefined meta pattern genre.
      <br/>
      The presence of meta patterns in the audio signal or stream are identified in the audio stream based on the interval classifications obtained at block 33.
      <br/>
      For instance, thirty seconds of short, alternating sequences of music, speech, and speech on music in any order might match a predefined "commercial" meta pattern genus and thus be so classified at block 35, with what constitutes any particular meta pattern genus being heuristically determined.
      <br/>
      Or, a sequence of interval classifications of speech-music-speech might match a meta pattern heuristically predefined to establish an "education/training" genus.
      <br/>
      Other meta pattern genre such as "cartoons" and "news" can likewise be heuristically predefined.
      <br/>
      Indeed, meta patterns of meta patterns can be heuristically predefined, such as defining a meta pattern "broadcast news break" to be four and only four commercial meta patterns in sequence.
      <br/>
      Accordingly, a large number of meta pattern genre can be defined heuristically that fall within the scope of the present invention.
      <br/>
      It can now be appreciated that a meta pattern essentially is a predefined sequence of variously classified intervals.
    </p>
    <p num="36">
      From block 35, the process moves to block 36 to process selected portions of the audio stream with the speech recognition engine 29 (FIG. 1).
      <br/>
      The speech recognition engine 29 converts the portions of the audio stream it processes into text, represented by words composed of one or more alpha-numeric characters.
      <br/>
      Importantly, the entire audio stream need not be processed at block 36.
      <br/>
      Instead, only portions of the audio stream, e.g., those classified as "newscasts" in block 35, can be sent to the speech recognition engine for processing.
      <br/>
      As recognized herein, processing a long, unstructured audio stream that might include several different types of domain/application speech boundaries with a speech recognition engine can lead to errors in the output of the speech recognition engine.
      <br/>
      For example, a speech recognition engine can produce many errors when it attempts to convert to text a segment having both speech and music.
      <br/>
      Accordingly, processing only particular (relevant) types of domain/application speech segments reduces the errors caused by inherent shortcomings in conventional speech recognition engines.
    </p>
    <p num="37">
      As also indicated at block 36, while the selected audio portions are converted to text, two weights, referred to as "confidence level" weight and "emphasis" weight, are used for at least some, and preferably all, of the words that are rendered.
      <br/>
      The weights are based in part on whether a particular word was derived from an "emphasized" speech segment as set forth further below.
    </p>
    <p num="38">
      Next, at block 37, a "DO" loop is entered only for words that satisfy the following two criteria: the word must have a length at least as long as "N" characters, wherein "N" is an integer preferably equal to, e.g., three, and the word must have been returned from the speech recognition engine 29 with a confidence level of at least ninety percent (90%).
      <br/>
      The confidence level could be a range of probabilities if desired.
      <br/>
      The present invention thus exploits the characteristic of speech recognition engines to make more accurate conversions of longer spoken words to text, as compared to the accuracy of speech engines in converting shorter spoken words to text.
      <br/>
      The step at block 37 can be thought of as a filter in which words of length less than "N" are not indexed.
      <br/>
      As an alternative, words of all lengths can be considered at block 37, with shorter words later pruned or ranked relatively low at the time of retrieval.
    </p>
    <p num="39">
      The "DO" loop proceeds to block 38, wherein the speech engine 29 is queried for alternatives to the word under test.
      <br/>
      At block 39, preferably the top two alternatives are identified as terms to be indexed along with the word under test, although all alternatives can be considered if desired.
      <br/>
      Like the word under test, weights are assigned to the alternatives.
      <br/>
      Similarly, alternate word lattices, rather than single word alternates, can be used.
      <br/>
      Then, at block 40, the stream is indexed using the words and alternatives, along with the respective weights, for subsequent retrieval by, e.g., an information retrieval system such as the system known in the art as "Okapi".
      <br/>
      With the above disclosure in mind, it can be appreciated that to support subsequent information retrieval of text based on a query, only relevant speech segments are indexed at block 40.
    </p>
    <p num="40">
      With respect to retrieval, as recognized by the present invention words that do not exist in the vocabulary of a word recognition system will not be present in the transcript that is generated; hence, if queried for, such out-of-vocabulary words will not return any results.
      <br/>
      With this in mind, a retrieval system such as "Okapi" can be modified such that when a query returns no results, the retrieval system accesses a thesaurus derived from a corpus of similar domain (for example, broadcast news, office correspondence, or medicine) to expand or substitute out-of-vocabulary words in the query with words in the thesaurus.
    </p>
    <p num="41">
      As mentioned above, weights are calculated for each word (and its alternatives, if any).
      <br/>
      The weight assigned to a word depends on several factors, including the associated confidence level returned by the speech recognition engine, the inverse document frequency, and whether the word was "emphasized".
      <br/>
      In a particularly preferred embodiment, the weight of a word is determined as follows:
    </p>
    <p num="42">if</p>
    <p num="43">
      ALPHA 1 =0.5 and  ALPHA 2 =1+ ALPHA 1 (empirically determined);
      <br/>
      Ld =length of document "d" and L' is the average document length;
      <br/>
      qk =kth term in the query;
      <br/>
      Cd (qk) is the count for query term "k" of document "d";
      <br/>
      ECd (qk)=Edk is the expected count for query term "k" of document "d";
      <br/>
      Cq (qk)=count of the kth term in the query "q";
      <br/>
      Eq (qk)=Eqk expected count of the kth term in the query "q";
      <br/>
      n(qk)=number of documents that contain the term qk ;
      <br/>
      n'(qk)=expected number of documents that contain the term qk ;
      <br/>
      Q'=total number of terms in query including all alternate words as described above and N is the total number of documents;
      <br/>
      pi (qk)=weight indicating confidence level of ith occurrence of kth query term, from word recognition engine;
      <br/>
      ei (qk)=weight indicating emphasis of ith occurrence of kth query term;
    </p>
    <p num="44">
      then the inverted document frequency for the kth query term=idf(qk):
      <br/>
      idf(qk)=log +(N-n'(qk)+ ALPHA 1)/(n'(qk)+ ALPHA 1)}
    </p>
    <p num="45">
      and the relevance score to rank document "d" against query "q" =S(d,q):
      <br/>
      S(d,q)=sum from k=1 to Q'of +Edk *Eqk *idf(qk)}/+ ALPHA 1 + ALPHA 2 (1d /1')+Edk }
    </p>
    <p num="46">
      where
      <br/>
      Edk =sum of the products from i=1 to Q' of +pi (qk)*ei (qk)} on document "d", and
      <br/>
      Eqk =sum of the products from i=1 to Q' of +pi (qk)*ei (qk)} on query "q".
    </p>
    <p num="47">
      When the query is typed and all terms have the same emphasis, ei (qk) is a constant, e.g., "e". On the other hand, when the user wishes to modify the emphasis of a term, he or she can type in a prefix symbol such as "+word", in which case ei (qk) has a default value between 0 and 1 inclusive chosen by the system.
      <br/>
      If the query is spoken and, hence, inherently has emphasized terms, the logic below for finding emphasis in speech is used to determine the emphasis prefix of each term, and ei (qk) has a value between 0 and 1.
    </p>
    <p num="48">
      FIG. 3 shows further details of the processing of each segment from the audio stream.
      <br/>
      Commencing at block 44, a DO loop is entered wherein for each kth segment, one or more sound features are determined at block 46 and normalized at block 48.
      <br/>
      More specifically, at block 46 a zero crossing rate (ZCR), energy (E), and spectral energy concentration (RSi) for each segment can be determined, as well as the frequencies falling within various predefined rangesi.
      <br/>
      As set forth below, all or only a subset of these audio features can be used.
    </p>
    <p num="49">
      By "zero crossing rate" is meant the number of times in a segment that the audio signal amplitude passes through a value of zero.
      <br/>
      By "energy" is meant the sum of the squared audio signal amplitude values of each segment.
      <br/>
      In contrast, the spectral energy concentration for each segment is established by plural RSi values, one for each ith frequency range, that is defined to be the sum of the squares of the frequencies in each ith frequency range present in the segment.
      <br/>
      In the preferred embodiment, four frequency ranges are used.
      <br/>
      By way of example only, the first frequency range R1 is 0-1000 Hz, the second frequency range R2 is 1000-8000 Hz, the third frequency range R3 is 8000-16,000 Hz, and the fourth frequency range R4 is greater than 16,000 Hz.
    </p>
    <p num="50">
      Audio features other than the above-disclosed preferred features can be used, however.
      <br/>
      For example, brightness (the centroid of the short form Fourier magnitude spectra stored as a log frequency) can be used, as can bandwidth, harmonicity (the deviation of the sound's line spectrum from a perfectly harmonic spectrum), and tonality.
    </p>
    <p num="51">
      At block 48 the calculated audio features are statistically normalized.
      <br/>
      The normalized version of a measured audio feature is the quotient of the difference between the measured audio feature and the mean value of that feature over all segments, and the standard deviation of that feature for all segments.
      <br/>
      For example, the normalized spectral energy concentration NRi for a segment is given by:
      <br/>
      NRi =(RSi -mean(RSi))/ SIGMA RSi
    </p>
    <p num="52">
      Now referring to FIG. 4, the logic by which the present invention tests the audio segments can be seen.
      <br/>
      It is to be understood that FIGS. 4-10 illustrate a preferred set of heuristics, with accompanying preferred thresholds, for defining the various tests for speech, silence, music, and so on, and that other specific heuristics and/or thresholds can be defined.
      <br/>
      Commencing at block 50, a DO loop is entered for each segment in an interval.
      <br/>
      Proceeding to decision diamond 52, it is determined whether the percentage of frequencies in the segment that lie in the first frequency band R1, compared to all sampled frequencies in the segment under test, is greater than 90%.
      <br/>
      When the preferred sampling frequency of 44 KHz and segment duration of 100 ms are used, twenty (20) samples per segment are obtained.
    </p>
    <p num="53">
      If more than 90% of the sampled frequencies of the segment are in the first frequency band R1, the process moves to block 54 to label or otherwise designate or classify the segment as "silence".
      <br/>
      From block 54, or from decision diamond 52 if the test there was negative, the logic proceeds to decision diamond 56 to determine whether the last segment in the interval has been tested, and if not, the logic moves to block 58 to obtain the next segment, and thence to loop back to decision diamond 52.
      <br/>
      When the last segment has been tested, however, the logic ends at state 60.
    </p>
    <p num="54">
      FIG. 5 shows the present test for determining whether a segment is a segment of speech.
      <br/>
      Commencing at block 62, a DO loop is entered for each segment in an interval.
      <br/>
      Proceeding to decision diamond 64, it is determined whether the percentage of frequencies in the segment that lie in the third frequency band R3, compared to all sampled frequencies in the segment under test, is greater than 15%.
      <br/>
      If so, a SpeechFreq counter is incremented by unity at block 66.
    </p>
    <p num="55">
      From block 66 or from decision diamond 64 if the test there was negative, the logic moves to decision diamond 68 to determine whether the zero crossing rate (ZCR) of the segment under test is greater than six (6).
      <br/>
      If so, a SpeechZCR counter is incremented by unity at block 70.
      <br/>
      From block 70, or from decision diamond 68 if the test there was negative, the logic proceeds to decision diamond 72 to determine whether the last segment in the interval has been tested, and if not, the logic moves to block 74 to obtain the next segment, and thence to loop back to decision diamond 64.
      <br/>
      When the last segment has been tested, however, the logic proceeds to FIG. 6.
    </p>
    <p num="56">
      As recognized by the present invention, the presence (or absence) of harmonic frequencies in audio can be used to determine whether the audio is music or speech.
      <br/>
      Spectral analysis is typically used for segmentation of musical harmony or chords towards note analysis and determination of the structure of a piece of music.
      <br/>
      The present invention, however, uses the absence of detected musical harmonics as a reliable test for speech.
    </p>
    <p num="57">
      Accordingly, as shown in FIG. 6, after testing the segments of an interval, to classify the interval as "speech", in the preferred embodiment three conditions must be met.
      <br/>
      More specifically, commencing at decision diamond 73, it is determined whether the interval has been labelled as "harmonic" in accordance with the logic shown in FIG. 14 and discussed below.
      <br/>
      If not (indicating that the interval is speech), the process moves to decision diamond 74, wherein it is determined whether the value of the SpeechFreq counter is greater than 40% of the number of segments in the interval.
      <br/>
      In other words, at decision diamond 74 it is determined whether at least 40% of the segments in the interval under test satisfy the condition at decision diamond 64 of FIG. 5.
      <br/>
      If so, the logic then moves to decision diamond 76 to apply the second test for speech, namely, to determine whether the value of the SpeechZCR counter is less than 20% of the number of segments in the interval under test.
      <br/>
      In other words, at decision diamond 76 it is determined whether no more than 20% of the segments in the interval under test satisfy the condition at decision diamond 68 of FIG. 5.
      <br/>
      If either one of the tests at decision diamonds 74, 76 in FIG. 6 is not satisfied, or if the interval was found to be "harmonic" at decision diamond 73, the logic ends at state 78; otherwise, the interval is classified as "speech" and indexed prior to ending, at block 80.
      <br/>
      It may now be appreciated that a confidence level can also be generated, based on the values of the Speech counters, at the end of the process in FIG. 6, with the confidence level being representative of the likelihood that an interval classified as "speech" actually is speech for subsequent use in matching sequences of intervals to meta patterns.
    </p>
    <p num="58">
      Now referring to FIG. 7, the present test for determining whether a segment is music is shown.
      <br/>
      Commencing at block 82, a DO loop is entered for each segment in an interval.
      <br/>
      Proceeding to decision diamond 84, it is determined whether the percentage of frequencies in the segment that lie in the third frequency band R3, compared to all sampled frequencies in the segment under test, is greater than 15%.
      <br/>
      If so, a MusicFreq counter is incremented by unity at block 86.
    </p>
    <p num="59">
      From block 86 or from decision diamond 84 if the test there was negative, the logic moves to decision diamond 88 to determine whether the zero crossing rate (ZCR) of the segment under test is less than five (5).
      <br/>
      If so, a MusicZCR counter is incremented by unity at block 90.
      <br/>
      From block 90, or from decision diamond 88 if the test there was negative, the logic proceeds to decision diamond 92 to determine whether the normalized third spectral energy concentration NR3 of the segment under test (as determined above at block 48 in FIG. 3) is greater than one hundred thousand (100,000).
      <br/>
      If so, a MusicSpectralEn counter is incremented by unity at block 94.
      <br/>
      From block 94, or from decision diamond 92 if the test there was negative, the logic proceeds to decision diamond 96 to determine whether the last segment in the interval has been tested, and if not, the logic moves to block 98 to obtain the next segment, and thence to loop back to decision diamond 84.
      <br/>
      When the last segment has been tested, however, the logic proceeds to FIG. 8.
    </p>
    <p num="60">
      After testing the segments of an interval, to classify the interval as "music" any one of three conditions must be met.
      <br/>
      More specifically, commencing at decision diamond 100, it is determined whether the value of the MusicFreq counter is greater than 80% of the number of segments in the interval.
      <br/>
      If so, the logic then moves to block 102 to classify the interval as "music", index the interval, and end.
      <br/>
      If, however, the segment fails the first test for music at decision diamond 100, the logic proceeds to decision diamond 104 to apply the second test for music, namely, to determine whether the value of the MusicZCR counter is greater than 95% of the number of segments in the interval under test.
      <br/>
      If the second test is met, the logic classifies the interval as "music" at block 102; otherwise, the logic moves to decision diamond 106 to apply the third test for music.
    </p>
    <p num="61">
      At decision diamond 106, it is determined whether the value of the MusicSpectralEn counter is greater than 80% of the number of segments.
      <br/>
      If this test is satisfied, the interval is classified as music at block 102.
      <br/>
      Only when all three music tests fail does the logic end at state 108 without classifying the segment as "music".
    </p>
    <p num="62">
      Now referring to FIG. 9, the present test for determining whether a segment is speech on music (SOM) is shown.
      <br/>
      Commencing at block 110, a DO loop is entered for each segment in an interval.
      <br/>
      Proceeding to decision diamond 112, it is determined whether the percentage of frequencies in the segment in the third frequency band R3, compared to all sampled frequencies in the segment under test, is greater than 15%.
      <br/>
      If so, an SOMFreq counter is incremented by unity at block 114.
    </p>
    <p num="63">
      From block 114 or from decision diamond 112 if the test there was negative, the logic moves to decision diamond 116 to determine whether the zero crossing rate (ZCR) of the segment under test is more than five (5) and less than ten (10).
      <br/>
      If so, an SOMZCR counter is incremented by unity at block 118.
      <br/>
      From block 118, or from decision diamond 116 if the test there was negative, the logic proceeds to decision diamond 120 to determine whether the normalized third spectral energy concentration NR3 of the segment under test is greater than ninety thousand (90,000).
      <br/>
      If so, an SOMSpectralEn counter is incremented by unity at block 122.
      <br/>
      From block 122, or from decision diamond 120 if the test there was negative, the logic proceeds to decision diamond 124 to determine whether the last segment in the interval has been tested, and if not, the logic moves to block 126 to obtain the next segment, and thence to loop back to decision diamond 112.
      <br/>
      When the last segment has been tested the logic proceeds to FIG. 10.
    </p>
    <p num="64">
      After testing the segments of an interval, to classify the interval as "speech on music" one of two conditions, one of them compound, must be met.
      <br/>
      Commencing at decision diamond 128, it is determined whether the value of the SOMZCR counter is greater than 70% of the number of segments in the interval.
      <br/>
      If so, the logic then moves to block 130 to classify the interval as "speech on music", index the interval, and end.
      <br/>
      If, however, the segment fails the first test at decision diamond 128, the logic proceeds to decision diamond 132 to apply the first subtest in a second, compound test for speech on music.
      <br/>
      Specifically, at decision diamond 132 the logic determines whether the value of the SOMFreq counter is less than 50% of the number of segments in the interval under test.
      <br/>
      If the first subtest is satisfied, the logic moves to the second subtest at decision diamond 134 to determine whether the value of the SOMZCR counter is greater than 15% of the number of segments in the interval.
      <br/>
      If this subtest is positive, the logic moves decision diamond 136 to determine whether the value of the SOMSpectralEn counter is greater than 10% of the number of segments.
      <br/>
      Only when all three subtests of the second, compound test are satisfied does the logic move to block 130 to classify the interval as speech on music; if any one of the subtests at decision diamonds 132, 134, 136 is failed, the logic ends at state 138 without classifying the interval as speech on music.
      <br/>
      Any interval not classified as silence, speech, music, or speech on music is classified "indeterminant" prior to storing the interval.
    </p>
    <p num="65">
      As discussed above in reference to FIG. 2, once the intervals of an audio stream have been classified, temporally sequential groups of intervals are matched against prestored meta pattern genre to determine whether a group matches one of the meta patterns.
      <br/>
      The audio stream is then further indexed based on the meta patterns.
      <br/>
      FIG. 11 shows how a user can search the audio stream, once indexed, for the purpose of summarizing the stream, skimming the stream, and gisting the stream.
    </p>
    <p num="66">
      Commencing at block 140, a user request is received for the audio stream.
      <br/>
      At block 142, in response to the user request and using the index of the audio stream generated as set forth above, the requested portion(s) of the audio stream are retrieved.
      <br/>
      For example, a user might want to access "education audio without the commercials", and only those portions of the audio stream satisfying the "education" meta pattern are returned at block 144.
      <br/>
      In other words, either the interval or intervals satisfying the request, and/or the index thereof, are returned in temporal order at block 144.
    </p>
    <p num="67">
      It is to be understood that the index of the audio stream can be presented at block 144 in response to, e.g., a user request to "summarize" the audio stream.
      <br/>
      The presentation of such a list is a summary of the audio stream.
      <br/>
      Using the index, the user can scroll through the intervals of the audio stream and select those he or she wishes to hear, to skim and/or "gist" the stream.
    </p>
    <p num="68">
      In addition to the above-disclosed methods for indexing audio streams, FIGS. 12 and 13 show that additional methods can be used to index the audio, and specifically by heuristically-defined "interesting events" in audio events that have been classified as "speech".
      <br/>
      Commencing at block 146 in FIG. 12, changes in pitch in an audio stream having speech therein are detected.
      <br/>
      Following the first logical branch, the method moves to block 148 to input the speech to a speech recognition system such as that disclosed in U.S. Pat. No. 5,293,584, owned by the same assignee as the present invention and incorporated herein by reference.
      <br/>
      Proceeding to block 150, the output of the speech recognition system--words--is used to index the audio stream.
    </p>
    <p num="69">
      In addition to indexing the audio stream by word content at block 150, the logic from block 146 follows a second branch to block 152, wherein "interesting events" in speech are identified as further discussed below in reference to FIG. 13. What constitutes "interesting events" in speech, and the tests for "interesting events", are heuristically determined.
      <br/>
      As indicated in FIG. 12, "interesting events" can include emphasis in speech, hesitation in speech, and concluding ideas in speech.
    </p>
    <p num="70">
      Moving to block 154, the audio stream, when it contains speech, is further indexed by meta patterns established by a sequence of "interesting event" intervals.
      <br/>
      An example of such a meta pattern is the below-described interesting event meta pattern of "important idea", which is established by a three second (or more) sequence of emphasis intervals.
      <br/>
      And, at block 156 the audio stream can also be indexed based on the individual "interesting events" therein.
    </p>
    <p num="71">
      Now referring to FIG. 13, a method for determining the presence of three preferred "interesting events"/meta patterns thereof is shown.
      <br/>
      Commencing at block 160, samples of the audio stream are obtained.
      <br/>
      In one preferred embodiment, each sample has a ten millisecond (10 ms) duration.
    </p>
    <p num="72">
      Proceeding to block 162, the dominant frequency of each sample is determined.
      <br/>
      In determining the dominant frequency, the presently preferred embodiment considers the following eight frequency bands:
    </p>
    <p num="73">
      --
      <br/>
      -- R1 -- 100 Hz to   R2 -- 3,000 Hz to   R3 -- 4,000 Hz to
      <br/>
      --         3,000 Hz            4,000 Hz              5,000 Hz
      <br/>
      -- R4 -- 5,000 Hz to R5 -- 6,000 Hz to   R6 -- 6,500 Hz to
      <br/>
      --         6,000 Hz            6,500 Hz              7,000 Hz
      <br/>
      -- R7 -- 7,000 Hz to R8 -- 7,500 Hz to
      <br/>
      --         7,500 Hz            8,000 Hz
    </p>
    <p num="74">For each sample, the dominant frequency is calculated as follows:</p>
    <p num="75">Rn Freq=number of frequencies in nth band, n=1 to 8, divided by the total number of samples, with the dominant frequency range being defined as the largest one of the (eight) values for Rn Freq.</p>
    <p num="76">
      Moving to block 164, the dominant frequencies are normalized by a histogram.
      <br/>
      Having determined and normalized the dominant frequencies of the audio stream samples, the process moves to block 166 to identify samples having dominant frequencies in the top 1% of frequencies, and further to identify samples having dominant frequencies in the bottom 1% of frequencies.
    </p>
    <p num="77">
      Branching first to decision diamond 168, the logic determines whether any sequence in the audio stream contains one hundred or more consecutive samples having dominant frequencies in the bottom 1%.
      <br/>
      It is to be understood that shorter or longer periods can be used.
      <br/>
      If such a sequence is found, the logic proceeds to block 170 to classify and index the sequence as a concluding idea in speech, before ending at state 172.
      <br/>
      Otherwise, the logic in the decision diamond 168 branch ends at state 172.
    </p>
    <p num="78">
      Additionally, the logic branches to decision diamond 174, wherein the logic determines whether any sequence in the audio stream contains one hundred or more consecutive samples having dominant frequencies in the top 1%.
      <br/>
      It is to be understood that shorter or longer periods can be used.
      <br/>
      If such a sequence is found, the logic proceeds to block 176 to classify and index the sequence as emphasis in speech, before ending at state 172.
      <br/>
      Otherwise, the logic in the decision diamond 174 branch ends at state 172.
    </p>
    <p num="79">
      As shown in FIG. 13, when an emphasis in speech sequence is found, the logic proceeds from block 176 to decision diamond 178, wherein it is determined whether the emphasis sequence is at least three seconds in duration.
      <br/>
      Shorter or longer durations can be used, however.
      <br/>
      If such a prolonged emphasis sequence is found, the logic classifies and indexes the sequence as an important idea in speech at block 180.
      <br/>
      From block 180, or from decision diamond 178 when the test there is negative, the logic ends at state 172.
    </p>
    <p num="80">It is to be understood that the present heuristics for determining interesting events in speech can further include considering rate of change of pitch, amplitude, and rate of change of amplitude, as well as other voice characteristics.</p>
    <p num="81">
      FIG. 14 shows the logic for determining whether an interval is "harmonic", preferably for use in the above-described test of FIG. 6.
      <br/>
      Commencing at block 200, a "DO" loop is entered for each segment in an interval.
      <br/>
      Moving to decision diamond 202, it is determined whether a sequence of resulting frequencies fR is the same as the sequence of resulting frequencies fR for the immediately preceding segment.
    </p>
    <p num="82">
      With respect to the resulting frequency fR, as recognized by the present invention, a frequency f1 has at least one musically harmonic frequency f2 if the following relation holds true: f2 =(I/(I+1))*f1, wherein I is an integer  &gt;= 2.
      <br/>
      When both f1 and f2 are present simultaneously, the resulting frequency fR is present and given by the relation fR =f1 /I.
      <br/>
      It is this resulting frequency fR that is used in the test at decision diamond 202.
    </p>
    <p num="83">
      If the test at decision diamond 202 is negative, the logic moves to decision diamond 204 to determine whether the last segment has been tested, and if not, the logic retrieves the next segment at block 206, and then loops back to decision diamond 202.
      <br/>
      On the other hand, when the test at decision diamond 202 is positive, the logic proceeds to block 208, to label the segment under test as "harmonic".
    </p>
    <p num="84">
      When the last segment has been tested, the logic proceeds from decision diamond 204 to decision diamond 210.
      <br/>
      At decision diamond 210, it is determined whether any sequence of "harmonic" segments is at least equal to a predetermined period, e.g., two seconds.
      <br/>
      If not, the logic ends at state 212.
      <br/>
      Otherwise, the interval is labelled as "harmonic" at block 214, for use in, e.g., the test of FIG. 6.
    </p>
    <p num="85">While the particular SYSTEM AND METHOD FOR AUTOMATIC AUDIO CONTENT ANALYSIS FOR WORD SPOTTING, INDEXING, CLASSIFICATION AND RETRIEVAL as herein shown and described in detail is fully capable of attaining the above-described objects of the invention, it is to be understood that it is the presently preferred embodiment of the present invention and is thus representative of the subject matter which is broadly contemplated by the present invention, that the scope of the present invention fully encompasses other embodiments which may become obvious to those skilled in the art, and that the scope of the present invention is accordingly to be limited by nothing other than the appended claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>We claim:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A computer-implemented method for analyzing an audio signal, comprising:</claim-text>
      <claim-text>detecting audio events in one or more intervals of the audio signal, each interval including a temporal sequence of one or more segments; indexing the audio signal based on the audio events;</claim-text>
      <claim-text>and skimming, gisting, or summarizing the audio signal using the indexing thereof.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1, further comprising: processing only relevant portions of the audio signal using a speech recognition engine to render words from the signal; receiving, from the engine, alternatives to at least some of the words; receiving, from the engine, confidence levels for at least some of the words and alternatives;</claim-text>
      <claim-text>and indexing the words and alternatives based at least in part on the confidence levels.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 2, wherein alternatives are received only for words longer than "N" characters and having a confidence of greater than "x" percent.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3, wherein the words and alternatives are indexed based on respective weights.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 1, further comprising heuristically defining the audio events.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method of claim 1, wherein the detecting step comprises: determining whether the segments of an interval exhibit one or more predetermined audio features, each audio feature being representative of at least one respective audio event, the audio events including at least music and speech; classifying the intervals by associating the intervals with respective audio events in response to the means for determining; determining whether at least one group of intervals matches a meta pattern in a predefined set of meta patterns;</claim-text>
      <claim-text>and associating the group of intervals with a meta pattern classification when it is determined that the group of intervals matches a meta pattern, wherein the indexing of the audio signal is undertaken based on the interval classification and the meta pattern classification.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6, wherein each predetermined audio feature is based on one or more of: zero crossing rate of at least a portion of the audio signal, energy of at least a portion of the audio signal, spectral energy concentration of at least a portion of the audio signal, and frequency of at least a portion of the audio signal.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 6, wherein the predefined set of audio events further comprises silence, speech on music, emphasis in speech, hesitation in speech, and concluding ideas in speech.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 6, further comprising: normalizing the segments, prior to the classifying step.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 6, wherein the step of determining whether the segments of an interval exhibit one or more predetermined audio features further includes: determining, for each segment in an interval, whether one or more audio features associated with the segment equals a respective threshold; incrementing respective one or more counters associated with the one or more audio features when the respective features equal respective thresholds;</claim-text>
      <claim-text>and comparing the one or more counters to the number of segments in the interval, the logic means for classifying the intervals undertaking the classifying of intervals based on the comparing step.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 10, further comprising: determining one or more dominant frequencies in at least one interval classified as speech during the step of classifying the intervals; associating one or more segments with emphasis in speech when the one or more segments includes a top N% of the dominant frequencies, wherein N is a number;</claim-text>
      <claim-text>and associating one or more segments with concluding ideas in speech when the one or more segments includes a bottom N% of the dominant frequencies, wherein N is a number.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 11, further comprising determining whether temporally sequential segments, all associated with emphasis in speech, define a period greater than a predetermined period, and if so, defining and indexing the temporally sequential segments as an important idea in speech.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. A computer-implemented method for analyzing an audio signal, comprising: detecting audio events in one or more intervals of the audio signal, each interval including a temporal sequence of one or more segments; analyzing the audio events to identify speech boundaries with associated speech confidence levels; indexing the audio signal based on the speech boundaries and confidence levels using heuristically determined rules to improve precision; indexing alternatives to at least one recognized word in the audio signal along with an associated weight to improve recall;</claim-text>
      <claim-text>and undertaking one or more of: word spotting, summarizing, and skimming, the audio signal using the indexing thereof.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. A computer including a data storage device including a computer usable medium having computer usable code means for classifying and indexing at least one audio signal representing an audio event, the computer usable code means having: logic means for rendering the audio signal into intervals, each interval including one or more segments; logic means for determining whether the segments of an interval exhibit one or more predetermined audio features, each audio feature being representative of at least one respective audio event;</claim-text>
      <claim-text>logic means for classifying the intervals by associating the intervals with respective audio events in response to the means for determining; logic means for determining whether at least one group of intervals matches a meta pattern in a predefined set of meta patterns; logic means for associating the group of intervals with a meta pattern classification when it is determined that the group of intervals matches a meta pattern;</claim-text>
      <claim-text>and logic means for indexing the audio signal based on interval classifications and meta pattern classifications.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The computer of claim 14, further comprising: logic means for processing only relevant portions of the audio signal using a speech recognition engine to render words from the signal; logic means for receiving, from the engine, alternatives to at least some of the words; logic means for receiving, from the engine, confidence levels for at least some of the words and alternatives;</claim-text>
      <claim-text>and logic means for indexing the words and alternatives based at least in part on the confidence levels.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The computer of claim 15, wherein alternatives are received only for words longer than "N" characters and having a confidence of greater than "x" percent.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The computer of claim 16, wherein the words and alternatives are indexed based on respective weights.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The computer of claim 14, wherein each predetermined audio feature is based on one or more of: zero crossing rate of at least a portion of the audio signal, energy of at least a portion of the audio signal, spectral energy concentration of at least a portion of the audio signal;</claim-text>
      <claim-text>and frequency.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The computer of claim 14, wherein the predefined set of audio events comprises music, speech, silence, and speech on music.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The computer of claim 14, further comprising: logic means for normalizing the segments, prior to classifying the intervals.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. The computer of claim 19, wherein the predefined set of patterns includes continuous uninterrupted speech, and music combined with speech, the predefined set of patterns being heuristically defined.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The computer of claim 19, further comprising logic means for presenting at least portions of the intervals and meta pattern classifications for skimming, gisting, and summarizing the audio signal, using the indexing of the signal.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The computer of claim 14, wherein the logic means for determining whether the segments of an interval exhibit one or more predetermined audio features includes: means for determining, for each segment in an interval, whether one or more audio features associated with the segment equals a respective threshold; means for incrementing respective one or more counters associated with the one or more audio features when the respective features equal respective thresholds;</claim-text>
      <claim-text>and means for comparing the one or more counters to the number of segments in the interval, the logic means for classifying the intervals undertaking the classifying of intervals based on the means for comparing.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The computer of claim 14, wherein the predefined set of audio event meta pqH further includes emphasis in speech, hesitation in speech, and concluding ideas in speech, such that the logic means for indexing can index the audio signal based thereon.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The computer of claim 24, further comprising: means for determining one or more dominant frequencies in at least one interval classified as speech by the logic means for classifying the intervals; means for associating one or more segments with emphasis in speech when the one or more segments includes a top N% of the dominant frequencies, wherein N is a number;</claim-text>
      <claim-text>and means for associating one or more segments with concluding ideas in speech when the one or more segments includes a bottom N% of the dominant frequencies, wherein N is a number.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The computer of claim 25, further comprising means for determining whether temporally sequential segments, all associated with emphasis in speech, define a period greater than a predetermined period, and if so, indexing the temporally sequential segments as an important idea in speech.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. A computer program product comprising: a computer program storage device readable by a digital processing apparatus;</claim-text>
      <claim-text>and a program means on the program storage device and including program code elements embodying instructions executable by the digital processing apparatus for performing method steps for indexing at least one audio signal, the method steps comprising:</claim-text>
      <claim-text>- rendering the audio signal into intervals, each interval including one or more segments; - determining whether the segments of an interval exhibit one or more predetermined audio features selected from a set of features including zero crossing rate of at least a portion of the audio signal, energy of at least a portion of the audio signal, frequency of at least a portion of the audio signal, and spectral energy concentration of at least a portion of the audio signal, each audio feature being representative of at least one respective audio event including at least music and speech; - classifying the intervals by associating the intervals with respective audio events in response to the determining step;</claim-text>
      <claim-text>and - indexing the audio signal based at least in part on the interval classification.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The computer program product of claim 27, wherein the method steps further comprise: processing only relevant portions of the audio signal using a speech recognition engine to render words from the signal; receiving, from the engine, alternatives to at least some of the words; receiving, from the engine, confidence levels for at least some of the words and alternatives;</claim-text>
      <claim-text>and indexing the words and alternatives based at least in part on the confidence levels.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The computer program product of claim 28, wherein alternatives are received only for words longer than "N" characters and having a confidence of greater than "x" percent.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The computer program product of claim 29, wherein the words and alternatives are indexed based on respective weights.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The computer program product of claim 27, wherein the method steps further comprise: determining whether at least one group of intervals matches a meta pattern in a predefined set of meta patterns;</claim-text>
      <claim-text>and associating the group of intervals with a meta pattern classification when it is determined that the group of intervals matches a meta pattern, the indexing of the audio signal being based at least in part on the meta pattern matching.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. The computer program product of claim 31, wherein the predefined set of audio events further comprises silence, speech on music, emphasis in speech, hesitation in speech, and concluding ideas in speech.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The computer program product of claim 31, wherein the method steps further comprise: normalizing the segments, prior to the classifying step.</claim-text>
    </claim>
    <claim num="34">
      <claim-text>34. The computer program product of claim 31, wherein the method steps further include: determining, for each segment in an interval, whether one or more audio features associated with the segment equals a respective threshold; incrementing respective one or more counters associated with the one or more audio features when the respective features equal respective thresholds;</claim-text>
      <claim-text>and comparing the one or more counters to the number of segments in the interval, the logic means for classifying the intervals undertaking the classifying of intervals based on the means for comparing.</claim-text>
    </claim>
    <claim num="35">
      <claim-text>35. The computer program product of claim 34, wherein the method steps further comprise: determining one or more dominant frequencies in at least one interval classified as speech during the step of classifying the intervals; associating one or more segments with emphasis in speech when the one or more segments includes a top N% of the dominant frequencies, wherein N is a number;</claim-text>
      <claim-text>and associating one or more segments with concluding ideas in speech when the one or more segments includes a bottom N% of the dominant frequencies, wherein N is a number.</claim-text>
    </claim>
    <claim num="36">
      <claim-text>36. The computer program product of claim 35, wherein the method steps further comprise determining whether temporally sequential segments, all associated with emphasis in speech, define a period greater than a predetermined period, and if so, defining and indexing the temporally sequential segments as an important idea in speech.</claim-text>
    </claim>
  </claims>
</questel-patent-document>