<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182075B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182075</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182075</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="4161543" extended-family-id="3866932">
      <document-id>
        <country>US</country>
        <doc-number>09061512</doc-number>
        <kind>A</kind>
        <date>19980416</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09061512</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>3998416</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>CA</country>
        <doc-number>2216901</doc-number>
        <kind>A</kind>
        <date>19970926</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997CA-2216901</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04L  29/06        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  29/12        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <further-classification sequence="1">
        <text>707999010</text>
        <class>707</class>
        <subclass>999010</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>709227000</text>
        <class>709</class>
        <subclass>227000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>709230000</text>
        <class>709</class>
        <subclass>230000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/12047</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12047</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131026</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/06</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131026</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/12009</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>12009</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131026</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-061/15</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>61</main-group>
        <subgroup>15</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131026</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/42</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>42</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>33</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>7</number-of-figures>
      <image-key data-format="questel">US6182075</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and apparatus for discovery of databases in a client server network</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GUCK RANDAL LEE</text>
          <document-id>
            <country>US</country>
            <doc-number>5848415</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5848415</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>MARITZEN LYNN M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5899990</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5899990</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>RATCLIFF BRUCE H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5987515</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5987515</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>BICKNELL RAINIE M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6011803</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6011803</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>HAMNER JOHN F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6076106</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6076106</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Hsu, Juliana M.</name>
            <address>
              <address-1>Scarborough, CA</address-1>
              <city>Scarborough</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Ray-Yarletts, Jeanine S.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Alam, Hosain T.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      This invention relates to client server information handling networks having one or more database server systems in which a method and means are provided for database clients to identify and access database servers which are on the network or interconnected therewith in such a manner that they are accessible from said network by providing a method and apparatus for implementing a client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between the servers and the client; the network including: discovery module for the database client to identify database servers accessible with the network.
      <br/>
      The discovery module includes: a search discovery module associated with the database client for generating a database discovery inquiry including a database search discovery request to identify the database server systems; a database discovery manager module associated with the database servers, the database discovery manager module being adapted to respond to the search discovery request by returning addressing information to permit access to the database servers by the database client.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">This invention relates to client server information handling networks having one or more database server systems in which a method and means are provided for database clients to identify and access database servers which are on the network or interconnected therewith in such, a manner that they are accessible from the network.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">
      In client server networks having database servers, when a client desires to access one or more of the database servers the client requires communications information for each server.
      <br/>
      This communications information includes the protocols supported by the server and the protocol specific address information, which may include one or more items of data.
      <br/>
      For instance in networks using the TCP/IP protocol, the address includes a port number or service name and host name or IP address.
      <br/>
      Using the NETBIOS protocol, an Nname (workstation name) and local adapter is required.
      <br/>
      Using the IPX/SPX protocol, an internetwork address is required comprising an &lt;8 byte net ID&gt; * &lt;12 byte node ID&gt; * &lt;4 byte socket -&gt;. Using the APPC protocol, a significant amount of complex information is required for accessing databases connected to a network.
    </p>
    <p num="3">
      Considering the DB2 database management products introduced by IBM several years ago the establishment of a client server connection to access a database requires a user of a database client to have knowledge of a number of items of information.
      <br/>
      Before a connection can be established, the user must catalog a node and database directory.
      <br/>
      To catalog a node directory the user must have an intersection of the protocols supported by both the database client and database server, and enough protocol-specific communications information to communicate from the database client to database server.
      <br/>
      For example to connect to a DB2 server by using the TCP/IP protocol, the user must specify a host name or IP address, and a service name or port number in the node directory entry.
      <br/>
      To catalog a database directory the user must specify the database name.
      <br/>
      One of the problems inherent in this procedure is that it requires the user to know which databases are available and to have sufficient skill and communications information to catalog the entries required to access the database.
      <br/>
      It would be preferable for the database client to be able to simply identify the databases to which the user can have access and to simplify the mode by which the user can connect to those databases.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="4">
      The invention herein provides these and other advantages over prior systems.
      <br/>
      One implementation of the invention provides a client server information handling network having at least one database server system controlling at least one database, at least one database client and a communications link between the servers and the client; the network including:
    </p>
    <p num="5">
      discovery module for the database client to identify database servers accessible with the network.
      <br/>
      The discovery module includes:
      <br/>
      a search discovery module associated with the database client for generating a database discovery inquiry including a database search discovery request to identify the database server systems;
      <br/>
      a database discovery manager module associated with the database servers, the database discovery manager module being adapted to respond to the search discovery request by returning addressing information to permit access to the database servers by the database client.
    </p>
    <p num="6">The network may include a module for the client to respond to receive the addressing information provided by the database discovery manager module and to display the information to a user of the client.</p>
    <p num="7">The network of claim may include a known discovery module for the client for generating a database know; discovery request to a selected database server system previously identified to determine detailed database server system information.</p>
    <p num="8">The database connection manager module associated with the selected database server system may be adapted to respond to the known discovery request by packaging detailed database server system information relating to the selected database server system to permit access to databases on the system.</p>
    <p num="9">A module may be provided for the client to respond to receive the detailed database server system information and to display the information to a user of the client.</p>
    <p num="10">A graphical display interface (GUI) is preferably used to display server system information to a user, the GUI being adapted to respond to user input to initiate the search discovery request and the known discovery request.</p>
    <p num="11">The GUI should be responsive to the selection by a user, to initiate the search discovery request, and display server system names returned, and be further responsive to the selection of a database server system displayed on the GUI to expand the display of the selected database server system by initiating the generation of a known search request and depicting the detailed server system information returned in treelike fashion identifying the databases controlled by the selected database server system.</p>
    <p num="12">The GUI is responsive to user selection of an identified database by auto-configuring for a database access request.</p>
    <p num="13">The database server system may control a plurality of database server instances, and wherein each of the database server instances controls at least one database.</p>
    <p num="14">
      The database server system may include:
      <br/>
      discovery manager and connection manager module adapted to listen for discovery requests on the network, and comprised of:
      <br/>
      request receiver module to receive the discovery requests,
      <br/>
      request parser module to parse the requests for processing,
      <br/>
      request service module for responding to the parsed requests, and in response to:
    </p>
    <p num="15">(a) the receipt of a search discovery request obtains and packages database server system name and protocol - specific addressing information, and</p>
    <p num="16">
      (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with the specified database server system and databases controlled by the database server instances; and
      <br/>
      communications response module adapted to transmit the packaged database server system addressing information and the packaged detailed database server system information to any database client requesting the information.
    </p>
    <p num="17">
      The modules mentioned above preferably are embodied in software routines.
      <br/>
      Modules identified singularly can be replaced by multiple modules and conversely multiple modules could be replaced by singular modules.
    </p>
    <p num="18">
      Another aspect of the invention is embodied in the method of operation of the client server network described for identifying (and then accessing databases as desired) including:
      <br/>
      generating a database discovery inquiry for the client including a database search discovery request to identify the database server systems;
      <br/>
      using database discovery manager module associated with the database server system to respond to the search discovery request by returning addressing information to permit access to the database servers by the database client.
    </p>
    <p num="19">The database client responds to receive the addressing information provided by the database discover manager module to display the information to a user of the database client.</p>
    <p num="20">The method preferably includes generating a database known discovery request for the client to a selected database server system previously identified to determine detailed database server system information.</p>
    <p num="21">The selected database server responds to the known discovery request by packaging detailed database server system information relating to the selected database server system to permit access to databases on the system.</p>
    <p num="22">The client responds to receive the detailed database server system information and displays the info ration to a user of the client.</p>
    <p num="23">A graphical display interface module (GUI) responds to user input to initiate the search discovery request and the known discovery request.</p>
    <p num="24">
      The GUI responds to selection by a user to initiate the search discovery request, it displays server system names returned, and further responds to the selection of a database server system displayer on the GUI by expanding the display of the selected database server system through Initiation of a known discovery request.
      <br/>
      Detailed addressing information returned is displayed in treelike fashion, identifying the databases controlled by the selected database server system.
    </p>
    <p num="25">The GUI further responds to selection of an identified database by auto-configuring for a database access request.</p>
    <p num="26">The database server system in an embodiment of the invention listens for discovery requests on the network, receives the discovery requests, parses the requests for processing, responds to the parsed requests, and in response to:</p>
    <p num="27">(a) the receipt of a search discovery request obtains and packages database server system name and protocol--specific addressing information, and</p>
    <p num="28">
      (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with the specified database server system and databases controlled by the database server instances;
      <br/>
      and is adapted to transmit the packaged database server system addressing information and the packaged detailed database server system information to any database client requesting the information.
    </p>
    <p num="29">
      As was indicated, the invention may be implemented by a computer program product that may be conveniently stored on a storage medium such as tape or disk.
      <br/>
      The computer program product is designed for establishing a client server information handling network having at least ode database server system controlling at least one database, at least one database client and a communications link between the servers and the client.
      <br/>
      The computer program product includes:
      <br/>
      a software routine for establishing a discovery module for the database client to identify database servers accessible with the network, the discovery module including:
      <br/>
      search discovery module associated with the database client for generating a database discovery inquiry including a database search discovery request to identify the database server systems;
      <br/>
      a software routine for establishing a database discovery manager module associated with the database servers, the database discovery manager module being adapted to respond to the search discovery request by returning addressing information to permit access to the database servers by the database client.
    </p>
    <p num="30">The computer program product may also include a software routine to establish a routine for the database client to respond to receive the addressing information provided by the database discovery manager module and to display the information to a user of the database client.</p>
    <p num="31">The computer program product may preferably also include a software routine for establishing a known discovery module for the database client for generating a database known discovery, request to a selected database server system previously identified to determine detailed database server system information.</p>
    <p num="32">The computer program product of claim can include a software routine for establishing a database connection manager module associated with the selected database server adapted to respond to the known discovery request by packaging detailed database server system information relating to the selected database server system to permit access to databases on the system.</p>
    <p num="33">The computer program product may further include a software routine for establishing a module associated with the database client to respond to receive the detailed database server system information and to display the information to a user of the database client.</p>
    <p num="34">
      The computer program product may also include a software routine for enabling a graphical display interface module (GUI) to respond to user input to initiate the search discovery request and the known discovery request.
      <br/>
      The software routine module enables the GUI to be responsive to a user to initiate the search discovery request, it displays server system names returned, and is further responsive to the selection of a database server system displayed on the GUI by expanding the display of the selected database server system through initiation of a known discovery request.
      <br/>
      Detailed addressing information returned is displayed in treelike fashion, identifying the databases controlled by the selected database server system.
    </p>
    <p num="35">The GUI may be further responsive to selection of an identified database by auto-configuring for a database access request.</p>
    <p num="36">
      In yet another embodiment, the computer program product may include software routines for establishing the database server system with:
      <br/>
      discovery manager and connection manager modules adapted to listen for discovery requests on the network, and comprised of:
      <br/>
      a request receiver module to receive the discovery requests,
      <br/>
      a request parser module to parse the requests for processing,
      <br/>
      request service module for responding to the parsed requests, and in response to:
    </p>
    <p num="37">(a) the receipt of a search discovery request obtains and packages database server system name and protocol--specific addressing information, and</p>
    <p num="38">
      (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with the specified database server system and databases controlled by the database server instances; and
      <br/>
      a communications response module adapted to transmit the packaged database server system addressing information and the packaged detailed database server system information to any database client requesting the information.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="39">
      The invention is described herein together with the drawings of which a brief description follows:
      <br/>
      FIG. 1 depicts an information handling client server network having a database server in accordance with the prior art;
      <br/>
      FIG. 2 depicts an information handling client server network having a database server, constructed in accordance with the present invention herein;
      <br/>
      FIG. 3 depicts a method of search discovery in accordance with the present invention using a broadcast mechanism;
      <br/>
      FIG. 4 depict a method of known discovery in accordance with the present invention in which detailed database server system information is requested and returned to the database client;
      <br/>
      FIG. 5 depicts a detailed flow chart of the broadcast method of search discover;
      <br/>
      FIG. 6 depicts a detailed flow chart of the file server method of search discovery;
      <br/>
      FIG. 7 depicts a detailed flow chart of known discovery, in which either the search discovery method or an user specifies enough communications information to directly contact an administration server on the database server system.
    </p>
    <heading>DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT OF THE INVENTION</heading>
    <p num="40">
      Referring to FIG. 1, the client server database network 1 includes a database client 2, and database server systems 3, linked by a communications link 10.
      <br/>
      The database server system A, in this example includes a number of database server instances 7, database server instance AA, and database server instance AB.
      <br/>
      Each database server instance contains its own databases and manages its own database resources.
      <br/>
      For example, in order for a user database client 2 to be able to access the databases in database server instance AA, a ode directory entry 4, and a database directory entry 5 must be created before a client-server connection can be initiated.
      <br/>
      The information necessary for the construction of catalogs may be difficult for a user of a database client to obtain under the prior art.
    </p>
    <p num="41">
      FIG. 2 depicts one embodiment of a client server network in accordance with the invention herein.
      <br/>
      The network includes a database client 2, and one or more database server systems 3, which include database server instances 7; which in turn contain and control databases (not shown).
      <br/>
      The database server systems 3, each include a database administration server 11, which includes protocol-specific discovery managers 12, and protocol-specific connection managers 14.
      <br/>
      The database client includes software to initiate requests to the discovery manager(s) 12 and connection manager(s) 14 of each database server system.
    </p>
    <p num="42">In general terms, when a user desires to access databases accessible by the network 1, the user instructs the database client, preferably by means of a simple graphical user interface (GUI) 15 to discover what databases are available to the database client, and to access user-selected databases.</p>
    <p num="43">
      The first step, shown in FIG. 3, is called the search discovery step.
      <br/>
      A protocol-specific communications method is used to find database server systems and return a set of database server system names and protocol-specific addressing information to the database client, preferably to be displayed on a GUI for the user.
      <br/>
      For example, the protocol-specific communications method can be implemented using a broadcast or multicast request, for protocols supporting this type of request.
    </p>
    <p num="44">
      As will be appreciated by those skilled in the art to which this invention relates, a broadcast request is one that goes to all network nodes which have a datagram receive listening on a particular port to which the request is sent.
      <br/>
      A multicast request is one that goes to all network nodes which are registered with a multicast group and only the registered nodes will receive the request.
    </p>
    <p num="45">
      The second step, shown in FIG. 4, which may be called the known discovery step, involves allowing the user to select database server systems from those presented on the GUI, for the determination of additional information about the selected database server systems.
      <br/>
      Additional information about the database server system can be comprised of identification of which database server instances reside on the system, the protocols supported by each database server instance, the protocol-specific communications addressing information for those protocols supported, the databases available on the database server instance, security information required to access the database server instance, and any other data relevant for client-server database functionality.
    </p>
    <p num="46">
      It is preferable that this information be presented by the GUI to the user so that the user may use the well known point and click method of GUI interaction familiar to the users of the OS/2 and Windows GUI systems to select the database server instances of interest and their databases.
      <br/>
      Preferably this information is presented in a tree form as illustrated in the Client GUI in FIG. 4, allowing the user simple selection choices.
    </p>
    <p num="47">
      The first step in the procedure, shown in FIG. 3, the search discovery step, requests information which is sent back by the database server system discovery managers.
      <br/>
      It provides the database server system name and enough communications information to allow the database client to communicate with each database server system; so that when a user selects a database server system (step 2), sufficient communications information will be available for the database client to initiate a client-server connection to the selected database server system and retrieve the information necessary to expand the tree form into database server systems, database server instances, and databases.
    </p>
    <p num="48">During step 2, shown in FIG. 4, known discovery, sufficient database and communications information is resumed to the database client about each database server instance on a user-selected database server system; so that when the user selects a database to access, the database client automatically catalogs node and database directories, for the user to connect to that database.</p>
    <p num="49">
      In the embodiment of the invention described herein, the administration server 11 in each database server system is adapted to respond to administration tasks, including search discovery and known discovery requests from database clients.
      <br/>
      As indicated above, each database server system can contain multiple database server instances and each database server instance can contain multiple databases, providing a database server system capable of managing and accessing increasingly large amounts of data as required by modern society.
    </p>
    <p num="50">
      As will be appreciated by those skilled in network communications, different communications protocols exhibit different behaviors and have different conventions.
      <br/>
      With this in mind, search discovery is performed in accordance with the required protocol using a method that is appropriate for that protocol to find the database server systems on or accessible by the network.
      <br/>
      For example, using the TCP/IP protocol, a broadcast or multicast request could be issued to find database server systems.
      <br/>
      Using the NetBIOS protocol, a broadcast could be used to find the database server systems.
      <br/>
      Using the IPX/SPX protocol IPX/SPX SAP (known as service advertising protocol) could be used to identify the accessible database server systems, or a NetWare file server attached to the database client could be searched for database server systems that have been previously registered at the file server.
    </p>
    <p num="51">In the case of database server systems using the DB2 database management system, the DB2 server systems would respond to the database client search discovery requests; by returning their DB2 system names (for GUI identification purposes) and sufficient communications information about the administration server of the DB2 server system for the database client to attach to the administration server,</p>
    <p num="52">
      For each database server system expanded (graphically, in the case of a GUI) in a tree 17 by the user making a selection on the GUI, a request is sent to the appropriate database server system for detailed server instance and database information.
      <br/>
      Requests are only sent for database server systems selected by the user.
    </p>
    <p num="53">
      In the embodiment of the invention described in FIG. 4, when a known discovery request is received by an administration server connection manager 14, the request is processed by calling the Generator 16 to generate the database server system information required by the database client.
      <br/>
      Options may be provided to a database administrator to allow the administrator to configure the database server systems to hide specified database server instances or databases on the system.
      <br/>
      Server instances and databases that are `marked` as hidden are not packaged by the generator in the information returned to the database client, so access to these hidden entities will not be accessible to the user from the GUI.
      <br/>
      This option provides additional security for confidential databases.
    </p>
    <p num="54">As will be readily appreciated from the above description the invention herein results in a simplification of the client configuration required by a user to connect to a desired database.</p>
    <p num="55">
      FIG. 3 illustrates an example of step 1, search discovery using a broadcast method.
      <br/>
      The client 2 generates a search discovery request to the network.
      <br/>
      Database server system 3, on the network, such as TEST in this illustration, has a search discovery manager 12 that picks up the search discovery request, and composes a response to be returned to the client, which includes the database server system named, TEST, and administration server communications information.
      <br/>
      The result of the search discovery request is a list of database server, system names and associated communications information for each database server system found on the network.
    </p>
    <p num="56">
      The next step in the process may be appreciated by referring to FIG. 4 which depicts an implementation of the known discovery process.
      <br/>
      As a result of the search discovery process the user has been presented through the Client GUI 15 with database server system names, System TEST and System PROD.
      <br/>
      User selection of the database system named, TEST, returned from the search discovery request causes the database client to issue a known discovery request to the particular database server system selected, to return detailed information.
      <br/>
      The database server system, TEST, has a protocol-specific connection manager 14 that receives and parses the request, then calls the Generator 16 to package server system information to be returned to the client for display on the database client GUI 15.
      <br/>
      Now that information from database server system, TEST, has been returned, the TEST system on the GUI expands to show all server instances accessible to the database client 2.
      <br/>
      If the user selects a server instance, it in turn is expanded to display all databases available on that server instance.
      <br/>
      The information is displayed in a tree format 17.
      <br/>
      The user of the database client can select one of the databases to have the database client auto-configure a connection to the selected database.
    </p>
    <p num="57">The invention herein is applicable to networks employing different protocols for communications.</p>
    <p num="58">
      For instance, networks using either NetBIOS or TCP/IP could use the Broadcast Flow step 1 depicted in FIG. 5 for search discovery and step 2--Directed Flow depicted in FIG. 7 for Known Discovery.
      <br/>
      IPX/SPX could use the step 1--File Server Flow depicted in FIG. 6 for Search Discovery and step 2--Directed Flow depicted in FIG. 7 for Known Discovery.
    </p>
    <p num="59">
      �1� Referring to FIG. 5, during DB2 server system boot up, the administration server is started.
      <br/>
      The administration server brings up a discovery manager and connection manager (see FIG. 7) for each protocol supported and selected,
    </p>
    <p num="60">A NetBIOS discovery listener will listen on a receive broadcast datagram call.</p>
    <p num="61">A TCP/IP discover listener will open up a datagram socket, bind the socket to accept datagram message from any address that specifies the listener port, set the socket to listen for broadcasts, and listen on a recvfrom call.</p>
    <p num="62">
      A DB2 TCP/IP listener can listen on a port (e.g. 3033/tcp) and accept connections while a discovery listener is listening on the same port (e.g. 3033/udp) and receive broadcasts.
      <br/>
      NetBIOS broadcasts are only received by names that have a receive broadcast datagram call outstanding i.e.. only NetBIOS discovery listeners).
      <br/>
      Since a receive broadcast datagram call receives all broadcasts, the NetBIOS discovery parser needs to check the buffer header to ensure that this is actually a discovery broadcast.
    </p>
    <p num="63">�2� When a discover request is issued from the GUI, the Interpreter creates a new process and then calls the internal DB2 discover API to service the request asynchronously.</p>
    <p num="64">
      Discovery calls sqlccdiscoverinit to perform pre-broadcast tasks.
      <br/>
      Sqlccdiscoverinit loads the protocol specific library (it may not be loaded yet) then calls the protocol specific discovery initialization function (e.g. sqlccnbdiscoverinit, sqlcctcpdiscoverinit).
      <br/>
      It returns a discovery handle.
    </p>
    <p num="65">Sqlccnbdiscoverinit adds a free NetBIOS name of the form, DB2DSCVR&lt;nname&gt;. This name represents the address of the requesting client and is used to build the DB2GETADDR request.</p>
    <p num="66">
      Sqlcctcpdiscoverinit opens a datagram socket, binds the socket to no particular address, and issues a getsockname call to find the free port allocated to the socket by TCP/IP.
      <br/>
      The
    </p>
    <p num="67">TCP/IP address and port number are used to build the DB2GETADDR request.</p>
    <p num="68">
      �3� Discovery then calls sqlccdiscover to broadcast the DB2GETADDR request.
      <br/>
      Sqlccdiscover calls the protocol specific discover function (e.g.. sqlccnbdiscover, sqlcctcpdiscover).
    </p>
    <p num="69">
      Sqlccnbdiscover issues a send broadcast datagram call, then issues a sqlccdrecv to receive the reply.
      <br/>
      A configurable number of receive buffers are issued because NetBIOS does not buffer data between receives.
    </p>
    <p num="70">Sqlcctcpdiscover sets the socket option for broadcasting and broadcasts the DB2GETADDR request then issues a sqlccdrecv to receive the reply.</p>
    <p num="71">
      Sqlccnbdiscover and sqlcctcpdiscover will reissue sqlccdrecv calls for a set period of time.
      <br/>
      The time period will be used to dictate a time when we think discover would have received replies from all systems.
    </p>
    <p num="72">The Discover time-out period is a configuration parameter that is user modifiable.</p>
    <p num="73">
      �4� The DB2 server system will receive the DB2GETADDR request via its discovery listener.
      <br/>
      The discovery parser will parse the message into a DB2GETADDR request.
    </p>
    <p num="74">The discovery server calls sqlccgetaddr to retrieve the server system address (for the administration server).</p>
    <p num="75">
      Sqlccgetaddr calls the protocol specific get address function (e.g.. sqlccnbgetaddr, sqlcctcpgetaddr).
      <br/>
      Sqlccnbgetaddr returns the nname of the administration server.
      <br/>
      Sqlcctcpgetaddr returns the IP address of the system and the port number used by the administration server.
    </p>
    <p num="76">The discovery listener uses the server system address to build the DB2RETADDR reply.</p>
    <p num="77">The discovery server then uses the client address sent in the DB2GETADDR request to issue a sqlccdsend call to send the DB2RETADDR reply.</p>
    <p num="78">�5� When the DB2 IETADDR reply is received, each reply is processed synchronously.</p>
    <p num="79">
      The DB2RETADDR reply is parsed and the system address is saved in a list of known systems.
      <br/>
      Then, the server system addresses are used to directly retrieve DB2 server system information See FIG. 7 "Step 2--Directed Flow" for the rest of the discovery flow, and a description of the figure in the following pages.
    </p>
    <p num="80">Step 1--File Server Flow</p>
    <p num="81">The following text describes the Step 1--File Server Flow depicted in FIG. 6:</p>
    <p num="82">(A) When a `discover systems` request is issued from the GUI, the Interpreter creates a process and then calls the discover API to service the request asynchronously.</p>
    <p num="83">
      Sqlccdiscoverinit loads the protocol specific library (it may not be loaded yet) then calls the protocol specific discovery initialization function (e.g. sqlcctlidiscoverinit).
      <br/>
      It returns a discovery handle
    </p>
    <p num="84">SqIcctlidiscovernit performs some initial setup tasks.</p>
    <p num="85">
      (B) Discovers then calls sqlccdiscover to find the addresses of DB2 server systems s (administration servers).
      <br/>
      Sqlccdiscover calls the protocol specific discover function (e.g.. sqlcctlidiscover).
    </p>
    <p num="86">
      Sqlcctlidiscover looks for an attached file server.
      <br/>
      If none is found, the user must specify (via the GUI) a list of ore or more file servers to be used.
      <br/>
      This list is passed to Discover.
      <br/>
      Even if an attached file server is found, Discover will still use all file servers specified in the list.
      <br/>
      However, the user specified file server list is optional if an attached file server exists.
    </p>
    <p num="87">
      For each file server, the client attaches to the file server (if not already attached), then scans the objects in the bindery for objects that have the registered administration server socket number, 87A2, and the DB2 object type, 0 * 062B. (This is an object type registered with Novell that is specifically for DB2.) All matches to the criteria are DB2 server system addresses (for the administration server).
      <br/>
      These addresses are saved in a list of known systems.
      <br/>
      The server system addresses are used to directly retrieve the DB2 server system information.
      <br/>
      See FIG. 7 "Step 2--Directed Flow" for the rest of the discovery flow, and a description of the figure in the following pages.
    </p>
    <p num="88">
      The administration server addresses located on the file server were originally placed there when the user issued a REGISTER command/API.
      <br/>
      REGISTERing is a step required on the administration server and all DB2 server instances that are using IPX/SPX file server addressing.
    </p>
    <p num="89">
      The following text describes the Step 2--Directed Flow depicted in FIG. 7.
      <br/>
      After performing step 1 in discovery SEARCH mode, the client has retrieved enough server system address information to directly contact the administration server on each system.
      <br/>
      The scenario continues in FIG. 7 with the Step 2--Directed Flow.
    </p>
    <p num="90">
      In discovery KNOWN mode, the user specifies enough administration server communications information (via the GUI) for discovery to directly contact the administration server, for each system specified.
      <br/>
      In discovery KNOWN mode, the scenario starts with the Step, 2--Directed Flow.
    </p>
    <p num="91">Note: Since it is possible for the known DB2 system list to contain duplicate systems (e.g.. when discovery on, a system supports more than one discovery protocol), duplicates will be removed.</p>
    <p num="92">
      �6� For each address in the list of known DB2 systems, discovery issues an unauthenticated attach API call.
      <br/>
      This forms an unauthenticated (i.e.. no userid/password required) connection to the DB2 administration server.
    </p>
    <p num="93">�7� Discovery then builds a DB2 GETINFOSZ request with no data and issues a sqlccsend call to send the request.</p>
    <p num="94">�8� The agent receives the Discover service message and calls Discovery to service the request.</p>
    <p num="95">�9� Discovery recognizes the GETINFOSZ request and calls the Generator to package the DB2 server system information and return the size.</p>
    <p num="96">�10� Discovery builds a RETINFOSZ reply, packaging the information size returned by the Generator, and sends the reply to the client.</p>
    <p num="97">�11� The RETINFOSZ reply is received at the client, parsed, and the data is byte-reversed, if necessary.</p>
    <p num="98">�12� The system information size returned is used to build a GETINFO request.</p>
    <p num="99">�13� The GETINFO request is received by Discovery on the server and parsed.</p>
    <p num="100">�14� Discovery builds a RETINFO reply, packaging the information returned by the Generator, and sends the reply to the client.</p>
    <p num="101">�15� The RETINFO reply is received at the client and parsed.</p>
    <p num="102">�16� Discovery issues a detach API call to cleanup the connection to the DB2 system server.</p>
    <p num="103">�17� The data returned is passed to the Interpreter.</p>
    <p num="104">
      Functions depicted in FIGS. 5, 6, and 7 are detailed in the following pseudo code which is included herein in the Appendix which follows below.
      <br/>
      Software coding of the invention may be implemented in the database clients and database servers of a client server network using this pseudo code as a base for developing software adapted for a particular software product that runs on particular network hardware.
      <br/>
      The foregoing has served to describe the structure and operation of the present invention.
      <br/>
      It will be evident to those skilled in the art that a number of variants of the structure and functionality are substantially equivalent and therefore, are considered within the scope of the present invention.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>The embodiments the invention in which an exclusive property or privilege is claimed are defined as follows:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client;</claim-text>
      <claim-text>said network including: discovery means for said database client to identify database servers accessible from said network, said discovery means comprising:</claim-text>
      <claim-text>search discovery means associated with said database client for generating a database discovery inquiry comprising a database search discovery request to identify said database server systems; database discovery manager means associated with said database servers, said database discovery manager means being adapted to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The network of claim 1 including means associated with said client to respond to receive said addessing information provided by said database discovery manager and to display said information to a user of said client.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The network of claim 2 including: known discovery means associated with said client for generating a database known discovery request to a selected database server system previously identified to determine detailed database server system information.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The network of claim 3 wherein database connection manager means associated with said selected database server is adapted to respond to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The network of claim 4 including means associated with said client to respond to receive said detailed database server system information and to display said information to a user of said client.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The network of claim 5 including a graphical display interface means (GUI) to display server system information to a user, said GUI being adapted to respond to user input to initiate said search discovery request and said known discovery request.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The network of claim 6 wherein said GUI is responsive to selection by a user to initiate said search discovery request, displays server system names returned, and is further responsive to selection of a database server system displayed on said GUI to expand the display of said selected database server system by initiating the generation of a known search request and depicting the detailed database server system information returned in treelike fashion, identifying the databases controlled by said selected database server system.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The network of claim 7 wherein said GUI is further responsive to said pointer selection of an identified database by auto-configuring for a database access request.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The network of claim 8 wherein said database server system controls a plurality of database server instances, and wherein each of said database server instances controls at least one database.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client: said network including: discovery means for said database client to identify database servers accessible from said network, said discovery means comprising:</claim-text>
      <claim-text>- search discovery means associated with said database client for generating a database discovery inquiry comprising a database search discovery request to identify said database server systems: - database discovery manager means associated with said database servers, said database discovery manager means being adapted to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client, including: - means associated with said client to respond to receive said addressing information provided by said database discovery manager and to display said information to a user of said client;</claim-text>
      <claim-text>and - known discovery means associated with said client for generating a database known discovery request to a selected database server system previously identified to determine detailed database server system information wherein database connection manager means associated with said selected database server is adapted to respond to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system, including means associated with said client to respond to receive said detailed database server system information and to display said information to a user of said client;</claim-text>
      <claim-text>wherein said database server system further comprises: - discovery manager and connection manager means adapted to listen for discovery requests on said network, and are comprised of: - request receiver means to receive said discovery requests, - request parser means to parse said requests for processing, - request service means for responding to said parsed requests, and in response to: (a) the receipt of a search discovery request obtains and packages database server system name and protocol--specific addressing information, and (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with said specified database server system and databases controlled by said database server instances;</claim-text>
      <claim-text>and - communications response means adapted to transmit said packaged database server system addressing information and said packaged detailed database server system information to any database client requesting said information.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A client server communication network as claimed in claim 10, said network including a graphical display interface means (GUI) to display server system information to a user, said GUI being adapted to respond to user input to initiate said search discovery request and said known discovery request wherein said GUI is responsive to selection by a user to initiate said search discovery request, displays server system names returned, and is further responsive to selection of a database server system displayed on said GUI to expand the display of said selected database server system by initiating the generation of a known search request and depicting the detailed database server system information returned in treelike fashion, identifying the databases controlled by said selected database server system.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. A method of identifying databases in a client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client, comprising: generating a database discovery inquiry for said client comprising a database search discovery request to identify said database server systems; using database discovery manager means associated with said database servers to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 12 including means associated with said client to respond to receive said addressing information provided by said database discovery manager and to display said information to a user of said client.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 13 including generating a database known discovery request for said client to a selected database server system previously identified to determine detailed database server system information.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. The method of claim 14 wherein said selected database server responds to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 15 wherein said client responds to receive said detailed database server system information and displays said information to a user of said client.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The method of claim 16 wherein a graphical display interface means (GUI) displays server system information to a user, and responds to user input to initiate said search discovery request and said known discovery request.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The method of claim 17 wherein said GUI responds to selection by a user, to initiate said search discovery request, displays server system names returned, and is further responsive to the selection of a database server system displayed on said GUI to expand the display of said selected database server system by initiating the generation of a known search request and depicting the detailed database server system returned in treelike fashion, identifying the databases controlled by said selected database server system.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. The method of claim 18 wherein said GUI further responds to selection of an identified database by auto-configuring for a database access request.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The method of claim 19 wherein said database server system controls a plurality of database server instances, and wherein each of said database server instances controls at least one database.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A method of identifying databases in a client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client, comprising: generating a database discovery inquiry for said client comprising a database search discovery request to identify said database server systems; using database discovery manager means associated with said database servers to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client, including: means associated with said client to respond to receive said addressing information provided by said database discovery manager and to display said information to a user of said client;</claim-text>
      <claim-text>and generating a database known discovery request for said client to a selected database server system previously identified to determine detailed database server system information;</claim-text>
      <claim-text>wherein said selected database server responds to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system, wherein said client, responds to receive said detailed database server system information and displays said information to a user of said client;</claim-text>
      <claim-text>wherein said database server system comprises: - listens for discovery requests on said network, receives said discovery requests, parses said requests for processing, responds to said parsed requests, and in response to: (a) the receipt of a search discovery request obtains and packages database server system name and protocol--specific addressing information, and (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with said specified database server system and databases controlled by said database server instances; - and is adapted to transmit said packaged database server system addressing information and said packaged detailed database server system information to any database client requesting said information.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The method of claim 21 wherein a graphical display interface means (GUI) displays server system information to a user, and responds to user input to initiate said search discovery request and said known discovery request.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. A computer program product for establishing a client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client;</claim-text>
      <claim-text>said computer program product including a storage medium and software routine means stored on said storage medium for establishing said network including: software routine means for establishing discovery means for said database client to identify database servers accessible with said network, said discovery means comprising: search discovery means associated with said database client for generating a database discovery inquiry comprising a database search discovery request to identify said database server systems; software routine means for establishing database discovery manager means associated with said database servers, said database discovery manager means being adapted to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. The computer program product of claim 23 including software routine means to establish means associated with said client to respond to receive said addressing information provided by said database discovery manager and to display said information to a user of said client.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The computer program product of claim 24 including: software routine means for establishing known discovery means associated with said client for generating a database known discovery request to a selected database server system previously identified to determine detailed database server system information.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>26. The computer program product of claim 25 including software routine means for establishing database connection manager means associated with said selected database server adapted to respond to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>27. The computer program product of claim 26 including software routine means for establishing means associated with said client to respond to receive said detailed database server system information and to display said information to a user of said client.</claim-text>
    </claim>
    <claim num="28">
      <claim-text>28. The computer program product of claim 27 including software routine means for enabling a graphical display interface means (GUI) to respond to user input to initiate said search discovery request and said known discovery request.</claim-text>
    </claim>
    <claim num="29">
      <claim-text>29. The computer program product of claim 28 wherein said software routine means enables said GUI to be responsive to selection by a user to initiate said search discovery request, displays server system names returned, and is further responsive to selection of a database serves system displayed on said GUI to expand the display of said selected database server system by initiating the generation of a known search request and depicting the detailed database server system information returned in treelike fashion, identifying the databases controlled by said selected database server system.</claim-text>
    </claim>
    <claim num="30">
      <claim-text>30. The computer program product of claim 29 wherein said software routine means enables said GUI to be further responsive to selection of an identified database by auto-configuring for a database access request.</claim-text>
    </claim>
    <claim num="31">
      <claim-text>31. The computer program product of claim 30 wherein said network established by said computer program product includes a database server system which controls a plurality of database server instances, and wherein each of said database server instances controls at least one database.</claim-text>
    </claim>
    <claim num="32">
      <claim-text>32. A computer program product for establishing a client server information handling network having one or more database server systems controlling at least one database, at least one database client and a communications link between said servers and said client;</claim-text>
      <claim-text>said computer program product including a storage medium and software routine means stored on said storage medium for establishing said network including; - software routine means for establishing discovery means for said database client to identify database servers accessible with said network, said discovery means comprising: - search discovery means associated with said database client for generating a database discovery inquiry comprising a database search discovery request to identify said database server systems; - software routine means for establishing database discovery manager means associated with said database servers, said database discovery manager means being adapted to respond to said search discovery request by returning addressing information to permit selection of said database servers by said database client, including: - software routine means to establish means associated with said client to respond to receive said addressing information provided by said database discovery manager and to display said information to a user of said client; - software routine means for establishing known discovery means associated with said client for generating a database known discovery request to a selected database server system previously identified to determine detailed database server system information; - software routine means for establishing database connection manager means associated with said selected database server adapted to respond to said known discovery request by packaging detailed database server system information relating to said selected database server system to permit access to databases on said system and, - software routine means for establishing means associated with said client to respond to receive said detailed database server system information and to display said information to a user of said client,</claim-text>
      <claim-text>further comprising software routine means for establishing said database server system with: - discovery manager and connection manager means adapted to listen for discovery requests on said network, and are comprised of: - request receiver means to receive said discovery requests, - request parser means to parse said requests for processing, - request service means for responding to said parsed requests, and in response to: (a) the receipt of a search discovery request obtains and packages database server system name and protocol--specific addressing information, and (b) the receipt of a known discovery request for a specified database server system, obtains and packages detailed information for any database server instances associated with said specified database server system and databases controlled by said database server instances;</claim-text>
      <claim-text>and - communications response means adapted to transmit said packaged database server system addressing information and said packaged detailed database server system information to any database client requesting said information.</claim-text>
    </claim>
    <claim num="33">
      <claim-text>33. The method of claim 11 wherein said GUI responds to selection by a user, to initiate said search discovery request, displays server system names returned, and is further responsive to the selection of a database server system displayed on said GUI to expand the display of said selected database server system by initiating the generation of a known search request and depicting the detailed database server system returned in treelike fashion, identifying the databases controlled by said selected database server system.</claim-text>
    </claim>
  </claims>
</questel-patent-document>