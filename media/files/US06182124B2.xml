<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182124B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182124</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182124</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="4162047" extended-family-id="3871263">
      <document-id>
        <country>US</country>
        <doc-number>09095490</doc-number>
        <kind>A</kind>
        <date>19980610</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09095490</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>4002995</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>CA</country>
        <doc-number>2228331</doc-number>
        <kind>A</kind>
        <date>19980130</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998CA-2228331</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F  13/00        20060101AFI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>13</main-group>
        <subgroup>00</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F  19/00        20060101ALI20051220RMJP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>19</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>JP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051220</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06Q  10/08        20120101ALI20150716RHCA</text>
        <ipc-version-indicator>
          <date>20120101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>08</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>CA</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20150716</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="4">
        <text>H04L  12/26        20060101ALI20110809RHCA</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>26</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <generating-office>
          <country>CA</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20110809</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="5">
        <text>H04L  29/06        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>709217000</text>
        <class>709</class>
        <subclass>217000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>370232000</text>
        <class>370</class>
        <subclass>232000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>705028000</text>
        <class>705</class>
        <subclass>028000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>705035000</text>
        <class>705</class>
        <subclass>035000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>705037000</text>
        <class>705</class>
        <subclass>037000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>709218000</text>
        <class>709</class>
        <subclass>218000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>709225000</text>
        <class>709</class>
        <subclass>225000</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>709227000</text>
        <class>709</class>
        <subclass>227000</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>709229000</text>
        <class>709</class>
        <subclass>229000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/06</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>06</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06Q-010/087</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>10</main-group>
        <subgroup>087</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06Q-040/00</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>40</main-group>
        <subgroup>00</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06Q-040/04</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>Q</subclass>
        <main-group>40</main-group>
        <subgroup>04</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-029/06</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>29</main-group>
        <subgroup>06</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131023</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/325</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>325</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-067/327</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>67</main-group>
        <subgroup>327</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/28</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>28</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-069/329</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>69</main-group>
        <subgroup>329</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20131017</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>15</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>7</number-of-drawing-sheets>
      <number-of-figures>7</number-of-figures>
      <image-key data-format="questel">US6182124</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Token-based deadline enforcement system for electronic document submission</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>WAGNER SUSAN W</text>
          <document-id>
            <country>US</country>
            <doc-number>4903201</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4903201</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>AUDEBERT YVES, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5073931</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5073931</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>LEE WAYNE M</text>
          <document-id>
            <country>US</country>
            <doc-number>5243515</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5243515</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>GANESAN RAVI</text>
          <document-id>
            <country>US</country>
            <doc-number>5535276</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5535276</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>PERLMAN RADIA J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5687235</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5687235</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>ORDISH CHRISTOPHER J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5727165</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5727165</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>WU TAJEN R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5774551</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5774551</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>DALY BRIAN KEVIN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5875394</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5875394</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>ASAY ALAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5903882</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5903882</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>FRASER STUART A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5905974</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5905974</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="11">
          <text>JOHNSON JACK J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5917897</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5917897</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="12">
          <text>INDECK RONALD S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5920628</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5920628</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="13">
          <text>AUSUBEL LAWRENCE M</text>
          <document-id>
            <country>US</country>
            <doc-number>6021398</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6021398</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="14">
          <text>DELP GARY SCOTT, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6028843</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6028843</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Lau, Terence Chun-Yat</name>
            <address>
              <address-1>North York, CA</address-1>
              <city>North York</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Lo, Jimmy</name>
            <address>
              <address-1>Scarborough, CA</address-1>
              <city>Scarborough</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Mirlas, Lev</name>
            <address>
              <address-1>Thornhill, CA</address-1>
              <city>Thornhill</city>
              <country>CA</country>
            </address>
          </addressbook>
          <nationality>
            <country>CA</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Doudnikoff, Gregory M.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Maung, Zarni</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      In a token-based deadline enforcement system for electronic document submission, a submission requirements centre collects information on submission requirements (eg., deadlines for submitting bids in response to commercial tenders), from the processing environments that generate the requirements.
      <br/>
      A gateway to a network of potential submitters polls the information collected in the submission requirements centre, and generates tokens corresponding to current submission time limits.
      <br/>
      These tokens are available to all potential submitters until expiry of the corresponding time limit for the submission.
      <br/>
      On receiving a request for electronic submission from a submitting program, the gateway searches its records for the token corresponding to the submission type.
      <br/>
      If the token is located, it is returned to the submitting program for packaging with the submission.
      <br/>
      If the token is not located, an electronic message, such as an error flag, is returned to the submitting program, and the submitter knows immediately that the submission did not meet the deadline.
      <br/>
      When a submission packaged with a valid token is received at the gateway, it can be routed directly to the processing environment that generated the submission requirement.
      <br/>
      The valid token provides an on-time validity check; the receiving processing environment does not have to check the submission as it arrives to ensure that it has been filed on time, but can delay processing to a convenient time, to verify compliance with substantive requirements for filing the submission.
      <br/>
      This scheme provides the submitter with immediate feedback whether the submission has been accepted for filing within the deadline.
      <br/>
      Possible performance problems in trying to process "time of filing" for a large number of submissions filed virtually simultaneously as the submission deadline draws near, are avoided.
      <br/>
      Also, the submitter is saved network access costs in waiting for a verification of filing to be returned.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">This invention is in the area of electronic information transmission, and provides a time-sensitive document submission system in which the submitter receives immediate verification whether the submission has been made in time.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="2">As the Internet becomes a more reliable and accepted transmission medium, it can be used for all types of information interchange.</p>
    <p num="3">
      For example, U.S. Pat. No. 5,694,546--Reisman describes a system for mass distribution by electronic transmission of information, such as periodicals.
      <br/>
      Using a current customer manifest, the server automates transmission of current issues and updates of the periodical information, and verifies with the customer that the transmission has been received in its entirety.
      <br/>
      Updating the customer's records can be totally automatic, or, as discussed in a preferred embodiment example in the patent, the customer's system clock can be monitored, and the customer alerted to the arrival of an update release date so that the customer can confirm that the system should seek and fetch the scheduled update, if available.
    </p>
    <p num="4">
      Another use of electronic transmission is for filing information to meet time deadlines.
      <br/>
      It is this use to which the present invention is directed.
    </p>
    <p num="5">
      An example of time-sensitive filing is commercial tenders.
      <br/>
      An invitation to tender electronically is usually not different from more traditional formats; a non-extendible submission deadline is set for receipt of sealed bids, and only those tenders filed by the deadline are considered.
    </p>
    <p num="6">Other examples of time-sensitive information submissions include:</p>
    <p num="7">
      applications for enrollment,
      <br/>
      submission of educational assignments and examinations,
      <br/>
      comments in response to requests for proposals, and
      <br/>
      purchase orders that must be received before expiry of a fiscal period.
    </p>
    <p num="8">
      By using electronic transmission to send information that is time-sensitive (as well as non-time sensitive information), the user is able to transmit, with certainty, the required information over a great distance in a short time, usually not exceeding a few hours.
      <br/>
      Compression technology permits lengthy documents to be sent.
      <br/>
      Encryption technology provides security where the information transmitted electronically is commercially sensitive or confidential.
    </p>
    <p num="9">Where the filing of a submission must meet a time limit or deadline, the receiving server cannot rely on the submitter's clock for controlling the submission gate because it is impossible to ensure the accuracy of the sender's clock, and, in a competitive situation, it is impossible to synchronize the clocks of all senders to ensure fairness.</p>
    <p num="10">
      However, the submitter usually wants to know as soon as possible whether a submission has met the time limit and been accepted for filing.
      <br/>
      There are a number of alternate techniques, known in the art, to try to return this type of information to the sender.
    </p>
    <p num="11">
      One technique is to enable the submitting application to try to check the date on-the-fly, while the submitter is still connected.
      <br/>
      However, this can be an expensive solution, particularly if database access is involved.
    </p>
    <p num="12">
      Another solution is to have the receiving processor check the submission at "submission time" to determine whether the document is on time, and to return a message to the submitter as soon as the check is complete.
      <br/>
      Implementing this solution requires that the processor receiving submissions filed to meet a deadline, have an active agent to respond to each submission at the time that document arrives.
      <br/>
      It is difficult to implement this technique universally because:
    </p>
    <p num="13">
      1.
      <br/>
      Some environments do not readily provide an active agent to immediately process documents on arrival; and
    </p>
    <p num="14">
      2.
      <br/>
      Some servers may not have the processing capability required for the actions of active agents, particularly where an invitation to tender is available to a wide constituency.
      <br/>
      As the deadline drew near, the volume of documents arriving could be huge.
      <br/>
      A scheme that requires active processing and checking of the arriving documents around that time would require corresponding "huge" performance from the processor.
      <br/>
      If the processor was able to process and respond on only some submissions, then the system would be unfair to submitters of those submissions that were missed by the processor.
    </p>
    <p num="15">If, in the above scheme, the receiving processor merely received and time stamped all documents for later checking for compliance with the deadline, the processing performance problem would be addressed, but no immediate feedback (deadline verification) would be provided to the submitter.</p>
    <p num="16">
      Another technique is to disable the receiving mechanism when the deadline arrives.
      <br/>
      However, this is extremely complex to implement because at the deadline time, there could be a huge backlog of files at different states and at different queues inside the system; some files being received, some awaiting "connection open", etc.
      <br/>
      The system may not have a clean way of allowing the receiving application to chop off a queue.
      <br/>
      If disabling the receiving mechanism must wait until all queues are clear, the waiting time could be very unpredictable as files kept coming in to re-fill the queues.
      <br/>
      The deadline would lose its definition, and would not be the same for all submissions.
    </p>
    <p num="17">
      Another alternative is to require a positive two-way handshake process between sender and receiver before the submitting program begins to file the submission, such as described in the above-referenced U.S. Pat. No. 5,694,546. As described in the patent, the protocol used for the handshaking is relatively complex; it identifies the customer's transporter client system to the remote server (that will issue the periodical information) by product ID and user ID, and a password or other authentication code for the transporter log file.
      <br/>
      This technique also requires an active agent on the receiver side, so that the performance problems discussed above associated with active agents at deadline time could result in added problems if processor performance prevented establishing the handshake, so that the submitting program could not make the submission at all.
    </p>
    <p num="18">
      It would be preferable to have a solution that did not depend on an active agent, such as discussed above, so that there would be no processing required for the documents when they arrive.
      <br/>
      Processing could then be scheduled and smoothed out, and the performance issue associated with the deadline in large bids would be alleviated.
      <br/>
      Yet, it is still desirable that a submitter has instant feedback about the result, that is, whether the submission has been accepted for filing within the time limit.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="19">Therefore, it is an object of the present invention to provide a system in which a submitter is made aware immediately whether an electronic submission has been filed within the time requirement set for receiving submissions of that type.</p>
    <p num="20">
      It is also an object of the present invention to provide means to provide an on-time validity check for electronic submissions, to ensure that delayed delivery over the Internet does not cause a time deadline to be missed.
      <br/>
      It is also an object of the invention to provide a scheme in which the closing time applies to all submitters simultaneously so that the deadline is fair.
    </p>
    <p num="21">
      The proposed invention effectively implements a "universal clock" that provides an accurate "on-time" or "not on-time" reading quickly and efficiently, without requiring the server receiving the submissions to actually check its own clock every time a submission arrives.
      <br/>
      Thus, minimal active processing is-required at receiving time.
      <br/>
      This alleviates backlog and performance problem as the deadline approaches.
      <br/>
      Checking the substantive validity of the submission can be effectively delayed.
    </p>
    <p num="22">
      Accordingly, the present invention provides a method for enforcing time limits in an electronic filing system, in which a token corresponding to a current submission time limit is generated and maintained until expiry of the time limit.
      <br/>
      On receiving an electronic submission from a submitting program, a search is made for the token and, if the token is located, it is returned to the submitting program for packaging with the submission.
      <br/>
      If the token is not located, an electronic message, such as an error flag, is returned to the submitting program.
    </p>
    <p num="23">Preferably, when the electronic submission packaged with the token is received from the submitting program, it is routed to a processing environment setting the current submission time limit.</p>
    <p num="24">
      The present invention also provides a gateway mechanism for enforcing time limits for filing electronic submissions in a network.
      <br/>
      The gateway mechanism has means for receiving information related to a submission time limit from a submission processing environment and for generating a token that corresponds to the time limit information.
      <br/>
      The token generated in the gateway mechanism is accessible to all potential submitters under the submission time limit.
      <br/>
      The mechanism includes means for forwarding the token to a submitter in response to a submission filed within the submission time limit and for routing a submission packaged with a token to the submission processing environment.
      <br/>
      Means to remove access to the token on expiry of the submission time limit prevent filing of submissions after the time limit has expired.
    </p>
    <p num="25">The invention also provides a computer program product comprising a computer usable medium having computer readable program code means embodied therein for enforcing time limits in an electronic filing system.</p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="26">
      Embodiments of the invention will now be described in detail in association with the accompanying drawings, in which:
      <br/>
      FIGS. 1A to 1C are schematic representations of a token-based submissions acceptance system, according to preferred embodiments of the invention;
      <br/>
      FIG. 2 is a flow diagram setting forth the steps for token creation, to correspond with a new submission requirement deadline, and token removal when the corresponding submission requirement deadline has expired, according to the invention;
      <br/>
      FIG. 3 is a flow diagram setting forth the steps for providing token-based verification to a submitter, according to the invention;
      <br/>
      FIG. 4 is a schematic diagram, similar to FIG. 1A, setting forth a further embodiment of the invention for submissions filed using File Transfer Protocol (FTP); and
      <br/>
      FIG. 5 is a flow diagram, similar to FIG. 3, setting forth the steps for providing token-based verification to a submitter in the system embodiment of the invention illustrated in FIG. 4.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
    <p num="27">
      A token-based deadline enforcement system for electronic document submission, according to the invention, comprises the basic components illustrated schematically in FIG. 1.
      <br/>
      FIGS. 1A and 1B illustrate alternate simplified systems with a single representation of each component discussed in relation to the system; FIG. 1C illustrates a larger and more complex system of the same type.
    </p>
    <p num="28">
      Referring first to FIG. 1A, a Submissions Processor 2 is an entity that creates and generates the requirements for a submission, assigns the submission type and sets the deadline for receiving submissions intended to meet the requirements.
      <br/>
      The Submissions Processor 2 that creates the requirements for a particular submission type, is also the entity that receives the submissions filed to respond to the requirements, and processes those submissions, assuming that the submissions that reach it have been filed by the deadline.
    </p>
    <p num="29">The Submission Requirements Centre 4 is a server that collects information about all upcoming current submission requirements, the corresponding deadlines and the expected submission type, and makes this information available to another component called the Electronic Submissions Gateway 6.</p>
    <p num="30">
      The Electronic Submissions Gateway 6 is the server that interfaces directly with submitting programs 10 used by end users for filing their submissions.
      <br/>
      After the Gateway 6 determines that a submission came before the corresponding deadline, it routes the submission to the appropriate Submissions Processor 2.
    </p>
    <p num="31">
      FIG. 1B schematically illustrates an embodiment of the invention implemented for a commercial tendering system for a large organisation.
      <br/>
      The Submissions Processor 2 is a master buyer server operating under a Microsoft Windows NT.RTM. operating system to collect purchase requisitions from inside the organisation.
      <br/>
      The Electronics Submission Gateway 6a is a document information gateway operating under an IBM RS6000.RTM. operating system.
      <br/>
      In this embodiment, the Gateway 2a, itself, is the repository of information about current submission requirements from the Submission Processor 2.
      <br/>
      The Gateway 2a a Submission Requirements component 4a that interfaces directly with the Submissions Processor 2 to collect this information, and to make it available internally, to other components of the Gateway 6a.
      <br/>
      The Submission Requirements component 4a also includes a tender bulletin board, preferably on a secure website, to notify external parties (i.e., potential suppliers) of calls for tender.
      <br/>
      The potential suppliers make bid submissions to the system via submitting programs 10 operating on PC operating systems with network/Internet access, such as IBM OS/2.RTM. Warp, Microsoft Windows.RTM. 95, etc. Communications between the master buyer server/Submissions Processor 2 and Gateway 6a is handled by an OS/2 Message Router 12 located in the Gateway 6a.
      <br/>
      The Submissions Processor 2 automatically wraps outgoing messages and unwraps incoming messages in order to ensure data integrity.
      <br/>
      Similarly, the Message Router 12 automatically wraps and unwraps messages going to and from the Submissions Processor 2.
      <br/>
      Messages within the Gateway environment, for example from the Message Router 12 to the Submission Requirements component 4a or between the Submission Requirements component 4a and other components in the Gateway 6a, are not wrapped.
    </p>
    <p num="32">
      The Gateway 6a has a firewall that protects it from the external network.
      <br/>
      Communications with suppliers are handled by a security module 14 which automatically builds a secure structure before forwarding a message to a supplier over the network, and unpacks the secure structures it receives from the network in order to forward plain messages to other components in the Gateway 6a to process.
      <br/>
      The secure structure packages the token together with the submission in a single structure.
      <br/>
      If necessary, the application may use message digest, encryption, and digital signature technologies to assure integrity, privacy, authentication, and non-repudiation of submissions.
    </p>
    <p num="33">
      As FIG. 1C shows, the Submission Requirements Centre 4 can collect information on new requirements for multiple Submissions Processors 2, and can make those requirements available, in turn, to multiple Submissions Gateways 6.
      <br/>
      Similarly, each Electronic Submissions Gateway 6 can be responsible to poll multiple Submission Requirements Centres, provided that each Gateway 6 also has direct access (for the purpose of directing qualifying submissions) to all Submissions Processors creating requirements collected by the Submission Requirements Centres 4.
    </p>
    <p num="34">Submission requirements (deadlines, etc.) are created and managed, according to a preferred embodiment of the invention, following the steps set forth in the flow diagram of FIG. 2.</p>
    <p num="35">
      A Submissions Processor generates a submission requirement and sets the deadline for accepting submissions that respond (block 20).
      <br/>
      Submission requirements generated by the Submissions Processor can include altering existing deadlines (shortening or extending them) and withdrawing existing submission requirements, as well as creating entirely new submission requirements.
    </p>
    <p num="36">
      The Submissions Processor then sends the requirement to the Submissions Requirements Centre (block 22), and affected parties are notified of the requirement (block 24).
      <br/>
      In the case of the posting of a new submission requirement at the Submission Requirements Centre, the notification would invite prospective submitters to send in submissions.
      <br/>
      The type of notification used will depend upon the type of submissions sought.
      <br/>
      In the case of a commercial tender, the notification could include advertising in print media and on websites.
    </p>
    <p num="37">
      The Electronic Submissions Gateway polls the Submission Requirements Centre to check for new submission requirements and for changes to existing requirements created by Submissions Processors (block 26).
      <br/>
      Unless the Gateway has access to the notification of a new submission requirements sent out by the Processor, the Gateway won't know when a new submission requirement has become available.
      <br/>
      In that case, the Gateway would poll the Submission Requirements Centre constantly or at frequent intervals, to ensure that a new requirement is not missed for very long.
    </p>
    <p num="38">
      In response to determining that a new submission requirement has been created (block 28), the Gateway generates a token corresponding to the new requirement (block 30).
      <br/>
      In FIG. 1, the token 8 generated in the Gateway 6 is made available to all submitters.
      <br/>
      Preferably, the token is encrypted with a secret key known only to the Submissions Gateway, to prevent submitters from tampering with it.
      <br/>
      The token can be encrypted using techniques well known in the art.
    </p>
    <p num="39">
      Returning to FIG. 2, the polling of the Submission Requirements Centre performed by the Gateway also checks for deadlines on existing submission requirements that are about to expire or that have been withdrawn by the Submissions Processor (block 32).
      <br/>
      At the time a deadline expires, its corresponding token in the Gateway must be made unavailable to all submitters.
      <br/>
      For this, access privileges may be revoked or the token may be deleted altogether.
    </p>
    <p num="40">
      In the method of the preferred embodiment set out in FIG. 2, when the Gateway discovers the impending expiry of a requirements deadline, it schedules a future job or process to delete the corresponding token on expiry of the deadline, and to deactivate the token record in the Gateway's token database (block 36).
      <br/>
      Thus, deadline expiry affects all submitters simultaneously.
      <br/>
      Regardless of the multi-processing capabilities of the server running the Gateway, all submitters will discover that the deadline has expired through the simple fact of token availability.
    </p>
    <p num="41">
      In some circumstances, there may be a grace period associated with a deadline.
      <br/>
      This is discussed in more detail below.
    </p>
    <p num="42">FIG. 3 is a flow diagram illustrating the process followed to notify a submitter whether a submission filed in the system of the invention has met the deadline set by the Submission Processor that created the requirements.</p>
    <p num="43">
      After an end user prepares a submission, a submitting program is used to file the submission in the system (block 50).
      <br/>
      The submitting program must send the submission to the Electronic Submissions Gateway, which will, in turn, route the submissions to the Submissions Processor.
      <br/>
      To send the submission, the submitting program must first notify the Gateway of a complete submission (block 52) and obtain a corresponding token for the submission (block 54).
      <br/>
      If the token is not available, the submitting program receives an error message from the Gateway making it clear that the submission missed the deadline (block 56).
    </p>
    <p num="44">
      If the token is available, it is returned to the submitting program (block 58).
      <br/>
      The submitting program packages the token together with the submission (block 60), and sends the packaged file to the Submissions Gateway (block 62).
      <br/>
      To avoid misuse of the token, the system should impose a requirement that the packaging of the token with the submission must be performed immediately by the submitting program.
      <br/>
      For example, the program creating the token could cause the token to be discarded, by "zeroing it out", if it is not used immediately.
    </p>
    <p num="45">The Electronic Submissions Gateway receives the package from the submitting program (block 64) and first checks to determine if the token is valid and corresponds to a submission requirement whose deadline has not expired (block 66).</p>
    <p num="46">
      It is possible that the deadline can expire after the Gateway issues the token to the submitting program, but before the submitting program can package the token with the submission and return the package to the Gateway, particularly if the returning package is delayed due to network congestion.
      <br/>
      Therefore, to account for propagation delays, a fixed size grace period, that is long enough to allow for network and electronic processing delays, is provided in the preferred embodiment.
      <br/>
      During the grace period, submissions continue to be accepted, even though the corresponding submission deadline has expired.
      <br/>
      After the grace period has expired following a deadline, no more submissions may be accepted for the corresponding requirements.
    </p>
    <p num="47">
      One way in which observance of a grace period could be implemented in the system of the present invention, is shown in FIG. 2.
      <br/>
      Where an expiring requirement includes a grace period (block 34), the Gateway schedules a future job to delete only the token on expiry of the deadline (block 38), without deactivating the token record in the token database.
      <br/>
      The Gateway schedules the job to deactivate the record to execute on expiry of the grace period (block 40).
      <br/>
      Then, tokens will no longer be available to submitters on expiry of the deadline, but submissions legitimately packaged with tokens can continue to be accepted and checked at the Electronic Submissions Gateway up to expiry of the grace period.
    </p>
    <p num="48">
      Returning to FIG. 3, if the token packaged with the submission is valid, an additional check can be performed to see if the submission carries within it the corresponding requirements (block 70).
      <br/>
      In this case, the submission can be compared with the ticket that accompanies it, to ensure that the two correspond.
    </p>
    <p num="49">Examples of situations resulting in submission check failure at the Gateway can include the following:</p>
    <p num="50">
      the submission is not accompanied by a ticket,
      <br/>
      the ticket accompanying the submission is not valid,
      <br/>
      the ticket accompanying the submission does not correspond to a valid requirement,
      <br/>
      the deadline corresponding to the ticket has expired, including any grace period.
    </p>
    <p num="51">When a submission check at the Gateway fails, it is flagged as an error (block 68), and the end user is immediately aware that the submission has not been accepted for filing.</p>
    <p num="52">If the submission passes all checks, it is routed to the correct Submission Processor that created the requirements for the submission (block 72).</p>
    <p num="53">The invention can also be implemented using File Transfer Protocol (FTP), and a preferred embodiment is illustrated in FIGS. 4 and 5, and discussed below.</p>
    <p num="54">
      FTP is a protocol used to transfer files over TCP/IP networks, such as the Internet, between machines.
      <br/>
      In this protocol, a client contacts the FTP server on the target machine, and after logon the client may transfer files to/from the target machine.
      <br/>
      The advantage of FTP is that this protocol has been widely implemented on many operating systems.
      <br/>
      FTP clients are available in many programming environments, which allows submitter applications to be written on many platforms.
      <br/>
      Another advantage of FTP is that all that is required from an operating systems is to support any kind of a file system; the client's file system and operating system may however be completely different from the server's file system and operating system.
    </p>
    <p num="55">
      The system components illustrated in FIG. 4 are essentially the same as those illustrated in FIG. 1.
      <br/>
      The difference is that when a new submission requirement is published by the Submissions Processor 102 on the Submission Requirements Centre 104, the Submissions Gateway 106 creates a token 108 corresponding to the new submission requirement and places it in a well-known directory 112, so that every submitter 110 can have access to it.
      <br/>
      In this FTP implementation, the token is a physical file, which resides in an area which is accessible by all submitters.
      <br/>
      The file name is derived from the requirements number, so that the submitting program can determine which token file corresponds to the given submission.
      <br/>
      Placing the token in the file system makes the former easily and efficiently accessible by all submitters.
      <br/>
      As illustrated in FIG. 4, the directory 112 is mounted in the Electronic Submissions Gateway 106.
      <br/>
      In reality, the directory could be located in a different physical location, but the Gateway 106 would be unaware of this.
    </p>
    <p num="56">When a Submitting Program has a submission to send in to a Submissions Processor, the steps set out in FIG. 5 are followed.</p>
    <p num="57">
      The Submitting Program receives a user submission (block 120), and uses an FTP client to log on to the Electronic Submissions Gateway (block 122).
      <br/>
      The FTP client uses the requirements identifier to poll the common token directory (block 124) to locate a corresponding token for the submission (block 126).
      <br/>
      This can be done either by passing the token file name as part of the submission requirement, or the token file name can be deterministically generated from the requirements number, if available.
    </p>
    <p num="58">
      If there is no corresponding token, an error will be flagged to the Submitting Program through the FTP client making it clear that the submission missed the deadline (block 128).
      <br/>
      If a corresponding token is available, it is returned to the Submitting Program (block 130) through the FTP client.
      <br/>
      The Submitting Program packages the token with the submission document into a single submissions package (block 132), and puts the file in its mailbox in the Gateway directory using the same FTP client as above (block 134).
    </p>
    <p num="59">When the Gateway locates the new submission package file by periodically polling its directory (block 136), it checks the token to see that it is valid and still open for submissions using the same techniques described above in relation to FIG. 3 (blocks 138, 140, 142).</p>
    <p num="60">If the submission package meets all checks at the Gateway, the Gateway routes the package to the appropriate Submissions Processor (block 144).</p>
    <p num="61">Embodiments of the invention that would be obvious to the person skilled in the art are intended to be included within the scope of the appended claims.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method for enforcing time limits in an electronic filing system, comprising:</claim-text>
      <claim-text>generating a token corresponding to a current submission time limit and maintaining said token until expiry of the time limit;</claim-text>
      <claim-text>and on receiving a request for perrnission to submit an electronic submission from a submitting program, searching for the token and, if the token is located, returning the token to the submitting program for packaging with the submission, else, returning an electronic message to the submitting program.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method as set forth in claim 1, further comprising: on receiving the electronic submission packaged with the token from the submitting program, routing said electronic submission packaged with the token to a processing environment setting the current submission time limit.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method as set forth in claim 1, further comprising: on receiving the electronic submission packaged with the token from the submitting program, verifying validity of the token and, if valid, routing said electronic submission packaged with the token to a processing environment setting the current submission time limit, else, returning an error message to the submitting program.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method as set forth in claim 3, wherein the step of verifying validity of the token comprises verifying non-expiry of the time limit as extended by any associated grace period.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method as set forth in claim 1, wherein the step of generating and maintaining the token comprises obtaining notification of expiry of the time limit, the method further comprising scheduling a process to delete the token on expiry of the time limit.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The method as set forth in claim 1, wherein in the step of searching for the token, returning an electronic message to the submitting program comprises returning an error flag to the submitting program.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method as set forth in claim 1, wherein in the step of searching for the token, returning an electronic message to the submitting program comprises returning the submission to the program without the token.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. In a network, a gateway mechanism for enforcing time limits for filing electronic submissions, comprising: means for receiving information related to a submission time limit from a submission processing environment and for generating a token corresponding thereto, said token being accessible to all potential submitters under the submission time limit; means for forwarding the token to a submitter in response to a submission filed within the submission time limit; means for removing access to the token on expiry of the submission time limit;</claim-text>
      <claim-text>and means for routing a submission packaged with the token to the submission processing environment.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The mechanism, according to claim 8, wherein the means for receiving information related to a time limit from a submission processing environment comprises: a submission repository adapted to receive information related to current submission requirements from the submission processing environment;</claim-text>
      <claim-text>and means to poll the submission repository to update the submission time limit.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The mechanism, according to claim 8, wherein the means for removing access to the token on expiry of the submission deadline comprises means for deleting the token on expiry of the time limit.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The mechanism, according to claim 10, wherein the means for generating the token further comprise creating a record for the token in the gateway mechanism, and wherein the means for deleting the token further comprise means for deactivating the record for the token on expiry of a grace period after expiry of the time limit.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The mechanism, according to claim 8, wherein the means for removing access to the token on expiry of the submission deadline comprises means for returning an error message in response to submissions filed after the submission time limit.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The mechanism, according to claim 8, wherein the means for routing a submission packaged with a token to the submission processing environment further comprises: means for verifying the validity of the token;</claim-text>
      <claim-text>and if the token is invalid, means for aborting a route of the submission processing environment and returning an error message to the submitter.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The mechanism, according to claim 13, wherein the means for routing a submission packaged with a token to the submission processing environment further comprises: means to compare the submission with the token to match the submission with the information related to the time limit;</claim-text>
      <claim-text>and if no match is found, means for aborting a route of the submission to the submission processing environment and returning an error message to the submitter.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A computer program product comprising a computer usable medium having computer readable program code means embodied therein for enforcing time limits in an electronic filing system, the computer readable program product comprising: computer readable program code means for causing a computer to generate a token corresponding to a current submission time limit and to maintain said token until expiry of the time limit;</claim-text>
      <claim-text>and computer readable program code means for causing the computer to search for the token on receiving an electronic submission from a submitting program, and, if the token is located, for causing the computer to return the token to the submitting program for packaging with the submission, or else, to return an electronic message to the submitting program.</claim-text>
    </claim>
  </claims>
</questel-patent-document>