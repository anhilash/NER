<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185521B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185521</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185521</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="24412071" extended-family-id="42113574">
      <document-id>
        <country>US</country>
        <doc-number>08979338</doc-number>
        <kind>A</kind>
        <date>19971124</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08979338</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171836</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>97933897</doc-number>
        <kind>A</kind>
        <date>19971124</date>
        <priority-active-indicator>N</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08979338</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>60261496</doc-number>
        <kind>A</kind>
        <date>19960216</date>
        <priority-linkage-type>3</priority-linkage-type>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1996US-08602614</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>G06F   9/455       20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>455</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F   3/06        20060101A I20060722RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>06</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20060722</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>703026000</text>
        <class>703</class>
        <subclass>026000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>703024000</text>
        <class>703</class>
        <subclass>024000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>703027000</text>
        <class>703</class>
        <subclass>027000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>710005000</text>
        <class>710</class>
        <subclass>005000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>711004000</text>
        <class>711</class>
        <subclass>004000</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-003/061</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>061</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-003/0659</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>0659</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-003/0674</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>0674</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G06F-009/455</classification-symbol>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>455</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130823</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>Y10S-707/99939</classification-symbol>
        <section>Y</section>
        <class>10</class>
        <subclass>S</subclass>
        <main-group>707</main-group>
        <subgroup>99939</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130518</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>13</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>8</number-of-drawing-sheets>
      <number-of-figures>8</number-of-figures>
      <image-key data-format="questel">US6185521</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">System and method for emulating mainframe channel programs by open systems computer systems</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>BYERS LARRY L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5524218</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5524218</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>HIATT DAVID M, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5530845</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5530845</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>BACH MAURICE J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5619650</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5619650</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>ANTOGNINI JAMES J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5649185</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5649185</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>GLASSEN STEVEN GARDNER, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5664219</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5664219</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>FRIEDER GIDEON, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4527237</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4527237</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>ANTHONY JR BRUCE O, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4709328</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4709328</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>HIRSCH THOMAS S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4722048</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4722048</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>MURANO KEIJI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5428801</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5428801</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>BEAUSOLEIL WILLIAM F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5463754</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5463754</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>GRYNBERG MAREK, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5515525</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5515525</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>PHILLIPS DAVID L, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5530844</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5530844</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>BEAUSOLEIL WILLIAM F, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5564019</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5564019</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>HIRSCH THOMAS S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5572711</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5572711</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>MATSUSHIMA HITOSHI</text>
          <document-id>
            <country>US</country>
            <doc-number>5590311</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5590311</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>ONFFROY JOSHUA P, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5615335</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5615335</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>WILLIAMS DONALD V, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5630164</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5630164</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>BEARDSLEY BRENT C, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5636359</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5636359</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>YABUMOTO KAN W</text>
          <document-id>
            <country>US</country>
            <doc-number>5717951</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5717951</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="20">
          <text>MISINAI TSVI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5758125</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5758125</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="21">
          <text>NINOMIYA TATUYA, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5819054</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5819054</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <related-documents>
      <division>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>60261496</doc-number>
              <kind>A</kind>
              <date>19960216</date>
            </document-id>
          </parent-doc>
        </relation>
      </division>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>EMC Corporation</orgname>
            <address>
              <address-1>Hopkinton, MA, US</address-1>
              <city>Hopkinton</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>EMC</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Vishlitzky, Natan</name>
            <address>
              <address-1>Brookline, MA, US</address-1>
              <city>Brookline</city>
              <state>MA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Fitzgerald, Leanne J.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Gunther, John M.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Teska, Kevin J.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A digital computer system comprises a mass storage subsystem and an "open systems" computer system.
      <br/>
      The mass storage subsystem includes a storage device for storing data and an access control for performing an access operation in connection with the storage device in response to a channel program received thereby in at least one channel program information transfer packet.
      <br/>
      The channel program includes at least one channel command and the supplementary channel command processing information useful in processing the at least one channel command.
      <br/>
      The "open systems" computer system performs processing operations in response to programs.
      <br/>
      During at least one the processing operation, the "open systems" computer system generates a channel program, including at least one the channel command and the supplementary channel command processing information useful in processing the at least one channel command, and transfers the channel program in the at least one channel program information transfer packet to the mass storage subsystem to initiate an access operation.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">
      This application is a division of application Ser.
      <br/>
      No. 08/602,614, filed on Feb. 16, 1996, which is currently pending.
    </p>
    <heading>FIELD OF THE INVENTION</heading>
    <p num="2">The invention relates generally to the field of digital computer systems and more particularly to systems and methods for allowing emulation of mainframe channel programs by "open systems" computer systems.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="3">
      "Enterprise" computing systems, that is, computer systems for use in large-scale computing environments such as offices and research laboratories in which rapid processing and manipulation of large amounts of data is required, in the past have been built around large and expensive mainframe computers.
      <br/>
      Because of their expense, mainframe computers have typically been shared among a number of users, and with the processing power being allocated to particular users based on a number of criteria.
      <br/>
      However, as the computing power of personal computers, workstations, and the like has increased, they have become more widely used in enterprise computer systems.
      <br/>
      Unlike mainframe computers, personal computers, workstations and the like are relatively inexpensive devices which are distributed among workers in the enterprise.
      <br/>
      One advantage that mainframe computers have over personal computers and workstations, however, is that they (the mainframe computers) more easily provide for sharing of the same data and programs, which can be important in an enterprise environment.
      <br/>
      To facilitate program and data sharing among personal computers and workstations, networks have been developed over which one personal computer or workstation can make use of data and programs on another "remote" device, in general by causing the data and programs to be "downloaded," that is, transferred to it for processing.
      <br/>
      In addition, a personal computer or workstation can, typically over a communications medium such as the public telephony system, engage in a communications session with another remote device in which it effectively operates as a terminal on the remote device, enabling the remote device to process programs using data input that it provides.
    </p>
    <p num="4">
      Typically, when personal computers and workstations are introduced in an enterprise environment, either in addition to or as a replacement for a mainframe computer, it is desired that they (the personal computers and workstations) be able to perform at least some processing operations which are similar to those that were or are being performed by the mainframe computer system.
      <br/>
      Since programs for controlling these operations have already been prepared for the mainframe computer systems, and have been verified and enhanced over long periods of usage, it would be preferable to merely re-compile the programs for processing by the personal computers and workstations.
      <br/>
      A problem arises, however, since the architectures of mass storage subsystems which are used with mainframe computer systems, and the mechanism by which data is obtained from and stored in such subsystems, typically differs significantly from those that are used in connection with personal computers and workstations.
      <br/>
      This problem may be addressed by, for example, reformatting and re-structuring the data that is stored in the mass storage subsystems according to the storage architectures of the personal computers and workstations, but this may require significant changes to the programs during the re-compilation process, which can introduce errors in the programs.
      <br/>
      In addition, if the data is re-formatted and restructured to accommodate the needs of personal computers and workstations, that may preclude or complicate sharing of the data with the mainframe computers which may also be present in the system.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="5">The invention provides a new and improved system and method for facilitating emulation of a mainframe channel program by an "open systems" computer system.</p>
    <p num="6">
      In brief summary, the invention in one aspect provides a digital computer system comprising a mass storage subsystem and an "open systems" computer system.
      <br/>
      The mass storage subsystem includes a storage device for storing data and an access control for performing an access operation in connection with the storage device in response to a channel program received thereby in at least one channel program information transfer packet.
      <br/>
      The channel program includes at least one channel command and the supplementary channel command processing information useful in processing the at least one channel command.
      <br/>
      The "open systems" computer system performs processing operations in response to programs.
      <br/>
      During at least one the processing operation, the "open systems" computer system generates a channel program, including at least one the channel command and the supplementary channel command processing information useful in processing the at least one channel command, and transfers the channel program in the at least one channel program information transfer packet to the mass storage subsystem to initiate an access operation.
    </p>
    <p num="7">
      In another aspect, the invention provides a method of operating a digital computer system comprising an "open systems" computer system mass storage subsystem and a mass storage subsystem.
      <br/>
      The mass storage subsystem includes a storage device for storing data and an access control for performing an access operation in connection with the storage device.
      <br/>
      In accordance with the method "open systems" computer system is enabled to generate a channel program, including at least one channel command and supplementary channel command processing information useful in processing the at least one channel command, and transfer the channel program in at least one channel program information transfer packet to the mass storage subsystem to initiate an access operation.
      <br/>
      The mass storage subsystem is enabled to receive the at least one channel program information transfer packet and perform a the access operation in connection with the storage device in response to the channel program received thereby in the at least one channel program information transfer packet.
    </p>
    <p num="8">
      In yet another aspect, the invention provides an "open systems" computer program product for use in controlling operations of an "open systems" computer system in a digital computer system.
      <br/>
      The digital computer system comprises the "open systems" computer system and a mass storage subsystem, the mass storage subsystem storing data for access during an access operation, to facilitate an access operation in connection with the mass storage subsystem.
      <br/>
      The "open systems" computer program product comprises a computer-readable medium having recorded thereon channel program generation code devices and channel program transfer code devices.
      <br/>
      The channel program generation code devices enable the "open systems" computer system to generate a channel program, the channel program comprising at least one channel command and supplementary channel command processing information useful in processing the at least one channel command.
      <br/>
      The channel program transfer code devices enable the "open systems" computer system to transfer the channel program in at least one channel program information transfer packet to the mass storage subsystem to initiate an access operation.
    </p>
    <p num="9">
      In yet a further aspect, the invention provides a mass storage subsystem computer program product for use in controlling operations of a mass storage subsystem in a digital computer system, the digital computer system comprising the "open systems" computer system and the mass storage subsystem, the mass storage subsystem storing data for access during an access operation, to facilitate an access operation in connection with the mass storage subsystem, the mass storage subsystem computer program product comprises a computer-readable medium having recorded thereon channel program transfer code devices and access operation control code devices.
      <br/>
      The channel program transfer code devices enable the a mass storage subsystem to receive the at least one channel program information transfer packet.
      <br/>
      The access operation control code devices enable the mass storage subsystem to perform a the access operation in connection with the storage device in response to the channel program received thereby in the at least one channel program information transfer packet.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="10">
      This invention is pointed out with particularity in the appended claims. The above and further advantages of this invention may be better understood by referring to the following description taken in conjunction with the accompanying drawings, in which:
      <br/>
      FIG. 1 is a functional block diagram of a digital computer system that is useful in understanding the invention;
      <br/>
      FIG. 2 is a diagram of a channel command sequence which may be issued by the mainframe computer system depicted in FIG. 1 to enable the mass storage subsystem depicted in FIG. 1 to perform an input/output operation;
      <br/>
      FIGS. 3 through 5 are diagrams of information packets transferred between the "open systems" computer system and mass storage subsystem depicted in FIG. 1 in connection with an input/output operation performed by the mass storage subsystem; and
      <br/>
      FIGS. 6A, 6B, and 7 comprise flow diagrams useful in understanding the operations performed by the "open systems" computer system and mass storage subsystem in connection with an input/output operation.
    </p>
    <heading>DETAILED DESCRIPTION OF AN ILLUSTRATIVE EMBODIMENT</heading>
    <p num="11">
      FIG. 1 is a functional block diagram of a digital computer system 10 that is useful in understanding the invention.
      <br/>
      With reference to FIG. 1, the digital computer system 10 includes an "open systems" computer system 11 and a "mainframe" computer system 12, both of which may be connected to a mass storage subsystem 13 over respective buses 14 and 15.
    </p>
    <p num="12">
      The "open systems" computer system 11 comprises, for example, a personal computer, computer workstation or the like which processes application programs in connection with an "open" operating system such as, for example, the well-known Unix operating system, the MS-DOS and/or Windows operating systems from Microsoft Corporation or the like.
      <br/>
      The "open systems" computer system 11 in one embodiment will typically include a processor module, and operator interface elements including operator input components such as a keyboard and/or a mouse and an operator output element such as a video display device.
      <br/>
      The processor module may also include, for example, processor, memory and local mass storage devices such as disk and/or tape storage elements which perform processing and storage operations in connection with digital data provided thereto.
      <br/>
      The processor module will also include a bus interface which interfaces the "open systems" computer system 11 to bus 14, which allows the "open systems" computer system 11, inter alia, to transfer data to the mass storage subsystem 13 for storage and retrieve previously-stored data from the mass storage subsystem 13.
      <br/>
      The operator input components permit an operator to input information for processing, and the video display device display output information generated by the processor module on a screen to the operator, including data that the operator may input for processing, information that the operator may input to control processing, as well as information generated during processing.
      <br/>
      The processor module generates information for display by the video display device using, for example, a so-called "graphical user interface" ("GUI").
      <br/>
      In one embodiment, the bus 14 is a conventional SCSI ("small computer systems interface") bus.
    </p>
    <p num="13">
      The "mainframe" computer system 12, on the other hand, is a computer of the type such as the various computers in the System 360, System/370 and Enterprise System/390 families those sold by International Business Machines Corporation ("IBM"), and compatible systems sold by other vendors.
      <br/>
      The mainframe computer system computer system 12 in one embodiment will also typically include a processor module including, for example, processor and memory devices, and may also include local mass storage devices.
      <br/>
      The processor module will also include a bus interface which interfaces the mainframe computer system 12 to bus 15, which allows the mainframe computer system 12, inter alia, to transfer data to the mass storage subsystem 13 for storage and retrieve previously-stored data from the mass storage subsystem 13.
      <br/>
      The mainframe computer system 12 will generally be connected to one or more operator terminals, each of which may include a respective operator input device such as a keyboard and/or a mouse, and an operator input devices such as a video display terminal.
      <br/>
      As with the "open systems" computer system 11, each operator input device connected to the mainframe computer system 12 permits an operator to input information for processing, and the video display devices display output information generated by the processor module on a screen to the operator, including data that the operator may input for processing, information that the operator may input to control processing, as well as information generated during processing.
      <br/>
      The processor module generates information for display by the video display device using, for example, a so-called "graphical user interface" ("GUI").
      <br/>
      In that embodiment, bus 15 may comprise, for example, one of a number of channel to control unit interfaces that are described in various publications, such as a parallel interface described in "Enterprise Systems Architecture/390 System/360 and System/370 I/O Interface Channel To Control Unit Original Equipment Manufacturers' Information" (11th Edition, September 1992) (Document No. GA22-6974-10) from International Business Machines Corporation, and an interface provided by ESCON channel interface adapters sold by, for example, International Business Machines Corporation.
    </p>
    <p num="14">
      The mass storage subsystem 13 provides mass data storage for the "open systems" computer system 11, mainframe computer system 12 and/or other computer system(s) (not shown), which may include other "open systems" computer systems and mainframe computer systems.
      <br/>
      In one embodiment, the mass storage subsystem 13 is similar to the digital data storage subsystem described in U.S. Pat. No. 5,206,939, entitled System And Method For Disk Mapping And Data Retrieval, issued Apr. 27, 1993 to Moshe Yanai, et al., and assigned to the assignee of the present application (incorporated herein by reference).
      <br/>
      As described in that patent, the mass storage subsystem 13 stores data provided by the mainframe computer system 12 in so-called "CKD" ("count-key-data") format which is typically received from and used by a mainframe computer 12, in disk storage devices (not separately shown) which have so-called "FBA" ("fixed block architecture") format in a manner which emulates the structure of the data's CKD format.
    </p>
    <p num="15">
      The mass storage subsystem 13 performs a number of operations, including data storage operations to write data received from computer system 11 or 12 onto a disk storage unit, retrieval operations to read data from a disk storage unit for transfer to a computer system 11 or 12, and other operations (which will collectively be referred to as "input/output operations) under control of a channel program comprising one or more commands received from the respective computer system 11 or 12.
      <br/>
      In addition, if the input/output operation is a write operation, the respective computer system 11 or 12 will provide the data to be written.
    </p>
    <p num="16">
      Before proceeding further, it would be helpful to describe a mainframe channel program which is used by the mainframe computer system 12 to control the mass storage subsystem 13 during an input/output operation.
      <br/>
      An illustrative channel program is depicted in FIG. 2.
      <br/>
      With reference to FIG. 2, the channel program consists of a channel command sequence 20 and may also include one or more sets of parameter data 26(l) through 26(M) (generally identified by reference numeral 26(m)).
      <br/>
      The channel command sequence includes a series of channel command words 21(l) through 21(N) (generally identified by reference numeral 21(n)), each of which enables the mass storage subsystem 12 to perform a selected operation, such as seek, search, read, write, provide status information, and so forth.
    </p>
    <p num="17">
      Generally, the structure of the various channel command words which may be used in a channel command sequence 20 is well known in the art.
      <br/>
      The various types of channel command words which may be used in a channel program, and the currently specified structures of the various types of channel command words and the information contained therein, are described in a number of publications, including, for example, "IBM 3990 Storage Control Reference (Models 1, 2 and 3)" (7th Edition, October, 1994) (Document No. GA32-0099-06) from International Business Machines Corporation.
      <br/>
      As described in the aforementioned publication, each channel command word 21(n) includes a command field 22(n) and an address field 25(n), and may also include other fields (not shown).
      <br/>
      The command field 22(n) identifies the particular operation to be performed in response to the channel command word.
      <br/>
      A number of types of operations may be initiated, including, for example, the aforementioned seek, search, read, write, and return status information operations, as well as a number of other types of operations.
      <br/>
      The channel command word's address field 25(n) may contain a pointer to storage locations in the mainframe computer system's memory (not separately shown), which is represented in FIG. 2 as a parameter data field 26(m), which may contain information which may be useful to the mass storage subsystem 13 in performing an operation specified by the command in command field 22(n), from which data may be obtained to be stored in the mass storage subsystem 13 during a write operation, or into which data from the mass storage subsystem 13 may be stored during a read operation.
      <br/>
      As shown in FIG. 2, the channel command sequence 20 is associated with "M" parameter data fields 26(l) through 26(M) (generally identified by reference numeral 26(m)), each of which is pointed to by a pointer in the address field 25(n) of a channel command word 21(n).
    </p>
    <p num="18">
      If a channel command word 21(n) provides a pointer in the address field 25(n), the parameter data field 26(m) contains additional or supplmentary information which will be used by the mass storage subsystem 13 in executing the command identified in command field 22(n).
      <br/>
      It will be appreciated that, if each channel command word 21(n) in a channel program requires such additional information, the number "M" of parameter data fields 26(m) may correspond to the number "N" of channel command words 21(n).
      <br/>
      On the other hand, if a channel command word 21(n) in a channel command sequence 20 does not require additional information, a parameter data field 26(m) will typically not be provided for the channel command word, in which case the number "M" of parameter sets 26(m) may differ from the number "N" of channel command words 21(n).
    </p>
    <p num="19">
      During processing of a channel command sequence 20, when a processing channel command word 21(n) which initiates operations by the mass storage subsystem 13, the mainframe computer system 12 will normally transmit the command from the command field 22(n) of a channel command word 21(n) to the mass storage subsystem 13.
      <br/>
      In addition, if the channel command word 21(n) has an associated parameter data field 26(m), the mainframe computer system 12 and the mass storage subsystem 13 will typically cooperate to transfer the parameter data.
      <br/>
      In the case of, for example, the transfer of contents of the parameter data field 26(m) for a channel command word whose command is other than a read command, the mainframe computer system 12 and mass storage subsystem 13 will cooperate to transfer the contents from the mainframe computer system's memory locations identified by the channel command word's address field 25(n) to the mass storage subsystem.
      <br/>
      On the other hand, in the case of the transfer of read data in response to a channel command word 21(n) which contains a read command, the mainframe computer system 12 and mass storage subsystem 13 will cooperate to transfer the read data from the mass storage subsystem 13 to the mainframe computer system 12 for storage in the mainframe computer system's memory locations identified by the channel command word's address field 25(n).
      <br/>
      In any case, after the mainframe computer system 12 provides a command from a channel command word 21(n) of a channel command sequence 20 to the mass storage subsystem 13 for execution, the mainframe computer system 12 will typically delay providing a command from a subsequent channel command word 21(n+1) from the channel command sequence 20 to the mass storage subsystem 13 until it receives an indication from the mass storage subsystem 13 over bus 15 that it (the mass storage subsystem) has properly executed the command.
    </p>
    <p num="20">
      The invention provides an arrangement by which an "open systems" computer system 11 is able to send one or more channel command programs, such as a program comprising channel command sequence 20 and associated parameter data to the mass storage subsystem 13, to enable the mass storage subsystem 13 to perform the operations defined by the channel command words in the channel command sequences in the same manner as if they (the channel command sequences) were being processed by the mainframe computer system 12.
      <br/>
      This may be used, for example, in connection with processing of application programs written initially for the mainframe computer system 12, which have been recompiled for execution by the "open systems" computer system 11.
      <br/>
      Application programs written for the mainframe computer system 12 will, in connection with input/output operations, reference data in the "CKD" architecture used by the mass storage subsystem.
      <br/>
      However, the operating systems such as Unix used on "open systems" computer systems normally reference data in the "FBA" format, and converting the channel program to FBA format is difficult.
      <br/>
      In the system 10, the recompiled mainframe application program (that is, the program to be executed by the "open systems" computer system 11), to initiate an input/output operation, enables the "open systems" computer system 11 to generate a channel program generally in the same manner as it would if the recompiled application program were being executed by the mainframe computer system.
      <br/>
      However, instead of providing the channel command words of the channel program as would a mainframe computer system as described above, the "open systems" computer system 11 transmits the entire channel program, including parameters in parameter data fields 26(m), to the mass storage subsystem 13 in one or more transactions over the bus 14.
    </p>
    <p num="21">
      In one embodiment, in which the bus 14 is a conventional SCSI bus, the "open systems" computer system 11 makes use of several types of bus transactions, namely, a "send diagnostic" bus transaction type and a "read diagnostic results" bus transaction type for use in transferring programs to the mass storage subsystem 12 and in receiving read data and status information from the mass storage subsystem 12.
      <br/>
      During a bus transaction of either type, the "open systems" computer system 11 will transmit information, as described below in connection with FIGS. 3 through 5, which is received by the mass storage subsystem 13.
      <br/>
      Generally, the "open systems" computer system 11 uses a bus transaction of the "send diagnostics" type to transmit input/output operation command information to the mass storage subsystem 13, the input/output operation information including a channel command sequence 20.
      <br/>
      In addition, if the input/output operation defined by the channel command sequence 20 is a write operation, the "open systems" computer system 11 will also transfer the data to be written to the mass storage subsystem 13 using a bus transaction of the "send diagnostics" type.
    </p>
    <p num="22">On the other hand, if the input/output operation defined by the channel command sequence 20 is a read operation, or if the input/output operation is one in which the mass storage subsystem 13 is to transmit status information to the "open systems" computer system 11, the "open systems" computer system 11 will, after transferring the channel program in a bus transaction of the "send diagnostics" type, subsequently initiate a bus transaction of the "read diagnostic results" type to enable the mass storage subsystem 13 to transfer the respective read data or status information to the "open systems" computer system 11.</p>
    <p num="23">Transactions of both the "send diagnostic" type and the "read diagnostic results" type are both of variable length, that is, they may both be used to transfer variable amounts of information, with the amount of information being set forth in a transaction "header" which will be described below in connection with FIGS. 3 through 5.</p>
    <p num="24">
      More specifically, if the input/output operation is a write operation, the "open systems" computer system 11 uses a bus transaction of the "send diagnostic" type to transfer a channel program defining the input/output operation to be performed, including an entire channel command sequence 20 and the associated parameter sets 26(m) which define the write operation, to the mass storage subsystem 13 for execution.
      <br/>
      The channel command sequence 20 which the "open systems" computer system 11 transfers to the mass storage subsystem 13 to initiate the write operation will be the same sequence 20 that the mainframe computer system 12 would process if it were initiating the write operation, but instead of transmitting commands from each channel command word 21(n) to the mass storage subsystem 13 in succession, and allowing the mass storage subsystem to execute each channel command word 21(n) before transmitting the command for the next channel command word 21(n+1), the "open systems" computer system 11 will transfer all of the channel command words 21(n) in the channel command sequence 20, as well as the parameters in the parameter sets 26(m), in one or more transactions of the "send diagnostics" type.
    </p>
    <p num="25">
      Continuing with a write operation, after transferring the channel command sequence 20, the "open systems" computer system 11 will use a second bus transaction of the "send diagnostic" type to transfer the data that is to be stored to the mass storage subsystem 13.
      <br/>
      After receiving a channel command sequence 20 during a bus transaction of the "send diagnostic" type, the mass storage subsystem 13 will execute the channel command words 21(n) in the channel command sequence 20 in order, using the parameter information in the parameter sets 26(m), and will store the data that it receives during the second bus transaction of the "send diagnostic" type.
    </p>
    <p num="26">
      On the other hand, if the input/output operation is a read operation, the "open systems" computer system 11 uses a bus transaction of the "send diagnostic" type to transfer an entire channel command sequence 20, including the parameter sets 26(m), which define the read operation to the mass storage subsystem 13 for execution.
      <br/>
      The channel command sequence 20 which the "open systems" computer system 11 transfers to the mass storage subsystem 13 to initiate the read operation will be the same sequence 20 that the mainframe computer system 12 would transfer if it were initiating the read operation, but instead of transmitting the successive channel command words 21(n) to the mass storage subsystem 13 individually (allowing the mass storage subsystem to execute each channel command word 21(n) before transmitting the next channel command word 21(n+1), the "open systems" computer system 11 will transfer all of the channel command words 21(n) in the channel command sequence 20, as well as the parameters in the parameter sets 26(m), in a transaction of the "send diagnostics" type.
      <br/>
      After transferring the channel command sequence 20 to the mass storage subsystem 13 initiating a read operation, the "open systems" computer system 11 will initiate a bus transaction of the "read diagnostic results" type, during which the mass storage subsystem 13 will transmit the data to the "open systems" computer system 11.
    </p>
    <p num="27">
      As noted above, a channel command sequence 20 provided by the "open systems" computer system 11 may enable the mass storage subsystem 13 to provide status information regarding the status of the mass storage subsystem 13.
      <br/>
      The "open systems" computer system 11 will transfer such a channel command sequence 20, along with any necessary parameter sets 26(m), to the mass storage subsystem 13 using a bus transaction of the "send diagnostics" type.
      <br/>
      The mass storage subsystem 13 will obtain the status information and transfer it to the "open systems" computer system 11 during a subsequent bus transaction of the "read diagnostic results" type initiated by the "open systems" computer system 11.
    </p>
    <p num="28">
      As noted above, the information transferred by the "open systems" computer system 11 to the mass storage subsystem 13 in the various types of bus transactions is depicted in FIGS. 3 through 5.
      <br/>
      Generally, FIG. 3 depicts the information transferred by the "open systems" computer system 11 in a bus transaction of the "send diagnostics" type when transferring a channel command sequence 20 (FIG. 2) to the mass storage subsystem 13.
      <br/>
      FIG. 4 depicts the information
    </p>
    <p num="29">
      transferred by the "open systems" computer system 11 in a bus transaction of the "send diagnostics" type when transferring data to be written during a write operation.
      <br/>
      FIG. 5 depicts the information transferred by the "open systems" computer system 11 in a bus transaction of the "read diagnostics results" type to initiate a transfer of read data or status information by the mass storage subsystem.
    </p>
    <p num="30">
      More specifically, FIG. 3 depicts the send diagnostics (input/output command) information packet 30 defining an input/output operation which is transferred by the "open systems" computer system 11 to the mass storage subsystem 13 during a bus transaction of the "send diagnostics" type.
      <br/>
      The send diagnostics (input/output command) information packet 30 provides a channel command sequence 20 and associated parameter sets 26(m) (FIG. 2) to the mass storage subsystem 13.
      <br/>
      The send diagnostics (input/output command) information packet 30 includes a header section 31, a channel command word transfer section 32 and a parameter set section 33.
      <br/>
      Generally, the header section 31 contains transaction protocol information, in particular identifying the bus transaction as being of the "send diagnostics" type, identifying the unit attached to the bus 14 to receive the packet 30 (in this case the mass storage subsystem 13), and indicating the length of the packet 30.
      <br/>
      In addition, the header section 31 includes input/output operation protocol information, most notably indicating whether the input/output operation initiated by the channel command sequence transferred in the send diagnostics (input/output command) information packet 30 is part of an input/output operation sequence initiated by a plurality of channel command sequences, each of which is included in the send diagnostics (input/output command) information packet 30.
      <br/>
      If the header section 31 indicates that the input/output operation initiated by the channel command sequence is part of an input/output operation sequence, it also providing indicia identifying the particular input/output operation sequence of which it (the input/output operation) is a part.
    </p>
    <p num="31">The channel command word transfer section 32 of the send diagnostics (input/output command) information packet 30 also contains the channel command sequence 20 defining the input/output operation, and the parameter set section 33 contains the parameter values from the parameter sets 26(m).</p>
    <p num="32">
      More specifically, the header section 31 of the send diagnostics (input/output command) information packet 30 includes a number of fields and flags, including a bus command field 34, a logical unit field 35, a chain flag 36, a write flag 37, a length field 40, a password field 41 and a chain code field 42.
      <br/>
      The command field 34, logical unit field 35, chain flag 36, write flag 37 and length field 40 together contain protocol information used to transfer the packet 30 to its intended recipient.
      <br/>
      That is, the command field contains a value which identifies the bus transaction as a "send diagnostics" bus transaction.
      <br/>
      The logical unit number field 35 contains a value which identifies the unit connected to bus 14 to engage in the bus transaction with the "open systems" computer system 11, in this case the mass storage subsystem 13.
      <br/>
      Since during the bus transaction the "open systems" computer system 11 is transferring the send diagnostics (input/output command) information packet 30 to the mass storage subsystem 13, the write flag 37 will be set.
      <br/>
      If the send diagnostics (input/output command) information packet 30 is one of a series of packets contain information for input/output operations of the same chained input/output operation sequence, the chained flag 36 will be set.
      <br/>
      Since the send diagnostics (input/output command) information packet 30 may be of variable length, the length field 40 identifies the length of the send diagnostics (input/output command) message packet 30.
    </p>
    <p num="33">
      The remaining fields of header section 30, namely, the password field 41, chain flag 36, and chain code field 42 are used by the unit that receives the packet 30, in this case the mass storage subsystem 13, to control use the input/output operation control information in the packet.
      <br/>
      The password field 41 contains a password or verification control value that the mass storage subsystem 13 can use to verify that the packet contains information that it is to use.
      <br/>
      The chain code field 42 contains an input/output operation identifier value that identifies the input/output operation defined by the contents of the channel command word transfer section 32 and parameter set section 33.
      <br/>
      As will be described below in connection with FIG. 4, during a write operation, the "open systems" computer system 11 will provide the data to be written in a send diagnostics (write data) information packet 60 which includes input/output operation identifier information, which the mass storage subsystem 13 will use along with the input/output operation identifier value in field 42 (FIG. 3) to identify the input/output operation with which the write data in packet 60 is associated.
      <br/>
      In addition, as will be described below in connection with FIG. 5, during a read operation, the "open systems" computer system 11 will provide a read diagnostic results information packet 80 that also includes input/output operation identifier information, which the mass storage subsystem 13 will use along with the input/output operation identifier value in field 42 (FIG. 3) to identify the input/output operation whose read data is to be returned.
    </p>
    <p num="34">
      As noted above, a send diagnostics (input/output command) information packet 30 may define an input/output operation which is one of a number of operations in a chained input/output operation sequence, and in that case all of the send diagnostic (input/output command) information packets 30 will all have the same chain code value.
      <br/>
      In one embodiment, the mass storage subsystem 13 will perform the input/output operations in a chained input/output operation sequence in the order in which it receives send diagnostics (input/output command) message packets 30 which contain the same chain identifier value in their respective chain code fields 42, in which case the packets 30 for the chained input/output operation sequence need not include sequencing information.
    </p>
    <p num="35">
      The channel command word transfer section 32 and parameter set section 33 in send diagnostics (input/output command) information packet 30 contain the channel command word and parameter set information from the channel command sequence 20 (FIG. 2) defining the input/output operation to be performed by the mass storage subsystem 13.
      <br/>
      In particular, the channel command word transfer section 32 include a number of channel command word entries 44(l) through 44(N) (generally identified by reference numeral 44(n)), each of which contains a channel command word corresponding to the channel command words 21(n) in the channel command sequence 20 (FIG. 2).
      <br/>
      Each channel command word entry 44(n), in turn, includes a command field 45(n) which contains a channel command word that corresponds to the channel command word in the field 22(n) of the corresponding channel command word entry 21(n) of channel command sequence 20 for the input/output operation.
      <br/>
      The channel command word entry 44(n) also includes a pointer field 50(n) which may contain a pointer value, whose purpose will be described below.
    </p>
    <p num="36">
      The parameter set section 33 in send diagnostics information packet 30 contains a series of parameter data fields 51(l) through 51(M) (generally identified by reference numeral 51(m)), each of which of contains the parameter data associated with a command word from the channel command sequence 20 (FIG. 2) for the channel command words in the entries 44(n).
      <br/>
      Each pointer value which may be contained in the pointer field 50(n) of a channel command word entry 44(n) points to a parameter data field 51(m) which the mass storage subsystem 13 will use in executing the channel command word in the entry 44(n).
      <br/>
      More particularly, each pointer value in parameter offset field 50(n) of the channel command word entries 44(n) represents an offset value to the parameter data field 51(m) to be used in executing the channel command word in the channel command word entry 44(n).
      <br/>
      It will be appreciated that, as with the channel command words in entries 21(n) of channel command sequence 20, if a channel command word in a channel command word entry 44(n) does not require any parameters, no parameter data field 51(m) will be provided for the channel command word entry 44(n), and the pointer field 50(n) may contain, for example, a null value or other value indicating that no parameter data field is provided.) The pointer value in the pointer field 50(n) may be an offset from the beginning of the packet 30, from the beginning of the channel command word transfer section 32, from the channel command word entry 44(n), or from any other convenient base, and may conveniently point to the first parameter value in the entry 51(m).
    </p>
    <p num="37">
      It will be appreciated that, since the header 31 of the send diagnostics (input/output command) information packet 30 is of fixed size, the packet 30 does not require information such as a pointer to identify the beginning of the channel command word transfer section 32.
      <br/>
      Similarly, the send diagnostics (input/output command) information packet 30 does not require a pointer to the beginning of the parameter set section 33 (although one may be provided), since the mass storage subsystem 13 may use the value contained in, for example, the first of the first parameter offset field 51(n) which contains a non-null value (if any such field 51(n) exists in packet 30) to identify the beginning of the parameter set section 33.
    </p>
    <p num="38">
      As noted above, FIG. 4 depicts the information which is transferred by the "open systems" computer system 11 in a bus transaction of the "send diagnostics" type when transferring data to be written during a write operation.
      <br/>
      FIG. 4 depicts the information as a send diagnostics (write data) information packet 60, which will be transferred during such a bus transaction.
      <br/>
      With reference to FIG. 4, a send diagnostics (write data) information packet 60 includes two sections, namely, a header section 61 and a data section 62.
      <br/>
      The header section includes a number of fields and flags 63 through 67 and 70 through 71 which contain the same information as correspondingly-named fields and flags 34 through 37 and 40 through 42 in the send diagnostics (input/output command) information packet 30 (FIG. 3) described above.
      <br/>
      The data section contains the data to be written during the write operation.
      <br/>
      The chain code field 71 contains an input/output operation identifier value that corresponds to an input/output operation identifier value in a previously provided send diagnostic (input/output command) information packet(s) 30, which enables the mass storage subsystem 13 to identify the input/output operation with which the write data is associated.
    </p>
    <p num="39">
      The "open systems" computer system 11 can provide the data to be written for an input/output operation, or for an input/output operation sequence defined by a plurality of send diagnostic (input/output command) information packets 30 having the same input/output operation identifier value in their chain code fields 42 (FIG. 3), in a single send diagnostic (write data) information packet 60 or in a plurality of send diagnostic (write data) information packets 60 which have the same input/output operation identifier values in their chain code fields 71.
      <br/>
      If the "open systems" computer system 11 provides the write data in a plurality of send diagnostic (write data) information packets 60, in one embodiment, the mass storage subsystem 13 will use the write data for the input/output operations in a chained input/output operation sequence in the order in which it receives send diagnostics (write data) message packets 60 which contain the same chain identifier value in their respective chain code fields 71, and the packets 60 need not include sequencing information.
    </p>
    <p num="40">
      FIG. 5 depicts a read diagnostic results information packet 80 provided during a bus transaction of the "read diagnostics results" type to enable the mass storage subsystem 13 to transfer read data or status information to the "open systems" computer system 11.
      <br/>
      With reference to FIG. 5, the read diagnostic results information packet 80 includes a header section 81 and an information section 82.
      <br/>
      The header section 81 of information packet 80 is provided by the "open systems" computer system 11 at the beginning of the bus transaction of the "read diagnostic results" type to indicate whether read data or status information is to be transferred by the mass storage subsystem 13, and if read data is to be transferred to identify the input/output operation for which read data is to be transferred.
      <br/>
      The information section 82 is provided by the mass storage subsystem 13, and includes the read data for the input/output operation (if any) identified in the header section 81, or the status information.
    </p>
    <p num="41">
      Generally, the header section 81 contains transaction protocol information, in particular identifying the bus transaction as being of the "send diagnostics" type, identifying the unit attached to the bus 14 to receive the transaction (in this case the mass storage subsystem 13), and indicating the length of the transaction.
      <br/>
      In addition, the header section 81 includes input/output operation protocol information, including indicating whether the mass storage subsystem 13 is to provide read data or status and to identify the input/output operation for which read data or status is to be provided.
    </p>
    <p num="42">
      More specifically, the header section 81 of the read diagnostic results information packet 80 includes a number of fields and flags, including a bus command field 83, a logical unit field 84, a chain flag 85, a read flag 86, a length field 87, a return code field 90, a chain code field 91.
      <br/>
      The command field 83, logical unit field 84, chain flag 85, read flag 86 and length field 87 together contain protocol information used to transfer the packet 80 to its intended recipient.
      <br/>
      That is, the command field contains a value which identifies the bus transaction during which the read diagnostic results packet 80 is being transferred as a "read diagnostics results" bus transaction.
      <br/>
      The logical unit number field 84 contains a value which identifies the unit connected to bus 14 to engage in the bus transaction with the "open systems" computer system 11, in this case the mass storage subsystem 13.
      <br/>
      Since during the bus transaction the "open systems" computer system 11 is transferring the read diagnostic results information packet 80 to the mass storage subsystem 13, the read flag 86 will be set.
      <br/>
      If the read diagnostic results information packet 80 is one of a series of packets which will be used to enable the transfer of read data for the same chained input/output operation sequence, the chained flag 85 will be set.
      <br/>
      Since the read diagnostic results information packet 80 may be of variable length, the length field 87 identifies the length of the header section 81 of the receive diagnostic results message packet 80.
    </p>
    <p num="43">
      The remaining fields of header section 81, namely, the return code field 90, and chain code field 91 are used by the unit that receives the packet 80, in this case the mass storage subsystem 13, to identify the information, that is, the read data or status information, to be provided in the information section 82.
      <br/>
      The return code field 90 may indicate, for example, whether the mass storage subsystem 13 is to return read data or status information.
      <br/>
      The chain code field 91 contains a chain code identifier that identifies the input/output operation whose read data or status information is to be provided by the mass storage subsystem 13.
      <br/>
      If the return code field 90 indicates that read data is to be returned, the length field 87 may contain a null value, since the mass storage subsystem 13 will return the read data until it has returned all of the data or until the "open systems" computer system 11 terminates the bus transaction.
      <br/>
      On the other hand, if the return code field 90 indicates that status information it to be returned, the length field 87 may contain a value corresponding to the length of the status information to be returned.
    </p>
    <p num="44">
      With this background, the operations performed by the "open systems" computer system 11 and mass storage subsystem 13 will be described in connection with FIGS. 6A-6B and 7.
      <br/>
      FIG. 6A-6B depict operations performed in connection with a write operation, and FIG. 7 depicts operations performed in connection with a read operation, including a read status information operation.
      <br/>
      With reference initially to FIGS. 6A-6B, when, during processing of an application program, the "open systems" computer system 11 is to initiate a write operation with the mass storage subsystem 13, it will generate one or more channel program(s) therefor (step 100) and transfer them to the mass storage subsystem 13 using one or more send diagnostic (input/output command) information packets 30 (steps 101 and 102).
      <br/>
      The operations performed by the "open systems" computer system 11 to generate the channel program are well known in the art and will not be described herein.
      <br/>
      Thereafter, the "open systems" computer system 11 will generate one or more send diagnostic (write data) information packets 60 for transferring the data to be written to the mass storage subsystem 13 (step 103) and transfer them to the mass storage subsystem 13 (steps 104 and 105).
      <br/>
      After receiving the send diagnostic (input/output command) information packet(s) 30 and the send diagnostic (write data) information packet(s) 60, the mass storage subsystem 13 executes the operations called for in the channel program in connection with the write data (step 106).
    </p>
    <p num="45">
      FIG. 7 depicts operations performed in connection with a read operation, including a read status information operation.
      <br/>
      With reference to FIG. 7, when, during processing of an application program the "open systems" computer system 11 is to initiate a read operation with the mass storage subsystem 13, it will generate one or more channel program(s) therefor (step 120) and transfer them to the mass storage subsystem 13 using a corresponding number of send diagnostic (input/output command) information packets 30 (steps 121 and 122).
      <br/>
      The mass storage subsystem 13 will execute the operations called for in the channel program to retrieve the read data or status information in anticipation of later receiving one or more retrieve diagnostics results information packet(s) 80 (step 123).
      <br/>
      When the "open systems" computer system 11 initiates a "read diagnostic results" bus transaction (step 124) to initiate transfer of a read diagnostic results information packet 80, the mass storage subsystem 13 returns the read data or status information called for in the read diagnostic results information packet 80 (step 125).
    </p>
    <p num="46">
      The system 10 constructed in accordance with the invention provides a number of advantages.
      <br/>
      For example, the invention provides an arrangement by which an "open systems" computer system 11 can process programs written for mainframe computer systems, which have been re-compiled for execution by an "open systems" computer system.
      <br/>
      The invention allows the re-compilation process to be simplified, since the same mass storage subsystem can be used for the "open systems" computer system as are used by the mainframe computer system on which the programs were initially processed, which can obviate the necessity of reformatting the data stored on the mass storage subsystem to accommodate the storage architecture of the operating system used with the "open systems" computer system 11.
    </p>
    <p num="47">In addition, if a mainframe computer system 12 is to be used along with the "open systems" computer system 11 in a system 10 as depicted in FIG. 1, the mainframe computer system 12 and "open systems" computer system 11 can readily share the same data stored on the mass storage subsystem, and access the mass storage subsystem using channel programs as described above.</p>
    <p num="48">
      It will be appreciated that numerous modifications may be made to the system 10.
      <br/>
      For example, the system 10 need not include a mainframe computer system 10, and instead the system 10 may include only an "open systems" computer system connected to mass storage subsystem 13.
      <br/>
      In addition, the system 10 may include a number of computer systems, including either or both "open systems" computer systems and mainframe computer systems, connected to mass storage subsystem 13, and the system 10 may in addition include a number of mass storage subsystems 13.
      <br/>
      In addition, although the "open systems" computer system 11 has been described as, for example, a computer system such as a personal computer, computer workstation or the like which processes application programs in connection with an "open" operating system such as Unix, MS-DOS and/or Windows operating systems, the "open systems" computer system 11 may generally include a variety of computer systems and operating systems which typically do not communicate with a mass storage subsystem in the manner described above in connection with mainframe computer system 12 to effectuate processing of a channel program.
    </p>
    <p num="49">
      Furthermore, while the "open systems" computer system 11 has been described as providing send diagnostic (input/output command) input/output packets 30 such that each packet 30 includes all of the information (that is, the channel command words 21(n) and associated parameter data fields 26(m) related to a channel command sequence 20) for an entire channel program, it will be appreciated that packets 30 may instead each provide a subset of the information defining the input/output operation.
      <br/>
      If a packet 30 provides a subset of the information defining an input/output operation, a series of send diagnostics (input/output command) packets 30 may be used to provide all of the information defining the channel program.
      <br/>
      In that case, all of the packets 30 in the series may have the same value in their chain code fields 42.
      <br/>
      In addition, each packet 30 may preferably include one or more channel command words and associated parameter data values.
    </p>
    <p num="50">
      In addition, while the "open systems" computer system 11 has, in connection with a chained write input/output operation, been described as generating and transferring all of the send diagnostic (input/output command) information packets 30 prior to generating and transferring the send diagnostic (write data) information packets 60 for the operation, it will be appreciated that the system 11 can interleave the send diagnostic (input/output command) information packets 30 and send diagnostic (write data) information packets 60.
      <br/>
      In addition, while the mass storage subsystem 13 has been described as receiving all of the send diagnostics (input/output command) information packet(s) 30 and (if the input/output operation is a write operation) the send diagnostics (write data) information packet(s) 60 relating to a chained input/output operation before it begins the input/output operation, it will be appreciated that the mass storage subsystem may schedule execution using any convenient scheduling methodology.
    </p>
    <p num="51">
      Furthermore, while the invention has been described in connection with a SCSI bus interconnecting the "open systems" computer system 11 and mass storage subsystem 13, and the use of bus transactions of the "send diagnostics" and "read diagnostic results" types for transferring information between the "open systems" computer system 11 and mass storage subsystem 13, it will be appreciated that numerous other types of communication links and information transfer mechanisms may be used to facilitate information transfer therebetween.
      <br/>
      By way of example, and not limitation, it will be appreciated that, if the "open systems" computer system 11 and mass storage subsystem 13 are interconnected by a bus, a variety of types of fixed- and variable-length bus transactions may be used to transfer information similar to that described above in connection with packets 30 (in particular, information similar to that described above as being transferred in fields 32 and 33, FIG. 3), 60 (in particular, information similar to that described above as being transferred in field 62, FIG. 4) and 80 (in particular, information similar to that described above as being transferred in field 82, FIG. 5) between the "open systems" computer system 11 and mass storage subsystem 13 as described above.
      <br/>
      In addition, if the "open systems" computer system 11 and mass storage subsystem 13 are interconnected by a network, a variety of types of fixed- and variable-length messages may be used to transfer similar types of information between the "open systems" computer system 11 and the mass storage subsystem 13.
    </p>
    <p num="52">
      In addition, although the invention has been described in connection with channel programs having structures such as depicted in FIG. 2 and illustratively described in the aforementioned "IBM 3990 Storage Control Reference (Models 1, 2 and 3)" (7th Edition, October, 1994) (Document No. GA32-0099-06), the invention may be used in connection with channel programs having a variety of diverse structures.
      <br/>
      The foregoing description has been limited to a specific embodiment of this invention.
      <br/>
      It will be apparent, however, that various variations and modifications may be made to the invention, with the attainment of some or all of the advantages of the invention.
      <br/>
      It is the object of the appended claims to cover these and such other variations and modifications as come within the true spirit and scope of the invention.
    </p>
    <p num="53">Furthermore, it will be appreciated that systems constructed in accordance with the invention can be constructed in whole or in part from special purpose hardware or one or more program-controllable devices which any portion of which may be controlled by a suitable program.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed as new and desired to be secured by Letters Patent of the United States is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A storage system controller comprising:</claim-text>
      <claim-text>an interface receiving commands; a command interpreter coupled to said interface for parsing said commands to determine if said commands are from a first command set or an ESCON channel command set embedded within a command of the first set; a command processor coupled to said command interpreter for processing said commands, said command processor responsive to said first set of commands for performing a first set of operations to read or write data of a first data type, said command processor further responsive to said ESCON channel commands for performing a second set of operations to read or write data of a Count Data Key (CKD) data type.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A storage system controller comprising: an interface receiving commands; a command interpreter coupled to said interface for parsing said commands to determine if said commands are from a first command set or a second command set; a command processor coupled to said command interpreter for processing said commands, said command processor responsive to said first set of commands for performing a first set of operations to read or write data of a first data type, said command processor further responsive to said second set of commands for performing a second set of operations to read or write data of a second data type wherein said commands of said second command set are received as data embedded in a command of said first command set and wherein said command interpreter extracts said embedded data and provides said commands from said second command set to said command processor.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The storage controller according to claim 2 wherein said data is Channel Command Word commands and wherein said command of a first command set is a Small Computer System Interface command.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The storage controller according to claim 2 wherein said data of a first data type is data stored according to a first data formatting architecture and wherein said data of a second data type is data stored according to a second different formatting architecture.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The storage controller according to claim 4 wherein said first data formatting architecture is a Count Key Data format and said second data formatting architecture is a Fixed Block Architecture format.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The storage controller according to claim 5 wherein said first set of commands is a Small Computer System Interface command set.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The storage controller according to claim 5 wherein said second command set is a Channel Command Word command set.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The storage controller of claim 7 wherein said interface receives said commands from an open systems type computer.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A storage system comprising: an interface for providing a communications channel between a host computer and said storage system; a controller coupled to said interface, said controller further comprising</claim-text>
      <claim-text>- a command interpreter coupled to said interface for parsing said commands received from said host computer to determine if said commands are from a first command set or a second command set; - a command processor coupled to said command interpreter for processing said commands from said host computer, said command processor responsive to said first set of commands for performing a first set of operations to read and write data of a first data type, said command processor further responsive to said second set of commands for performing a second set of operations to read and write data of a second data type;</claim-text>
      <claim-text>wherein - said commands of said second command set are received embedded in a command of said first command set and wherein said interpreter extracts said embedded commands and provides said commands from said second command set to said command processor, and a plurality of storage devices for storing said data of said first or second data type and providing said data of said first or second data type to said host computer via said controller.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A computer system comprising: a storage system for storing data of a first data format and a second data format; an open systems computer, said open systems computer enabled to transmit a first set of commands for performing a first set of operations according to a first communications protocol, said open systems computer further enabled to transmit a second set of commands for performing a second set of operations according to a second communications protocol a controller within said storage system responsive to receipt of a first command from said first set of commands, received from said open systems computer, for performing said first set of operations to write said data of a first data format and read and return said data of a first data format to the open systems computer, said controller further responsive to receipt of a second command from said first set of commands having a command from said second command set embedded therein, received from said open systems computer, for performing said second set of operations to write said data of a second data format and to read and return said data of a second data format to said open systems computer.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. A computer system comprising: a storage system; a computer coupled to said storage system via a bus requiring communications occurring over said bus to adhere to a first communications protocol; a controller within said storage system for receiving commands transmitted over said bus and for executing said commands to access data stored according to a first data format; said computer enabled to send commands of a second communications protocol over said bus to said controller embedded within a command of a first communications protocol; said controller responsive to receipt of said commands of a second communications protocol embedded for executing said commands of said second communications protocol in order to access data stored according to a second data format and to write data to said storage system according to said second data format.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The computer system of claim 11 wherein said first communications protocol requires communicating over said bus using commands defined by the Small Computer System Interface standard.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The computer system of claim 12 wherein said second communications protocol requires communication using commands other than said commands defined by the Small Computer System Interface standard.</claim-text>
    </claim>
  </claims>
</questel-patent-document>