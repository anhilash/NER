<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181983B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181983</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181983</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="26037610" extended-family-id="13398907">
      <document-id>
        <country>US</country>
        <doc-number>09100014</doc-number>
        <kind>A</kind>
        <date>19980619</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09100014</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>13682843</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>DE</country>
        <doc-number>19726166</doc-number>
        <kind>A</kind>
        <date>19970620</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997DE-1026166</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>DE</country>
        <doc-number>19800552</doc-number>
        <kind>A</kind>
        <date>19980111</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998DE-1000552</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>B25J   9/16        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>9</main-group>
        <subgroup>16</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>B25J   9/18        20060101A I20060521RMFR</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>9</main-group>
        <subgroup>18</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>FR</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20060521</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>700245000</text>
        <class>700</class>
        <subclass>245000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>318568110</text>
        <class>318</class>
        <subclass>568110</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>318568120</text>
        <class>318</class>
        <subclass>568120</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>318628000</text>
        <class>318</class>
        <subclass>628000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>318646000</text>
        <class>318</class>
        <subclass>646000</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>318648000</text>
        <class>318</class>
        <subclass>648000</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>700244000</text>
        <class>700</class>
        <subclass>244000</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>700246000</text>
        <class>700</class>
        <subclass>246000</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>700247000</text>
        <class>700</class>
        <subclass>247000</subclass>
      </further-classification>
      <further-classification sequence="9">
        <text>700248000</text>
        <class>700</class>
        <subclass>248000</subclass>
      </further-classification>
      <further-classification sequence="10">
        <text>700250000</text>
        <class>700</class>
        <subclass>250000</subclass>
      </further-classification>
      <further-classification sequence="11">
        <text>700251000</text>
        <class>700</class>
        <subclass>251000</subclass>
      </further-classification>
      <further-classification sequence="12">
        <text>700261000</text>
        <class>700</class>
        <subclass>261000</subclass>
      </further-classification>
      <further-classification sequence="13">
        <text>700262000</text>
        <class>700</class>
        <subclass>262000</subclass>
      </further-classification>
      <further-classification sequence="14">
        <text>700263000</text>
        <class>700</class>
        <subclass>263000</subclass>
      </further-classification>
      <further-classification sequence="15">
        <text>708442000</text>
        <class>708</class>
        <subclass>442000</subclass>
      </further-classification>
      <further-classification sequence="16">
        <text>708625000</text>
        <class>708</class>
        <subclass>625000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>B25J-009/16C2</text>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>009</main-group>
        <subgroup>16C2</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>B25J-009/16T4</text>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>009</main-group>
        <subgroup>16T4</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>B25J-009/1607</classification-symbol>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>9</main-group>
        <subgroup>1607</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>B25J-009/1689</classification-symbol>
        <section>B</section>
        <class>25</class>
        <subclass>J</subclass>
        <main-group>9</main-group>
        <subgroup>1689</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/39358</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>39358</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/39361</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>39361</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/39439</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>39439</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>G05B-2219/40454</classification-symbol>
        <section>G</section>
        <class>05</class>
        <subclass>B</subclass>
        <main-group>2219</main-group>
        <subgroup>40454</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/39358</classification-symbol>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/39361</classification-symbol>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/39439</classification-symbol>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>S05B-219/40454</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>16</number-of-claims>
    <exemplary-claim>15</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>2</number-of-drawing-sheets>
      <number-of-figures>3</number-of-figures>
      <image-key data-format="questel">US6181983</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method of command control for a robot manipulator</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>SUGIMOTO KOICHI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4593366</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4593366</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>SERAJI HOMAYOUN</text>
          <document-id>
            <country>US</country>
            <doc-number>4999553</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4999553</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>RASTEGAR JAHANGIR S, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5179514</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5179514</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>BROWN KEVIN L</text>
          <document-id>
            <country>US</country>
            <doc-number>5214749</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5214749</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>FISHER WILLIAM D, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5276390</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5276390</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>GRUDIC GREGORY Z, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5293461</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5293461</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>SERAJI HOMAYOUN</text>
          <document-id>
            <country>US</country>
            <doc-number>5430643</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5430643</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>SERAJI HOMAYOUN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5737500</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5737500</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="9">
          <text>HEINDL JOHANN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4589810</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4589810</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="10">
          <text>HITACHI LTD</text>
          <document-id>
            <country>DE</country>
            <doc-number>3344633</doc-number>
            <kind>A1</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>DE3344633</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Deutsches Zentrum f{umlaut over (u)}r Luft-und Raumfahrt e.v.</orgname>
            <address>
              <address-1>Bonn, DE</address-1>
              <city>Bonn</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>DEUTSCHES ZENTRUM F UMLAUT OVER R LUFT &amp; RAUMFAHRT E V</orgname>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Schlemmer, Maximilian</name>
            <address>
              <address-1>Seeshaupt, DE</address-1>
              <city>Seeshaupt</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Schedl, Manfred</name>
            <address>
              <address-1>Pfaffenhofen, DE</address-1>
              <city>Pfaffenhofen</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Steinmetz, Michael</name>
            <address>
              <address-1>Wessling, DE</address-1>
              <city>Wessling</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Gr{umlaut over (u)}bel, Georg</name>
            <address>
              <address-1>Weilheim, DE</address-1>
              <city>Weilheim</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="5">
          <addressbook lang="en">
            <name>Finsterwalder, Reinhard</name>
            <address>
              <address-1>Pucheim, DE</address-1>
              <city>Pucheim</city>
              <country>DE</country>
            </address>
          </addressbook>
          <nationality>
            <country>DE</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Browdy And Neimark</orgname>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Sheikh, Ayaz R.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Beginning with a successive commanded end-effector destination shift, the method of the invention, which includes a calculation corresponding to a special algorithm of inverse kinematics using the Jacobi Matrix in the control of a manipulator, effects an optimization of weighted criteria (energy criteria, acceleration criteria and reference-position criteria) in a real-time cycle while reliably maintaining all path limitations and resulting in an optimized acceleration behavior.
      <br/>
      The method of the invention can be used in interactive path guidance of a manipulator and/or as a modular component of a superordinate task, such as for force-control objectives.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>FIELD OF THE INVENTION</heading>
    <p num="1">The present invention relates to a method of command control for a manipulator, based on end-effector destination shifts ( DELTA xd) commanded by a programmer or a superordinate task with the aid of a manual control ball or the like, in combination with a calculation of articulation position values according to an algorithm of inverse kinematics.</p>
    <heading>REVIEW OF THE RELATED TECHNOLOGY</heading>
    <p num="2">Methods of command control of a manipulator based on end-effector destination shifts, in combination with a calculation according to an algorithm of inverse kinematics using the Jacobi Matrix, are known from Siciliano, B., Sciavicco, L.: "Modeling and Control of Robot Manipulators," McGraw-Hill Companies (1996), pp 95 to 101, and from Vukobratovic, M., Kircanski, N.: "Kinematics and Trajectory Synthesis of Manipulation Robots," Springer-Verlag, Tokyo, 1986, pp 105 to 122.</p>
    <p num="3">
      In this context, a method of inverse kinematics is obtained for kinematically non-redundant manipulators, albeit in a partial space of the working area that contains non-singular positions.
      <br/>
      Since singular configurations, i.e., articulator positions in which the Jacobi Matrix experiences a reduction in priority, do occur in practice, this method has only limited application, because the operation being performed with the manipulator (interactive path guidance, force control) must be aborted or delayed when a singular configuration (singularity) is approached.
    </p>
    <p num="4">
      In this context, a method is known that includes a calculation of a generalized inverse of the Jacobi Matrix.
      <br/>
      This method possesses a few advantageous properties, but is also associated with a number of disadvantages.
      <br/>
      For example, a smoothness of the calculated articulation path and low wear of the robot drive are attained through minimization of the local articulation position offset  DELTA q (local energy criteria).
      <br/>
      In addition, the spacing between the articulation positions and the physical articulation stops is taken into consideration through the optimization of global criteria in the zero space of the Jacobi Matrix.
      <br/>
      Disadvantages of this method are that it cannot guarantee that path limitations will be maintained with physical articulation stops, and unstable behavior occurs in singular robot positions due to a (generalized) inversion of the Jacobi Matrix, and inefficient robot path courses are possible when conflicting local and global criteria exist.
    </p>
    <p num="5">
      In another known method, in which a calculation of the transposed Jacobi Matrix is performed, the commanded end-effector destination is attained iteratively corresponding to a representation of reverse kinematics as an optimization problem.
      <br/>
      An advantageous feature of this method is a stable behavior in singular robot positions, because the Jacobi Matrix is not inverted.
    </p>
    <p num="6">
      However, there is no guarantee that path limitations can be maintained through physical articulation stops and maximum articulation speeds.
      <br/>
      Superordinate heuristics must be constructed to meet these requirements, which then results in errors in the real end effector position compared to the desired end effector position.
      <br/>
      Inefficient path courses result in the form of interference movements of the end effectors, because the Cartesian linear movement commanded by the manual control ball cannot be transferred exactly to the end effector of the manipulator.
    </p>
    <p num="7">
      Moreover, the robot drive is subjected to high material wear due to abrupt passage through singular robot positions and because of a generally insufficiently smooth articulation path, since neither the weighted local articulation position offset nor the local articulation speed offset (local energy and acceleration criteria) have been optimized.
      <br/>
      A further negative consequence is a low convergence speed, i.e., a reduced ability to operate in real time, because no practical optimum strategy is known for determining the positively-defined Cartesian stiffness matrix.
    </p>
    <p num="8">
      DE 33 44 633 C2 describes a real-time control in which the redundant articulations that are not necessary for the movement of an end effector are noted for calculating the articulation speed, which simplifies the calculation of the inverse Jacobi Matrix.
      <br/>
      This type of calculation is performed for at least one of the articulation combinations.
      <br/>
      The speeds for each articulation are then determined through averaging of the calculated articulation speeds.
      <br/>
      A weighting of the articulation speeds thus takes place in this prior art.
    </p>
    <p num="9">
      U.S. Pat. No. 5,430,643 also describes a real-time method, in which the inverse Jacobi Matrix is calculated.
      <br/>
      The method known from this U.S. patent document also takes into consideration weight values for the articulation speeds, as well as path limitations for at least a graphic simulation of the robot's movements.
    </p>
    <p num="10">
      The German patent application 197 03 915.4 and U.S. application Ser.
      <br/>
      No. 08/017,485 propose a method in which an interactive path guidance of a kinematically redundant manipulator can be performed efficiently, with the advantage of an accordingly less complex and thus more user-friendly parametrization.
      <br/>
      The only disadvantage of this method is that it is not suitable for force control purposes since no uniform measurement exists to indicate which percentage of the desired end-effector destination shift can be attained; also, the method places a lower priority on attaining the best possible end-effector destination shift.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="11">It is an object of the invention to provide a method of inverse kinematics command control for an interactive path guidance, and/or as a modular component of a superordinate task (e.g., force control) of a manipulator with an optimized acceleration behavior, with which path limitations can be reliably maintained through physical articulation stops and maximum allowable articulation speeds to ensure the accuracy of the determined solution with respect to the allowable path limitations, and with which the stress on the manipulator drive device is kept to a minimum by optimizing the acceleration behavior of the articulation axes.</p>
    <p num="12">In accordance with the invention, which relates to a method of command control for a manipulator of the above type, this object is accomplished in that</p>
    <p num="13">
      a new articulation position (qi+1) of the manipulator is calculated, beginning with a commanded end-effector destination shift and the current actual value (qi) of the articulation position of the manipulator,
      <br/>
      with consideration of a quality function (f(q) ) to be minimized, which is parametrized by non-negative weighting values (a ALPHA j,  BETA j,  GAMMA j),
      <br/>
      and with consideration of path limitations through physical articulation stops (qmin, qmax), maximum articulation speed (qmax), maximum articulation acceleration (qmax) in an environment of physical articulation stops, and the kinematic equation, which is represented by the Jacobi Matrix (J (q)), which articulation position predetermines the new values for the articulation regulators, with the quality function (f(q)) being the sum of energy criterion, reference-position criterion, acceleration criterion and an additional criterion,
      <br/>
      the energy criterion being calculated from
      <br/>
      (q-qi)t diag(aj)(q-qi)
      <br/>
      the reference-position criterion being calculated from
      <br/>
      (q-qref)t diag( BETA j j)(q-qref),
    </p>
    <p num="14">
      the value qref being a predetermined articulation position value that is determined such that the sequence of calculated articulation position values (qi) runs near this reference position value;
      <br/>
      the acceleration criterion being calculated from
      <br/>
      (q-2qi-1)t diag( GAMMA j)(q-2qi +qi-1),
    </p>
    <p num="15">
      and
      <br/>
      the additional criterion from -p, with the scalar parameterp satisfying the kinematic equation p *  DELTA xd =J(qi (q-qi) and the inequality 0 &lt;= p &lt;= 1; p * 100 being the attained percentage of the commanded end-effector destination shift ( DELTA xd),
      <br/>
      beginning with an articulation-position value qi as the starting point, an allowable optimization vector is determined on the basis of the quality function with respect to all active secondary conditions that indicate which path limitations have been attained, and this vector is scaled according to the inactive secondary conditions that indicate which path limitations have not been attained;
      <br/>
      the scaled optimization vector is added to the articulation position value calculated in the previous iteration step;
      <br/>
      and the optimum quality of these articulation-position values is evaluated based on the quality function and the secondary conditions activated in the newly-calculated articulation position.
    </p>
    <p num="16">The method according to the invention may be used in the interactive path guidance of the manipulator based on end-effector destination shifts commanded by an operator with the aid of a manual control ball (space mouse) or the like.</p>
    <p num="17">
      The method according to the invention may, however, also be used as a modular component of a superordinate task, with end-effector destination shifts commanded by the superordinate task.
      <br/>
      A superordinate task may, for instance, be one of the type posed by force-control objectives.
    </p>
    <p num="18">The method of the invention results in low wear of the manipulator drive through minimization of the local articulation-position offset  DELTA q and the local articulation-speed offset (energy criteria and acceleration criteria). "Narrow" articulation paths around a reference position (e.g., zero position) are attained, resulting in a reversible behavior of the manipulator movement.</p>
    <p num="19">This specifically serves to prevent the manipulator roller axes from twisting increasingly during the performance of the commanded manipulation until they come to rest against the end stop, rendering a continued performance of the manipulation task impossible.</p>
    <p num="20">
      Articulation stops are advantageously mostly avoided or approached gently or with low wear.
      <br/>
      This behavior is caused by a delay effect of the robot axes, which acts proportionally to the distance from the reference position, and by explicit acceleration limitations.
      <br/>
      In addition, a stable behavior results for singular robot positions, because the Jacobi Matrix is not inverted.
    </p>
    <p num="21">
      Another advantage is the occurrence of efficient path courses through the exact transfer of the Cartesian linear movement commanded by the manual control ball to the end effector of the manipulator.
      <br/>
      In addition, path limitations are reliably maintained through physical articulation stops and maximum articulation speeds.
    </p>
    <p num="22">
      Since this results in a restriction of the number of solutions, i.e., in a limited number of allowable articulation positions, a high convergence speed is attained with a gain in real-time operability.
      <br/>
      In addition, the attained percentage of the desired end-effector destination shift is calculated.
      <br/>
      Singularities can be approached in a stable manner and/or passed through; as a result it also is not necessary to limit the working space.
    </p>
    <p num="23">
      A Cartesian end-effector destination shift  DELTA c, commanded at a time Ti can be commanded by the operator and/or by a superordinate task (e.g., force control) in the form of a 6-dimensional increment vector.
      <br/>
      Alternately, the increment vector may also be determined by evaluating the difference between absolute end-effector coordinates.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWING FIGURES</heading>
    <p num="24">
      In the appended drawings:
      <br/>
      FIG. 1 is a schematicized illustration of an input/output flux of reverse kinematics in the real time grid;
      <br/>
      FIG. 2 shows, in the form of a block diagram, an algorithm of inverse kinematics used in the method of command control of a manipulator according to the invention, and
      <br/>
      FIG. 3 shows the application of the method of the invention for the command control of a manipulator within the frame of the performance of a superordinate task, such as a force control.
    </p>
    <heading>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
    <p num="25">
      The present invention is a method for transforming the input commands to a robot (or "manipulator"), preferably via Jacobian matrix methods.
      <br/>
      The invention also contemplates an apparatus for transforming the input commands, which may be interposed between an actuator and the robot.
      <br/>
      The actuator may any sort, e.g. a mouse or joystick, a recorder with a recorded sequence of commands to be output to the calculating unit, a second programmed computer, and so on.
    </p>
    <p num="26">
      The apparatus, which acts as a calculating unit, in most cases will be a microprocessor, computer, etc., but may be an analogue computer or other device which can carry out the method of the invention.
      <br/>
      The present invention also includes a combination of actuator, calculating unit, and robot.
    </p>
    <p num="27">
      FIG. 1 is a time graph showing the notation used for the inputs and outputs to the calculating unit of the present invention.
      <br/>
      The horizontal axis represents time.
      <br/>
      Calculation inputs are generically denoted x and results or outputs corresponding to robotic position are generically denoted q, with superscripts showing the corresponding instant of time.
      <br/>
      FIG. 1 shows that the calculations are preferably not continuous but incremental.
      <br/>
      The method calculates over the time interval a next qi+1 from the preceding qi.
    </p>
    <p num="28">
      A robot's manipulator will ordinarily have six degrees of freedom in space (three of translation and three of rotation).
      <br/>
      According to the particular geometry of the robot's limbs, rotators, etc., there will be several different sets of actuators and sensors associated with respective dimensions.
      <br/>
      The notation of FIG. 1 represents only one of several dimension, i.e. angles or directions, in which the manipulator can move.
    </p>
    <p num="29">
      It is to be noted that motion in any one of the six directions is likely to cause motion in at least one of the others, and these motions are interrelated according to the geometry of the robot.
      <br/>
      For example, an angular changes at a "elbow" will cause a "hand" to translate through an arc.
      <br/>
      If the input device or instruction set has a different geometry from the robot--for example, the input device has three levers for three directions in space but the robot has a single extendable arm--then the end-effect destination shift commands will need to be converted into manipulator articulation positions by the use of matrix methods.
      <br/>
      Thus matrix methods must be used in the present equation.
    </p>
    <p num="30">
      FIG. 2 is a flowchart schematically illustrating the method of the invention.
      <br/>
      Aside from the input from the actuator, i.e.  DELTA xd, the calculation process also takes into account parameters shown in the box at left.
    </p>
    <p num="31">One of these parameters is a limit on the input,  DELTA xmax, which cuts off large commands, i.e. in case of a sudden joystick lurch or the like.</p>
    <p num="32">
      Other parameters limit the motion of the robot: displacement or angle limits are denoted by qmin and qmax, and maximum robot change rates and acceleration qmax and qmax.
      <br/>
      In FIG. 3 these are shown as "Path limitations".
    </p>
    <p num="33">
      Still other parameters  ALPHA ,  BETA , and  GAMMA  are described as "algorithm parameter weightings" in FIG. 3.
      <br/>
      These weighting values are preferably non-negative, and are used to minimize a "quality function" f(q).
      <br/>
      The quality function incorporates criteria based on energy, reference position, acceleration, and a scalar parameter p.
    </p>
    <p num="34">In the method according to the invention, a commanded end-effector destination shift  DELTA xc : =( DELTA xt,  DELTA xr) is specified with the use of the Jacobi Matrix of kinematics at a time Ti, said end-effector destination shift being commanded by the operator with the aid of a space mouse or control ball in the form of a 6-dimensional increment vector.  DELTA xt  EPSILON +character pullout} 3 or  DELTA xr  EPSILON +character pullout} 3 always denote the translational or rotational portion of the commanded end-effector destination shift, whereas  DELTA xtmax or  DELTA xrmax, respectively, each define the maximum (scalar-value) translational or rotational Cartesian position offset of the end effector per sampling time  DELTA T.</p>
    <p num="35">The desired Cartesian translational or rotational end-effector destination shift  DELTA xtd or  DELTA xrd per sampling time  DELTA T is defined as follows:  (Equation image '1' not included in text)</p>
    <p num="36">The value .vertline.x.vertline. of a vector x is determined here and hereinafter by its Euclidian norm  (Equation image '2' not included in text)</p>
    <p num="37">
      The desired end-effector destination shift is explained by  DELTA xd : =( DELTA xtd,  DELTA xrd).
      <br/>
      The energy criteria, reference-position criteria and acceleration criteria can be suitably weighted according to the prevalent problem-specific requirements by allocating three positive numerical values  ALPHA j,  BETA j,  GAMMA j to each axis j, which are predetermined by the operator, the value  ALPHA j serving in the weighting of an energy criterion that evaluates the difference between two adjacent, calculated articulation positions of axis j; and the value  BETA j serving in the weighting of a criterion that evaluates the deflection of the articulation position qj from a reference value qref,j, which is also predetermined by the operator, and the value  GAMMA j serving in the weighting of a criterion which evaluates the acceleration behavior in the form of an articulation speed offset of the articulation axis qj.
      <br/>
      The articulation speed offset of the articulation axis qj is predetermined by the operator, just like the physical articulation stops qmin, qmax of the manipulator, which relate to path limitations, and the articulation speed limitations qmax and the articulation acceleration limitations qmax.
      <br/>
      Since the method according to the invention is intended to optimize weighted criteria in the real-time cycle while guaranteeing that all path limitations are maintained, an allowable optimum articulation position offset  DELTA qi is calculated for a desired end-effector destination shift  DELTA xdi at the time Ti-1 during the time interval  DELTA T, with the algorithm of inverse kinematics that progresses during an initialization phase and a subsequent optimization phase.
      <br/>
      The current desired value is provided to the articulation regulators from qsolli+1 :=qsolli + DELTA qi, with the articulation positions being shifted accordingly by the articulation regulators with qsolli during the time period  DELTA T. Allowable articulation position offset is understood to mean that the articulation position value that has been updated with  DELTA q satisfies the physical articulation stops qmin, qmax corresponding to qmin &lt;= qsoll + DELTA qmax, and  DELTA q satisfies the articulation speed limitations qmax corresponding to .vertline.
      <br/>
      DELTA qi.vertline. &lt;= qmax DELTA T. As a result, the limitations of the articulation accelerations are maintained reliably during the approach of articulation positions to the physical articulation stops.
      <br/>
      The type of optimum quality of  DELTA qi can be determined by the operator through the quality-criterion weighting  ALPHA ,  BETA ,  GAMMA .
      <br/>
      As a result, the sampling time  DELTA T corresponding to  DELTA T &gt;= max ( DELTA tq,  DELTA tr) is dimensioned such that the computation time  DELTA tq for calculating an optimum allowable articulation position offset  DELTA q and the adjustment time  DELTA tr, which the regulators require for adapting the axial positions to the desired values qsoll, lie within the time span  DELTA T.
    </p>
    <p num="38">An algorithmic description of the method of the invention follows.</p>
    <p num="39">Ji, i=1, . . . , ndof denote the columns of the Jacobi Matrix of kinematics in the point qi of the current articulation position of the manipulator, ndof denotes the number of articulations and  EPSILON i :=qmaxi DELTA T denotes the maximum allowed articulation position offset per sampling time  DELTA T. With  (Equation image '3' not included in text)</p>
    <p num="40">
      and J EPSILON  :=(J1 EPSILON 1, J2 EPSILON 2, . . . , Jndof EPSILON ndof), the incremental kinematic equation is as follows:
      <br/>
      p DELTA xd =J EPSILON  y.  (1)
    </p>
    <p num="41">Because of the path limitations, the following box limitations result for y:  (Equation image '4' not included in text)</p>
    <p num="42">Further define:  (Equation image '5' not included in text)</p>
    <p num="43">with  DELTA qi denoting the recently calculated increment of the i-th articulation axis.</p>
    <p num="44">
      So that all path limitations can be met, according to the kinematic equation (1), the desired end-effector destination shift is subjected to a centric extension described in the form of a scalar:
      <br/>
      0 &lt;= p &lt;= 1.
    </p>
    <p num="45">The value p is maximized with the method of the invention such that all path limitations are maintained, with p * 100 being the attained percentage of the desired end-effector destination shift.</p>
    <p num="46">Define the limitation vector b:=0, 0, 0, 0, 0, 0, ymin, 0,-ymax, -1)  EPSILON +character pullout} 2n+6, the parameter vector x: =(y,p) to be determined and the matrix of the gradients of all secondary conditions A  EPSILON +character pullout} 2n+6,n with n: =ndof+1:  (Equation image '6' not included in text)</p>
    <p num="47">
      Here In  EPSILON +character pullout} n,n indicates the unit matrix.
      <br/>
      Furthermore,  ALPHA i, i=1, . . . , 2n+6 indicate the lines of A.
    </p>
    <p num="48">
      The weights  ALPHA ,  BETA ,  GAMMA  of the criteria define the Cholesky factor of the Hesse matrix from the scaled sum of the criteria in the form of the diagonal matrix  LAMBDA  EPSILON +character pullout} n,n.
      <br/>
      These criteria are the energy criterion (q-qi)t diag( ALPHA j) (q-qi), the reference-position criterion (q-qref)t diag ( BETA j) (q-qref), with the value qref being a predetermined articulation position value which is determined such that the sequence of the calculated articulation position values (qi) runs near this reference position value; the acceleration criterion (q-2qi +qi-1)t diag( GAMMA j) (q-2qi +qi-1) and the additional criterion from -p, whereby the scalar parameter p satisfies the kinematic equation p DELTA xd =J(qi)(q-qi) and the inequality 0 &lt;= p &lt;= 1; p * 100 being the attained percentage of the commanded end-effector destination shift ( DELTA xd).
      <br/>
      The main diagonal elements of the above-mentioned diagonal matrix are:  (Equation image '7' not included in text)
    </p>
    <p num="49">The base structure of the special method according to the invention, which utilizes an inverse kinematics for command control, is illustrated schematically in FIG. 2</p>
    <p num="50">
      An algorithm used in the method of the invention for the inverse kinematics is described in more detail below, in conjunction with FIG. 2.
      <br/>
      In the used algorithm of inverse kinematics, first an initialization phase is performed, which is configured as follows: Counting index: k=0; Starting value xk =(yk, pk)=0; k max&gt;2; Initialize with mk : =7 the matrix of the gradients of the active secondary conditions At  EPSILON +character pullout} mk, n :  (Equation image '8' not included in text)
    </p>
    <p num="51">initialize the index quantity Jk : =(jk1, jk2, . . . , jk2n+6) to characterize the active, singular and inactive secondary conditions:  (Equation image '9' not included in text)</p>
    <p num="52">
      initialize the orthogonal triangular factorization of +circumflex over (A)}:
      <br/>
      (rk, Jk, Yk, Zk, Lk, Sk):= PHI 0A (A,mk, Jk);
    </p>
    <p num="53">
      initialize the orthogonal regular triangular factorization of Z:= LAMBDA Zk :
      <br/>
      (Qkz,Rkz):= PHI 0z (Zrk):
    </p>
    <p num="54">initialize the gradient vector of the quality function f(q)  (Equation image '10' not included in text)</p>
    <p num="55">
      The following abbreviated form is used for gk :
      <br/>
      2( BETA iscal (yki -yrefi)+ GAMMA iscal (yki -yacci)+ ALPHA iscal yki -1),
    </p>
    <p num="56">In the used algorithm of inverse kinematics, an optimization phase is next, which is constructed as follows:</p>
    <p num="57">
      Calculate the direction of optimization dk :
      <br/>
      Rkz daux =-Qkz Zk gk.
    </p>
    <p num="58">From this, determine daux through reverse substitution.</p>
    <p num="59">Rkz dz =Qkz daux.</p>
    <p num="60">
      From this, determine dz through reverse substitution.
      <br/>
      Define the direction of optimization:
      <br/>
      dk :=Zk dz.
    </p>
    <p num="61">Determine the maximum step width sk and the index jki0 of the limiting secondary condition:  (Equation image '11' not included in text)</p>
    <p num="62">(In the event of ambiguity, select the j0 having the smallest index i0).</p>
    <p num="63">III. Check for optimum quality and update all matrix and index values.</p>
    <p num="64">(a) If sk &lt;1 (secondary condition jk0 has become active):</p>
    <p num="65">
      i.
      <br/>
      If mk &lt;n (there are still inactive secondary conditions):
      <br/>
      xk+1 =xk +sk dk, xk+1 =(Yk+1, Pk+1); gk+1 =2( BETA iscal (yk+1i -yrefi)+ GAMMA iscal (yk+1i -yacci)+ ALPHA iscal yk+1i -1).
    </p>
    <p num="66">Update matrix factorization and index quantity: (rk+1, mk+1, Jk+1, Yk+1, Zk+1, Lk+1, Sk+1):= PHI +A (i0, rk, mk, Jk, Yk, Zk, Lk, Sk).</p>
    <p num="67">Check xk+1, for optimum quality:</p>
    <p num="68">If Zk+1t gk+1 =0 and  LAMBDA k+1 =LLS(rk+1, mk+1, gk+1, Yk+1, Lk+1) &gt;= 0 then: go to step IV.</p>
    <p num="69">Otherwise: k=k+1 (increase iteration index)</p>
    <p num="70">If k&gt;k max: go to step IV.</p>
    <p num="71">
      Otherwise: Determine the orthogonal, regular triangular factorization of
      <br/>
      Z:= LAMBDA Zk+1 :
      <br/>
      (Qk+1z,Rk+1z):= PHI z (Z,rk+1)
    </p>
    <p num="72">Go to Step I.</p>
    <p num="73">
      ii. If mk =n (corner of allowable range is attained, exchange of active secondary conditions is necessary):  (Equation image '12' not included in text)
      <br/>
      Release a direction having the highest optimization potential:  (Equation image '13' not included in text)
      <br/>
      Update matrix factorizations and index quantity:
      <br/>
      rk,mk,Jk,Yk,Zk,Lk, Sk)= PHI -A (j0,rk,mk,Jk,Yk,Zk,Lk,Lk, Sk)
      <br/>
      Activate secondary condition jki0.
    </p>
    <p num="74">
      Update matrix factorizations and index quantity:
      <br/>
      (rk-1,mmk+1,Jk+1,Yk+1,Zk+1,Lk+1,S k+1):= PHI +A (i0,rk,mk,Jk,Yk,Zk,Lk,Sk).
    </p>
    <p num="75">
      Examine xk+1 for optimum quality:
      <br/>
      If Zk+1t gk+1 =0; and  LAMBDA k+1 =LLS(rk+1,mk+1,gk+1,Yl+1,Lk+1) &gt;= 0
    </p>
    <p num="76">then: go to step IV.</p>
    <p num="77">Otherwise: k=k+1 (increase iteration index)</p>
    <p num="78">If k&gt;k max: go to step IV.</p>
    <p num="79">
      Otherwise: Determine the orthogonal, regular triangular factorization of
      <br/>
      Z:= LAMBDA Zk-1 : (Qk+1z,Rk+1z):= PHI z (Z,rk+1).
    </p>
    <p num="80">Go to Step I.</p>
    <p num="81">
      If sk =1 (no new active secondary condition).
      <br/>
      xk+1 =xk +dk, xk+1 =(Yk+1, Pk+1);
      <br/>
      gk+1 =2( BETA iscal (yk+1i -yrefi)+ GAMMA iscal (yk+1i -yacci)+ ALPHA iscal yk+1i -1);
      <br/>
      Update matrix factorizations and index quantity:
      <br/>
      (rk+1, mk+1, Jk+1, Yk+1, Zk+1, Lk+1, Sk+1):=(rk, mk, Jk, Yk, Zk, Lk, Sk).
    </p>
    <p num="82">
      Check xk+1 for optimum quality:
      <br/>
      If Zk+1t gk+1 =0;
      <br/>
      and  LAMBDA k+1 =LLS(rk+1, mk+1, gk+1, Yk+1, Lk+1) &gt;= 0
      <br/>
      then: go to step IV.
    </p>
    <p num="83">
      Otherwise: Release a direction having the highest optimization potential:
      <br/>
      LAMBDA kj0 :=jmin LAMBDA kj ;
    </p>
    <p num="84">
      Update matrix factorizations and index quantity:
      <br/>
      (rk+1, mk+1, Jk+1, Yk+1, Zk+1, Lk+1, Sk+1):= PHI -A (j0, rk, mk, Jk, Yk, Zk, Lk, Sk)
      <br/>
      -k=k+1 (increased iteration index)
    </p>
    <p num="85">If k&gt;k max: go to Step IV.</p>
    <p num="86">
      Otherwise: Determine the orthogonal, regular triangular factorization of
      <br/>
      Z:= LAMBDA Zk+1 :
      <br/>
      (Qk+1z, Rk+1z):= PHI z (Z,rk+1).
    </p>
    <p num="87">Go to Step I.</p>
    <p num="88">
      IV. Solution xk+1 is determined.
      <br/>
      Stop�
    </p>
    <p num="89">End of algorithm of inverse kinematics.</p>
    <p num="90">
      Definition of the finction LLS:
      <br/>
      LAMBDA =LLS(r, m, g, Y, L).
      <br/>
      LAMBDA =0, i=r+1, . . . , m;
      <br/>
      LAMBDA nL :=( LAMBDA r+1, . . . ,  LAMBDA m);
      <br/>
      Lt LAMBDA L =yt g.
    </p>
    <p num="91">
      From this, determine  LAMBDA L  EPSILON +character pullout} r through reverse substitution.
      <br/>
      Define the output value of the function:
      <br/>
      LAMBDA :=( LAMBDA L,  LAMBDA hL).
    </p>
    <p num="92">
      With leq :=1+maxl &lt;= i &lt;= m.vertline.
      <br/>
      LAMBDA (i).vertline., set the components of  LAMBDA  that are among the secondary conditions of Equation (1) at the value leq.
      <br/>
      End of function LLS.
    </p>
    <p num="93">
      Definition of the function  PHI + :
      <br/>
      (r, m,J,Y,Z,L,S)= PHI +A (i0,r,m,J,Y,Z,L,S).
    </p>
    <p num="94">
      Activate secondary condition ji0, The condition is applied that  ALPHA j0 with j0: =ji0 designate the ji0 -th line of A. Define Qt :=(Y, Z) and form  ALPHA :=Q ALPHA j0.
      <br/>
      Partition  ALPHA =:( ALPHA y, ALPHA z) with  ALPHA y  EPSILON +character pullout} r and  ALPHA z  EPSILON +character pullout} n-r.
      <br/>
      Determine the householder reflection H  EPSILON +character pullout} n-r,n-r so that .vertline.
      <br/>
      ALPHA z.vertline.e1 =H ALPHA z, with e1 :=(1, 0, . . . , 0) EPSILON +character pullout} n-r.
      <br/>
      Define the unitary transformer: H  EPSILON +character pullout} n,n according to:  (Equation image '14' not included in text)
    </p>
    <p num="95">
      Define the unitary transformer:
      <br/>
      Q:=HQ;
    </p>
    <p num="96">
      Update indices:  (Equation image '15' not included in text)
      <br/>
      +overscore (m)}:=m+1;
    </p>
    <p num="97">Exchange secondary conditions:</p>
    <p num="98">If r not equal to r, then  (Equation image '16' not included in text)</p>
    <p num="99">otherwise  (Equation image '17' not included in text)</p>
    <p num="100">+overscore (J)}:=(j1, . . . , j2n+6).</p>
    <p num="101">Update matrix factorizations.</p>
    <p num="102">Y is the partial matrix of Qt that includes columns 1 through r of QQt.</p>
    <p num="103">Z is the partial matrix of Qt that includes columns r+1 through n of Qt.  (Equation image '18' not included in text)</p>
    <p num="104">End of the function  PHI +.</p>
    <p num="105">
      Definition of the function  PHI .:
      <br/>
      (r,m,J,Y,Z,L,S)= PHI -A (i0,r,m,J,Y,Z,L,S).
    </p>
    <p num="106">Inactivate secondary condition ji0.</p>
    <p num="107">If j0&gt;r: (Eliminate singular, active secondary condition) Update indices:</p>
    <p num="108">
      - r:=r;
      <br/>
      - m:=m-1;
    </p>
    <p num="109">Exchange secondary conditions:  (Equation image '19' not included in text)</p>
    <p num="110">+overscore (J)}:=(j1, . . . , j2n+6).</p>
    <p num="111">
      Update matrix factorizations:
      <br/>
      Y:=Y;
      <br/>
      Z:=Z;
      <br/>
      L:=L;
      <br/>
      SL:=(S1, . . . ,Sj0-r-l,Sj0-r+1,Sm-r),
    </p>
    <p num="112">where Si denote the columns of S.</p>
    <p num="113">
      If j0 &lt;= r: (Eliminate regular active secondary condition) R results from R:=Lt through striking of the j0-th column.
      <br/>
      The elements of R that occur at the locations (j0,j0+1), (j0+1, j0+2), . . . , (r,r+1) are canceled through left manipulation with a sequence of unitary elimination matrices Ej0,j0+1, . . . , Er-1,r  EPSILON IRr,r.
      <br/>
      Define linear transformers:
      <br/>
      R:=Er-1,r Er-2,r-1. . . Ej0,j0+1 R;
      <br/>
      S:=Er-1,r Er-2,r-1. . . Ej0,j0+1 S;  (Equation image '20' not included in text)
      <br/>
      Qt :=(Y,Z);
      <br/>
      Q:=Er-1,r Er-2,r-1. . . Ej0,j0+1 Q;
    </p>
    <p num="114">If the last line of S is zero, or if r=m:</p>
    <p num="115">
      Update indices:
      <br/>
      r:=r-1;
      <br/>
      m:=m-1;
    </p>
    <p num="116">
      Exchange secondary conditions:  (Equation image '21' not included in text)
      <br/>
      +overscore (J)}:=(j1, . . . , j2n+6).
    </p>
    <p num="117">Update matrix factorizations:</p>
    <p num="118">Y is the partial matrix of Qt that includes columns 1 through r of Qt.</p>
    <p num="119">Z is the partial matrix of Qt that includes columns r+1 through n of Qt.</p>
    <p num="120">
      If r&lt;m, strike the last line of S and R. Set:
      <br/>
      L:=Rt
      <br/>
      S:=S;
    </p>
    <p num="121">Otherwise (convert singular, active secondary condition into a regular, active secondary condition):</p>
    <p num="122">
      Determine the element of the last line of S with the smallest index l0 such that:
      <br/>
      Sr,i0 not equal to 0.
    </p>
    <p num="123">
      Exchange column l0 with column 1 of S. Define linear transformer:
      <br/>
      R:=(R, Sl0),
    </p>
    <p num="124">where Sl0 denotes the l0th column of S.</p>
    <p num="125">
      Update indices:
      <br/>
      r:=r;
      <br/>
      m:=m-1;
    </p>
    <p num="126">
      Exchange secondary conditions:  (Equation image '22' not included in text)
      <br/>
      +overscore (J)}:=(j1, . . . , j2n+6).
    </p>
    <p num="127">
      Update matrix factorizations:
      <br/>
      Y is the partial matrix of Qt that includes columns 1 through r of Qt.
    </p>
    <p num="128">Z is the partial matrix of Qt that includes columns r+1 through n of Qt.</p>
    <p num="129">
      L:L=Rt ;
      <br/>
      S:=(S2, . . . , Sl0-1, S1, Sl0+1, . . . , Sm-r),
    </p>
    <p num="130">where S1 denotes the columns of S.</p>
    <p num="131">End of function  PHI .</p>
    <p num="132">
      Definition of the function  PHI 0A :
      <br/>
      (r,J,Y,Z,L,S)= PHI 0A (A,m,J).
    </p>
    <p num="133">
      1. Define:
      <br/>
      A0 :=A, i:=0.
    </p>
    <p num="134">
      2. Define the following matrix recursion:
      <br/>
      Ai+1 L=Hi Ai, i &gt;= 0.
    </p>
    <p num="135">The unitary transformer Hi  EPSILON +character pullout} n,n is explained as follows:  (Equation image '23' not included in text)</p>
    <p num="136">
      The householder reflection Hi  EPSILON +character pullout} n-i,n-1 is defined such that:
      <br/>
      .vertline.
      <br/>
      ALPHA k0i.vertline.e1 =Hi ALPHA k0i,
    </p>
    <p num="137">
      with e1 :=(1, 0, . . . , 0)  EPSILON +character pullout} n-i.
      <br/>
      Here the vectors  ALPHA ki  EPSILON +character pullout}n-i, k=1, . . . , n-i indicate the columns of the matrix Ai  EPSILON +character pullout} n-i,m-1 :  (Equation image '24' not included in text)
    </p>
    <p num="138">
      Moreover, 1 &lt;= k0 &lt;= n-i is the smallest index with  ALPHA k0i not equal to 0.
      <br/>
      If no such k0 exists, then go to step III; otherwise go to step IV.
    </p>
    <p num="139">
      3. Define indices:
      <br/>
      r:=i;
      <br/>
      J:=(ji, . . . , j2n+6).
    </p>
    <p num="140">
      Define matrix factorizations:
      <br/>
      Q:=Hr-1 Hr-2 . . . H0 ;
    </p>
    <p num="141">Y is the partial matrix of Qt that includes columns 1 through r of Qt.</p>
    <p num="142">Z is the partial matrix of Qt that includes columns r+1 through n of Qt.</p>
    <p num="143">T is the matrix that results from the striking of lines +1 through n from Ai+1.</p>
    <p num="144">
      Define L  EPSILON +character pullout} r,r and S EPSILON +character pullout} r,m-r according to:
      <br/>
      (Lt,S):=T.
    </p>
    <p num="145">Stop: function  PHI 0A has been performed completely�</p>
    <p num="146">
      4.
      <br/>
      Exchange column i+k0 with column i+1 in Ai.  (Equation image '25' not included in text)
    </p>
    <p num="147">Set jk : =+overscore (j)}k.A-inverted.k, increase the counting index i=i+1 and go to Step II.</p>
    <p num="148">End of function  PHI 0A.</p>
    <p num="149">
      Definition of the function  PHI 0Z :
      <br/>
      (Qz, Rz):= PHI 0z (Z,r).
    </p>
    <p num="150">Determiine the QR triangular factorization of Z:  (Equation image '26' not included in text)</p>
    <p num="151">Here Qz  EPSILON +character pullout} n,n designate a unitary matrix, and Rz  EPSILON +character pullout} r,r an upper triangular matrix.</p>
    <p num="152">End of function  PHI 0z.</p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15.</claim-text>
      <claim-text>An apparatus for controlling a robot, in an environment of robotic physical motion limits, to move a point on the robot from a current first position vector qi to a second position vector qi+1 ;</claim-text>
      <claim-text>wherein the robot has ndof robotic joint articulations or degrees of freedom; the apparatus comprising: a computer including software and being coupled to the robot and to an input device for inputting a control command to the computer, the command further comprising a desired end-effect destination shift  DELTA xd, and wherein the software solves a kinematic equation based on use of a Jacobi Matrix J(q) having ndof columns to perform a calculation the second position vector qi+1 from the inputted destination shift  DELTA xd and the first position vector qi ; the calculation further comprising: (a) calculating a scalar energy criterion</claim-text>
      <claim-text>wherein  ALPHA j are first non-negative weighting values and j=1, . . . , ndof ; calculating a scalar reference-position deflection criterion</claim-text>
      <claim-text>wherein  BETA j are second non-negative weighting values and j=1, . . . , ndof and qref is an articulation reference position value that is predetermined such that a sequence of the position vectors qi runs near this reference position value; calculating a scalar acceleration criterion</claim-text>
      <claim-text>(q-2qi +q1-1)T diag( GAMMA j)(q-2qi +qi-1)</claim-text>
      <claim-text>wherein  GAMMA j are third non-negative weighting values and j=1, . . . ndof ; calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation</claim-text>
      <claim-text>and an inequality 0 &lt;= p &lt;= 1, whereby p is an attained fraction of the commanded end- effect destination shift  DELTA xd ;</claim-text>
      <claim-text>and (b) summing the energy criterion, the reference-position criterion, the acceleration criterion, and the additional criterion to obtain a scalar quality function f(q); (c) determining secondary conditions comprising the kinematic equation, the inequality 0 &lt;= p &lt;= 1, physical path limitations qmin and qmax, a maximum articulation speed qmax, and a maximum articulation acceleration qmax ; (d) starting from the first position vector qi, iteratively repeating optimization steps to obtain a series of intermediate position vectors, the optimization steps further comprising: (d1) determining the active and inactive secondary conditions in the intermediate position vector; (d2) taking a gradient of the quality function f(q) to obtain an optimization vector oriented in a descent direction of the quality function f(q); (d3) projecting the optimization vector in a tangent space of active secondary conditions, whereby the optimization vector is orthogonal to a set of gradients of active secondary constraint conditions; (d4) scaling a magnitude of the optimization vector according to a set of inactive secondary constraint conditions to obtain a scaled optimization vector; (d5) obtaining a sum vector by adding the scaled optimization vector to the intermediate position vector;</claim-text>
      <claim-text>and (d6) evaluating the sum vector to determine if the sum vector lies generally at a minimum of the quality function;</claim-text>
      <claim-text>and (d7) if the sum vector does not lie generally at the minimum, then repeating the optimization steps starting from a new intermediate vector equal to the sum vector plus the preceding intermediate vector;</claim-text>
      <claim-text>and (e) if the sum vector lies generally at the minimum, then outputting to the robot the second position vector qi+1.</claim-text>
      <claim-text>1. A method of controlling a robot, in an environment of robotic physical motion limits, to move a point on the robot from a current first position vector ql to a second position vector qi+1 ;</claim-text>
      <claim-text>wherein the robot has ndof robotic joint articulations or degrees of freedom and the method employs a kinematic equation based on use of a Jacobi Matrix J(q) having ndof columns;</claim-text>
      <claim-text>the method comprising: providing a calculating unit coupled to the robot: inputting a control command to the calculating unit, the command further comprising a desired end-effect destination shift  DELTA xd, and calculating the second position vector qi+1 from the inputted destination shift  DELTA xd and the first position vector qi ; wherein the step of calculating the second position vector qt+1 further comprises: (a) calculating a scalar energy criterion</claim-text>
      <claim-text>wherein  DELTA j are first non-negative weighting values and j=1, . . . ndof ; calculating a scalar reference-position deflection criterion</claim-text>
      <claim-text>wherein  BETA j are second non-negative weighting values and j=1, . . . ndof and qref is an articulation reference position value that is predetermined such that a sequence of the position vectors qi runs near this reference position value; calculating a scalar acceleration criterion</claim-text>
      <claim-text>wherein  GAMMA j are third non-negative weighting values and j=1, . . . ndof ; calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation</claim-text>
      <claim-text>and an inequality 0 &lt;= p &lt;= 1, whereby p is an attained fraction of the commanded end-effect destination shift  DELTA xd ;</claim-text>
      <claim-text>and (b) summing the energy criterion, the reference-position criterion, the acceleration criterion, and the additional criterion to obtain a scalar quality function f(q); (c) determining secondary conditions comprising the kinematic equation, the inequality 0 &lt;= p &lt;= 1, physical path limitations qmin and qmax, a maximum articulation speed qmax, and a maximum articulation acceleration qmax ; (d) starting from the first position vector qi, iteratively repeating optimization steps to obtain a series of intermediate position vectors, the optimization steps further comprising: (d1) determining the active and inactive secondary conditions in the intermediate position vector; (d2) taking a gradient of the quality function j(q) to obtain an optimization vector oriented in a descent direction of the quality function f(q); (d3) projecting the optimization vector in a tangent space of active secondary conditions, whereby the optimization vector is orthogonal to a set of gradients of active secondary constraint conditions; (d4) scaling a magnitude of the optimization vector according to a set of inactive secondary constraint conditions to obtain a scaled optimization vector; (d5) obtaining a sum vector by adding the scaled optimization vector to the intermediate position vector;</claim-text>
      <claim-text>and (d6) evaluating the sum vector to determine if the sum vector lies generally at a minimum of the quality function;</claim-text>
      <claim-text>and (d7) if the sum vector does not lie generally at the minimum, then repeating the optimization steps starting from a new intermediate vector equal to the sum vector plus the preceding intermediate vector;</claim-text>
      <claim-text>and (e) if the sum vector lies generally at the minimum, then moving the point on the robot to the second position vector qi+1.</claim-text>
      <claim-text>2. The method according to claim I wherein, starting from a commanded end-effector destination shift  DELTA xc :=( DELTA xt, DELTA xr) at a time Ti, wherein and  DELTA xt EPSILON +character pullout} 3 and  DELTA xr EPSILON +character pullout} 3 each represent, respectively translational and rotational components of the commanded end-effector destination shift; DELTA xlmax and  DELTA xrmax, respectively each define a maximum scalar-value Cartesian position offset of the end effector per sample time  DELTA T, a desired Cartesian translational or rotational end-effector destination shift  DELTA xld is given by:  (Equation image '27' not included in text)</claim-text>
      <claim-text>wherein quantity .vertline.x.vertline. of a vector x is determined by a Euclidian norm  (Equation image '28' not included in text)</claim-text>
      <claim-text>and whereby the desired end-effector destination shift is given by  DELTA xd : =( DELTA xld, DELTA xrd);</claim-text>
      <claim-text>and wherein the criteria, energy criteria, reference-position criteria, and acceleration criteria, are weighted according to prevalent problem-specific requirements by allocating three predetermined numerical values  ALPHA j,  BETA j,  GAMMA j , to each axis j, the value  ALPHA j serving in the weighting of an energy criterion that evaluates a difference between two adjacent, calculated articulation positions of axis j;</claim-text>
      <claim-text>and the value  BETA j serving in weighting of a criterion that evaluates deflection of the predetermined articulation position qj from a reference value qref,j, and the value  GAMMA j serving in the weighting of a criterion which evaluates acceleration behavior in form of an articulation speed offset of the articulation axis qj, which is predetermined by the operator as are the physical articulation stops qmin, qmax of the manipulator, which relate to path limitations, and the articulation speed limitations qmax and the articulation acceleration limitations qmax, and wherein, upon an attainment of output value;</claim-text>
      <claim-text>an allowable optimum articulation position offset  DELTA qi is calculated for a desired end-effector destination shift  DELTA xdi at the time Ti-1 during the time interval  DELTA T, via an algorithm of inverse kinematics progressing during an initialization phase and a subsequent optimization phase, whereby a desired value is provided to articulation regulators from qsolli+1 :=qsolli + DELTA qi and the articulation regulators are correspondingly shifted with qsolli during the time interval  DELTA T, and wherein an allowable articulation position offset comprises the articulation position value being updated with  DELTA q to satisfy the physical articulation stops qmin, qmax corresponding to qmin &lt;= qsoll + DELTA q &lt;= qmax and wherein  DELTA q satisfies the articulation speed limitations qmax corresponding to .vertline.</claim-text>
      <claim-text>DELTA qi.vertline. &lt;= qmax DELTA T;</claim-text>
      <claim-text>and wherein the limitations of the articulation accelerations during an approach of articulation positions to the physical articulation stops are maintained reliably, and the type of optimum quality of  DELTA qi os determined by an operator through the quality-criterion weighting  ALPHA ,  BETA ,  GAMMA ;</claim-text>
      <claim-text>and wherein the sampling time  DELTA T corresponding to  DELTA T &gt;= max ( DELTA tq,  DELTA tr) is dimensioned such that the computation time  DELTA tq for calculating an optimum allowable articulation position offset  DELTA q and the adjustment time  DELTA tr, which the regulators require for adapting the axial positions to the desired values qsoll lies within the time span  DELTA T.</claim-text>
      <claim-text>3. The method according to claim 2, wherein the end-effector destination shift is Cartesian and is commanded at a time Ti by an operator or a superordinate task in the form of a 6-dimensional increment vector.</claim-text>
      <claim-text>4. The method according to claim 3, wherein the superordinate task comprises force control objectives.</claim-text>
      <claim-text>5. The method according to claim 2, wherein the increment vector of the end-effector destination shift  DELTA xc is Cartesian and is commanded at a time Ti determined by an operator or a superordinate task by evaluating the difference of absolute end effector coordinates.</claim-text>
      <claim-text>6. The method according to claim 5, wherein the superordinate task comprises force control objectives.</claim-text>
      <claim-text>7. The method according to claim 1, wherein an unknown obstacle comprises an inactive secondary constraint condition, and including a step of adding the inactive secondary constraint condition to the set of active secondary constraint conditions when the robot encounters the obstacle.</claim-text>
      <claim-text>8. The method according to claim 1, wherein the active secondary conditions are those secondary conditions which are attained and the inactive secondary conditions are those secondary conditions which are not attained.</claim-text>
      <claim-text>9. The method according to claim 1, including displaying the value of p to the operator, whereby the operator is warned of path limitations and singularities when the p value decreases.</claim-text>
      <claim-text>10. The method according to claim 1, wherein the iteratively-repeated optimization steps include applying a method of Lagrange multipliers.</claim-text>
      <claim-text>11. The method according to claim 1, wherein the current first position vector qi and a second position vector qi+1 are joint position vectors.</claim-text>
      <claim-text>12. The method according to claim 1, wherein the end-effect destination shifts  DELTA xd are input to the calculating unit from at least one of a manual control device, a program, and a superordinate task.</claim-text>
      <claim-text>13. The method according to claim 1, comprising use as a modular component of a superordinate task and wherein the end-effector destination shifts are commanded by the superordinate task.</claim-text>
      <claim-text>14. The method according to claim 13, wherein the superordinate task comprises force control objectives.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. In a method of command control, by a programmer, for interactive path guidance of a kinematically-redundant manipulator based on end-effector destination shifts from the programmer, in connection with a calculation of articulated-position values according to an algorithm of inverse kinematics, the method including steps of: providing a manual control device; calculating a new articulation position (qi+i) from an end-effector destination shift command from the control device and a current articulation position actual value (qi) of the manipulator; the calculating step including as calculating factors a quality function (f(q)), which is parametrized by non-negative weighting values ( ALPHA j,  BETA j) and path limitations through physical articulation stops (qmin, qmax), a maximum articulation speed (qmax), and a kinematic equation represented by the Jacobi Matrix; calculating an energy criterion from (q-qi)t diag( ALPHA j)(q-qi); calculating a reference-position criterion from (qref)t diag( BETA i) * (q-qref); predetermining by the new articulation position new values for an articulation regulator, with the quality function being a sum of the energy criterion and the reference-position criterion; determining a value qref as a predetermined articulation-position value such that a sequence of calculated articulation-position values (qi) runs near a value of the reference-position criterion; determining an allowable optimization vector, beginning with one of the articulation-position values qi as a starting point, on the basis of the quality function with respect to all active secondary conditions that indicate which path limitations have been attained; scaling the allowable optinization vector according to inactive secondary conditions that indicate which path limitations have not been attained; adding the scaled optimization vector to the articulation-position value calculated in the previous step of the iteration;</claim-text>
      <claim-text>and evaluating an optimum quality of the articulation-position values based on the quality function and the secondary conditions activated in the newly-calculated articulation position; the improvement wherein: the non-negative weighting values include a weighting value  GAMMA j ; the calculating factors include a maximum articulation acceleration (qmax); the calculating step includes calculating an acceleration criterion from (-2qi -qi-1)t diag( GAMMA i) * (q-2qi -qi-1);</claim-text>
      <claim-text>and calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation</claim-text>
      <claim-text>and an inequality 0 &lt;= p &lt;= 1, whereby p is an attained fraction of a commanded end-effector destination shift  DELTA xd.</claim-text>
    </claim>
  </claims>
</questel-patent-document>