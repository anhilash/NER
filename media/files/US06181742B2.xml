<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06181742B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06181742</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6181742</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="21758553" extended-family-id="42108395">
      <document-id>
        <country>US</country>
        <doc-number>09013148</doc-number>
        <kind>A</kind>
        <date>19980126</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1998US-09013148</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43164841</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>1314898</doc-number>
        <kind>A</kind>
        <date>19980126</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1998US-09013148</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04N   7/26        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>7</main-group>
        <subgroup>26</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04N   7/30        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>7</main-group>
        <subgroup>30</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04N   7/50        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>7</main-group>
        <subgroup>50</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>375240000</text>
        <class>375</class>
        <subclass>240000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>341051000</text>
        <class>341</class>
        <subclass>051000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>341059000</text>
        <class>341</class>
        <subclass>059000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>341065000</text>
        <class>341</class>
        <subclass>065000</subclass>
      </further-classification>
      <further-classification sequence="4">
        <text>375240030</text>
        <class>375</class>
        <subclass>240030</subclass>
      </further-classification>
      <further-classification sequence="5">
        <text>375E07134</text>
        <class>375</class>
        <subclass>E07134</subclass>
      </further-classification>
      <further-classification sequence="6">
        <text>375E07138</text>
        <class>375</class>
        <subclass>E07138</subclass>
      </further-classification>
      <further-classification sequence="7">
        <text>375E07155</text>
        <class>375</class>
        <subclass>E07155</subclass>
      </further-classification>
      <further-classification sequence="8">
        <text>375E07157</text>
        <class>375</class>
        <subclass>E07157</subclass>
      </further-classification>
      <further-classification sequence="9">
        <text>375E07162</text>
        <class>375</class>
        <subclass>E07162</subclass>
      </further-classification>
      <further-classification sequence="10">
        <text>375E07170</text>
        <class>375</class>
        <subclass>E07170</subclass>
      </further-classification>
      <further-classification sequence="11">
        <text>375E07181</text>
        <class>375</class>
        <subclass>E07181</subclass>
      </further-classification>
      <further-classification sequence="12">
        <text>375E07211</text>
        <class>375</class>
        <subclass>E07211</subclass>
      </further-classification>
      <further-classification sequence="13">
        <text>375E07218</text>
        <class>375</class>
        <subclass>E07218</subclass>
      </further-classification>
      <further-classification sequence="14">
        <text>375E07226</text>
        <class>375</class>
        <subclass>E07226</subclass>
      </further-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/152</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>152</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/115</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>115</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/14</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>14</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/149</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>149</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/15</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>15</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/159</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>159</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/172</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>172</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="8">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/196</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>196</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="9">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/60</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>60</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="10">
        <classification-scheme office="EP" scheme="CPC">
          <date>20141101</date>
        </classification-scheme>
        <classification-symbol>H04N-019/61</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>N</subclass>
        <main-group>19</main-group>
        <subgroup>61</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20141108</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>6</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>9</number-of-drawing-sheets>
      <number-of-figures>12</number-of-figures>
      <image-key data-format="questel">US6181742</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Single pass target allocation for video encoding</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>GONZALES CESAR A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5231484</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5231484</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>WEINBERGER MARCELO, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5680129</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5680129</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>SEROUSSI GADIEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5764374</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5764374</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Rajagopalan, Rajesh</name>
            <address>
              <address-1>Bedminster, NJ, US</address-1>
              <city>Bedminster</city>
              <state>NJ</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>McCarthy, Thomas</name>
            <address>
              <address-1>Cortlandt Manor, NY, US</address-1>
              <city>Cortlandt Manor</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>Gonzales, Cesar</name>
            <address>
              <address-1>Katonah, NY, US</address-1>
              <city>Katonah</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Morris, Daniel P.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Kelley, Chris S.</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>EXPIRED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      Systems and methods are provided for allocating bits to pictures in accordance with the bit allocation constraints for operation at both constant and variable bit rates.
      <br/>
      A statistical complexity measure which is an estimate of the average encoding complexity of the entire data is updated after encoding each picture.
      <br/>
      This set of parameters, along with an estimate of the encoding complexity of the current picture and the desired average coding rate is used to allocate target bits for encoding the current picture.
      <br/>
      One method of allocating bits to a picture is to used the statistical complexity measure to vary the instantaneous rate of encoding and allocate bits for this picture so as to generate encoded data at this rate.
      <br/>
      Another method is to modulate the target generated by a conventional encoder using the current level of the Virtual Buffer Verifier and the deviation of the estimated encoding complexity of the current picture from the statistical complexity measures.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="1">
      1.
      <br/>
      Field of the Invention
    </p>
    <p num="2">The present invention relates to the field of data compression and, more particularly, to systems and methods for compressing digital video signals.</p>
    <p num="3">2. Related Art</p>
    <p num="4">
      Technological advances in digital transmission networks, digital storage media, Very Large Scale Integration devices, and digital processing of video and audio signals are converging to make the transmission and storage of digital video economical in many applications.
      <br/>
      Because the storage and transmission of digital video signals are central to many applications, and because an uncompressed representation of a video signal typically requires a large amount of storage, the use of digital video compression techniques is important to this advancing art.
    </p>
    <p num="5">
      Several international standards for the compression of digital video signals have emerged over the past decade, with more currently under development.
      <br/>
      These standards apply to algorithms for the transmission and storage of compressed digital video in a variety of applications, including: video-telephony and teleconferencing; high-quality digital television transmission via coaxial networks, fiber-optic networks, terrestrial broadcast or direct satellite broadcast; and in interactive multimedia products stored on CD-ROM, Digital Tape, Digital Video Disk, and disk drives.
    </p>
    <p num="6">
      Several of the compression standards involve algorithms based on a common core of compression techniques, e.g., the CCITT (Consultative Committee on International Telegraphy and Telephony) Recommendation H.120, the CCITT Recommendation H.261, and the ISO/IEC MPEG-1 and MPEG-2 standards.
      <br/>
      The MPEG algorithms were developed by the Moving Picture Experts Group (MPEG), part of a joint technical committee of the International Standards Organization (ISO) and the International Electrotechnical Commission (IEC).
      <br/>
      The MPEG committee has been developing standards for the multiplexed, compressed representation of video and associated audio signals.
      <br/>
      The standards specify the syntax of the compressed bit stream and the method of decoding, but leave considerable latitude for novelty and variety in the algorithm employed in the encoder.
    </p>
    <p num="7">
      The MPEG-1 standard was developed for use in compressing progressive video.
      <br/>
      A progressive video sequence is a sequence in which each frame represents a scene as it is viewed at a discrete time instance.
      <br/>
      By contrast, for interlaced video, a field-every other line on the screen is captured periodically.
      <br/>
      For interlaced video, at alternating time instances the top and bottom field on a screen is refreshed.
      <br/>
      At any given time, data from two fields (a frame) can be seen.
    </p>
    <p num="8">The MPEG-2 standard, can be used to compress either interlaced video, progressive video, or a mixture of progressive and interlaced video: the encoder specifies whether each frame is progressive or interlaced.</p>
    <p num="9">
      The MPEG standards specify a bit stream in which the number of bits in the compressed representation of each picture is variable.
      <br/>
      This variation is due to the different types of picture processing, as well as the inherent variation with time of the spatio-temporal complexity of the scene being coded.
      <br/>
      This leads to the use of buffers to even out the fluctuations in bit rate.
      <br/>
      For a constant- bit-rate storage media or transmission channel, for example, buffering allows the bit rate of the compressed pictures to vary within limits that depend on the size of the buffers, while outputting a constant bit rate to the storage device or transmission channel.
    </p>
    <p num="10">
      Considering the importance of buffering, the MPEG standards define a hypothetical decoder called the Virtual Buffer Verifier (VBV), diagramed in FIG. 1, that verifies whether an encoded bit stream is decodable with specified limitations on the decoder buffer size and the input bit rate.
      <br/>
      The VBV has two modes of operation: constant bit rate (CBR) and variable bit rate (VBR).
      <br/>
      The two modes are described below.
    </p>
    <p num="11">
      For constant-bit-rate operation, the Decoder Buffer 101 is filled at a constant bit rate with compressed data 100 from the storage or transmission medium.
      <br/>
      Both the buffer size and the bit rate are parameters that are transmitted in the compressed bit stream.
      <br/>
      After an initial delay, which is also derived from information in the bit stream, a hypothetical decoder 103 instantaneously removes from the buffer all of the data associated with the first picture.
      <br/>
      Thereafter, at intervals equal to the picture rate of the sequence, the decoder removes all data associated with the earliest picture in the buffer.
    </p>
    <p num="12">
      Variable-bit-rate operation is similar to the above, except that the compressed bit stream enters the buffer at a specified maximum bit rate until the buffer is full, at which point no more bits are input until the buffer at least partially empties.
      <br/>
      This translates to a bit rate entering the buffer that is effectively variable.
    </p>
    <p num="13">
      In order for the bit stream to satisfy the MPEG rate-control requirements, it is necessary that all the data for each picture be available within the buffer at the instant it is needed by the decoder.
      <br/>
      This requirement translates to upper and lower bounds (Uk and Lk) on the number of bits allowed in each picture k. The upper and lower bounds for a given picture depend on the number of bits used in all the pictures preceding it.
      <br/>
      It is the function of the encoder to produce bit streams that satisfy the VBV requirements.
      <br/>
      It is not expected that actual decoders will necessarily be configured or operate in the manner described above.
      <br/>
      The hypothetical decoder and its associated buffer are simply a means of placing computable limits on the size of compressed pictures.
    </p>
    <p num="14">
      A rate control scheme can be found in U.S. Pat. No. 5,231,484 to Gonzales and Viscito, which describes a rate control mechanism that can be used for MPEG.
      <br/>
      A block diagram for this type of scheme is shown in FIG. 2.
      <br/>
      In this scheme, the input video signal Fk 200 is sent to a Complexity Estimator 201 and a Picture Coder 205.
      <br/>
      The Complexity Estimator sends a complexity estimate Ck (signal 202) to a Picture Bit Allocator 203.
      <br/>
      The Picture Bit Allocator allocates target bits per picture and computes a quantization scale Qk (signal 204) that is sent to the Picture Coder 205.
      <br/>
      The target bits per picture is set depending on the instantaneous buffer fullness of a hypothetical decoder buffer which will be receiving the compressed video signals from the encoder, the complexity of the immediately previously encoded pictures and the desired rate of encoding.
      <br/>
      The quantization scale is computed based on the target bits per picture and the complexity estimate.
      <br/>
      The Picture Coder uses the quantization scale to encode Fk and produce an output bit stream CDk (signal 206).
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="15">Because of the above, it is an object of the present invention to provide a system and techniques for allocating target bits to encode units of digital information such as pictures so that bit allocation constraints are met while maintaining consistently good quality (e.g. for pictures, visual quality) in the decoded information.</p>
    <p num="16">In accordance an aspect of the present invention, units of digital information (coding units) are allocated target bits for encoding based on the complexity estimate of the coding unit, accumulated statistics of the actual complexities of previously encoded coding units and the desired rate of encoding.</p>
    <p num="17">
      In various embodiments, methods are provided for allocating bits to pictures in accordance with the VBV constraints for operation at both constant and variable bit rates.
      <br/>
      In one embodiment the instantaneous rate of encoding is modified from the desired encoding rate by multiplying the desired rate with the ratio of the estimated coding complexity of this picture and the accumulated statistics of the encoding complexities of all the previously encoded pictures.
      <br/>
      Buffer constraints are then imposed to maintain VBV compliance.
    </p>
    <p num="18">
      In another embodiment, target bits are allocated to a picture so as to produce the desired rate.
      <br/>
      Then the target bits are modified from this value based on the VBV buffer levels and the deviation of the estimated coding complexity of the current picture from that of the accumulated statistics of the coding complexities of previously encoded pictures.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="19">
      FIG. 1 is a block diagram of a Virtual Buffer Verifier;
      <br/>
      FIG. 2 is an overview of a conventional video compression system;
      <br/>
      FIG. 3 shows an exemplary set of Group of Pictures (GOP's) layer of compressed data within the video compression layer of an MPEG data stream;
      <br/>
      FIG. 4 shows an exemplary Macroblock (MB) subdivision of a picture in the MB layer of compressed data within the video compression layer of an MPEG data stream;
      <br/>
      FIG. 5 shows the Block subdivision of a Macroblock;
      <br/>
      FIG. 6 shows the type of Pictures in a typical Group of Pictures;
      <br/>
      FIG. 7 shows an exemplary plot of the evolution of a virtual decoder buffer over time for operation in constant-bit-rate mode;
      <br/>
      FIG. 8 shows an exemplary plot of the evolution of a virtual decoder buffer over time for operation in variable-bit-rate mode;
      <br/>
      FIG. 9 is an overview of a video compression system according to an embodiment of the present invention;
      <br/>
      FIG. 10 shows the Complexity Statistics Accumulator in the preferred embodiment of the current invention;
      <br/>
      FIG. 11 shows the Target Bits Allocator in the preferred embodiment of the current invention;
      <br/>
      FIG. 12 shows the Complexity Statistics Accumulator in the second embodiment of the current invention.
    </p>
    <p num="20">a. The MPEG-2 Environment</p>
    <p num="21">
      As the present invention may be applied in connection with an MPEG-2 encoder, in order to facilitate an understanding of the invention, some pertinent aspects of the MPEG-2 video compression standard will be reviewed.
      <br/>
      It is to be noted, however, that the invention can also be applied to other coding algorithms which share some features of the MPEG-2 standard.
    </p>
    <p num="22">
      To begin with, it will be understood that the compression of any data object, such as a page of text, an image, a segment of speech, or a video sequence, can be thought of as a series of steps, including: 1) a decomposition of that object into a collection of tokens; 2) the representation of those tokens by binary strings that have minimal length in some sense; and 3) the concatenation of the strings in a well-defined order.
      <br/>
      Steps 2 and 3 are lossless; i.e., the original data is faithfully recoverable upon reversal.
      <br/>
      Step 2 is known as entropy coding.
    </p>
    <p num="23">
      Step 1 can be either lossless or lossy.
      <br/>
      Most video compression algorithms are lossy because of stringent bit-rate requirements.
      <br/>
      A successful lossy compression algorithm eliminates redundant and irrelevant information, allowing relatively large errors where they are not likely to be visually significant and carefully representing aspects of a sequence to which the human observer is very sensitive.
      <br/>
      The techniques employed in the MPEG-2 standard for Step 1 can be described as predictive/interpolative motion-compensated hybrid DCT/DPCM coding.
      <br/>
      Huffman coding, also known as variable length coding, is used in Step 2.
      <br/>
      Although, as mentioned, the MPEG-2 standard is really a specification of the decoder and the compressed bit stream syntax, the following description of the MPEG-2 specification is, for ease of presentation, primarily from an encoder point of view.
    </p>
    <p num="24">
      The MPEG video standards specify a coded representation of video for transmission.
      <br/>
      The standards are designed to operate on interlaced or noninterlaced component video.
      <br/>
      Each picture has three components: luminance (Y), red color difference (CR), and blue color difference (CB).
      <br/>
      For 4:2:0 data, the CR and CB components each have half as many samples as the Y component in both horizontal and vertical directions.
      <br/>
      For 4:2:2 data, the CR and CB components each have half as many samples as the Y component in the horizontal direction but the same number of samples in the vertical direction.
      <br/>
      For 4:4:4 data, the CR and CB components each have as many samples as the Y component in both horizontal and vertical directions.
    </p>
    <p num="25">
      An MPEG data stream consists of a video stream and an audio stream that are packed, with systems information and possibly other bit streams, into a systems data stream that can be regarded as layered.
      <br/>
      Within the video layer of the MPEG data stream, the compressed data is further layered.
      <br/>
      A description of the organization of the layers will aid in understanding the invention.
    </p>
    <p num="26">
      The layers pertain to the operation of the compression scheme as well as the composition of a compressed bit stream.
      <br/>
      The highest layer is the Video Sequence Layer, containing control information and parameters for the entire sequence.
      <br/>
      At the next layer, a sequence is subdivided into sets of consecutive pictures, each known as a Group of Pictures (GOP).
      <br/>
      A general illustration of this layer is shown in FIG. 3.
      <br/>
      Decoding may begin at the start of any GOP, essentially independent of the preceding GOP's.
      <br/>
      There is no limit to the number of pictures that may be in a GOP, nor do there have to be equal numbers of pictures in all GOP's.
    </p>
    <p num="27">
      The third or "Picture" layer is a single picture.
      <br/>
      A general illustration of this layer is shown in FIG. 4.
      <br/>
      The luminance component of each picture is subdivided into 16 * 16 regions; the color difference components are subdivided into appropriately sized blocks spatially co-situated with the 16 * 16 luminance regions; for 4:4:4 video, the color difference components are 16 * 16, for 4:2:2 video, the color difference components are 8 * 16, and for 4:2:0 video, the color difference components are 8 * 8.
      <br/>
      Taken together, these co-situated luminance region and color difference regions make up the fifth layer, known as "macroblock" (MB).
      <br/>
      Macroblocks in a picture are numbered consecutively in raster scan order.
    </p>
    <p num="28">
      Between the Picture and MB layers is the fourth or "Slice" layer.
      <br/>
      Each slice consists of some number of consecutive MB's .
      <br/>
      Slices need not be uniform in size within a picture or from picture to picture.
    </p>
    <p num="29">
      Finally, as shown in FIG. 5, each MB consists of four 8 * 8 luminance blocks and 8, 4, or 2 (for 4:4:4, 4:2:2 and 4:2:0 video) chrominance blocks.
      <br/>
      If the width of the luminance component in picture elements or pixels of each picture is denoted as C and the height as R (C is for columns, R is for rows), a picture is C/16 MB's wide and R/16 MB's high.
    </p>
    <p num="30">
      The Sequence, GOP, Picture, and Slice layers all have headers associated with them.
      <br/>
      The headers begin with byte-aligned "Start Codes" and contain information pertinent to the data contained in the corresponding layer.
    </p>
    <p num="31">
      A picture can be either field-structured or frame-structured.
      <br/>
      A frame-structured picture contains information to reconstruct an entire frame, i.e., two fields, of data.
      <br/>
      A field-structured picture contains information to reconstruct one field.
      <br/>
      If the width of each luminance frame (in picture elements or pixels) is denoted as C and the height as R (C is for columns, R is for rows), a frame-structured picture contains information for C * R pixels and a frame-structured picture contains information for C * R/2 pixels.
    </p>
    <p num="32">
      A macroblock in a field-structured picture contains a 16 * 16 pixel segment from a single field.
      <br/>
      A macroblock in a frame- structured picture contains a 16 * 16 pixel segment from the frame that both fields compose; each macroblock contains a 16 * 8 region from each of two fields.
    </p>
    <p num="33">
      Each frame in an MPEG-2 sequence must consist of two coded field pictures or one coded frame picture.
      <br/>
      It is illegal, for example, to code two frames as one field-structured picture followed by one frame-structured picture followed by one field- structured picture; the legal combinations are: two frame- structured pictures, four field-structured pictures, two field-structured pictures followed by one frame-structured picture, or one frame-structured picture followed by two field-structured pictures.
      <br/>
      Therefore, while there is no frame header in the MPEG-2 syntax, conceptually one can think of a frame layer in MPEG-2.
    </p>
    <p num="34">
      Within a GOP, three "types" of pictures can appear.
      <br/>
      An example of the three types of pictures within a GOP is shown in FIG. 6.
      <br/>
      The distinguishing feature among the picture types is the compression method used.
      <br/>
      The first type, Intramode pictures or I pictures, are compressed independently of any other picture.
      <br/>
      Although there is no fixed upper bound on the distance between I pictures, it is expected that they will be interspersed frequently throughout a sequence to facilitate random access and other special modes of operation.
      <br/>
      Predictively motion-compensated pictures (P pictures) are reconstructed from the compressed data in that picture and two most recently reconstructed fields from previously displayed I or P pictures.
      <br/>
      Bidirectionally motion-compensated pictures (B pictures) are reconstructed from the compressed data in that picture plus two reconstructed fields from previously displayed I or P pictures and two reconstructed fields from I or P -pictures that will be displayed in the future.
      <br/>
      Because reconstructed I or P pictures can be used to reconstruct other pictures, they are called reference pictures.
    </p>
    <p num="35">
      One very useful image compression technique is transform coding.
      <br/>
      In MPEG and several other compression standards, the discrete cosine transform (DCT) is the transform of choice.
      <br/>
      The compression of an I picture is achieved by the steps of 1) taking the DCT of blocks of pixels, 2) quantizing the DCT coefficients, and 3) Huffman coding the result.
      <br/>
      In MPEG, the DCT operation converts a block of 8 * 8 pixels into an 8 * 8 set of transform coefficients.
      <br/>
      The DCT transformation by itself is a lossless operation, which can be inverted to within the precision of the computing device and the algorithm with which it is performed.
    </p>
    <p num="36">
      The second step, quantization of the DCT coefficients, is the primary source of loss in the MPEG standards.
      <br/>
      Denoting the elements of the two-dimensional array of DCT coefficients by cmn, where m and n can range from 0 to 7, aside from truncation or rounding corrections, quantization is achieved by dividing each DCT coefficient cmn by wmn X QP, with wmn being a weighting factor and QP being the macroblock quantizer.
      <br/>
      Note that QP is applied to each DCT coefficient.
      <br/>
      The weighting factor wmn allows coarser quantization to be applied to the less visually significant coefficients.
    </p>
    <p num="37">
      There can be several sets of these weights.
      <br/>
      For example, there can be one weighting factor for I pictures and another for P and B pictures.
      <br/>
      Custom weights may be transmitted in the video sequence layer, or default values may be used.
      <br/>
      The macroblock quantizer parameter is the primary means of trading off quality vs. bit rate in MPEG-2.
      <br/>
      It is important to note that QP can vary from MB to MB within a picture.
      <br/>
      This feature, known as adaptive quantization (AQ), permits different regions of each picture to be quantized with different step-sizes, and can be used to equalize (and optimize) the visual quality over each picture and from picture to picture.
      <br/>
      Typically, for example in MPEG test models, the macroblock quantizer is computed as a product of the macroblock masking factor and the picture nominal quantizer (PNQ).
    </p>
    <p num="38">
      Following quantization, the DCT coefficient information for each MB is organized and coded, using a set of Huffman codes.
      <br/>
      As the details of this step are not essential to an understanding of the invention and are generally understood in the art, no further description will be offered here.
    </p>
    <p num="39">
      Most video sequences exhibit a high degree of correlation between consecutive pictures.
      <br/>
      A useful method to remove this redundancy before coding a picture is motion compensation.
      <br/>
      MPEG-2 provides several tools for motion compensation (described below).
    </p>
    <p num="40">
      All the methods of motion compensation have the following in common.
      <br/>
      For each macroblock, one or more motion vectors are encoded in the bit stream.
      <br/>
      These motion vectors allow the decoder to reconstruct a macroblock, called the predictive macroblock.
      <br/>
      The encoder subtracts the predictive macroblock from the macroblock to be encoded to form the difference macroblock.
      <br/>
      The encoder uses tools to compress the difference macroblock that are essentially similar to the tools used to compress an intra macroblock.
    </p>
    <p num="41">
      The type of picture determines the methods of motion compensation that can be used.
      <br/>
      The encoder chooses from among these methods for each macroblock in the picture.
      <br/>
      A method of motion compensation is described by the macroblock mode and motion compensation mode used.
      <br/>
      There are four macroblock modes, intra (I) mode, forward (F) mode, backward (B) mode, and interpolative forward-backward (FB) mode.
      <br/>
      For I mode, no motion compensation is used.
      <br/>
      For the other macroblock modes, 16 * 16 (S) or 16 * 8 (E) motion compensation modes can be used.
      <br/>
      For F macroblock mode, dual-prime (D) motion compensation mode can also be used.
    </p>
    <p num="42">
      The MPEG standards can be used with both constant-bit-rate and variable-bit-rate transmission and storage media.
      <br/>
      The number of bits in each picture will be variable, due to the different types of picture processing, as well as the inherent variation with time of the spatio-temporal complexity of the scene being coded.
      <br/>
      The MPEG standards use a buffer-based rate control strategy, in the form of a Virtual Buffer Verifier (VBV), to put meaningful bounds on the variation allowed in the bit rate.
      <br/>
      As depicted in FIG. 1, the VBV is devised as a decoder buffer 101 followed by a hypothetical decoder 103, whose sole task is to place bounds on the number of bits used to code each picture so that the overall bit rate equals the target allocation and the short-term deviation from the target is bounded.
      <br/>
      The VBV can operate in either constant-bit-rate or variable-bit-rate mode.
    </p>
    <p num="43">
      In constant-bit-rate mode, the buffer is filled at a constant bit rate with compressed data in a bit stream from the storage or transmission medium.
      <br/>
      Both the buffer size and the bit rate are parameters that are transmitted in the compressed bit stream.
      <br/>
      After an initial delay, which is also derived from information in the bit stream, the hypothetical decoder instantaneously removes from the buffer all of the data associated with the first picture.
      <br/>
      Thereafter, at intervals equal to the picture rate of the sequence, the decoder removes all data associated with the earliest picture in the buffer.
    </p>
    <p num="44">
      The operation of the VBV is shown by example in FIG. 7.
      <br/>
      The figure depicts the fullness of the decoder buffer over time.
      <br/>
      The buffer starts with an initial buffer fullness of Bi after an initial delay of time T0.
      <br/>
      The sloped line segments show the compressed data entering the buffer at a constant bit rate.
      <br/>
      The vertical line segments show the instantaneous removal from the buffer of the data associated with the earliest picture in the buffer.
      <br/>
      In this example, the pictures are shown to be removed at a constant interval of time T. In general, the picture display interval, i.e., the time interval between the removal of consecutive pictures, may be variable.
    </p>
    <p num="45">
      For the bit stream to satisfy the MPEG rate control requirements, it is necessary that all the data for each picture be available within the buffer at the instant it is needed by the decoder and that the decoder buffer does not overfill.
      <br/>
      These requirements translate to upper (Uk) and lower (Lk) bounds on the number of bits allowed in each picture (k).
      <br/>
      The upper and lower bounds for a given picture depend on the number of bits used in all the pictures preceding it.
      <br/>
      For example, the second picture may not contain more than U2 bits since that is the number of bits available in the buffer when the second picture is to be removed, nor less than L2 bits since removing less than L2 bits would result in the buffer overflowing with incoming bits.
      <br/>
      It is a function of the encoder to produce bit streams that can be decoded by the VBV without error.
    </p>
    <p num="46">
      For constant-bit-rate operation, the buffer fullness just before removing a picture from the buffer is equal to the buffer fullness just before removing the previous picture minus the number of bits in the previous picture plus the product of the bit rate and the amount of time between removing the picture and the previous picture; i.e.,
      <br/>
      buffer fullness before remove pic=buffer fullness before remove last pic-bits in last pic+time between pic and last pic * bit rate
    </p>
    <p num="47">
      The upper bound for the number of bits in a picture is equal to the buffer fullness just before removing that picture from the buffer.
      <br/>
      The lower bound is the greater of zero bits or the buffer size minus the buffer fullness just before removing that picture from the buffer plus the number of bits that will enter the buffer before the next picture is removed.
      <br/>
      The buffer fullness before removing a given picture depends on the initial buffer fullness and the number of bits in all of the preceding pictures, and can be calculated by using the above rules.
    </p>
    <p num="48">
      Variable-bit-rate operation is similar to the above, except that the compressed bit stream enters the buffer at a specified maximum bit rate until the buffer is full, when no more bits are input.
      <br/>
      This translates to a bit rate entering the buffer that may be effectively variable, up to the maximum specified rate.
      <br/>
      An example plot of the buffer fullness under variable-bit-rate operation is shown in FIG. 8.
      <br/>
      The buffer operates similarly to the constant-bit-rate case except that the buffer fullness, by definition, cannot exceed the buffer size of Bmax.
      <br/>
      This leads to an upper bound on the number of bits produced for each picture, but no lower bound.
    </p>
    <p num="49">
      For variable bit rate operation, the buffer fullness just before removing a picture from the buffer is equal to the size of the buffer or to the buffer fullness just before removing the previous picture minus the number of bits in the previous picture plus the maximum bit rate times the amount of time between removing the picture and the previous picture, whichever is smaller; i.e.,
      <br/>
      buffer fullness before remove pic=min(buffer fullness before remove last pic-bits in last pic+time between pic and last pic * bit rate, buffer size)
    </p>
    <p num="50">
      The upper bound for the number of bits in a picture is again equal to the buffer fullness just before removing that picture from the buffer.
      <br/>
      As mentioned earlier, the lower bound is zero.
      <br/>
      The buffer fullness before removing a given picture again depends on the initial buffer fullness and the number of bits in all of the preceding pictures, and can be calculated by using the above rules.
    </p>
    <p num="51">b. Preferred Embodiment of an Encoder</p>
    <p num="52">
      In accordance with an embodiment of the present invention, target allocation is based not only on the current state of the buffer and the estimated coding complexity of a picture, but also on statistics of the coding complexities of all the previously encoded pictures.
      <br/>
      The statistics in conjunction with the estimated coding complexity of the current picture are used to vary the instantaneous rate of encoding and allocate target bits for encoding the current picture.
      <br/>
      The current buffer level is used to bound the target so as to not to underflow or overflow the VBV buffer.
      <br/>
      Specifically, the current buffer level is used to compute the upper and lower bounds (Uk and Lk) for the current picture k as outlined in the previous section and the target is made to lie within these bounds, Lk &lt;= Tk &lt;= Uk.
    </p>
    <p num="53">
      FIG. 9 shows the components of an embodiment of the present invention and their interconnection.
      <br/>
      The Picture Coder 908 is of a conventional type, similar to the Picture Coder 205 of FIG. 2.
      <br/>
      The input video signal 900, F, is input to the Picture Coder which classifies this picture as one the three types I, P or B described previously.
      <br/>
      This information is sent out of the Picture Coder as Picture Type PT (signal 910).
      <br/>
      The Complexity Estimator 901 reads the Picture Type signal and the computed encoding complexity of previously encoded picture CM and estimates the encoding complexity (C) of the current picture.
      <br/>
      The CE sends the estimated encoding complexity (C) and the Picture Type (PT) to the Target Bits Allocator TBA (903) as signal 902 (CPT).
      <br/>
      The Complexity Statistics Accumulator 915 (CSM) also sends the parameters Statistical Complexity Measures (SCM) (signal 916) to the TBA.
      <br/>
      In addition, a set of parameters Unit Time Coding Parameters UTCP (signal 904) are input to the TBA.
      <br/>
      The UTCP specifies the average rate of coding RUT and the number of pictures of type I, P and B occurring per unit time.
      <br/>
      Unit time could be one second or half a second.
      <br/>
      The UTCP could either be fixed at the beginning of encoding or vary as encoding progresses.
      <br/>
      In the preferred embodiment, unit time is a second and the UTCP is fixed at the beginning of encoding.
      <br/>
      The TBA produces the target number of bits T (signal 905) for encoding a picture and sends this parameter to the Picture Coder (PC) and to the Excess Bits Computer 906 (EBC).
      <br/>
      The EBC cumulatively updates the mismatch between the target bits allocated and the actual bits produced by the Picture Coder after encoding a picture and sends this parameter EB (signal 907) to the Target Bit Allocator which uses it for allocating target bits for the next picture.
      <br/>
      The Picture Coder encodes the input video signal 900 using the Target Bits 905.
      <br/>
      The Picture Coder produces the Encoded Bits CD (signal 909), the Activity ACT (signal 911) and the Average Quantization AVEQ (signal 912) of a picture after encoding the picture.
      <br/>
      ACT is the spatial activity of a picture and AVEQ is the average value of the quantizations used for encoding the macroblocks of the picture.
      <br/>
      The Complexity Calculator 913 (CC) uses CD, AVEQ and ACT to calculate the Encoding Complexity CM (signal 914) of the current picture.
      <br/>
      The CSM uses CM and PT to update the Statistical Complexity Measures SCM.
    </p>
    <p num="54">
      Each of the components of FIG. 9 can be embodied in hardware or as software instantiated in the memory of a general purpose computer.
      <br/>
      Preferably, all of the components--the Picture Coder, Complexity Estimator, Target Bits Allocator, Excess Bits Computer, Complexity Calculator and Complexity Statistics Accumulator will be embodied as a hardware component or circuit board with associated microcode control.
      <br/>
      The preferred embodiments of each of the above components will now be described.
    </p>
    <p num="55">
      The Complexity Estimator 901 estimates the encoding complexity of the current picture k as the computed complexity of the previous picture of the same type, i.e., Ck =CMppst where ppst indicates the previous encoded picture of the same type and k denotes the time index.
      <br/>
      PTk is used to determine the type of the current picture.
      <br/>
      For example, if pictures k-5, k-4, k-3, k-2, k-1, k, k+1 are of types P, B, B, P, B, B, I respectively, then Ck =CMk-1, Ck-1 =CMk-3 and Ck-2 =CMk-5.
    </p>
    <p num="56">The Excess Bits Computer 906 accumulates the mismatch between the Target Bits Tk and the Encoded Bits CDk for picture k to produce the Excess Bits EBk after encoding picture k as: EBk =EBk-1 +Tk -CDk.</p>
    <p num="57">The Complexity Calculator 913 calculates the complexity of each picture after it is encoded as:  (Equation image '1' not included in text)</p>
    <p num="58">
      The Activity ACTk could be the spatial or the spatio-temporal activity of an encoded picture.
      <br/>
      In the preferred embodiment, ACTk is the spatial activity computed as the variance of the pixel values of the picture.
      <br/>
      Since the variance is a well known parameter in the art, it will not be further described.
    </p>
    <p num="59">
      The Picture Coder 908 is of the type in FIG. 2 which processes the input video signal Fk and based on the Target Bits Tk computes a nominal value of quantization to be used for the picture.
      <br/>
      It classifies the picture k as one of three types I,P or B and based on the classification performs motion compensation followed by discrete cosine transform, quantization and lossless coding.
      <br/>
      These steps have been explained in brief earlier and are well known in the art and will not be further described.
      <br/>
      In the preferred embodiment, the Picture Coder used is the one as described in a previously issued patent to Gonzales et. al., Pat. No. 5,231,484.
    </p>
    <p num="60">
      There are six parameters stored in the Complexity Statistics Accumulator 915 (CSA).
      <br/>
      The parameters are the Statistical Complexity Measure for each picture type SCMI, SCMP, SCMB and the number of pictures of each type NI, NP and NB encoded so far.
      <br/>
      FIG. 10 shows the CSA in greater detail.
      <br/>
      The Picture Number Updater 1001 (PNU) reads the Picture Type PTk (signal 1000) and updates the number of pictures encoded so far of that particular type of picture.
      <br/>
      For example, in the previous example illustration, since picture k is of type B, the Picture Coder makes the PTk signal denote a B picture.
      <br/>
      The PNU reads this signal and updates the number of B pictures encoded to be
      <br/>
      NB =NB+ 1
    </p>
    <p num="61">
      The PNU then sends the Updated Picture Number And Type UPNAT (signal 1002) to the Complexity Measure Updater 1004 (CMU).
      <br/>
      The CMU also reads in the computed complexity CMk (signal 1003) of picture k and updates one of the three Statistical Complexity Measures as determined by the UPNAT signal.
      <br/>
      In the previous example, since picture k is a type B picture, SCMB is updated while SCMI, SCMP are left unchanged.
      <br/>
      The update is  (Equation image '2' not included in text)
    </p>
    <p num="62">
      If picture k were a type I or P picture, the above update equation is suitably modified using SCMI, NI or SCMP, NP respectively.
      <br/>
      The CMU then sends the updated Statistical Complexity Measures SCM (signal 1005) to the TBA.
      <br/>
      The SCM consists of the Statistical Complexity Measure of the three types of pictures, i.e.,
      <br/>
      SCM=+SCMI, SCMP, SCMB }
    </p>
    <p num="63">
      Signals SCM, Ck, EBk-1, UTCP and PTk are input to the TBA which allocates a target number of bits for encoding picture k. FIG. 11 shows the TBA in greater detail.
      <br/>
      The TBA consists of two components: the Instantaneous Rate Calculator 1101 (IRC) and the Target Calculator 1106 (TC).
      <br/>
      The estimated coding complexities of the three types of pictures CI, CP and CB are stored in the IRC.
      <br/>
      The estimated complexity of the current picture Ck (signal 1100) in conjunction with the Picture Type signal Pk (signal 1102) is used to update the estimated complexity for the picture of the appropriate type (Step 1 below).
      <br/>
      The IRC also receives the UTCP (signal 1103) and the SCM (signal 1104).
      <br/>
      The IRC calculates the instantaneous rate in the following sequence of steps:
    </p>
    <p num="64">Step 1: If PTk denotes picture type I, CI =Ck else if PTk denotes picture type P CP =Ck else CB =Ck.</p>
    <p num="65">Step 2: From the Unit Time Coding Parameters (UTCP) signal 1103 extract the number of pictures of each type per unit time NIUT, NPUT, NBUT and the desired average coding rate per unit time RUT.</p>
    <p num="66">Step 3: From the SCM signal 1104 extract the parameters SCMI, SCMP, SCMB which denote the Statistical Complexity Measures of picture types I, P and B.</p>
    <p num="67">Step 4: Calculate the instantaneous coding rate RI as  (Equation image '3' not included in text)</p>
    <p num="68">
      The IRC sends the Picture Coding Parameters PCP (signal 1105) to the Target Calculator 1106.
      <br/>
      The Target Calculator extracts the instantaneous coding rate RI, the number of pictures of each type per unit time (NIUT, NPUT, NBUT),the estimated coding complexity of each type of picture (CI, CP, CB) and the Picture Type PTk signal from the PCP.
      <br/>
      The Excess Bits EBk-1 (signal 1107) is also fed into the Target Calculator.
      <br/>
      This unit then calculates the target as:  (Equation image '4' not included in text)
    </p>
    <p num="69">
      where Ck =CI if PTk denotes an I picture, Ck =CP if PTk denotes a P picture else Ck =CB.
      <br/>
      The Target Calculator also computes the upper (Uk) and lower (Lk) bounds on the target before an underflow or overflow can occur and limits the target to lie within these bounds:
      <br/>
      If Tk &gt;= Uk then Tk =Uk
      <br/>
      If Tk &lt;= Lk then Tk =Lk
    </p>
    <p num="70">
      The computation of Uk, Lk is carried on as outlined earlier.
      <br/>
      The computed Target Bits Tk (signal 1108) is sent to the Picture Coder.
    </p>
    <p num="71">
      Conceptually, the task of the Complexity Statistics Accumulator is to estimate the average encoding complexity of the entire video sequence based on using all of the past encoded information.
      <br/>
      The first component of the TBA, namely the IRC, uses this estimate to modulate the rate of encoding at that instant to be either greater than, lesser than or equal to the average rate of encoding RUT.
      <br/>
      The strength of modulation and whether the instantaneous rate of encoding is greater, less or equal to the average rate is dependent on the ratio of the estimated complexities to the estimated average of the complexities (or the Statistical Complexity Measure.) The estimated complexities will be greater than the SCM if the most recent pictures encoded are more complex than the average.
      <br/>
      In this situation, the instantaneous rate will be greater than the average rate.
      <br/>
      Similarly, if the most recently coded pictures are less complex than the SCM, the instantaneous rate will be smaller than the average.
      <br/>
      In this manner, quality of encoding is maintained with less complex pictures being allocated less bits while more complex picture being allocated more bits for encoding.
      <br/>
      The Statistical Complexity Measure is used to determine if a picture is less complex or more complex.
      <br/>
      Those skilled in the art will recognize that other statistical measures (for example the median of complexities of all previously encoded picture of a certain type) could well be used in place of the equation used by the Complexity Measure Updater.
    </p>
    <p num="72">c. Another Embodiment of an Encoder</p>
    <p num="73">
      In a second embodiment, all the components in FIG. 9 remain the same except the Complexity Statistics Accumulator and the Target Bits Allocator.
      <br/>
      The CSA in this case updates the Statistical Complexity Measure as follows:
    </p>
    <p num="74">If PTk indicates picture of type I, then  (Equation image '5' not included in text)</p>
    <p num="75">Else if PTk indicates picture of type P, then  (Equation image '6' not included in text)</p>
    <p num="76">
      where MI, MP, MB are some fixed numbers.
      <br/>
      In the preferred embodiment, MI =MP =MB =1024.
    </p>
    <p num="77">
      The TBA has as inputs signals SCM, Ck, EBk-1, UTCP and PTk.
      <br/>
      FIG. 12 shows the TBA in greater detail.
      <br/>
      The TBA consists of two components: the Target Computer 1201 (TC) and the Target Modifier 1207 (TM).
      <br/>
      The estimated coding complexities of the three types of pictures CI, CP and CB are stored in the TC.
      <br/>
      The estimated complexity of the current picture Ck (signal 1200) in conjunction with the Picture Type signal Pk (signal 1202) is used to update the estimated complexity for the picture of the appropriate type (Step 1 below).
      <br/>
      The TC also receives the UTCP (signal 1203) and the EBk-1 (signal 1204).
      <br/>
      The TC computes a intermediate target for picture k as follows:
      <br/>
      Step 1: If PTk denotes picture type I, CI =Ck else if PTk denotes picture type P CP =Ck else CB =Ck.
    </p>
    <p num="78">Step 2: From the Unit Time Coding Parameters (UTCP) signal 1203 extract the number of pictures of each type NIUT, NPUT, NBUT per unit time and the desired average coding rate per unit time RUT.</p>
    <p num="79">Step 3: Calculate the intermediate target Tinter as  (Equation image '7' not included in text)</p>
    <p num="80">
      where Ck =CI if PTk denotes an I picture, Ck =CP is PTk denotes a P picture else Ck =CB.
      <br/>
      The Target Computer also computes the upper (Uk) and lower (Lk) bounds on the target before an underflow or overflow can occur.
      <br/>
      The Tinter, Uk, Lk, PTk are input to the Target Modifier as TP (signal 1205).
      <br/>
      The other inputs to the TM are the Statistical Complexity Measures.
      <br/>
      The Target Modifier computes the final target Tk for picture k in the following way:
      <br/>
      Step 1: Does PTk denote a picture of type I? If no, go to Step 2.
      <br/>
      If yes:
    </p>
    <p num="81">- If CI &gt;= SCMI,  (Equation image '8' not included in text)</p>
    <p num="82">Go to Step 4.</p>
    <p num="83">
      Step 2: Does PTk denote a picture of type P? If no, go to Step 3.
      <br/>
      If yes:
      <br/>
      - If CP &gt;= SCMP,  (Equation image '9' not included in text)
    </p>
    <p num="84">Go to Step 4.</p>
    <p num="85">
      Step 3: If CB &gt;= SCMB,  (Equation image '10' not included in text)
      <br/>
      Step 4:
      <br/>
      If Tk &gt;= Uk then Tk =Uk
      <br/>
      If Tk &lt;= Lk then Tk =Lk
    </p>
    <p num="86">
      The computed Target Bits Tk (signal 1108) is sent to the Picture Coder (please refer to FIG. 9).
      <br/>
      In the above steps  ALPHA  is a scaling parameter which is a number greater than zero.
      <br/>
      In this embodiment of the encoder,  ALPHA =0.33.
    </p>
    <p num="87">
      Conceptually, the above method of allocating targets amounts to first determining target bits (intermediate target) so as to generate on the average RUT bits.
      <br/>
      Then based on the VBV buffer level, the target is allocated as either greater than, less than or equal to the intermediate target depending on whether the estimated complexity of the current picture is greater than, less than or equal to the Statistical Complexity Measure of the picture of the same type.
      <br/>
      Again, as in the preferred embodiment, the goal is to allocate more bits to more complex pictures and less bits to less complex pictures as indicated by the estimated complexity and the estimated average coding complexity (or the Statistical Complexity Measure).
      <br/>
      Thus, we seek to maintain the encoding quality of all pictures by allocating more or less bits as indicated by the above description.
      <br/>
      The Statistical Complexity Measure computed in the second embodiment is different from that in the preferred embodiment in that all previously encoded pictures do not have the same contribution to the SCM.
      <br/>
      Unlike in the preferred embodiment, recently encoded pictures have greater contribution to the SCM than encoded pictures more in the past.
      <br/>
      In this way, the SCM is affected to a greater degree by the spatio-temporal variations in the video sequence of different pictures.
    </p>
    <p num="88">
      While the invention has been described for MPEG encoding, it can be used with other video coding techniques or even with non- video data.
      <br/>
      Indeed, any digital information can be segmented into coding units, and bits allocated to the coding units (for fixed rate or variable rate encoding).
      <br/>
      The coding units can then be encoded based on the allocation.
      <br/>
      The techniques described for bit allocation will work whether or not the data is video.
      <br/>
      For example, digitized speech can be segmented into one millisecond frames (these audio frames would play the same role as the video pictures) and bits can be allocated for each millisecond of audio (the coding units).
    </p>
    <p num="89">
      Now that the invention has been described by way of the preferred embodiment, various modifications and improvements will occur to those skilled in the art.
      <br/>
      Thus, it should be understood that the preferred embodiment has been provided as an example and not as a limitation.
      <br/>
      The scope of the invention is defined by the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>We claim:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A method comprising:</claim-text>
      <claim-text>a method for encoding of ordered coding units comprising the steps of:</claim-text>
      <claim-text>- modeling the encoding complexity of previously encoded coding units based on the data generated after encoding said units; - accumulating statistics of the encoding complexities of all previously encoded coding units; - estimating the encoding complexity of the next coding unit to be encoded; - assigning a number of bits to the next coding unit to be encoded based on a function of the accumulated statistics, the estimated encoding complexity, the number of coding units per unit time interval and the desired average rate per unit time interval; - the data is video data; - the coding units are pictures; the method for encoding applied to MPEG video encoding wherein said steps of accumulating statistics is done by computing the running means using the equations:  (Equation image '11' not included in text)</claim-text>
      <claim-text>wherein NI, NP, NB are the number of pictures of each type encoded thus far, CMk is the encoding complexity of picture with time index k and SCMI SCMP, SCMB are the accumulated statistics of the encoding complexities of pictures of types I, P, B respectively.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. A method of comprising: a method for encoding of ordered coding units comprising the steps of: - modeling the encoding complexity of previously encoded coding units based on the data generated after encoding said units; - accumulating statistics of the encoding complexities of all previously encoded coding units; - estimating the encoding complexity of the next coding unit to be encoded; - assigning a number of bits to the next coding unit to be encoded based on a function of the accumulated statistics, the estimated encoding complexity, the number of coding units per unit time interval and the desired average rate per unit time interval; - the data is video data; - the coding units are pictures; the method for encoding applied to MPEG video encoding wherein said steps of accumulating statistics is done by computing the filtered running means using the equations:  (Equation image '12' not included in text)</claim-text>
      <claim-text>wherein NI, NP, NB are the same or different numbers, CKk is the encoding complexity of picture with time index k and SCMI SCMP, SCMB are the accumulated statistics of the encoding complexities of pictures of types I, P, B respectively.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. A method comprising: a method for encoding of ordered coding units comprising the steps of: - modeling the encoding complexity of previously encoded coding units based on the data generated after encoding said units; - accumulating statistics of the encoding complexities of all previously encoded coding units; - estimating the encoding complexity of the next coding unit to be encoded; - assigning a number of bits to the next coding unit to be encoded based on a function of the accumulated statistics, the estimated encoding complexity, the number of coding units per unit time interval and the desired average rate per unit time interval; - the data is video data; - the coding units are pictures; the method for encoding applied to MPEG video coding wherein an instantaneous coding rate of RI is found as a function of the desired average coding rate per unit time interval RUT, the number of pictures of each type NIUT, NPUT, NBUT to be encoded in a unit time interval, the estimated encoding complexities CI, CP, CB of each type of picture and the accumulated statistics of the encoding complexities SCMI, SCMP, SCMB of previously encoded pictures of each type;</claim-text>
      <claim-text>and allocating target number of bits Tk to a picture to be encoded as a function of the instantaneous coding rate, the accumulated mismatch between target number of bits allocated and actual number of bits produced for all previously encoded pictures EBk-1, the estimated encoding complexity Ck of the picture to be encoded, the parameters NIUT, NPUT, NBUT, CI, CP, CB, and the upper and lower bounds on the bits that can be produced for the picture to be encoded before underflowing Uk or overflowing Lk the virtual buffer verifier wherein k is the time index.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3 wherein the said functions are  (Equation image '13' not included in text)  If Tk &gt;= Uk then Tk =Uk</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5.</claim-text>
      <claim-text>A method comprising: a method for encoding of ordered coding units comprising the steps of: - modeling the encoding complexity of previously encoded coding units based on the data generated after encoding said units; - accumulating statistics of the encoding complexities of all previously encoded coding units; - estimating the encoding complexity of the next coding unit to be encoded; - assigning a number of bits to the next coding unit to be encoded based on a function of the accumulated statistics, the estimated encoding complexity the number of coding units per unit time interval and the desired average rate per unit time interval; - the data is video data; - the coding units are pictures; the method for encoding applied to MPEG video coding wherein an intermediate target number of bits Tinter is computed as a function of the desired average coding rate per unit time interval RUT, the number of pictures of each type NIUT, NPUT, NBUT to be encoded in a unit time interval, the estimated encoding complexities CI, CP, CB of each type of picture and the accumulated mismatch between target number of bits allocated and actual number of bits produced for all previously encoded pictures EBk-1 ;</claim-text>
      <claim-text>and allocating target number of bits Tk to a picture to be encoded as a function of the intermediate target number of bits, the estimated encoding complexity Ck of the picture to be encoded and the accumulated statistics of the encoding complexities SCMI, SCMP, SCMB of previously encoded pictures of each type;</claim-text>
      <claim-text>and the upper and lower bounds on the bits that can be produced for the picture to be encoded before underflowing Uk or overflowing Lk the virtual buffer verifier wherein k is the time index.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A method of claim 5 wherein said functions for allocating a number of bits (Tk) to the picture to be coded comprises the equations:  (Equation image '14' not included in text)</claim-text>
      <claim-text>where in  ALPHA  is a number greater than zero.</claim-text>
    </claim>
  </claims>
</questel-patent-document>