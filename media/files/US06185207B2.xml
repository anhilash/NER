<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06185207B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06185207</doc-number>
        <kind>B2</kind>
        <date>20010206</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6185207</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference is-representative="YES" family-id="25372622" extended-family-id="42113200">
      <document-id>
        <country>US</country>
        <doc-number>08878702</doc-number>
        <kind>A</kind>
        <date>19970619</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1997US-08878702</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>43171301</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>87870297</doc-number>
        <kind>A</kind>
        <date>19970619</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1997US-08878702</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010206</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H03M  13/09        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>03</class>
        <subclass>M</subclass>
        <main-group>13</main-group>
        <subgroup>09</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  12/56        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>56</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>370392000</text>
        <class>370</class>
        <subclass>392000</subclass>
      </main-classification>
      <further-classification sequence="1">
        <text>370401000</text>
        <class>370</class>
        <subclass>401000</subclass>
      </further-classification>
      <further-classification sequence="2">
        <text>370428000</text>
        <class>370</class>
        <subclass>428000</subclass>
      </further-classification>
      <further-classification sequence="3">
        <text>714751000</text>
        <class>714</class>
        <subclass>751000</subclass>
      </further-classification>
    </classification-national>
    <classifications-ecla>
      <classification-ecla sequence="1">
        <text>H03M-013/09</text>
        <section>H</section>
        <class>03</class>
        <subclass>M</subclass>
        <main-group>13</main-group>
        <subgroup>09</subgroup>
      </classification-ecla>
      <classification-ecla sequence="2">
        <text>H04L-049/35A</text>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>049</main-group>
        <subgroup>35A</subgroup>
      </classification-ecla>
    </classifications-ecla>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H03M-013/09</classification-symbol>
        <section>H</section>
        <class>03</class>
        <subclass>M</subclass>
        <main-group>13</main-group>
        <subgroup>09</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-049/30</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>49</main-group>
        <subgroup>30</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-049/351</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>49</main-group>
        <subgroup>351</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="ICO"/>
        <classification-symbol>T04L-049/30</classification-symbol>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>25</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>3</number-of-drawing-sheets>
      <number-of-figures>3</number-of-figures>
      <image-key data-format="questel">US6185207</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Communication system having a local area network adapter for selectively deleting information and method therefor</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>HART JOHN H, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4809265</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4809265</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>SMITH DAVID D</text>
          <document-id>
            <country>US</country>
            <doc-number>5400326</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5400326</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="3">
          <text>MCCLURE R BRUCE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5657314</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5657314</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="4">
          <text>HASHIMOTO AKIRA</text>
          <document-id>
            <country>US</country>
            <doc-number>5815668</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5815668</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="5">
          <text>GOBUYAN JEROME, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5917821</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5917821</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="6">
          <text>BACKES FLOYD J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5956335</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5956335</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="7">
          <text>VARGHESE GEORGE, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5963556</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5963556</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="8">
          <text>PICAZO JR JOSE J, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6006275</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6006275</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="9">
          <text>HENDEL ARIEL, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>6014380</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6014380</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="10">
          <text>SHANI RON</text>
          <document-id>
            <country>US</country>
            <doc-number>6023563</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US6023563</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="11">
          <text>DAVIS GORDON T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>4991133</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US4991133</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="12">
          <text>GULICK DALE E, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5048012</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5048012</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="13">
          <text>LUCAK MARK A, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5153884</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5153884</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="14">
          <text>KUNISAKI OSAMU, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5155857</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5155857</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="15">
          <text>VELAZQUEZ JUAN F</text>
          <document-id>
            <country>US</country>
            <doc-number>5191585</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5191585</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="16">
          <text>BARDET GERARD, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5260936</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5260936</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="17">
          <text>DAVIS GORDON T, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5347514</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5347514</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="18">
          <text>HODGE DEAN Y, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5388109</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5388109</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="19">
          <text>CALVIGNAC JEAN, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5557608</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5557608</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>International Business Machines Corporation</orgname>
            <address>
              <address-1>Armonk, NY, US</address-1>
              <city>Armonk</city>
              <state>NY</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>IBM</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>LaBerge, Peter Anthony</name>
            <address>
              <address-1>Apex, NC, US</address-1>
              <city>Apex</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Logan, Joseph Franklin</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="3">
          <addressbook lang="en">
            <name>McDonald, Joseph Gerald</name>
            <address>
              <address-1>Raleigh, NC, US</address-1>
              <city>Raleigh</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="4">
          <addressbook lang="en">
            <name>Paussa, Gregory Francis</name>
            <address>
              <address-1>Cary, NC, US</address-1>
              <city>Cary</city>
              <state>NC</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <name>Kordzik, Kelly K.</name>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Cockburn, Joscelyn G.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>Nguyen, Chau</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>LAPSED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A LAN adapter is implemented in the communication system to selectively exclude four bytes of the CRC value appended to an end of a frame's information field through the use of a configuration bit in a register.
      <br/>
      By programming this configuration bit to have a specific logic value, the four-bytes of the CRC value may be selectively copied, together with the data in the frame, into a destination computer system's main memory.
      <br/>
      Additionally, regardless of the setting of this configuration bit, the four-bytes of the CRC value will always be used to check the integrity of the data in the frame.
      <br/>
      Stated another way, the configuration bit will only affect whether the four-bytes of the CRC value will be transferred as part of the frame after the CRC check operation has been performed.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <heading>TECHNICAL FIELD</heading>
    <p num="1">The present invention relates in general to local area network adapters, and in particular, to local area network adapters which receive cyclic redundancy check (CRC) data.</p>
    <heading>BACKGROUND INFORMATION</heading>
    <p num="2">
      In modern computing environments, computer systems are often interconnected using local area networks, also referred to as LANs.
      <br/>
      LANs allow computer-to-computer and processor-to-processor communications.
      <br/>
      In many environments, this networking concept is extended so that multiple LANs are networked together through the use of intermediate nodes or gateways.
      <br/>
      Inherent in the communication between computers or data processing systems is a protocol which transfers data and control information necessary for proper communication of the systems.
      <br/>
      When this communication protocol is utilized, the information is transferred in packets, or frames.
      <br/>
      Within these packets or frames, communications-related control information and data values are typically transmitted.
    </p>
    <p num="3">
      The data information is the actual data that one device is communicating to another over the LAN.
      <br/>
      The control information is the information required by the communications protocol to send the packet over the network from one computing system to another.
      <br/>
      Such control information is usually one of a "header" or a "trailer" of a packet.
      <br/>
      Control information in the header is generally interpreted by a communications protocol processor before the packet is passed on to a receiving application.
      <br/>
      Control information typically included in the header of a packet includes information such as a source address, a destination address and routing information.
      <br/>
      Furthermore, control information in a trailer of a packet generally includes cyclic redundancy checking (CRC) information.
      <br/>
      Typically, a transmitting data processing system sends a packet of data information and then appends to it an appropriate computed CRC value.
      <br/>
      At the receiving data processing system, a receiving node will calculate its own CRC value and compare its CRC value with the CRC value received from the data transmitting system.
      <br/>
      When the two are different, this indicates that an error occurred during transmission of the data packet.
    </p>
    <p num="4">
      While this protocol is typically used by most data processing applications, this protocol also limits the performance which may be achieved by a system.
      <br/>
      The use of the CRC value typically requires at least the final four bytes of a packet, or frame, to be used to provide a CRC value.
      <br/>
      In a communications environment which has been developed and utilized extensively, every savings and performance improvement is necessary and significant.
      <br/>
      Therefore, the requirement that the final four bytes of a frame always be used for providing a CRC value may prove to be a necessary evil.
    </p>
    <p num="5">Therefore, a need exists for a communication system which provides for improvements in a communication system involving a LAN, while still maintaining the error checking capability of the CRC value.</p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="6">
      The previously mentioned needs are fulfilled with the present invention.
      <br/>
      Accordingly, there is provided, in a first form, a local area network adapter.
      <br/>
      The local area network adapter includes an input circuit for receiving a first plurality of information values and an output circuit for selectively transferring the first plurality of information values.
      <br/>
      The local area network adapter also includes a configuration register for storing a configuration value.
      <br/>
      The configuration value is used to selectively enable the output circuit to transfer a portion of the first plurality of information values when the configuration value is in a first logic state.
    </p>
    <p num="7">
      Additionally, there is provided, in a second form, a method of operating a local area network adapter.
      <br/>
      The method includes the steps of receiving a first plurality of information values and storing a configuration value in a register.
      <br/>
      The method also includes the step of selectively enabling an output circuit to transfer a portion of the first plurality of information values when the configuration value is in a first logic state.
    </p>
    <p num="8">
      Furthermore, there is provided, in a third form, a communication system.
      <br/>
      The communication system includes a first local area network adapter.
      <br/>
      The first local area network adapter includes an input circuit for receiving a first plurality of information values and an output circuit for selectively transferring a second plurality of information values.
      <br/>
      The first local area network adapter also includes a first configuration register for storing a first configuration value.
      <br/>
      The first configuration value enables the output circuit to transfer a portion of the first plurality of information values as the second plurality of information values when the first configuration value is in a first logic state.
      <br/>
      The communication system also includes a memory connected to the output circuit for storing the second plurality of information values.
    </p>
    <p num="9">
      There is also provided, in a fourth form, a method of operating a communication system.
      <br/>
      The method includes the steps of receiving a first plurality of information values in a first local area network adapter and storing a first configuration value in a first configuration register in the first local area network adapter.
      <br/>
      The method also includes the steps of enabling an output circuit to transfer a portion of the first plurality of information values as the second plurality of information values when the first configuration value is in a first bit logic state and a step of storing the second plurality of information values in a memory.
    </p>
    <p num="10">
      These and other features, and advantages, will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings.
      <br/>
      It is important to note the drawings are not intended to represent the only form of the invention.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="11">
      For a more complete understanding of the present invention, and the advantages thereof, reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:
      <br/>
      FIG. 1 illustrates, in block diagram form, a communication system in accordance with one embodiment to the present invention;
      <br/>
      FIG. 2 illustrates, in block diagram form, a communication system in accordance with one embodiment of the present invention; and
      <br/>
      FIG. 3 illustrates, in flow chart form, a state machine in accordance with one embodiment of the present invention.
    </p>
    <heading>DETAILED DESCRIPTION</heading>
    <p num="12">
      The present invention implements a LAN adapter which selectively excludes the four bytes of a CRC value appended to the end of a frame's information field through the use of a configuration bit in a register.
      <br/>
      By programming this configuration bit to have a specific logic value, the four-bytes of the CRC value may be selectively copied, together with the data in a frame, into a destination computer system's main memory.
      <br/>
      Additionally, regardless of the setting of this configuration bit, the four-bytes of the CRC value will always be used to check the integrity of data in the frame.
      <br/>
      The configuration bit only affects whether the four-bytes of the CRC value will be transferred as part of the frame after the CRC check operation has been performed.
      <br/>
      A more detailed description of operation of the present invention will subsequently be provided.
    </p>
    <p num="13">
      In the following description, numerous specific details are set forth such as specific word or byte lengths, etc. to provide a thorough understanding of the present invention.
      <br/>
      However, it will be obvious to those skilled in the art that the present invention may be practiced without such specific details.
      <br/>
      In other instances, well-known circuits have been shown in block diagram form in order not to obscure the present invention in unnecessary detail.
      <br/>
      For the most part, details concerning timing considerations and the like have been omitted inasmuch as such details are not necessary to obtain a complete understanding of the present invention and are within the skills of persons of ordinary skill in the relevant art.
    </p>
    <p num="14">Refer now to the drawings wherein depicted elements are not necessarily shown to scale and wherein like or similar elements are designated by the same reference numeral through the several views.</p>
    <p num="15">
      FIG. 1 illustrates a system environment in accordance with one embodiment to the present invention.
      <br/>
      The following discussion will provide a general overview of operation of the system environment in which the present invention is implemented.
      <br/>
      Therefore, the following example will provide a step by step description of operation which illustrates a relationship between LAN 10 and LAN 44 when computer workstation 38 transmits a frame of information to computer workstation 42.
    </p>
    <p num="16">
      During operation, main processor 16 in computer workstation 38 creates a frame of information in its main memory 18.
      <br/>
      This frame of information is to be transmitted to computer workstation 42.
      <br/>
      As created, the frame of information includes a header and an information field, but no CRC value.
      <br/>
      Main processor 16 signals LAN adapter 12 to enable the transmission of the frame of information onto LAN 10.
      <br/>
      Additionally, main processor 16 signals LAN adapter 12 to generate and append a valid CRC value to the end of the frame of information.
    </p>
    <p num="17">
      LAN adapter 20, in computer 40, recognizes that the destination of the frame is on LAN 44.
      <br/>
      Therefore, computer 40 copies the frame of information into its main memory 28.
      <br/>
      LAN adapter 20 uses a CRC value at the end of the frame to check the integrity of the frame data.
      <br/>
      In addition, its "Receive CRC Configuration Bit" (not illustrated in FIG. 1) is set to enable the frame data, along with the CRC value, to be copied into main memory 28.
      <br/>
      It is the use and implementation of the Receive CRC Configuration Bit that is the subject of the present invention.
    </p>
    <p num="18">
      Upon receiving the frame, main processor 26 of computer 40 enables LAN adapter 22 to transmit the frame onto LAN 44, while re-using the CRC value that is already appended to the end of the frame.
      <br/>
      No new CRC value is generated by computer 40.
      <br/>
      Stated another way, the CRC value used on LAN 20 is passed to LAN 44.
    </p>
    <p num="19">
      LAN adapter 30 in computer workstation 42 recognizes that the frame of information is addressed to it and copies the frame of information into main memory 36.
      <br/>
      LAN adapter 30 uses a CRC value at the end of the frame to check the integrity of the frame data.
      <br/>
      However, assume that in this case the Receive CRC Configuration Bit within LAN adapter 30 is set to cause only the frame data, without the CRC value, to be copied into main memory 36.
      <br/>
      Thus, as the CRC value is four bytes long, by setting the Receive CRC Configuration Bit to cause only the frame data, and not the CRC value, to be copied into main memory 36, four bytes of data space may be saved within main memory 36.
    </p>
    <p num="20">
      In conclusion, computer 40 copies the CRC value into main memory (28), so that computer 40 may retransmit the frame with its original CRC value.
      <br/>
      However, the receiving computer workstation (42) does not need the CRC value copied into its main memory (36), because it does not have to forward the frame to another LAN and the local LAN adapter has already used the CRC to check the frame data before it was copied into its main memory.
    </p>
    <p num="21">
      FIG. 2 illustrates a communication system which implements one embodiment of the present invention in greater detail.
      <br/>
      Communication system 100 of FIG. 2 comprises a network 102, a local area network (LAN) adapter 104, a host bridge logic circuit 120, a main processor 122, and a main memory 124.
      <br/>
      LAN adapter 104 comprises a receive logic circuit 128, a transmit logic and CRC generator circuit 108, and a bus interface logic circuit 106.
      <br/>
      Receive logic 128 comprises a receive data de-serializer and CRC checker 116, a receive FIFO (first in first out) write state machine 114, a receive data FIFO 118, and a configuration register 110.
      <br/>
      Configuration register 110 further comprises a Receive CRC Configuration Bit 112.
    </p>
    <p num="22">
      Network 102 is coupled to receive data de-serializer and CRC checker 116.
      <br/>
      Receive data de-serializer and CRC checker 116 is coupled to receive FIFO write state machine 114 and receive data FIFO 118.
      <br/>
      Receive FIFO write state machine 114 is coupled to receive data FIFO 118 to provide a Write Enable signal.
      <br/>
      Configuration register 110 is coupled to receive FIFO write state machine 114 to provide the Receive CRC Configuration Bit 112.
      <br/>
      Receive data FIFO 118 is coupled to bus interface logic 106 to provide a Read Enable signal, a plurality of data values, and a Frame End signal.
      <br/>
      Bus interface logic 106 is bidirectionally coupled to configuration register 110 and coupled to transmit logic and CRC generator 108.
      <br/>
      Transmit logic and CRC generator 108 is coupled to network 102.
      <br/>
      Bus interface logic 106 is bidirectionally coupled to host bridge logic 120 via a system bus 126.
      <br/>
      Host bridge logic 120 is coupled to main processor 122 and main memory 124 via a processor/memory bus.
    </p>
    <p num="23">Operation of communication system 100 will subsequently be provided in greater detail.</p>
    <p num="24">
      As previously mentioned, local area networks (LANs) allow a group of workstations to communicate with one another via one logical network.
      <br/>
      As networks grow and more users are connected to a single LAN, multiple LANs may be required to meet the requirements of the additional users.
      <br/>
      However, inherent in this networking system is a requirement that all users be able to communicate with each other over the network, regardless of which LAN they are connected to.
      <br/>
      For this reason, a bridge network is required to bridge or route frames of information from one LAN to another.
    </p>
    <p num="25">
      During operation, such a bridge network evaluates frames transferred by both LANs and determines which of data are destined for a user on a local LAN and which frames of data are destined for a user on the other LAN.
      <br/>
      When the data is to be communicated with a user on the other LAN, the bridge network copies that information and supplies it to the other LAN to provide it to the ultimate station to which it is addressed.
      <br/>
      When performing this forwarding operation, a cyclic redundancy check (CRC) value is utilized to ensure that correct data is being forwarded between the LANs, and ultimately to the final user.
    </p>
    <p num="26">
      As previously mentioned, a CRC value generally comprises four bytes of data following an information field.
      <br/>
      This protocol is defined for many local area networks, such as Ethernet, Token-Ring, and FDDI (Fiber Distributed Data Interface).
      <br/>
      The CRC value is basically a protection mechanism which allows a LAN or a LAN adapter to determine when data in a frame of information being transmitted has been corrupted.
      <br/>
      During operation, when the CRC is copied from a first LAN to a second LAN as a frame of data is copied, that CRC value is used to check the data to make sure that it has been transferred without corruption.
      <br/>
      Therefore, when a data message is transferred from a first LAN having a first LAN adapter to a second LAN having a second LAN adapter, the data is transmitted in a frame, along with the CRC value, that ensures communications between two different LANs are successful and correct.
      <br/>
      After the data and CRC value are passed from the local LAN to a destination LAN, the CRC value will be checked by the LAN adapter connected by the destination LAN.
      <br/>
      After the CRC value has been checked, the CRC value can be deleted.
      <br/>
      Therefore, software within the destination LAN should only be required to transfer the data portion to internal memory therein.
    </p>
    <p num="27">
      Therefore, while some specific applications, like "bridges" that interconnect two LAN segments require the CRC value to be provided, a majority of applications do not require this information.
      <br/>
      Furthermore, although it is not needed in many applications, existing LAN adapters copy four bytes of the CRC value into a host computer system's main memory for every frame received from the network to be able to correctly transfer data on those situations that do require CRC value.
      <br/>
      Such prior art LAN adapters waste system bus and memory bandwidth.
      <br/>
      Additionally, the provision of CRC data into the host computer system's main memory also creates more overhead for device driver software controlling the communication system, since the device driver software must delete the CRC data before the frame is delivered to its application.
    </p>
    <p num="28">
      Thus, the present invention provides a technique for optionally deleting the CRC data from a frame of information as the frame is copied by a LAN adapter into a host computer system's main memory.
      <br/>
      Through the optional deletion of the CRC value, the present invention is designed to improve the LAN adapter's performance in applications where the CRC data is not needed, by eliminating unnecessary system bus and main memory transfers.
      <br/>
      Furthermore, overhead associated with the device driver software controlling a communication system which implements the present invention is reduced, as the device driver software is not required to delete the four bytes of the CRC data before providing the data onward.
    </p>
    <p num="29">
      The present invention implements a CRC configuration bit in a configuration register within the LAN adapter hardware.
      <br/>
      It should be known, however, that the LAN adapter may be implemented either in a discrete device, or as circuitry on a host bridge logic circuit, such as host bridge logic circuit 120, main processor 122, or main memory 124.
      <br/>
      Device driver software within the LAN adapter configures the CRC configuration bit during an initialization stage of operation prior to active use of the LAN and LAN adapter.
      <br/>
      The use of this configuration bit within communication system 100 of the present invention will subsequently be described in greater detail.
    </p>
    <p num="30">
      Refer now to FIG. 2.
      <br/>
      During operation of communication system 100 of FIG. 2, main processor 122 executes device driver software to configure Receive CRC Configuration Bit 112.
      <br/>
      The device driver software may be stored internally within main processor 122 or may be accessed from main memory 124 via the processor/memory bus.
      <br/>
      The data is transferred through host bridge logic circuit 120.
      <br/>
      It should be noted that host bridge logic 120 provides a bridging function between the processor/memory bus and system bus 126.
      <br/>
      Through the use of host bridge logic circuit 120, a function may be executed on both system bus 126 and the processor/memory bus concurrently.
      <br/>
      Host bridge logic circuit 120 also transfers data from one bus to the other, when data needs to be transferred from a device on one side of host bridge logic circuit 120 to LAN adapter 104.
      <br/>
      In this operation, host bridge logic circuit 120 transfers a write command from main processor 122 to system bus 126.
      <br/>
      The write command is subsequently transferred from bus interface logic 106 to enable control register 110 to be written with Receive CRC Configuration Bit 112.
      <br/>
      A logic state of Receive CRC Configuration Bit 112 is determined by the command issued by main processor 122.
      <br/>
      The steps required to write modify a bit value within a configuration register is well-known to those with skill in the relevant data processing art and, therefore, will not be described in greater detail herein.
    </p>
    <p num="31">After Receive CRC Configuration Bit 112 has been written to a logic value desired by an external user programming the device driver software, LAN adapter 104 is capable of either copying or deleting the CRC value in all frames of data as it is copied by LAN adapter 104 into main memory 124.</p>
    <p num="32">
      It should be noted that LAN adapter 104 includes both receive logic 128 and transmit logic and CRC generator 108.
      <br/>
      Through the inclusion of both receive and transmit capabilities, LAN adapter 104 operates as a bus master on system bus 126 by reading data from and writing data to main memory 124 via host bridge logic circuit 120.
      <br/>
      As previously mentioned, LAN adapter 104 performs such transfer operations under the direction of device driver software executing on main processor 122.
      <br/>
      LAN adapter 104 transmits frames of information by reading data from buffers (not illustrated) in main memory 124, and, then, sending the data over network (LAN) 102 to other LAN adapters (not illustrated herein).
      <br/>
      Additionally, LAN adapter 104 receives frames of information from other LAN adapters on network 102 and deposits this information into buffers in main memory 124.
    </p>
    <p num="33">
      Assume that LAN adapter 104 is receiving information from other LAN adapters within network 102.
      <br/>
      As data is received from network 102, the data is serially provided to receive data de-serializer and CRC checker 116.
      <br/>
      The receive data de-serializer and CRC checker 116 forms the serial information transmitted thereto into multi-bit data values which may be transmitted in parallel to receive data FIFO 118.
      <br/>
      It should be noted that in one embodiment of the present invention, receive data de-serializer and CRC checker circuit 116 forms the serial information stream provided thereto into 32-bit units.
      <br/>
      However, it should be well-known to those with skill in the data processing art that the serial data provided from network 102 may be placed within any number of units of parallel data.
    </p>
    <p num="34">
      When thirty-two bits of data are available from receive data de-serializer and CRC checker 116, receive FIFO write state machine 114 activates a Write Enable signal, which is provided to receive data FIFO 118.
      <br/>
      Upon receipt of the Write Enable signal in a pre-determined logic state, receive data FIFO 118 stores the 32-bit data value in its internal FIFO (first in first out) queue, until it can be read by bus interface logic 106.
      <br/>
      Bus interface 106 will then provide the 32-bit data value to main memory 124 via system bus 126 and host bridge logic circuit 120.
    </p>
    <p num="35">
      As a frame of information is received from network 102, receive data de-serializer and CRC checker 116 places the serial data values into parallel data units.
      <br/>
      Additionally, receive data de-serializer and CRC checker 116 performs a cyclic redundancy check (CRC) calculation on a preselected portion of the data to determine whether the data was corrupted during the transmission operation.
      <br/>
      Receive data de-serializer and CRC checker 116 performs this function by comparing a calculated CRC value to four bytes of a CRC value appended to the end of the frame by a transmitting LAN adapter within network 102.
      <br/>
      If the calculated CRC value and the CRC value received in the frame do not match, receive data de-serializer and CRC checker 116 provides a CRC error signal to receive FIFO write state machine 114.
      <br/>
      Receive FIFO write state machine 114 selectively provides the CRC error signal to indicate that a CRC error has been detected for a current frame being received.
      <br/>
      Receive data FIFO 118 subsequently provides a CRC error signal to bus interface logic 106 to notify the device driver software within main processor 122.
      <br/>
      Device driver software then performs an error compensation function which is well-known in the data processing industry and, therefore, will not be described in greater detail herein.
    </p>
    <p num="36">
      Furthermore, during operation, configuration register 110 provides a Receive CRC Configuration Bit 112 to receive FIFO write state machine 114.
      <br/>
      The Receive CRC Configuration Bit 112 is used by receive FIFO write state machine 114 to determine whether the CRC information received by receive data de-serializer and CRC checker 116 should be copied into main memory 124 after a CRC check operation is performed.
      <br/>
      If the CRC value should not be copied into main memory 124, the CRC value will be discarded or omitted from the data that is moved into main memory 124.
    </p>
    <p num="37">
      As previously mentioned, it should be noted when LAN adapter 104 is operating in a bridging mode, Receive CRC Configuration Bit 112 will be in a first preselected logic state.
      <br/>
      In such a mode, CRC data is required to be transferred between network 102 and another LAN.
      <br/>
      In this mode of operation, the CRC value is copied along with the frame to the destination LAN to ensure that no errors have occurred in transmission of the information.
      <br/>
      Conversely, when Receive CRC Configuration Bit 112 is in a second preselected logic state, the LAN adapter is operating in a non-bridging environment and CRC data does not need to be copied along with the frame since the frame has already reached its final destination and the destination LAN adapter checks the integrity of the frame before copying the data into the destination computer's main memory.
    </p>
    <p num="38">
      FIG. 3 provides a flow chart of the methodology implemented by receive FIFO write state machine 114 to selectively use Receive CRC Configuration Bit 112 to provide CRC data only when required by an application receiving the data from LAN adapter 104.
      <br/>
      During operation, receive FIFO write state machine 114 continues to monitor receive data de-serializer and CRC checker 116.
      <br/>
      Additionally, receive FIFO write state machine 114 determines when 32-bits of data have been provided from network 102 to receive data de-serializer and CRC checker 116 in a step 202.
      <br/>
      If 32-bits of data are not available from network 102, a program flow returns to step 200.
      <br/>
      However, if 32-bits of data are available from network 102, receive FIFO write state machine 114 determines whether the 32-bits of data are the CRC data at the end of a frame in a step 204.
      <br/>
      Receive FIFO write state machine 114 receives three signals from receive data de-serializer and CRC check 116.
      <br/>
      A first one of these signals indicates that another 32-bits of data have arrived from network 102.
      <br/>
      An "end of frame" signal is also provided to indicate the data currently available is the end of a frame.
      <br/>
      As previously indicated, the CRC bytes are always at the end of the frame.
      <br/>
      Additionally, receive FIFO write state machine 114 receives a "CRC error" signal from receive data de-serializer and CRC checker 116.
      <br/>
      The CRC error signal indicates when a CRC error has been detected for a current frame.
      <br/>
      If the 32-bits of data is not the CRC data at the end of a frame, a Write Enable signal is asserted to enable receive data FIFO 118 to write the 32-bit data value therein in a step 214.
      <br/>
      A program flow subsequently returns to step 200.
    </p>
    <p num="39">
      However, if the data is the CRC data at the end of a frame, receive FIFO write state machine 114 evaluates the CRC error signal to determine whether the CRC check of the frame data was successfully completed in a step 206.
      <br/>
      In a step 216, if the CRC check of the frame data did not complete successfully, receive FIFO write state machine 114 provides three signals to receive data FIFO 118 to indicate that a CRC error has occurred and the frame was transmitted erroneously.
      <br/>
      These three signals include a "write enable" signal, an "end of frame" signal, and a "CRC error" signal.
      <br/>
      The write enable signal causes 32 bits of data to be captured and receive data FIFO 118.
      <br/>
      The end of frame signal indicates to receive data FIFO 118 that all data for the current frame has been written thereto.
      <br/>
      Furthermore, the CRC error signal indicates to receive data FIFO 118 that a CRC error was detected for a current frame.
    </p>
    <p num="40">
      After completion of the CRC check of the frame data in step 206, a step 208 is executed to determine whether Receive CRC Configuration Bit 112 is in a predetermined logic state which enables copying of the CRC data.
      <br/>
      If yes, the write enable signal is asserted such that receive data FIFO 118 stores the CRC data value therein in a step 210.
      <br/>
      However, if the configuration bit is not set to enable copying of CRC data, as the application does not require this information, the write enable signal provided by receive FIFO write state machine 114 is disabled.
    </p>
    <p num="41">Subsequently, receive data FIFO 118 is signalled that the end of a frame has been reached in the step 212 using the previously described end of frame signal.</p>
    <p num="42">
      When receive data FIFO 118 receives confirmation from receive FIFO write state machine 114 that an entire frame has been received, receive data FIFO 118 records a FIFO position that stores a last data value of the frame.
      <br/>
      Subsequently, when bus interface logic 106 reads a final frame data value from receive data FIFO 118, logic within receive data FIFO 118 signals an end of a frame of information.
      <br/>
      Bus interface logic 106 maintains a count of a number of bytes of data read from receive data FIFO 118 for each frame of information.
      <br/>
      A total frame byte count is provided to the device driver software executing within main processor 122, such that a record of the data placed in buffers (not illustrated in detail) in main memory 124 is established.
      <br/>
      If Receive CRC Configuration Bit 112 is set to a predetermined logic level which indicates that the CRC value should be deleted from the frame information, a resulting byte count for data stored in main memory 124 will be four bytes less than if the CRC value is copied into main memory 124 as the final four bytes of the frame.
    </p>
    <p num="43">It should be noted that the optional deletion of the CRC value through the use of Receive CRC Configuration Bit 112 within configuration 110 is transparent to receive data FIFO 118 and bus interface logic 106.</p>
    <p num="44">
      Thus, the present invention provides a communication system and method of operation which allows for the selective receipt of CRC data in a memory system coupled to a LAN adapter.
      <br/>
      This selectivity is determined through the use of a CRC configuration bit which determines whether the four-bytes of the CRC data are included at the end of the frame data received from a LAN adapter.
      <br/>
      Additionally, regardless of the setting of the CRC configuration bit, the four-bytes of CRC data will always be used to check the integrity of the data in a frame of information.
      <br/>
      Thus, the CRC configuration bit only affects whether the four-bytes of CRC data will be transferred as part of the frame after the CRC check has been performed.
      <br/>
      By providing this ability, the functionality of the communication system is not sacrificed, but a performance increase is obtained.
    </p>
    <p num="45">
      Furthermore, the implementation of the invention provided herein is provided by way of example only, however, and many other implementations may exist for executing the functions described herein.
      <br/>
      For example, the present invention could be applied to any communication protocol that defines a frame format including a CRC value at the end.
      <br/>
      Additionally, it should be noted that the present invention may be implemented in a variety of manners.
      <br/>
      For example, rather than having a hardware "state machine" that decides when to delete the CRC value, a network adapter could include a microprocessor and memory.
      <br/>
      Software running on the microprocessor could delete the CRC from the frame while it resides in the adapter's memory.
      <br/>
      The frame would then be transferred from the adapter's memory to the main memory of the host computer system with the CRC data deleted.
      <br/>
      Additionally, it should be noted that other alternate embodiments of the present invention also exist.
    </p>
    <p num="46">
      While there have been described herein the principles of the invention, it is to be clearly understood to those skilled in the art that this description is made by way of example only and not as a limitation to the scope of the invention.
      <br/>
      Accordingly, it is intended, by the appended claims, to cover all modifications of the invention which fall within the true spirit and scope of the invention.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>A local area network adapter, comprising:</claim-text>
      <claim-text>input means for receiving a first plurality of information values; output means for selectively transferring the first plurality of information values; a configuration register for storing a configuration value, the configuration value being used to selectively enable the output means to transfer a portion of the first plurality of information values when the configuration value is in a first logic state;</claim-text>
      <claim-text>and a state machine coupled to the configuration register for receiving the configuration value and coupled to the input means for receiving an input control signal, the state machine generating an output control signal in response to the configuration value and the input control signal.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The local area network adapter of claim 1, wherein the configuration value selectively enables the output means to transfer each of the first plurality of information values when the configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The local area network adapter of claim 1, wherein the state machine is coupled to the output means for providing the output control signal, the output control signal selectively enabling the output means to provide at least a portion of the first plurality of information values.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The local area network of claim 1 wherein the first plurality of information values, further comprises: a data value;</claim-text>
      <claim-text>and a cyclic redundancy check value.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The local area network adapter of claim 4, wherein the configuration value selectively enables the output means to transfer the data value and the cyclic redundancy check value when the configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. The local area network adapter of claim 1 wherein the input means, further comprises: means for performing a cyclic redundancy check function, wherein the means for performing the cyclic redundancy check function ensures that the plurality of information values were transferred to the input means correctly.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The local area network adapter of claim 1 wherein the output means, further comprises: first-in, first-out storage means for storing at least a portion of the plurality of information values in a parallel format.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. A local area network adapter, comprising: input means for receiving a first plurality of information values; output means for selectively transferring the first plurality of information values; a configuration register for storing a configuration value, the configuration value being used to selectively enable the output means to transfer a portion of the first plurality of information values when the configuration value is in a first logic state, wherein the first plurality of information values further comprises:</claim-text>
      <claim-text>- a data value;</claim-text>
      <claim-text>and - a cyclic redundancy check value, wherein the configuration value selectively enables the output means to refrain from transferring the cyclic redundancy check value when the configuration value is in the first logic state.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. A method of operating a local area network adapter, comprising the steps of: receiving a first plurality of information values; storing a configuration value in a register; selectively enabling an output circuit to transfer a portion of the first plurality of information values when the configuration value is in a first logic state; generating an output control signal in response to the configuration value and the input control signal using a state machine; providing the output control signal to the output circuit;</claim-text>
      <claim-text>and selectively enabling the output circuit to provide at least a portion of the first plurality of information values.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. The method of claim 9, further comprising the step of: selectively enabling the output circuit to transfer each of the first plurality of information values when the configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The method of claim 9 wherein the first plurality of information values further comprises a data value and a cyclic redundancy check value.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The method of claim 11, further comprising the step of: selectively enabling the output circuit to transfer the data value and the cyclic redundancy check value when the configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The method of claim 9, further comprising the step of: performing a cyclic redundancy check function to ensure that the plurality of information values were transferred to the input means correctly.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The method of claim 9 further comprising the step of: storing of at least a portion of the plurality of information values in a parallel format in a first-in, first-out storage means.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. A method of operating a local area network adapter, comprising the steps of: receiving a first plurality of information values; storing a configuration value in a register; selectively enabling an output circuit to transfer a portion of the first plurality of information values when the configuration value is in a first logic state, wherein the first plurality of information values further comprises a data value and a cyclic redundancy check value;</claim-text>
      <claim-text>and selectively enabling the output circuit to refrain from transferring the cyclic redundancy check value when the configuration value is in the first logic state.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. A communication system, comprising: a first local area network adapter, comprising: - input means for receiving a first plurality of information values; - output means for selectively transferring a second plurality of information values;</claim-text>
      <claim-text>and - a first configuration register for storing a first configuration value, the first configuration value enabling the output means to transfer a portion of the first plurality of information values as the second plurality of information values when the first configuration value is in a first logic state;</claim-text>
      <claim-text>and a memory coupled to the output means for storing the second plurality of information values, wherein the first plurality of information values comprises a data value and a cyclic redundancy check value, wherein the portion of the first plurality of information values transferred as the second plurality of information values includes only the data value.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>17. The communication system of claim 16 wherein the first configuration value selectively enables the output means to transfer the data value and the cyclic redundancy check value as the second plurality of information values when the first configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="18">
      <claim-text>18. The communication system of claim 16, further comprising: a first data processing system for providing the first plurality of information values, wherein the first plurality of information values comprises a first data value and a first cyclic redundancy check value.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>19. A first local area network adapter, comprising: input means for receiving a first plurality of information values; output means for selectively transferring a second plurality of information values; a first configuration register for storing a first configuration value, the first configuration value enabling the output means to transfer a portion of the first plurality of information values as the second plurality of information values when the first configuration value is in a first logic state;</claim-text>
      <claim-text>and a memory coupled to the output means for storing the second plurality of information values, wherein the first plurality of information values comprises a data value and a cyclic redundancy check value; a first data processing system for providing the first plurality of information values, wherein the first plurality of information values comprises a first data value and a first cyclic redundancy check value;</claim-text>
      <claim-text>and a bridge data processing system, comprising: - a second local area network adapter coupled to the first data processing system for receiving the first data value and the first cyclic redundancy check value, the second local area network adapter comprising:</claim-text>
      <claim-text>-  a first cyclic redundancy check circuit for checking the first cyclic redundancy check value to ensure the first data value is transmitted correctly; -  a first bridge output circuit for selectively transferring one or both of the first data value and the first cyclic redundancy check value; -  a second configuration register for storing a second configuration value, the second configuration value selectively enabling the first bridge output circuit to transfer both the first data value and the first cyclic redundancy check value when the second configuration value is in a second logic state;</claim-text>
      <claim-text>and - a third local area network adapter coupled to the bridge output circuit for receiving the first data value and the first cyclic redundancy check value, the third local area network adapter coupled to the first local area network adapter to selectively provide the first data value and the first cyclic redundancy check value as the plurality of information values.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>20. The communication system of claim 19 wherein the output means of the first local area network adapter refrains from transferring the first cyclic redundancy check value when the first configuration value is in the first logic state.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>21. A method for generating a communication system, comprising the steps of: receiving a first plurality of information values in a first local area network adapter; storing a first configuration value in a first configuration register in the first local area network adapter; enabling an output means to transfer a portion of the first plurality of information values as a second plurality of information values when the first configuration value is in a first logic state;</claim-text>
      <claim-text>and storing the second plurality of information values in a memory, wherein the first plurality of information values comprises a data value and a cyclic redundancy check value, wherein the portion of the first plurality of information values transferred as the second plurality of information values includes only the data value.</claim-text>
    </claim>
    <claim num="22">
      <claim-text>22. The method of claim 21, further comprising the step of: selectively enabling the output means to transfer the data value and the cyclic redundancy check value as the second plurality of information values when the first configuration value is in a second logic state.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>23. The method of claim 21, further comprising the steps of: providing the first plurality of information values from a first data processing system, wherein the first plurality of information values comprises a first data value and a first cyclic redundancy check value.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>24. A method for operating a communication system, comprising the steps of: receiving a first plurality of information values in a first local area network adapter; storing a first configuration value in a first configuration register in the first local area network adapter; enabling an output means to transfer a portion of the first plurality of information values as a second plurality of information values when the first configuration value is in a first logic state; storing the second plurality of information values in a memory, wherein the first plurality of information values comprises a data value and a cyclic redundancy check value; providing the first plurality of information values from a first data processing system, wherein the first plurality of information values comprises a first data value and a first cyclic redundancy check value; coupling a second local area network adapter to the first data processing system to receive the first data value and the first cyclic redundancy check value; enabling a first cyclic redundancy check circuit in the second local area network to check the first cyclic redundancy check value to ensure the first data value is transmitted correctly; selectively transferring one or both of the first data value and the first cyclic redundancy check value using a first bridge output circuit; storing a second configuration value in a second configuration register; selectively enabling the first bridge output circuit to transfer both the first data value and the first cyclic redundancy check value when the second configuration value is in a second logic state; coupling a third local area network adapter to the bridge output circuit to receive the first data value and the first cyclic redundancy check value;</claim-text>
      <claim-text>and selectively enabling the third local area network adapter to provide the first data value and the first cyclic redundancy check value as the plurality of information values.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>25. The method of claim 24, further comprising the step of: refraining from transferring the first cyclic redundancy check value when the first configuration value is in the first logic state.</claim-text>
    </claim>
  </claims>
</questel-patent-document>