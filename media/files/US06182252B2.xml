<?xml version="1.0" encoding="UTF-8"?>
<questel-patent-document lang="en" date-produced="20180805" produced-by="Questel" schema-version="3.23" file="US06182252B2.xml">
  <bibliographic-data lang="en">
    <publication-reference publ-desc="Granted patent as second publication">
      <document-id>
        <country>US</country>
        <doc-number>06182252</doc-number>
        <kind>B2</kind>
        <date>20010130</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>US6182252</doc-number>
      </document-id>
    </publication-reference>
    <original-publication-kind>B2</original-publication-kind>
    <application-reference family-id="26800381" extended-family-id="1425798">
      <document-id>
        <country>US</country>
        <doc-number>09273368</doc-number>
        <kind>A</kind>
        <date>19990322</date>
      </document-id>
      <document-id data-format="questel">
        <doc-number>1999US-09273368</doc-number>
      </document-id>
      <document-id data-format="questel_Uid">
        <doc-number>1481364</doc-number>
      </document-id>
    </application-reference>
    <language-of-filing>en</language-of-filing>
    <language-of-publication>en</language-of-publication>
    <priority-claims>
      <priority-claim kind="national" sequence="1">
        <country>US</country>
        <doc-number>27336899</doc-number>
        <kind>A</kind>
        <date>19990322</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="1">
        <doc-number>1999US-09273368</doc-number>
      </priority-claim>
      <priority-claim kind="national" sequence="2">
        <country>US</country>
        <doc-number>10336398</doc-number>
        <kind>P</kind>
        <date>19981007</date>
        <priority-active-indicator>Y</priority-active-indicator>
      </priority-claim>
      <priority-claim data-format="questel" sequence="2">
        <doc-number>1998US-60103363</doc-number>
      </priority-claim>
    </priority-claims>
    <dates-of-public-availability>
      <publication-of-grant-date>
        <date>20010130</date>
      </publication-of-grant-date>
    </dates-of-public-availability>
    <classifications-ipcr>
      <classification-ipcr sequence="1">
        <text>H04L  12/24        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>24</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>H04L  12/26        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>26</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>H04L  12/56        20060101A I20051008RMEP</text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>12</main-group>
        <subgroup>56</subgroup>
        <classification-value>I</classification-value>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>R</classification-status>
        <classification-data-source>M</classification-data-source>
        <action-date>
          <date>20051008</date>
        </action-date>
      </classification-ipcr>
    </classifications-ipcr>
    <classification-national>
      <country>US</country>
      <main-classification>
        <text>714708000</text>
        <class>714</class>
        <subclass>708000</subclass>
      </main-classification>
    </classification-national>
    <patent-classifications>
      <patent-classification sequence="1">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-047/266</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>47</main-group>
        <subgroup>266</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="2">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-043/0894</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>43</main-group>
        <subgroup>0894</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="3">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-043/10</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>43</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="4">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-043/16</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>43</main-group>
        <subgroup>16</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>A</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="5">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-045/26</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>45</main-group>
        <subgroup>26</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="6">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-047/10</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>47</main-group>
        <subgroup>10</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
      <patent-classification sequence="7">
        <classification-scheme office="EP" scheme="CPC">
          <date>20130101</date>
        </classification-scheme>
        <classification-symbol>H04L-047/28</classification-symbol>
        <section>H</section>
        <class>04</class>
        <subclass>L</subclass>
        <main-group>47</main-group>
        <subgroup>28</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
        <action-date>
          <date>20130101</date>
        </action-date>
      </patent-classification>
    </patent-classifications>
    <number-of-claims>16</number-of-claims>
    <exemplary-claim>1</exemplary-claim>
    <figures>
      <number-of-drawing-sheets>3</number-of-drawing-sheets>
      <number-of-figures>3</number-of-figures>
      <image-key data-format="questel">US6182252</image-key>
    </figures>
    <invention-title format="original" lang="en" id="title_en">Method and system for efficient packet data transport</invention-title>
    <references-cited>
      <citation srep-phase="examiner">
        <patcit num="1">
          <text>DASCH BERND, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5243594</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5243594</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="examiner">
        <patcit num="2">
          <text>MORALES JAVIER, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5440741</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5440741</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="3">
          <text>FRID-NIELSEN LARS K</text>
          <document-id>
            <country>US</country>
            <doc-number>5432903</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5432903</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="4">
          <text>KUMAR B RAVI, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5764155</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5764155</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="5">
          <text>COPELAND BRUCE W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5815703</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5815703</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="6">
          <text>POST MARK J</text>
          <document-id>
            <country>US</country>
            <doc-number>5822527</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5822527</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="7">
          <text>FANSHIER STEPHEN R, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5933601</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5933601</doc-number>
          </document-id>
        </patcit>
      </citation>
      <citation srep-phase="applicant">
        <patcit num="8">
          <text>COPELAND BRUCE W, et al</text>
          <document-id>
            <country>US</country>
            <doc-number>5974410</doc-number>
            <kind>A</kind>
          </document-id>
          <document-id data-format="questel">
            <doc-number>US5974410</doc-number>
          </document-id>
        </patcit>
      </citation>
    </references-cited>
    <related-documents>
      <related-publication>
        <document-id>
          <country>US</country>
          <doc-number>60/103,363</doc-number>
          <date>19981007</date>
        </document-id>
        <document-id>
          <country>US</country>
          <doc-number>60/103363</doc-number>
          <date>19981007</date>
        </document-id>
      </related-publication>
    </related-documents>
    <parties>
      <applicants>
        <applicant data-format="original" app-type="applicant" sequence="1">
          <addressbook lang="en">
            <orgname>Wonderware Corporation</orgname>
            <address>
              <address-1>Irvine, CA, US</address-1>
              <city>Irvine</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
        <applicant data-format="questel" app-type="applicant" sequence="2">
          <addressbook lang="en">
            <orgname>WONDERWARE</orgname>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </applicant>
      </applicants>
      <inventors>
        <inventor data-format="original" sequence="1">
          <addressbook lang="en">
            <name>Wong, Steven</name>
            <address>
              <address-1>Long Beach, CA, US</address-1>
              <city>Long Beach</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
        <inventor data-format="original" sequence="2">
          <addressbook lang="en">
            <name>Knobbe, Roger</name>
            <address>
              <address-1>Torrance, CA, US</address-1>
              <city>Torrance</city>
              <state>CA</state>
              <country>US</country>
            </address>
          </addressbook>
          <nationality>
            <country>US</country>
          </nationality>
        </inventor>
      </inventors>
      <agents>
        <agent sequence="1" rep-type="agent">
          <addressbook lang="en">
            <orgname>Cooley Godward LLP</orgname>
          </addressbook>
        </agent>
        <agent sequence="2" rep-type="agent">
          <addressbook lang="en">
            <name>Zimmer, Kevin J.</name>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <examiners>
      <primary-examiner>
        <name>De Cady, Albert</name>
      </primary-examiner>
    </examiners>
    <lgst-data>
      <lgst-status>GRANTED</lgst-status>
    </lgst-data>
  </bibliographic-data>
  <abstract format="original" lang="en" id="abstr_en">
    <p id="P-EN-00001" num="00001">
      <br/>
      A system and method for regulating data transmission between a source node and a destination node is disclosed herein.
      <br/>
      The present method contemplates monitoring system performance so as to detect when the system enters an overloaded state.
      <br/>
      Such detection may be effected by, for example, determining the extent of the time interval during which instructions are retained in a queue at the destination node awaiting execution.
      <br/>
      When this interval exceeds a maximum queuing time, the system is deemed to be in an overloaded state.
      <br/>
      Upon entry into an overloaded state, data transmission from the source node is suspended pending recovery of the system from the overloaded state.
      <br/>
      In a preferred implementation, overload probe messages are periodically inserted into a message queue at the destination node.
      <br/>
      When such an overload probe message is determined to have been retained in the message queue in excess of the maximum queuing time, the system is deemed to be in an overloaded state and data transmission is suspended as described above.
      <br/>
      If it is subsequently determined that an overload probe message has been retained in the message queue for less than the maximum queuing time, data transmission from the source node is resumed.
    </p>
  </abstract>
  <description format="original" lang="en" id="desc_en">
    <p num="1">This application claims benefit to provisional application 60/103,363 filed Oct. 7, 1998.</p>
    <heading>FIELD OF THE INVENTION</heading>
    <p num="2">This invention relates generally to methods of data communication and, more particularly, to a method and system for facilitating efficient, high-volume data transport.</p>
    <heading>BACKGROUND OF THE INVENTION</heading>
    <p num="3">
      The operation of industrial equipment such as assembly lines, machine tools and processing equipment is often governed by an automation controller in accordance with a stored program.
      <br/>
      In conventional automation controllers, the control program is stored in a memory and includes instructions which are read out in rapid sequence and executed to examine the condition of selected sensing devices on the controlled equipment, or to energize or de-energize selected operating devices on the controlled equipment contingent on the status of one or more of the examined sensing devices.
    </p>
    <p num="4">
      Large controllers typically consist of a number of modules with different functions assigned to each module.
      <br/>
      For example, one module may execute the user control program, another may interface the controller to the remote sensing and operating devices, and yet another module may control communications with a host computer via a local area network.
      <br/>
      This arrangement permits one or more human operators to monitor and control an industrial process via computer workstations.
    </p>
    <p num="5">
      When a computer workstation in an industrial control system is initialized, it may become a "subscriber" to measurements provided by a number of different sources.
      <br/>
      Each measurement source with which the workstation is associated as a subscriber will typically provide a current measurement value, and will subsequently transmit an updated value in response to each change in the measured parameter.
      <br/>
      A measurement source will often supply more than a single type of measurement to a given subscriber (i.e., destination workstation).
      <br/>
      For example, the temperature and water level of a water tank could be provided by a single measurement source and delivered to the same subscriber.
    </p>
    <p num="6">
      In order to make efficient use of available data transport bandwidth, multiple measurements are commonly bundled together into packets.
      <br/>
      In accordance with certain data transport protocols, a measurement source will buffer measurement data until either a complete packet is ready for transmission to the same subscriber, or until the first buffered measurement has been held in excess of a predefined time period.
      <br/>
      When a packet is eventually sent to a subscriber, the measurement source waits for an acknowledgement from the subscriber prior to sending additional packets.
      <br/>
      That is, additional measurements are not sent to the subscriber between the time at which a packet is sent until receipt of an acknowledgement.
      <br/>
      This results in relatively inefficient use of available transport bandwidth, since some waiting period occurs following the sending of each packet.
      <br/>
      In addition, the waiting period increases the average latency (i.e., the average elapsed time between the taking of a measurement and subsequent delivery of measurement data) associated with the transport of measurement data to a subscriber.
    </p>
    <p num="7">
      Another consideration in the design of current industrial control systems is the potential for the flow of high volumes of data and message traffic between modules.
      <br/>
      For example, in particular control systems a temperature reading may be transmitted from its source to multiple computer workstations for real-time display.
      <br/>
      A human operator may be similarly presented with real-time data from hundreds of sensors distributed throughout a factory.
      <br/>
      In addition, certain applications may be required to subscribe to and effect centralized processing of sensor data originating from numerous local and geographically distant sources.
    </p>
    <p num="8">
      These scenarios raise the possibility that a particular module or workstation may be overwhelmed when measurement data is received faster than it can be processed.
      <br/>
      For example, a workstation may become overloaded if it is incapable of displaying measurement data at the rate it is received.
      <br/>
      Even when data is arriving at a rate less than the maximum rate at which it may be displayed, little or no processing capacity may remain available to carry out other necessary functions (e.g., responding to user commands made via a keyboard or mouse).
      <br/>
      In industrial automation environments, rapid response to operator commands and the like is critical to maintaining control of the subject industrial process.
    </p>
    <p num="9">
      One potential solution to the overload problem discussed above is to simply not send data continuously to a particular destination (e.g., a workstation), but to instead require that the destination reply with a "handshaking" acknowledgment upon completing processing of each received measurement packet.
      <br/>
      Unfortunately, this results in transport inefficiencies at low data transmission rates, since each new packet will not be sent until an acknowledgment is received.
      <br/>
      That is, each received data packet will be separated by an interval equivalent to the round-trip time required for a packet to be transported between the source and destination.
    </p>
    <p num="10">
      Another potential approach to overcoming the overload problem could involve configuring a destination to periodically send messages indicative of the amount of data which has been processed since establishment of the data connection.
      <br/>
      One drawback of this approach is that bandwidth is consumed by the periodic messages from the destination even in the absence of an overload condition.
      <br/>
      If it is attempted to conserve bandwidth by sending such periodic messages only infrequently, it is possible that an overload condition will develop during one of the intervals between messages.
    </p>
    <p num="11">
      The overload problem could also be potentially solved by buffering measurements received at the destination to memory.
      <br/>
      Processing or display of the received data could then be performed asynchronously relative to receipt of the data.
      <br/>
      However, in the event of a continuing overload condition the size of the buffer will tend to increase without limit.
      <br/>
      As a result of this increase all available memory could be consumed, potentially resulting in the occurrence of a system crash or other undesirable system performance.
      <br/>
      In addition, the average data latency tends to increase in proportion to the quantity of buffered data.
    </p>
    <heading>SUMMARY OF THE INVENTION</heading>
    <p num="12">
      Briefly, the present invention is directed to a system and method for regulating data transmission between a source node and a destination node within a data communication system.
      <br/>
      The present invention contemplates monitoring performance of the system so as to detect when the system enters an overloaded state.
      <br/>
      In an exemplary embodiment such detection is effected by determining the extent of the time interval during which instructions are retained in a queue at the destination node awaiting execution.
      <br/>
      When this interval exceeds a maximum queuing time, the system is deemed to be in an overloaded state.
      <br/>
      Upon entry into an overloaded state, data transmission from the source node is suspended pending recovery of the system from the overloaded state.
    </p>
    <p num="13">
      In a preferred embodiment overload probe messages are periodically inserted into a message queue at the destination node.
      <br/>
      When such an overload probe message is determined to have been retained in the message queue in excess of the maximum queuing time, the system is deemed to be in an overloaded state and data transmission is suspended as described above.
      <br/>
      If it is subsequently determined that an overload probe message has been retained in the message queue for less than the maximum queuing time, data transmission from the source node is resumed.
    </p>
    <heading>BRIEF DESCRIPTION OF THE DRAWINGS</heading>
    <p num="14">
      In the accompanying drawings:
      <br/>
      FIG. 1 is a block diagram of a computer system in which the present invention may be implemented.
      <br/>
      FIG. 2 is a flowchart representing a message processing subroutine associated with a workstation application program disposed to receive measurement or other data from one or more sensors.
      <br/>
      FIG. 3 is a flowchart representative of the processing performed in accordance with the invention by first and second execution threads of a program operative within a sensing device in communication with the workstation application program.
    </p>
    <heading>DETAILED DESCRIPTION OF THE INVENTION</heading>
    <p num="15">
      FIG. 1 is a block diagram of a computer system 100 in which the present invention may be implemented.
      <br/>
      The computer system 100 includes a computer workstation 102 that communicates with a system storage unit 104 over network 106.
      <br/>
      The system storage unit 104 comprises a direct access storage device, such as magnetic disk storage, in which data files are stored.
      <br/>
      The workstation 102 includes a central processing unit ("CPU") 108, a display 110, and a main memory 112.
      <br/>
      The CPU 108 operates in response to user commands, which it receives via a keyboard 114 or a display mouse 116.
      <br/>
      The computer workstation 102 can communicate with one or more other user stations or a network server unit over the network 106.
    </p>
    <p num="16">
      The main memory 112 contains a variety of data structures and information, including an operating system, application programs, program objects, and user data.
      <br/>
      The main memory is represented as a single entity, but those skilled in the art will appreciate that the main memory can comprise a combination of random access memory ("RAM"), hard disk drives, optical disk drives, and other storage devices containing logically segmented storage locations.
      <br/>
      The main memory includes a computer program containing a sequence of program instructions whose execution implements the present invention.
    </p>
    <p num="17">
      The operating system contained in the memory 112 supports an object-oriented programming environment for the execution of object-oriented programs, such as those written in, for example, the C++ programming language.
      <br/>
      Accordingly, the memory contains program objects that are data structures of an object-oriented programming language.
      <br/>
      Application programs are invoked, or launched, by a user through the keyboard 114 or graphical input device 116.
      <br/>
      The application programs can be written in a variety of languages, including C++.
    </p>
    <p num="18">
      The display 110 comprises a display device such as a video terminal that displays computer output and indicates system operations.
      <br/>
      Display objects can be pictured on the display and the user can designate data operations on the display by using the mouse 116 or equivalent graphical user input device.
    </p>
    <p num="19">
      In an exemplary implementation the computer system 100 send commands to, and receive data from, one or more industrial sensor or process control devices 120 via a data bus 122.
      <br/>
      The state of each such device 120 is reflected by the value of an associated tag, each of which may be a parameter of the container application.
      <br/>
      In the exemplary implementation the container application comprises an industrial automation software program, such as the InTouch program module developed by Wonderware Corporation of Irvine, Calif.
      <br/>
      The Wonderware Intouch module includes a tool kit for building screens and interfaces, and a graphical user interface for monitoring and controlling the devices 120.
      <br/>
      For example, in the context of electrical distribution the software toolkit of the Wonderware Intouch module enables rapid development of three dimensional representations of electrical distribution switchgear.
      <br/>
      The switchgear elevational representations have logical connections to the switchgear devices.
      <br/>
      An elevation can be modified to any dimensions with an essentially infinite number of combinations and arrangements of meters and protection devices to quickly and accurately represent a customer's switchgear.
      <br/>
      In addition, a tabular representation of metering and setup/set point information is generated automatically with the appropriate database server links established.
      <br/>
      The Wonderware Intouch module is disposed to provide similar representations and accompanying database links in other areas of industrial automation and control.
    </p>
    <p num="20">
      FIG. 2 is a flowchart representing a message processing subroutine associated with an application program at the workstation 102 configured to receive measurement or other data from one or more sensors 120.
      <br/>
      It is initially observed that in environments governed by the Microsoft Windows operating system, each keyboard and mouse press or selection action generates a message, which passes through a message queue of the associated application program.
      <br/>
      If CPU 108 becomes overloaded, such messages will begin to accumulate in the message queue of each active application program without being processed.
    </p>
    <p num="21">
      In step 150, overload probe messages are generated by the message processing subroutine of an application program and placed in the message queue or equivalent structure associated with the application program.
      <br/>
      The overload probe messages are interspersed with the messages also being provided to such message queues, and each includes information as to its precise (e.g., to within a millisecond) time of insertion into a message queue.
      <br/>
      In step 152 the application program retrieves the oldest remaining message in the message queue, and determines whether the retrieved message is an overload probe message (step 156).
      <br/>
      If the retrieved message is not an overload probe message, the application program continues with normal processing of the retrieved message (step 158).
    </p>
    <p num="22">
      When the retrieved message is an overload probe message, the message processing subroutine obtains the current time (step 160).
      <br/>
      In step 164 it is determined whether the retrieved overload probe message has been in the message queue in excess of a predetermined time period (e.g., 100 msec.) by comparing the current time to the time of insertion of the probe into the message queue.
      <br/>
      The predetermined time period is selected to be sufficiently small that a user of workstation 102 will not experience significantly degraded performance (e.g., noticeable delays in response following mouse or keyboard entries).
      <br/>
      If the overload probe message has been queued in excess of such time period, it is determined whether the message subroutine has already deemed an overload condition to exist (step 166).
      <br/>
      If an overload condition already exists, no further processing based upon the retrieved overload probe message is conducted.
      <br/>
      If such an overload condition has not yet been deemed to exist, the message processing subroutine deems an overload condition to exist (step 168).
      <br/>
      Next, the message processing subroutine generates an overload notice, which is sent by the workstation 102 to all devices 120 providing measurement or other data to the workstation 102 (step 170).
    </p>
    <p num="23">
      If it is determined that the retrieved overload probe message has been in the message queue less than the predetermined amount of time (step 164), then the message processing subroutine determines whether an overload condition has already been deemed to exist (step 174).
      <br/>
      If an overload condition does not exist, no further processing based upon the retrieved overload probe message is conducted.
      <br/>
      If such an overload condition is in existence, the message processing subroutine deems that the overload condition no longer exists (step 176).
      <br/>
      Next, the message processing subroutine generates an overload recovery notice, which is sent by the workstation 102 to all devices 120 providing measurement or other data to the workstation 102 (step 180).
    </p>
    <p num="24">
      FIG. 3 is a flowchart representative of the processing performed in accordance with the invention by first and second execution threads 190 and 192 within a device 120 engaged in sending measurement or other data to the workstation 102.
      <br/>
      In a preferred implementation the first and second execution threads 190 and 192 operate independently and in parallel within the device 120.
      <br/>
      Referring to the first execution thread 190, in step 196 the device 120 performs a measurement of the parameter being monitored (e.g., temperature).
      <br/>
      Next, in step 198 it is determined whether this instant measurement corresponds to the initial measurement of the parameter being monitored.
      <br/>
      If yes, the instant measurement is placed in a send queue for transmission to the workstation 102 (step 200).
      <br/>
      If the instant measurement is not such an initial measurement, it is determined whether the instant measurement has changed from the value of the previous measurement taken (step 202).
      <br/>
      If no, no further processing is performed by the first execution thread 190 with respect to the instant measurement.
    </p>
    <p num="25">
      If the value of the instant measurement differs from the previous measurement (step 202), it is determined whether an overload notice has been received from the workstation 102 (step 204).
      <br/>
      If not, the instant measurement is placed in the send queue for transmission to the workstation.
      <br/>
      If an overload notice has been received and no overload recovery notice has been subsequently received, then it is determined whether a measurement of the parameter of interest exists within the send queue (step 206).
      <br/>
      If not, the instant measurement is placed in the send queue.
      <br/>
      If such a measurement does exist within the send queue, then such existing measurement is replaced by the instant measurement in the same ordinal position within the send queue (step 208).
    </p>
    <p num="26">
      Referring to the second execution thread 192, in step 212 it is determined whether data bus 122 is ready for the device 120 to send another measurement or group of measurements.
      <br/>
      If not, step 212 is performed again after some predefined time interval.
      <br/>
      If the data bus 122 is so ready, it is determined whether an overload notice has been received from the workstation 102 and no overload recovery notice has been subsequently received (step 216).
      <br/>
      If yes, step 212 is performed again after some predefined time interval.
      <br/>
      If an overload condition does not exist, a measurement or group of measurements from the send queue is transmitted from the device 120 to the workstation 102 via data bus 122 (step 220).
    </p>
    <p num="27">
      In alternate embodiments of the present invention, the existence of an overload condition at a particular module or workstation in receipt of measurement data is determined other than through monitoring of the latency of queued messages.
      <br/>
      For example, it has been found that when an overload condition exists, the percentage of physical memory being utilized tends to increase primarily due to data arriving at a rate greater than it can be processed.
      <br/>
      Accordingly, in one alternate embodiment such an overload condition is detected by monitoring the percentage of physical memory being utilized.
      <br/>
      Once an overload condition has been so detected, processing proceeds in the manner contemplated by the preferred embodiment upon like detection of an overload condition (i.e., upon encountering an overload probe message retained within the message queue in excess of a predetermined time interval).
      <br/>
      In another alternate embodiment, an overload condition is deemed to have arisen when the percentage of available CPU cycles being consumed on non-idle tasks exceeds a predefined threshold.
      <br/>
      An overload condition may also be deemed to have occurred upon the refresh rate of the monitor 110 decreasing by more than a predefined amount relative to a nominal refresh rate.
      <br/>
      In these latter two implementations, processing also continues in the manner contemplated by the preferred embodiment upon like detection of an overload condition.
    </p>
    <p num="28">
      Although the above application has been described primarily in terms of particular techniques for detecting the existence of system and for accordingly adjusting the flow of data transmission, those skilled in the art will be able to develop analogous techniques based upon the teachings herein.
      <br/>
      Thus the application is meant only to be limited by the scope of the appended claims.
    </p>
  </description>
  <claims format="original" lang="en" id="claim_en">
    <claim num="1">
      <claim-text>What is claimed is:</claim-text>
      <claim-text>1.</claim-text>
      <claim-text>In a system in which messages are generated upon the occurrence of predefined events and accumulated within a message queue at a destination node, a method for regulating data transmission comprising the steps of:</claim-text>
      <claim-text>transmitting data from a source node to said destination node; inserting overload probe messages into said message queue, each said overload probe message including information specifying a time of insertion of said overload probe message into said message queue; comparing said time of insertion of at least one of said overload probe messages to a present time in order to determine a retention time of said at least one of said overload probe messages in said message queue;</claim-text>
      <claim-text>and suspending transmission of said data from said source node when said retention time exceeds a predetermined time period.</claim-text>
    </claim>
    <claim num="2">
      <claim-text>2. The method of claim 1 further including the step of resuming transmission of said data from said source node when a subsequent one of said overload probe messages is retained in said message queue for less than said predetermined time period.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>3. The method of claim 1 further including the steps of: causing said system to enter an overloaded state when said at least one of said overload probe messages is retained in said message queue in excess of said predetermined time period, and sending an overload notice to said source node.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>4. The method of claim 3 further including the steps of: causing said system to exit said overloaded state when a subsequent one of said overload probe messages is retained in said message queue for less than said predetermined time period, and sending a recovery notice to said source node.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>5. The method of claim 4 further including the step resuming transmission of data from said source node in response to receipt at said source node of said recovery notice.</claim-text>
    </claim>
    <claim num="6">
      <claim-text>6. A method for regulating the transmission of data from a source node to a destination node, said method comprising the steps of: inserting overload probe messages into a message queue, each said overload Probe message including information specifying a time of insertion of said overload probe message into said message queue; comparing said time of insertion of at least one of said overload probe messages to a present time in order to determine a retention time of said at least one of said overload probe messages in said message queue; generating an overload notice when said retention time exceeds a predetermined time; placing data within a send queue at said source node; retaining said data within said send queue in response to receipt at said source node of an overload notice from said destination node;</claim-text>
      <claim-text>and transmitting said data in response to receipt at said source node of a recovery notice from said destination node.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>7. The method of claim 6 further including the steps of: performing a measurement of a parameter at said source node, thereby generating measurement data, determining whether any of said data within said send queue corresponds to a previous measurement of said parameter, and placing said measurement data in the send queue if it is determined that none of said data within said send queue corresponds to said previous measurement of said parameter.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>8. The method of claim 7 further including the step of withholding said measurement data from said send queue if certain of said data within said send queue corresponds to a substantially identical value of said measurement data.</claim-text>
    </claim>
    <claim num="9">
      <claim-text>9. The method of claim 6 further including the steps of: performing a measurement of a parameter at said source node, thereby generating measurement data, determining whether any of said data within said send queue corresponds to a previous measurement of said parameter, and replacing any data within said send queue with said measurement data if (i) it is determined that said measurement data corresponds to said previous measurement of said parameter, and (ii) an overload notice has not been received at said source node without a recovery notice being subsequently received at said source node.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>10. A data communication system within which messages are generated upon the occurrence of predefined events and accumulated within a message queue at a destination node, said data communication system comprising: means for inserting overload probe messages into said message queue, each said overload probe message including information specifying a time of insertion of said overload probe message into said message queue; means for comparing said time of insertion of at least one of said overload probe messages to a present time in order to determine a retention time of said at least one of said overload probe messages in said message queue;</claim-text>
      <claim-text>and a source node nominally operative to transmit data to said destination node, said source node suspending transmission of said data to said destination node when said retention time exceeds a predetermined time period.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>11. The communication system of claim 10 wherein said source node is operative to resume transmission of said data to said destination node when a subsequent one of said overload probe messages is retained in said message queue for less than said predetermined time period.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>12. The communication system of claim 10 wherein said destination node further includes: means for causing said system to enter an overloaded state when said at least one of said overload probe messages is retained in said message queue in excess of said predetermined time period, and means for sending an overload notice to said source node.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>13. The communication system of claim 12 wherein said destination node includes: means for causing said system to exit said overloaded state when a subsequent one of said overload probe messages is retained in said message queue for less than said predetermined time period, and means for sending a recovery notice to said source node.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>14. The communication system of claim 13 wherein said source node is operative to suspend transmission of said data in response to receipt of said overload notice and to resume transmission of said data in response to receipt of said recovery notice.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>15. In a system having a source node in communication with a destination node, a method for regulating the transmission of data from said source node to a destination node comprising the steps of: inserting overload probe messages into a message queue, each said overload probe message including information specifying a time of insertion of said overload probe message into said message queue; comparing said time of insertion of at least one of said overload probe messages to a present time in order to determine a retention time of said at least one of said overload probe messages in said message queue;</claim-text>
      <claim-text>and suspending transmission of said data from said source node when said retention time exceeds a predetermined time.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>16. The method of claim 15 further including the step of resuming said transmission of said data in response to receipt at said source node of a recovery notice from said destination node, said recovery notice being generated in response to retention in said message queue of one of said overload probe messages for less than said predetermined time.</claim-text>
    </claim>
  </claims>
</questel-patent-document>